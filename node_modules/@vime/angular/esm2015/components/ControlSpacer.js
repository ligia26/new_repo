import { __decorate } from "tslib";
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, NgZone } from '@angular/core';
import { ProxyCmp, initOutputs } from '../lib';
import { VmControlSpacer } from '@vime/core';
import { define } from '../lib';
const ControlSpacerInputs = [];
const ControlSpacerMethods = [];
const ControlSpacerOutputs = [];
let ControlSpacer = class ControlSpacer {
    constructor(c, r, z) {
        this.z = z;
        define('vm-control-spacer', VmControlSpacer);
        c.detach();
        this.el = r.nativeElement;
        initOutputs(this, []);
    }
};
ControlSpacer.decorators = [
    { type: Component, args: [{
                selector: 'vm-control-spacer',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ControlSpacerInputs,
                outputs: ControlSpacerOutputs
            },] }
];
ControlSpacer.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef },
    { type: NgZone }
];
ControlSpacer = __decorate([
    ProxyCmp({
        inputs: ControlSpacerInputs,
        methods: ControlSpacerMethods,
    })
], ControlSpacer);
export { ControlSpacer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udHJvbFNwYWNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL3ZpbWUvc3JjL2NvbXBvbmVudHMvQ29udHJvbFNwYWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixjQUFjO0FBQ2QsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQWdCLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4SCxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUcvQyxPQUFPLEVBQ0wsZUFBZSxFQUNoQixNQUFNLFlBQVksQ0FBQztBQUVwQixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBR2hDLE1BQU0sbUJBQW1CLEdBQWEsRUFFckMsQ0FBQztBQUVGLE1BQU0sb0JBQW9CLEdBQWEsRUFFdEMsQ0FBQztBQUVGLE1BQU0sb0JBQW9CLEdBQWEsRUFFdEMsQ0FBQztJQWlCVyxhQUFhLFNBQWIsYUFBYTtJQUt4QixZQUFZLENBQW9CLEVBQUUsQ0FBYSxFQUFZLENBQVM7UUFBVCxNQUFDLEdBQUQsQ0FBQyxDQUFRO1FBQ2xFLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxlQUFlLENBQUMsQ0FBQztRQUM3QyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDWCxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUM7UUFDMUIsV0FBVyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUN2QixDQUFDO0NBQ0YsQ0FBQTs7WUFsQkEsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxRQUFRLEVBQUUsMkJBQTJCO2dCQUNyQyxNQUFNLEVBQUUsbUJBQW1CO2dCQUMzQixPQUFPLEVBQUUsb0JBQW9CO2FBQzlCOzs7WUFyQ2lDLGlCQUFpQjtZQUFhLFVBQVU7WUFBZ0IsTUFBTTs7QUFzQ25GLGFBQWE7SUFYekIsUUFBUSxDQUFDO1FBQ1IsTUFBTSxFQUFFLG1CQUFtQjtRQUMzQixPQUFPLEVBQUUsb0JBQW9CO0tBQzlCLENBQUM7R0FRVyxhQUFhLENBV3pCO1NBWFksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbIlxuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIHRzbGludDpkaXNhYmxlICovXG4vLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQcm94eUNtcCwgaW5pdE91dHB1dHMgfSBmcm9tICcuLi9saWInO1xuaW1wb3J0IHR5cGUgeyBKU1gsIENvbXBvbmVudHMgfSBmcm9tICdAdmltZS9jb3JlL2Rpc3QvdHlwZXMnO1xuXG5pbXBvcnQgeyBcbiAgVm1Db250cm9sU3BhY2VyIFxufSBmcm9tICdAdmltZS9jb3JlJztcblxuaW1wb3J0IHsgZGVmaW5lIH0gZnJvbSAnLi4vbGliJztcbiAgXG5cbmNvbnN0IENvbnRyb2xTcGFjZXJJbnB1dHM6IHN0cmluZ1tdID0gW1xuICBcbl07XG5cbmNvbnN0IENvbnRyb2xTcGFjZXJNZXRob2RzOiBzdHJpbmdbXSA9IFtcbiAgXG5dO1xuXG5jb25zdCBDb250cm9sU3BhY2VyT3V0cHV0czogc3RyaW5nW10gPSBbXG4gIFxuXTtcblxuZXhwb3J0IHR5cGUgRW1pdHRlcjxUIGV4dGVuZHMgKCguLi5hcmdzOiBhbnlbXSkgPT4gYW55KSB8IHVuZGVmaW5lZD4gPSBFdmVudEVtaXR0ZXI8UGFyYW1ldGVyczxFeGNsdWRlPFQsIHVuZGVmaW5lZD4+WzBdPjtcblxuZXhwb3J0IGRlY2xhcmUgaW50ZXJmYWNlIENvbnRyb2xTcGFjZXIgZXh0ZW5kcyBDb21wb25lbnRzLlZtQ29udHJvbFNwYWNlciB7fVxuXG5AUHJveHlDbXAoe1xuICBpbnB1dHM6IENvbnRyb2xTcGFjZXJJbnB1dHMsXG4gIG1ldGhvZHM6IENvbnRyb2xTcGFjZXJNZXRob2RzLFxufSlcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3ZtLWNvbnRyb2wtc3BhY2VyJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gIGlucHV0czogQ29udHJvbFNwYWNlcklucHV0cyxcbiAgb3V0cHV0czogQ29udHJvbFNwYWNlck91dHB1dHMsXG59KVxuZXhwb3J0IGNsYXNzIENvbnRyb2xTcGFjZXIge1xuICBwcm90ZWN0ZWQgZWw6IEhUTUxFbGVtZW50O1xuXG4gIFxuXG4gIGNvbnN0cnVjdG9yKGM6IENoYW5nZURldGVjdG9yUmVmLCByOiBFbGVtZW50UmVmLCBwcm90ZWN0ZWQgejogTmdab25lKSB7XG4gICAgZGVmaW5lKCd2bS1jb250cm9sLXNwYWNlcicsIFZtQ29udHJvbFNwYWNlcik7XG4gICAgYy5kZXRhY2goKTtcbiAgICB0aGlzLmVsID0gci5uYXRpdmVFbGVtZW50O1xuICAgIGluaXRPdXRwdXRzKHRoaXMsIFtdKVxuICB9XG59XG4gICJdfQ==