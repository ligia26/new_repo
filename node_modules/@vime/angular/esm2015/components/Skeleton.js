import { __decorate } from "tslib";
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, NgZone } from '@angular/core';
import { ProxyCmp, initOutputs } from '../lib';
import { VmSkeleton } from '@vime/core';
import { define } from '../lib';
const SkeletonInputs = [
    'effect',
    'ready',
];
const SkeletonMethods = [];
const SkeletonOutputs = [];
let Skeleton = class Skeleton {
    constructor(c, r, z) {
        this.z = z;
        define('vm-skeleton', VmSkeleton);
        c.detach();
        this.el = r.nativeElement;
        initOutputs(this, []);
    }
};
Skeleton.decorators = [
    { type: Component, args: [{
                selector: 'vm-skeleton',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: SkeletonInputs,
                outputs: SkeletonOutputs
            },] }
];
Skeleton.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef },
    { type: NgZone }
];
Skeleton = __decorate([
    ProxyCmp({
        inputs: SkeletonInputs,
        methods: SkeletonMethods,
    })
], Skeleton);
export { Skeleton };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy92aW1lL3NyYy9jb21wb25lbnRzL1NrZWxldG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLGNBQWM7QUFDZCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBZ0IsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hILE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRy9DLE9BQU8sRUFDTCxVQUFVLEVBQ1gsTUFBTSxZQUFZLENBQUM7QUFFcEIsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUdoQyxNQUFNLGNBQWMsR0FBYTtJQUMvQixRQUFRO0lBQ1IsT0FBTztDQUNSLENBQUM7QUFFRixNQUFNLGVBQWUsR0FBYSxFQUVqQyxDQUFDO0FBRUYsTUFBTSxlQUFlLEdBQWEsRUFFakMsQ0FBQztJQWlCVyxRQUFRLFNBQVIsUUFBUTtJQUtuQixZQUFZLENBQW9CLEVBQUUsQ0FBYSxFQUFZLENBQVM7UUFBVCxNQUFDLEdBQUQsQ0FBQyxDQUFRO1FBQ2xFLE1BQU0sQ0FBQyxhQUFhLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDbEMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ1gsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsYUFBYSxDQUFDO1FBQzFCLFdBQVcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDdkIsQ0FBQztDQUNGLENBQUE7O1lBbEJBLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07Z0JBQy9DLFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLE1BQU0sRUFBRSxjQUFjO2dCQUN0QixPQUFPLEVBQUUsZUFBZTthQUN6Qjs7O1lBdENpQyxpQkFBaUI7WUFBYSxVQUFVO1lBQWdCLE1BQU07O0FBdUNuRixRQUFRO0lBWHBCLFFBQVEsQ0FBQztRQUNSLE1BQU0sRUFBRSxjQUFjO1FBQ3RCLE9BQU8sRUFBRSxlQUFlO0tBQ3pCLENBQUM7R0FRVyxRQUFRLENBV3BCO1NBWFksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbIlxuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIHRzbGludDpkaXNhYmxlICovXG4vLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQcm94eUNtcCwgaW5pdE91dHB1dHMgfSBmcm9tICcuLi9saWInO1xuaW1wb3J0IHR5cGUgeyBKU1gsIENvbXBvbmVudHMgfSBmcm9tICdAdmltZS9jb3JlL2Rpc3QvdHlwZXMnO1xuXG5pbXBvcnQgeyBcbiAgVm1Ta2VsZXRvbiBcbn0gZnJvbSAnQHZpbWUvY29yZSc7XG5cbmltcG9ydCB7IGRlZmluZSB9IGZyb20gJy4uL2xpYic7XG4gIFxuXG5jb25zdCBTa2VsZXRvbklucHV0czogc3RyaW5nW10gPSBbXG4gICdlZmZlY3QnLFxuICAncmVhZHknLFxuXTtcblxuY29uc3QgU2tlbGV0b25NZXRob2RzOiBzdHJpbmdbXSA9IFtcbiAgXG5dO1xuXG5jb25zdCBTa2VsZXRvbk91dHB1dHM6IHN0cmluZ1tdID0gW1xuICBcbl07XG5cbmV4cG9ydCB0eXBlIEVtaXR0ZXI8VCBleHRlbmRzICgoLi4uYXJnczogYW55W10pID0+IGFueSkgfCB1bmRlZmluZWQ+ID0gRXZlbnRFbWl0dGVyPFBhcmFtZXRlcnM8RXhjbHVkZTxULCB1bmRlZmluZWQ+PlswXT47XG5cbmV4cG9ydCBkZWNsYXJlIGludGVyZmFjZSBTa2VsZXRvbiBleHRlbmRzIENvbXBvbmVudHMuVm1Ta2VsZXRvbiB7fVxuXG5AUHJveHlDbXAoe1xuICBpbnB1dHM6IFNrZWxldG9uSW5wdXRzLFxuICBtZXRob2RzOiBTa2VsZXRvbk1ldGhvZHMsXG59KVxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndm0tc2tlbGV0b24nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcbiAgaW5wdXRzOiBTa2VsZXRvbklucHV0cyxcbiAgb3V0cHV0czogU2tlbGV0b25PdXRwdXRzLFxufSlcbmV4cG9ydCBjbGFzcyBTa2VsZXRvbiB7XG4gIHByb3RlY3RlZCBlbDogSFRNTEVsZW1lbnQ7XG5cbiAgXG5cbiAgY29uc3RydWN0b3IoYzogQ2hhbmdlRGV0ZWN0b3JSZWYsIHI6IEVsZW1lbnRSZWYsIHByb3RlY3RlZCB6OiBOZ1pvbmUpIHtcbiAgICBkZWZpbmUoJ3ZtLXNrZWxldG9uJywgVm1Ta2VsZXRvbik7XG4gICAgYy5kZXRhY2goKTtcbiAgICB0aGlzLmVsID0gci5uYXRpdmVFbGVtZW50O1xuICAgIGluaXRPdXRwdXRzKHRoaXMsIFtdKVxuICB9XG59XG4gICJdfQ==