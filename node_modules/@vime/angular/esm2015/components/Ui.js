import { __decorate } from "tslib";
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, NgZone } from '@angular/core';
import { ProxyCmp, initOutputs } from '../lib';
import { VmUi } from '@vime/core';
import { define } from '../lib';
const UiInputs = [
    'isVideoView',
    'playsinline',
    'isFullscreenActive',
];
const UiMethods = [];
const UiOutputs = [];
let Ui = class Ui {
    constructor(c, r, z) {
        this.z = z;
        define('vm-ui', VmUi);
        c.detach();
        this.el = r.nativeElement;
        initOutputs(this, []);
    }
};
Ui.decorators = [
    { type: Component, args: [{
                selector: 'vm-ui',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: UiInputs,
                outputs: UiOutputs
            },] }
];
Ui.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef },
    { type: NgZone }
];
Ui = __decorate([
    ProxyCmp({
        inputs: UiInputs,
        methods: UiMethods,
    })
], Ui);
export { Ui };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVWkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy92aW1lL3NyYy9jb21wb25lbnRzL1VpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLGNBQWM7QUFDZCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBZ0IsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hILE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRy9DLE9BQU8sRUFDTCxJQUFJLEVBQ0wsTUFBTSxZQUFZLENBQUM7QUFFcEIsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUdoQyxNQUFNLFFBQVEsR0FBYTtJQUN6QixhQUFhO0lBQ2IsYUFBYTtJQUNiLG9CQUFvQjtDQUNyQixDQUFDO0FBRUYsTUFBTSxTQUFTLEdBQWEsRUFFM0IsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUFhLEVBRTNCLENBQUM7SUFpQlcsRUFBRSxTQUFGLEVBQUU7SUFLYixZQUFZLENBQW9CLEVBQUUsQ0FBYSxFQUFZLENBQVM7UUFBVCxNQUFDLEdBQUQsQ0FBQyxDQUFRO1FBQ2xFLE1BQU0sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdEIsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ1gsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsYUFBYSxDQUFDO1FBQzFCLFdBQVcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDdkIsQ0FBQztDQUNGLENBQUE7O1lBbEJBLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsT0FBTztnQkFDakIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07Z0JBQy9DLFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLE1BQU0sRUFBRSxRQUFRO2dCQUNoQixPQUFPLEVBQUUsU0FBUzthQUNuQjs7O1lBdkNpQyxpQkFBaUI7WUFBYSxVQUFVO1lBQWdCLE1BQU07O0FBd0NuRixFQUFFO0lBWGQsUUFBUSxDQUFDO1FBQ1IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsT0FBTyxFQUFFLFNBQVM7S0FDbkIsQ0FBQztHQVFXLEVBQUUsQ0FXZDtTQVhZLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qIGVzbGludC1kaXNhYmxlICovXG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLy8gQHRzLW5vY2hlY2tcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUHJveHlDbXAsIGluaXRPdXRwdXRzIH0gZnJvbSAnLi4vbGliJztcbmltcG9ydCB0eXBlIHsgSlNYLCBDb21wb25lbnRzIH0gZnJvbSAnQHZpbWUvY29yZS9kaXN0L3R5cGVzJztcblxuaW1wb3J0IHsgXG4gIFZtVWkgXG59IGZyb20gJ0B2aW1lL2NvcmUnO1xuXG5pbXBvcnQgeyBkZWZpbmUgfSBmcm9tICcuLi9saWInO1xuICBcblxuY29uc3QgVWlJbnB1dHM6IHN0cmluZ1tdID0gW1xuICAnaXNWaWRlb1ZpZXcnLFxuICAncGxheXNpbmxpbmUnLFxuICAnaXNGdWxsc2NyZWVuQWN0aXZlJyxcbl07XG5cbmNvbnN0IFVpTWV0aG9kczogc3RyaW5nW10gPSBbXG4gIFxuXTtcblxuY29uc3QgVWlPdXRwdXRzOiBzdHJpbmdbXSA9IFtcbiAgXG5dO1xuXG5leHBvcnQgdHlwZSBFbWl0dGVyPFQgZXh0ZW5kcyAoKC4uLmFyZ3M6IGFueVtdKSA9PiBhbnkpIHwgdW5kZWZpbmVkPiA9IEV2ZW50RW1pdHRlcjxQYXJhbWV0ZXJzPEV4Y2x1ZGU8VCwgdW5kZWZpbmVkPj5bMF0+O1xuXG5leHBvcnQgZGVjbGFyZSBpbnRlcmZhY2UgVWkgZXh0ZW5kcyBDb21wb25lbnRzLlZtVWkge31cblxuQFByb3h5Q21wKHtcbiAgaW5wdXRzOiBVaUlucHV0cyxcbiAgbWV0aG9kczogVWlNZXRob2RzLFxufSlcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3ZtLXVpJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gIGlucHV0czogVWlJbnB1dHMsXG4gIG91dHB1dHM6IFVpT3V0cHV0cyxcbn0pXG5leHBvcnQgY2xhc3MgVWkge1xuICBwcm90ZWN0ZWQgZWw6IEhUTUxFbGVtZW50O1xuXG4gIFxuXG4gIGNvbnN0cnVjdG9yKGM6IENoYW5nZURldGVjdG9yUmVmLCByOiBFbGVtZW50UmVmLCBwcm90ZWN0ZWQgejogTmdab25lKSB7XG4gICAgZGVmaW5lKCd2bS11aScsIFZtVWkpO1xuICAgIGMuZGV0YWNoKCk7XG4gICAgdGhpcy5lbCA9IHIubmF0aXZlRWxlbWVudDtcbiAgICBpbml0T3V0cHV0cyh0aGlzLCBbXSlcbiAgfVxufVxuICAiXX0=