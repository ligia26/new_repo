import { __decorate } from "tslib";
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, NgZone } from '@angular/core';
import { ProxyCmp, initOutputs } from '../lib';
import { VmEndTime, VmTime } from '@vime/core';
import { define } from '../lib';
const EndTimeInputs = [
    'duration',
    'i18n',
    'alwaysShowHours',
];
const EndTimeMethods = [];
const EndTimeOutputs = [];
let EndTime = class EndTime {
    constructor(c, r, z) {
        this.z = z;
        define('vm-end-time', VmEndTime);
        define('vm-time', VmTime);
        c.detach();
        this.el = r.nativeElement;
        initOutputs(this, []);
    }
};
EndTime.decorators = [
    { type: Component, args: [{
                selector: 'vm-end-time',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: EndTimeInputs,
                outputs: EndTimeOutputs
            },] }
];
EndTime.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef },
    { type: NgZone }
];
EndTime = __decorate([
    ProxyCmp({
        inputs: EndTimeInputs,
        methods: EndTimeMethods,
    })
], EndTime);
export { EndTime };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kVGltZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL3ZpbWUvc3JjL2NvbXBvbmVudHMvRW5kVGltZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixjQUFjO0FBQ2QsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQWdCLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4SCxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUcvQyxPQUFPLEVBQ0wsU0FBUyxFQUNULE1BQU0sRUFDUCxNQUFNLFlBQVksQ0FBQztBQUVwQixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBR2hDLE1BQU0sYUFBYSxHQUFhO0lBQzlCLFVBQVU7SUFDVixNQUFNO0lBQ04saUJBQWlCO0NBQ2xCLENBQUM7QUFFRixNQUFNLGNBQWMsR0FBYSxFQUVoQyxDQUFDO0FBRUYsTUFBTSxjQUFjLEdBQWEsRUFFaEMsQ0FBQztJQWlCVyxPQUFPLFNBQVAsT0FBTztJQUtsQixZQUFZLENBQW9CLEVBQUUsQ0FBYSxFQUFZLENBQVM7UUFBVCxNQUFDLEdBQUQsQ0FBQyxDQUFRO1FBQ2xFLE1BQU0sQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMxQixDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDWCxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUM7UUFDMUIsV0FBVyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUN2QixDQUFDO0NBQ0YsQ0FBQTs7WUFuQkEsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2QixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsTUFBTSxFQUFFLGFBQWE7Z0JBQ3JCLE9BQU8sRUFBRSxjQUFjO2FBQ3hCOzs7WUF4Q2lDLGlCQUFpQjtZQUFhLFVBQVU7WUFBZ0IsTUFBTTs7QUF5Q25GLE9BQU87SUFYbkIsUUFBUSxDQUFDO1FBQ1IsTUFBTSxFQUFFLGFBQWE7UUFDckIsT0FBTyxFQUFFLGNBQWM7S0FDeEIsQ0FBQztHQVFXLE9BQU8sQ0FZbkI7U0FaWSxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFByb3h5Q21wLCBpbml0T3V0cHV0cyB9IGZyb20gJy4uL2xpYic7XG5pbXBvcnQgdHlwZSB7IEpTWCwgQ29tcG9uZW50cyB9IGZyb20gJ0B2aW1lL2NvcmUvZGlzdC90eXBlcyc7XG5cbmltcG9ydCB7IFxuICBWbUVuZFRpbWUsXG4gIFZtVGltZSBcbn0gZnJvbSAnQHZpbWUvY29yZSc7XG5cbmltcG9ydCB7IGRlZmluZSB9IGZyb20gJy4uL2xpYic7XG4gIFxuXG5jb25zdCBFbmRUaW1lSW5wdXRzOiBzdHJpbmdbXSA9IFtcbiAgJ2R1cmF0aW9uJyxcbiAgJ2kxOG4nLFxuICAnYWx3YXlzU2hvd0hvdXJzJyxcbl07XG5cbmNvbnN0IEVuZFRpbWVNZXRob2RzOiBzdHJpbmdbXSA9IFtcbiAgXG5dO1xuXG5jb25zdCBFbmRUaW1lT3V0cHV0czogc3RyaW5nW10gPSBbXG4gIFxuXTtcblxuZXhwb3J0IHR5cGUgRW1pdHRlcjxUIGV4dGVuZHMgKCguLi5hcmdzOiBhbnlbXSkgPT4gYW55KSB8IHVuZGVmaW5lZD4gPSBFdmVudEVtaXR0ZXI8UGFyYW1ldGVyczxFeGNsdWRlPFQsIHVuZGVmaW5lZD4+WzBdPjtcblxuZXhwb3J0IGRlY2xhcmUgaW50ZXJmYWNlIEVuZFRpbWUgZXh0ZW5kcyBDb21wb25lbnRzLlZtRW5kVGltZSB7fVxuXG5AUHJveHlDbXAoe1xuICBpbnB1dHM6IEVuZFRpbWVJbnB1dHMsXG4gIG1ldGhvZHM6IEVuZFRpbWVNZXRob2RzLFxufSlcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3ZtLWVuZC10aW1lJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gIGlucHV0czogRW5kVGltZUlucHV0cyxcbiAgb3V0cHV0czogRW5kVGltZU91dHB1dHMsXG59KVxuZXhwb3J0IGNsYXNzIEVuZFRpbWUge1xuICBwcm90ZWN0ZWQgZWw6IEhUTUxFbGVtZW50O1xuXG4gIFxuXG4gIGNvbnN0cnVjdG9yKGM6IENoYW5nZURldGVjdG9yUmVmLCByOiBFbGVtZW50UmVmLCBwcm90ZWN0ZWQgejogTmdab25lKSB7XG4gICAgZGVmaW5lKCd2bS1lbmQtdGltZScsIFZtRW5kVGltZSk7XG4gICAgZGVmaW5lKCd2bS10aW1lJywgVm1UaW1lKTtcbiAgICBjLmRldGFjaCgpO1xuICAgIHRoaXMuZWwgPSByLm5hdGl2ZUVsZW1lbnQ7XG4gICAgaW5pdE91dHB1dHModGhpcywgW10pXG4gIH1cbn1cbiAgIl19