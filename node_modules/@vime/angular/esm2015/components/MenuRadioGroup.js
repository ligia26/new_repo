import { __decorate } from "tslib";
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, NgZone } from '@angular/core';
import { ProxyCmp, initOutputs } from '../lib';
import { VmMenuRadioGroup } from '@vime/core';
import { define } from '../lib';
const MenuRadioGroupInputs = [
    'value',
];
const MenuRadioGroupMethods = [];
const MenuRadioGroupOutputs = [
    'vmCheck',
];
let MenuRadioGroup = class MenuRadioGroup {
    constructor(c, r, z) {
        this.z = z;
        define('vm-menu-radio-group', VmMenuRadioGroup);
        c.detach();
        this.el = r.nativeElement;
        initOutputs(this, ['vmCheck']);
    }
};
MenuRadioGroup.decorators = [
    { type: Component, args: [{
                selector: 'vm-menu-radio-group',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: MenuRadioGroupInputs,
                outputs: MenuRadioGroupOutputs
            },] }
];
MenuRadioGroup.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef },
    { type: NgZone }
];
MenuRadioGroup = __decorate([
    ProxyCmp({
        inputs: MenuRadioGroupInputs,
        methods: MenuRadioGroupMethods,
    })
], MenuRadioGroup);
export { MenuRadioGroup };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVudVJhZGlvR3JvdXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy92aW1lL3NyYy9jb21wb25lbnRzL01lbnVSYWRpb0dyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLGNBQWM7QUFDZCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBZ0IsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hILE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRy9DLE9BQU8sRUFDTCxnQkFBZ0IsRUFDakIsTUFBTSxZQUFZLENBQUM7QUFFcEIsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUdoQyxNQUFNLG9CQUFvQixHQUFhO0lBQ3JDLE9BQU87Q0FDUixDQUFDO0FBRUYsTUFBTSxxQkFBcUIsR0FBYSxFQUV2QyxDQUFDO0FBRUYsTUFBTSxxQkFBcUIsR0FBYTtJQUN0QyxTQUFTO0NBQ1YsQ0FBQztJQWlCVyxjQUFjLFNBQWQsY0FBYztJQU16QixZQUFZLENBQW9CLEVBQUUsQ0FBYSxFQUFZLENBQVM7UUFBVCxNQUFDLEdBQUQsQ0FBQyxDQUFRO1FBQ2xFLE1BQU0sQ0FBQyxxQkFBcUIsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2hELENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNYLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQztRQUMxQixXQUFXLENBQUMsSUFBSSxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQTtJQUNoQyxDQUFDO0NBQ0YsQ0FBQTs7WUFuQkEsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxRQUFRLEVBQUUsMkJBQTJCO2dCQUNyQyxNQUFNLEVBQUUsb0JBQW9CO2dCQUM1QixPQUFPLEVBQUUscUJBQXFCO2FBQy9COzs7WUFyQ2lDLGlCQUFpQjtZQUFhLFVBQVU7WUFBZ0IsTUFBTTs7QUFzQ25GLGNBQWM7SUFYMUIsUUFBUSxDQUFDO1FBQ1IsTUFBTSxFQUFFLG9CQUFvQjtRQUM1QixPQUFPLEVBQUUscUJBQXFCO0tBQy9CLENBQUM7R0FRVyxjQUFjLENBWTFCO1NBWlksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIHRzbGludDpkaXNhYmxlICovXG4vLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQcm94eUNtcCwgaW5pdE91dHB1dHMgfSBmcm9tICcuLi9saWInO1xuaW1wb3J0IHR5cGUgeyBKU1gsIENvbXBvbmVudHMgfSBmcm9tICdAdmltZS9jb3JlL2Rpc3QvdHlwZXMnO1xuXG5pbXBvcnQgeyBcbiAgVm1NZW51UmFkaW9Hcm91cCBcbn0gZnJvbSAnQHZpbWUvY29yZSc7XG5cbmltcG9ydCB7IGRlZmluZSB9IGZyb20gJy4uL2xpYic7XG4gIFxuXG5jb25zdCBNZW51UmFkaW9Hcm91cElucHV0czogc3RyaW5nW10gPSBbXG4gICd2YWx1ZScsXG5dO1xuXG5jb25zdCBNZW51UmFkaW9Hcm91cE1ldGhvZHM6IHN0cmluZ1tdID0gW1xuICBcbl07XG5cbmNvbnN0IE1lbnVSYWRpb0dyb3VwT3V0cHV0czogc3RyaW5nW10gPSBbXG4gICd2bUNoZWNrJyxcbl07XG5cbmV4cG9ydCB0eXBlIEVtaXR0ZXI8VCBleHRlbmRzICgoLi4uYXJnczogYW55W10pID0+IGFueSkgfCB1bmRlZmluZWQ+ID0gRXZlbnRFbWl0dGVyPFBhcmFtZXRlcnM8RXhjbHVkZTxULCB1bmRlZmluZWQ+PlswXT47XG5cbmV4cG9ydCBkZWNsYXJlIGludGVyZmFjZSBNZW51UmFkaW9Hcm91cCBleHRlbmRzIENvbXBvbmVudHMuVm1NZW51UmFkaW9Hcm91cCB7fVxuXG5AUHJveHlDbXAoe1xuICBpbnB1dHM6IE1lbnVSYWRpb0dyb3VwSW5wdXRzLFxuICBtZXRob2RzOiBNZW51UmFkaW9Hcm91cE1ldGhvZHMsXG59KVxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndm0tbWVudS1yYWRpby1ncm91cCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxuICBpbnB1dHM6IE1lbnVSYWRpb0dyb3VwSW5wdXRzLFxuICBvdXRwdXRzOiBNZW51UmFkaW9Hcm91cE91dHB1dHMsXG59KVxuZXhwb3J0IGNsYXNzIE1lbnVSYWRpb0dyb3VwIHtcbiAgcHJvdGVjdGVkIGVsOiBIVE1MRWxlbWVudDtcblxuICAvKiogRW1pdHRlZCB3aGVuIGEgbmV3IHJhZGlvIGJ1dHRvbiBpcyBzZWxlY3RlZCBmb3IgdGhpcyBncm91cC4gKi9cbiAgdm1DaGVjayE6IEVtaXR0ZXI8SlNYLlZtTWVudVJhZGlvR3JvdXBbXCJvblZtQ2hlY2tcIl0+O1xuXG4gIGNvbnN0cnVjdG9yKGM6IENoYW5nZURldGVjdG9yUmVmLCByOiBFbGVtZW50UmVmLCBwcm90ZWN0ZWQgejogTmdab25lKSB7XG4gICAgZGVmaW5lKCd2bS1tZW51LXJhZGlvLWdyb3VwJywgVm1NZW51UmFkaW9Hcm91cCk7XG4gICAgYy5kZXRhY2goKTtcbiAgICB0aGlzLmVsID0gci5uYXRpdmVFbGVtZW50O1xuICAgIGluaXRPdXRwdXRzKHRoaXMsIFsndm1DaGVjayddKVxuICB9XG59XG4gICJdfQ==