import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone } from '@angular/core';
import type { JSX, Components } from '@vime/core/dist/types';
export declare type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;
export declare interface Poster extends Components.VmPoster {
}
export declare class Poster {
    protected z: NgZone;
    protected el: HTMLElement;
    /** Emitted when the poster has loaded. */
    vmLoaded: Emitter<JSX.VmPoster["onVmLoaded"]>;
    /** Emitted when the poster will be shown. */
    vmWillShow: Emitter<JSX.VmPoster["onVmWillShow"]>;
    /** Emitted when the poster will be hidden. */
    vmWillHide: Emitter<JSX.VmPoster["onVmWillHide"]>;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
