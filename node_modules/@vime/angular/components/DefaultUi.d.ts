import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone } from '@angular/core';
import type { Components } from '@vime/core/dist/types';
import * as ɵngcc0 from '@angular/core';
export declare type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;
export declare interface DefaultUi extends Components.VmDefaultUi {
}
export declare class DefaultUi {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DefaultUi, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DefaultUi, "vm-default-ui", never, { "noClickToPlay": "noClickToPlay"; "noDblClickFullscreen": "noDblClickFullscreen"; "noCaptions": "noCaptions"; "noPoster": "noPoster"; "noSpinner": "noSpinner"; "noControls": "noControls"; "noSettings": "noSettings"; "noLoadingScreen": "noLoadingScreen"; }, {}, never, ["*"], false, never>;
}

//# sourceMappingURL=DefaultUi.d.ts.map