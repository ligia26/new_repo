import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone } from '@angular/core';
import type { Components } from '@vime/core/dist/types';
import * as ɵngcc0 from '@angular/core';
export declare type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;
export declare interface Youtube extends Components.VmYoutube {
}
export declare class Youtube {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<Youtube, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<Youtube, "vm-youtube", never, { "cookies": "cookies"; "videoId": "videoId"; "showFullscreenControl": "showFullscreenControl"; "poster": "poster"; "language": "language"; "autoplay": "autoplay"; "controls": "controls"; "logger": "logger"; "loop": "loop"; "muted": "muted"; "playsinline": "playsinline"; }, {}, never, ["*"], false, never>;
}

//# sourceMappingURL=Youtube.d.ts.map