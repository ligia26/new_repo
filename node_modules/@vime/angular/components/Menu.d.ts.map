{"version":3,"file":"Menu.d.ts","sources":["Menu.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport type { JSX, Components } from '@vime/core/dist/types';\nexport declare type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\nexport declare interface Menu extends Components.VmMenu {\n}\nexport declare class Menu {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    /** Emitted when the menu is open/active. */\n    vmOpen: Emitter<JSX.VmMenu[\"onVmOpen\"]>;\n    /** Emitted when the menu has closed/is not active. */\n    vmClose: Emitter<JSX.VmMenu[\"onVmClose\"]>;\n    /** Emitted when the menu is focused. */\n    vmFocus: Emitter<JSX.VmMenu[\"onVmFocus\"]>;\n    /** Emitted when the menu loses focus. */\n    vmBlur: Emitter<JSX.VmMenu[\"onVmBlur\"]>;\n    /** Emitted when the active submenu changes. */\n    vmActiveSubmenuChange: Emitter<JSX.VmMenu[\"onVmActiveSubmenuChange\"]>;\n    /** Emitted when the currently focused menu item changes. */\n    vmActiveMenuItemChange: Emitter<JSX.VmMenu[\"onVmActiveMenuItemChange\"]>;\n    /** Emitted when the height of the menu changes. */\n    vmMenuHeightChange: Emitter<JSX.VmMenu[\"onVmMenuHeightChange\"]>;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\n"]}