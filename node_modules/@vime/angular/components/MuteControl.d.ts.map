{"version":3,"file":"MuteControl.d.ts","sources":["MuteControl.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport type { JSX, Components } from '@vime/core/dist/types';\nexport declare type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\nexport declare interface MuteControl extends Components.VmMuteControl {\n}\nexport declare class MuteControl {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    /** Emitted when the control receives focus. */\n    vmFocus: Emitter<JSX.VmMuteControl[\"onVmFocus\"]>;\n    /** Emitted when the control loses focus. */\n    vmBlur: Emitter<JSX.VmMuteControl[\"onVmBlur\"]>;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\n"]}