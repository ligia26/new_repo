import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone } from '@angular/core';
import type { Components } from '@vime/core/dist/types';
import * as ɵngcc0 from '@angular/core';
export declare type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;
export declare interface LoadingScreen extends Components.VmLoadingScreen {
}
export declare class LoadingScreen {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<LoadingScreen, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<LoadingScreen, "vm-loading-screen", never, { "playbackReady": "playbackReady"; "hideDots": "hideDots"; }, {}, never, ["*"], false, never>;
}

//# sourceMappingURL=LoadingScreen.d.ts.map