{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../projects/vime/src/lib.ts","../../projects/vime/src/components/Audio.ts","../../projects/vime/src/components/CaptionControl.ts","../../projects/vime/src/components/Captions.ts","../../projects/vime/src/components/ClickToPlay.ts","../../projects/vime/src/components/Control.ts","../../projects/vime/src/components/ControlGroup.ts","../../projects/vime/src/components/ControlSpacer.ts","../../projects/vime/src/components/Controls.ts","../../projects/vime/src/components/CurrentTime.ts","../../projects/vime/src/components/Dailymotion.ts","../../projects/vime/src/components/Dash.ts","../../projects/vime/src/components/DblClickFullscreen.ts","../../projects/vime/src/components/DefaultControls.ts","../../projects/vime/src/components/DefaultSettings.ts","../../projects/vime/src/components/DefaultUi.ts","../../projects/vime/src/components/Embed.ts","../../projects/vime/src/components/EndTime.ts","../../projects/vime/src/components/File.ts","../../projects/vime/src/components/FullscreenControl.ts","../../projects/vime/src/components/Hls.ts","../../projects/vime/src/components/Icon.ts","../../projects/vime/src/components/IconLibrary.ts","../../projects/vime/src/components/LiveIndicator.ts","../../projects/vime/src/components/LoadingScreen.ts","../../projects/vime/src/components/Menu.ts","../../projects/vime/src/components/MenuItem.ts","../../projects/vime/src/components/MenuRadio.ts","../../projects/vime/src/components/MenuRadioGroup.ts","../../projects/vime/src/components/MuteControl.ts","../../projects/vime/src/components/PipControl.ts","../../projects/vime/src/components/PlaybackControl.ts","../../projects/vime/src/components/Player.ts","../../projects/vime/src/components/Poster.ts","../../projects/vime/src/components/Scrim.ts","../../projects/vime/src/components/ScrubberControl.ts","../../projects/vime/src/components/Settings.ts","../../projects/vime/src/components/SettingsControl.ts","../../projects/vime/src/components/Skeleton.ts","../../projects/vime/src/components/Slider.ts","../../projects/vime/src/components/Spinner.ts","../../projects/vime/src/components/Submenu.ts","../../projects/vime/src/components/Time.ts","../../projects/vime/src/components/TimeProgress.ts","../../projects/vime/src/components/Tooltip.ts","../../projects/vime/src/components/Ui.ts","../../projects/vime/src/components/Video.ts","../../projects/vime/src/components/Vimeo.ts","../../projects/vime/src/components/VolumeControl.ts","../../projects/vime/src/components/Youtube.ts","../../projects/vime/src/VimeComponent.ts","../../projects/vime/src/VimeModule.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","create","define","tagName","clazz","window","customElements","get","initOutputs","instance","events","forEach","eventName","EventEmitter","ProxyCmp","opts","Component","inputs","Prototype","prototype","input","el","set","val","_this","z","runOutsideAngular","proxyInputs","methods","methodName","args","proxyMethods","AudioInputs","Audio","VmAudio","VmFile","detach","nativeElement","selector","changeDetection","ChangeDetectionStrategy","OnPush","template","outputs","ChangeDetectorRef","ElementRef","NgZone","CaptionControlInputs","CaptionControl","VmCaptionControl","VmControl","VmIcon","VmTooltip","CaptionsInputs","Captions","VmCaptions","ClickToPlayInputs","ClickToPlay","VmClickToPlay","ControlInputs","Control","ControlGroupInputs","ControlGroup","VmControlGroup","ControlSpacerInputs","ControlSpacer","VmControlSpacer","ControlsInputs","Controls","VmControls","CurrentTimeInputs","CurrentTime","VmCurrentTime","VmTime","DailymotionInputs","Dailymotion","VmDailymotion","VmEmbed","DashInputs","Dash","VmDash","VmVideo","DblClickFullscreenInputs","DblClickFullscreen","VmDblClickFullscreen","DefaultControlsInputs","DefaultControls","VmDefaultControls","VmEndTime","VmFullscreenControl","VmLiveIndicator","VmMuteControl","VmPipControl","VmPlaybackControl","VmScrim","VmScrubberControl","VmSlider","VmSettingsControl","VmTimeProgress","VmVolumeControl","DefaultSettingsInputs","DefaultSettings","VmDefaultSettings","VmMenu","VmMenuItem","VmMenuRadio","VmMenuRadioGroup","VmSettings","VmSubmenu","DefaultUiInputs","DefaultUi","VmDefaultUi","VmLoadingScreen","VmPoster","VmSpinner","VmUi","EmbedInputs","Embed","EndTimeInputs","EndTime","FileInputs","File","FullscreenControlInputs","FullscreenControl","HlsInputs","Hls","VmHls","IconInputs","Icon","IconLibraryInputs","IconLibrary","VmIconLibrary","LiveIndicatorInputs","LiveIndicator","LoadingScreenInputs","LoadingScreen","MenuInputs","Menu","MenuItemInputs","MenuItem","MenuRadioInputs","MenuRadio","MenuRadioGroupInputs","MenuRadioGroup","MuteControlInputs","MuteControl","PipControlInputs","PipControl","PlaybackControlInputs","PlaybackControl","PlayerInputs","Player","VmPlayer","PosterInputs","Poster","ScrimInputs","Scrim","ScrubberControlInputs","ScrubberControl","SettingsInputs","Settings","SettingsControlInputs","SettingsControl","SkeletonInputs","Skeleton","VmSkeleton","SliderInputs","Slider","SpinnerInputs","Spinner","SubmenuInputs","Submenu","TimeInputs","Time","TimeProgressInputs","TimeProgress","TooltipInputs","Tooltip","UiInputs","Ui","VideoInputs","Video","VimeoInputs","Vimeo","VmVimeo","VolumeControlInputs","VolumeControl","YoutubeInputs","Youtube","VmYoutube","VimeComponent","playerProps","playerDispatch","unbindPlayerContext","playerCache","Map","prop","props","reduce","prev","assign","_b","defineProperties","ngAfterViewInit","ref","findPlayer","player","_d","createDispatcher","_c","usePlayerContext","ngOnDestroy","_a","clear","Injectable","DECLARATIONS","NgModule","declarations","exports","imports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/* eslint-disable */\n\nimport { EventEmitter } from '@angular/core';\n\nexport const define = (tagName: string, clazz: any) => {\n  const isClient = typeof window !== 'undefined';\n  if (isClient && !customElements.get(tagName))\n    customElements.define(tagName, clazz);\n};\n\nexport const proxyInputs = (Component: any, inputs: string[]) => {\n  const Prototype = Component.prototype;\n  inputs.forEach(input => {\n    Object.defineProperty(Prototype, input, {\n      get() {\n        return this.el[input];\n      },\n      set(val: any) {\n        this.z.runOutsideAngular(() => (this.el[input] = val));\n      },\n    });\n  });\n};\n\nexport const proxyMethods = (Component: any, methods: string[]) => {\n  const Prototype = Component.prototype;\n  methods.forEach(methodName => {\n    Prototype[methodName] = function () {\n      const args = arguments;\n      return this.z.runOutsideAngular(() =>\n        this.el[methodName].apply(this.el, args),\n      );\n    };\n  });\n};\n\nexport const initOutputs = (instance: any, events: string[]) => {\n  events.forEach(eventName => (instance[eventName] = new EventEmitter()));\n};\n\nexport function ProxyCmp(opts: { inputs?: any; methods?: any }) {\n  return function (Component: any) {\n    if (opts.inputs) proxyInputs(Component, opts.inputs);\n    if (opts.methods) proxyMethods(Component, opts.methods);\n    return Component;\n  };\n}\n","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmAudio,\n  VmFile \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst AudioInputs: string[] = [\n  'willAttach',\n  'crossOrigin',\n  'preload',\n  'disableRemotePlayback',\n  'mediaTitle',\n];\n\nconst AudioMethods: string[] = [\n  'getAdapter',\n];\n\nconst AudioOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Audio extends Components.VmAudio {}\n\n@ProxyCmp({\n  inputs: AudioInputs,\n  methods: AudioMethods,\n})\n@Component({\n  selector: 'vm-audio',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: AudioInputs,\n  outputs: AudioOutputs,\n})\nexport class Audio {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-audio', VmAudio);\n    define('vm-file', VmFile);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmCaptionControl,\n  VmControl,\n  VmIcon,\n  VmTooltip \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst CaptionControlInputs: string[] = [\n  'showIcon',\n  'hideIcon',\n  'tooltipPosition',\n  'tooltipDirection',\n  'hideTooltip',\n  'icons',\n  'keys',\n  'i18n',\n  'playbackReady',\n  'textTracks',\n  'isTextTrackVisible',\n];\n\nconst CaptionControlMethods: string[] = [\n  \n];\n\nconst CaptionControlOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface CaptionControl extends Components.VmCaptionControl {}\n\n@ProxyCmp({\n  inputs: CaptionControlInputs,\n  methods: CaptionControlMethods,\n})\n@Component({\n  selector: 'vm-caption-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: CaptionControlInputs,\n  outputs: CaptionControlOutputs,\n})\nexport class CaptionControl {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-caption-control', VmCaptionControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-tooltip', VmTooltip);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmCaptions \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst CaptionsInputs: string[] = [\n  'hidden',\n  'isControlsActive',\n  'isVideoView',\n  'playbackStarted',\n  'textTracks',\n  'currentTextTrack',\n  'isTextTrackVisible',\n];\n\nconst CaptionsMethods: string[] = [\n  \n];\n\nconst CaptionsOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Captions extends Components.VmCaptions {}\n\n@ProxyCmp({\n  inputs: CaptionsInputs,\n  methods: CaptionsMethods,\n})\n@Component({\n  selector: 'vm-captions',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: CaptionsInputs,\n  outputs: CaptionsOutputs,\n})\nexport class Captions {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-captions', VmCaptions);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmClickToPlay \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst ClickToPlayInputs: string[] = [\n  'useOnMobile',\n  'paused',\n  'isVideoView',\n  'isMobile',\n];\n\nconst ClickToPlayMethods: string[] = [\n  'forceClick',\n];\n\nconst ClickToPlayOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface ClickToPlay extends Components.VmClickToPlay {}\n\n@ProxyCmp({\n  inputs: ClickToPlayInputs,\n  methods: ClickToPlayMethods,\n})\n@Component({\n  selector: 'vm-click-to-play',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ClickToPlayInputs,\n  outputs: ClickToPlayOutputs,\n})\nexport class ClickToPlay {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-click-to-play', VmClickToPlay);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmControl \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst ControlInputs: string[] = [\n  'keys',\n  'identifier',\n  'hidden',\n  'label',\n  'menu',\n  'expanded',\n  'pressed',\n  'isTouch',\n];\n\nconst ControlMethods: string[] = [\n  'focusControl',\n  'blurControl',\n];\n\nconst ControlOutputs: string[] = [\n  'vmInteractionChange',\n  'vmFocus',\n  'vmBlur',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Control extends Components.VmControl {}\n\n@ProxyCmp({\n  inputs: ControlInputs,\n  methods: ControlMethods,\n})\n@Component({\n  selector: 'vm-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ControlInputs,\n  outputs: ControlOutputs,\n})\nexport class Control {\n  protected el: HTMLElement;\n\n  /** Emitted when the user is interacting with the control by focusing, touching or hovering on it. */\n  vmInteractionChange!: Emitter<JSX.VmControl[\"onVmInteractionChange\"]>;\n  /** Emitted when the control receives focus. */\n  vmFocus!: Emitter<JSX.VmControl[\"onVmFocus\"]>;\n  /** Emitted when the control loses focus. */\n  vmBlur!: Emitter<JSX.VmControl[\"onVmBlur\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-control', VmControl);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmInteractionChange', 'vmFocus', 'vmBlur'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmControlGroup \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst ControlGroupInputs: string[] = [\n  'space',\n];\n\nconst ControlGroupMethods: string[] = [\n  \n];\n\nconst ControlGroupOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface ControlGroup extends Components.VmControlGroup {}\n\n@ProxyCmp({\n  inputs: ControlGroupInputs,\n  methods: ControlGroupMethods,\n})\n@Component({\n  selector: 'vm-control-group',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ControlGroupInputs,\n  outputs: ControlGroupOutputs,\n})\nexport class ControlGroup {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-control-group', VmControlGroup);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmControlSpacer \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst ControlSpacerInputs: string[] = [\n  \n];\n\nconst ControlSpacerMethods: string[] = [\n  \n];\n\nconst ControlSpacerOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface ControlSpacer extends Components.VmControlSpacer {}\n\n@ProxyCmp({\n  inputs: ControlSpacerInputs,\n  methods: ControlSpacerMethods,\n})\n@Component({\n  selector: 'vm-control-spacer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ControlSpacerInputs,\n  outputs: ControlSpacerOutputs,\n})\nexport class ControlSpacer {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-control-spacer', VmControlSpacer);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmControls \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst ControlsInputs: string[] = [\n  'hidden',\n  'fullWidth',\n  'fullHeight',\n  'direction',\n  'align',\n  'justify',\n  'pin',\n  'activeDuration',\n  'waitForPlaybackStart',\n  'hideWhenPaused',\n  'hideOnMouseLeave',\n  'isAudioView',\n  'isSettingsActive',\n  'playbackReady',\n  'isControlsActive',\n  'paused',\n  'playbackStarted',\n];\n\nconst ControlsMethods: string[] = [\n  \n];\n\nconst ControlsOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Controls extends Components.VmControls {}\n\n@ProxyCmp({\n  inputs: ControlsInputs,\n  methods: ControlsMethods,\n})\n@Component({\n  selector: 'vm-controls',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ControlsInputs,\n  outputs: ControlsOutputs,\n})\nexport class Controls {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-controls', VmControls);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmCurrentTime,\n  VmTime \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst CurrentTimeInputs: string[] = [\n  'currentTime',\n  'i18n',\n  'alwaysShowHours',\n];\n\nconst CurrentTimeMethods: string[] = [\n  \n];\n\nconst CurrentTimeOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface CurrentTime extends Components.VmCurrentTime {}\n\n@ProxyCmp({\n  inputs: CurrentTimeInputs,\n  methods: CurrentTimeMethods,\n})\n@Component({\n  selector: 'vm-current-time',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: CurrentTimeInputs,\n  outputs: CurrentTimeOutputs,\n})\nexport class CurrentTime {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-current-time', VmCurrentTime);\n    define('vm-time', VmTime);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmDailymotion,\n  VmEmbed \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst DailymotionInputs: string[] = [\n  'videoId',\n  'shouldAutoplayQueue',\n  'showUpNextQueue',\n  'showShareButtons',\n  'color',\n  'syndication',\n  'showDailymotionLogo',\n  'showVideoInfo',\n  'language',\n  'autoplay',\n  'controls',\n  'poster',\n  'logger',\n  'loop',\n  'muted',\n  'playsinline',\n];\n\nconst DailymotionMethods: string[] = [\n  'getAdapter',\n];\n\nconst DailymotionOutputs: string[] = [\n  'vmError',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Dailymotion extends Components.VmDailymotion {}\n\n@ProxyCmp({\n  inputs: DailymotionInputs,\n  methods: DailymotionMethods,\n})\n@Component({\n  selector: 'vm-dailymotion',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: DailymotionInputs,\n  outputs: DailymotionOutputs,\n})\nexport class Dailymotion {\n  protected el: HTMLElement;\n\n  /** Emitted when an error has occurred. */\n  vmError!: Emitter<JSX.VmDailymotion[\"onVmError\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-dailymotion', VmDailymotion);\n    define('vm-embed', VmEmbed);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmError'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmDash,\n  VmFile,\n  VmVideo \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst DashInputs: string[] = [\n  'src',\n  'version',\n  'libSrc',\n  'config',\n  'autoplay',\n  'crossOrigin',\n  'preload',\n  'poster',\n  'controlsList',\n  'autoPiP',\n  'disablePiP',\n  'disableRemotePlayback',\n  'mediaTitle',\n  'enableTextTracksByDefault',\n  'shouldRenderNativeTextTracks',\n  'isTextTrackVisible',\n  'currentTextTrack',\n];\n\nconst DashMethods: string[] = [\n  'getAdapter',\n];\n\nconst DashOutputs: string[] = [\n  'vmError',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Dash extends Components.VmDash {}\n\n@ProxyCmp({\n  inputs: DashInputs,\n  methods: DashMethods,\n})\n@Component({\n  selector: 'vm-dash',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: DashInputs,\n  outputs: DashOutputs,\n})\nexport class Dash {\n  protected el: HTMLElement;\n\n  /** Emitted when an error has occurred. */\n  vmError!: Emitter<JSX.VmDash[\"onVmError\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-dash', VmDash);\n    define('vm-file', VmFile);\n    define('vm-video', VmVideo);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmError'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmDblClickFullscreen \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst DblClickFullscreenInputs: string[] = [\n  'useOnMobile',\n  'isFullscreenActive',\n  'isVideoView',\n  'playbackReady',\n  'isMobile',\n];\n\nconst DblClickFullscreenMethods: string[] = [\n  \n];\n\nconst DblClickFullscreenOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface DblClickFullscreen extends Components.VmDblClickFullscreen {}\n\n@ProxyCmp({\n  inputs: DblClickFullscreenInputs,\n  methods: DblClickFullscreenMethods,\n})\n@Component({\n  selector: 'vm-dbl-click-fullscreen',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: DblClickFullscreenInputs,\n  outputs: DblClickFullscreenOutputs,\n})\nexport class DblClickFullscreen {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-dbl-click-fullscreen', VmDblClickFullscreen);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmDefaultControls,\n  VmCaptionControl,\n  VmControl,\n  VmIcon,\n  VmTooltip,\n  VmControlGroup,\n  VmControlSpacer,\n  VmControls,\n  VmCurrentTime,\n  VmTime,\n  VmEndTime,\n  VmFullscreenControl,\n  VmLiveIndicator,\n  VmMuteControl,\n  VmPipControl,\n  VmPlaybackControl,\n  VmScrim,\n  VmScrubberControl,\n  VmSlider,\n  VmSettingsControl,\n  VmTimeProgress,\n  VmVolumeControl \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst DefaultControlsInputs: string[] = [\n  'activeDuration',\n  'waitForPlaybackStart',\n  'hideWhenPaused',\n  'hideOnMouseLeave',\n  'theme',\n  'isMobile',\n  'isLive',\n  'isAudioView',\n  'isVideoView',\n];\n\nconst DefaultControlsMethods: string[] = [\n  \n];\n\nconst DefaultControlsOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface DefaultControls extends Components.VmDefaultControls {}\n\n@ProxyCmp({\n  inputs: DefaultControlsInputs,\n  methods: DefaultControlsMethods,\n})\n@Component({\n  selector: 'vm-default-controls',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: DefaultControlsInputs,\n  outputs: DefaultControlsOutputs,\n})\nexport class DefaultControls {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-default-controls', VmDefaultControls);\n    define('vm-caption-control', VmCaptionControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-tooltip', VmTooltip);\n    define('vm-control-group', VmControlGroup);\n    define('vm-control-spacer', VmControlSpacer);\n    define('vm-controls', VmControls);\n    define('vm-current-time', VmCurrentTime);\n    define('vm-time', VmTime);\n    define('vm-end-time', VmEndTime);\n    define('vm-fullscreen-control', VmFullscreenControl);\n    define('vm-live-indicator', VmLiveIndicator);\n    define('vm-mute-control', VmMuteControl);\n    define('vm-pip-control', VmPipControl);\n    define('vm-playback-control', VmPlaybackControl);\n    define('vm-scrim', VmScrim);\n    define('vm-scrubber-control', VmScrubberControl);\n    define('vm-slider', VmSlider);\n    define('vm-settings-control', VmSettingsControl);\n    define('vm-time-progress', VmTimeProgress);\n    define('vm-volume-control', VmVolumeControl);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmDefaultSettings,\n  VmIcon,\n  VmMenu,\n  VmMenuItem,\n  VmMenuRadio,\n  VmMenuRadioGroup,\n  VmSettings,\n  VmSubmenu \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst DefaultSettingsInputs: string[] = [\n  'pin',\n  'i18n',\n  'playbackReady',\n  'playbackRate',\n  'playbackRates',\n  'isVideoView',\n  'playbackQuality',\n  'playbackQualities',\n  'textTracks',\n  'currentTextTrack',\n  'audioTracks',\n  'currentAudioTrack',\n  'isTextTrackVisible',\n];\n\nconst DefaultSettingsMethods: string[] = [\n  \n];\n\nconst DefaultSettingsOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface DefaultSettings extends Components.VmDefaultSettings {}\n\n@ProxyCmp({\n  inputs: DefaultSettingsInputs,\n  methods: DefaultSettingsMethods,\n})\n@Component({\n  selector: 'vm-default-settings',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: DefaultSettingsInputs,\n  outputs: DefaultSettingsOutputs,\n})\nexport class DefaultSettings {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-default-settings', VmDefaultSettings);\n    define('vm-icon', VmIcon);\n    define('vm-menu', VmMenu);\n    define('vm-menu-item', VmMenuItem);\n    define('vm-menu-radio', VmMenuRadio);\n    define('vm-menu-radio-group', VmMenuRadioGroup);\n    define('vm-settings', VmSettings);\n    define('vm-submenu', VmSubmenu);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmDefaultUi,\n  VmCaptionControl,\n  VmControl,\n  VmIcon,\n  VmTooltip,\n  VmCaptions,\n  VmClickToPlay,\n  VmControlGroup,\n  VmControlSpacer,\n  VmControls,\n  VmCurrentTime,\n  VmTime,\n  VmDblClickFullscreen,\n  VmDefaultControls,\n  VmEndTime,\n  VmFullscreenControl,\n  VmLiveIndicator,\n  VmMuteControl,\n  VmPipControl,\n  VmPlaybackControl,\n  VmScrim,\n  VmScrubberControl,\n  VmSlider,\n  VmSettingsControl,\n  VmTimeProgress,\n  VmVolumeControl,\n  VmDefaultSettings,\n  VmMenu,\n  VmMenuItem,\n  VmMenuRadio,\n  VmMenuRadioGroup,\n  VmSettings,\n  VmSubmenu,\n  VmLoadingScreen,\n  VmPoster,\n  VmSpinner,\n  VmUi \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst DefaultUiInputs: string[] = [\n  'noClickToPlay',\n  'noDblClickFullscreen',\n  'noCaptions',\n  'noPoster',\n  'noSpinner',\n  'noControls',\n  'noSettings',\n  'noLoadingScreen',\n];\n\nconst DefaultUiMethods: string[] = [\n  \n];\n\nconst DefaultUiOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface DefaultUi extends Components.VmDefaultUi {}\n\n@ProxyCmp({\n  inputs: DefaultUiInputs,\n  methods: DefaultUiMethods,\n})\n@Component({\n  selector: 'vm-default-ui',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: DefaultUiInputs,\n  outputs: DefaultUiOutputs,\n})\nexport class DefaultUi {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-default-ui', VmDefaultUi);\n    define('vm-caption-control', VmCaptionControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-tooltip', VmTooltip);\n    define('vm-captions', VmCaptions);\n    define('vm-click-to-play', VmClickToPlay);\n    define('vm-control-group', VmControlGroup);\n    define('vm-control-spacer', VmControlSpacer);\n    define('vm-controls', VmControls);\n    define('vm-current-time', VmCurrentTime);\n    define('vm-time', VmTime);\n    define('vm-dbl-click-fullscreen', VmDblClickFullscreen);\n    define('vm-default-controls', VmDefaultControls);\n    define('vm-end-time', VmEndTime);\n    define('vm-fullscreen-control', VmFullscreenControl);\n    define('vm-live-indicator', VmLiveIndicator);\n    define('vm-mute-control', VmMuteControl);\n    define('vm-pip-control', VmPipControl);\n    define('vm-playback-control', VmPlaybackControl);\n    define('vm-scrim', VmScrim);\n    define('vm-scrubber-control', VmScrubberControl);\n    define('vm-slider', VmSlider);\n    define('vm-settings-control', VmSettingsControl);\n    define('vm-time-progress', VmTimeProgress);\n    define('vm-volume-control', VmVolumeControl);\n    define('vm-default-settings', VmDefaultSettings);\n    define('vm-menu', VmMenu);\n    define('vm-menu-item', VmMenuItem);\n    define('vm-menu-radio', VmMenuRadio);\n    define('vm-menu-radio-group', VmMenuRadioGroup);\n    define('vm-settings', VmSettings);\n    define('vm-submenu', VmSubmenu);\n    define('vm-loading-screen', VmLoadingScreen);\n    define('vm-poster', VmPoster);\n    define('vm-spinner', VmSpinner);\n    define('vm-ui', VmUi);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmEmbed \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst EmbedInputs: string[] = [\n  'embedSrc',\n  'mediaTitle',\n  'params',\n  'origin',\n  'preconnections',\n  'decoder',\n];\n\nconst EmbedMethods: string[] = [\n  'postMessage',\n];\n\nconst EmbedOutputs: string[] = [\n  'vmEmbedSrcChange',\n  'vmEmbedMessage',\n  'vmEmbedLoaded',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Embed extends Components.VmEmbed {}\n\n@ProxyCmp({\n  inputs: EmbedInputs,\n  methods: EmbedMethods,\n})\n@Component({\n  selector: 'vm-embed',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: EmbedInputs,\n  outputs: EmbedOutputs,\n})\nexport class Embed {\n  protected el: HTMLElement;\n\n  /** Emitted when the `embedSrc` or `params` props change. The payload contains the `params`\nserialized into a query string and appended to `embedSrc`. */\n  vmEmbedSrcChange!: Emitter<JSX.VmEmbed[\"onVmEmbedSrcChange\"]>;\n  /** Emitted when a new message is received from the embedded player via `postMessage`. */\n  vmEmbedMessage!: Emitter<JSX.VmEmbed[\"onVmEmbedMessage\"]>;\n  /** Emitted when the embedded player and any new media has loaded. */\n  vmEmbedLoaded!: Emitter<JSX.VmEmbed[\"onVmEmbedLoaded\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-embed', VmEmbed);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmEmbedSrcChange', 'vmEmbedMessage', 'vmEmbedLoaded'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmEndTime,\n  VmTime \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst EndTimeInputs: string[] = [\n  'duration',\n  'i18n',\n  'alwaysShowHours',\n];\n\nconst EndTimeMethods: string[] = [\n  \n];\n\nconst EndTimeOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface EndTime extends Components.VmEndTime {}\n\n@ProxyCmp({\n  inputs: EndTimeInputs,\n  methods: EndTimeMethods,\n})\n@Component({\n  selector: 'vm-end-time',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: EndTimeInputs,\n  outputs: EndTimeOutputs,\n})\nexport class EndTime {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-end-time', VmEndTime);\n    define('vm-time', VmTime);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmFile \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst FileInputs: string[] = [\n  'willAttach',\n  'crossOrigin',\n  'preload',\n  'poster',\n  'mediaTitle',\n  'controlsList',\n  'autoPiP',\n  'disablePiP',\n  'disableRemotePlayback',\n  'viewType',\n  'playbackRates',\n  'language',\n  'autoplay',\n  'controls',\n  'logger',\n  'loop',\n  'muted',\n  'playsinline',\n  'noConnect',\n  'paused',\n  'currentTime',\n  'volume',\n  'playbackReady',\n  'playbackStarted',\n  'currentTextTrack',\n  'hasCustomTextManager',\n  'isTextTrackVisible',\n  'shouldRenderNativeTextTracks',\n];\n\nconst FileMethods: string[] = [\n  'getAdapter',\n];\n\nconst FileOutputs: string[] = [\n  'vmError',\n  'vmMediaElChange',\n  'vmSrcSetChange',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface File extends Components.VmFile {}\n\n@ProxyCmp({\n  inputs: FileInputs,\n  methods: FileMethods,\n})\n@Component({\n  selector: 'vm-file',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: FileInputs,\n  outputs: FileOutputs,\n})\nexport class File {\n  protected el: HTMLElement;\n\n  /** Emitted when an error has occurred. */\n  vmError!: Emitter<JSX.VmFile[\"onVmError\"]>;\n  /** Emitted when the underlying media element changes. */\n  vmMediaElChange!: Emitter<JSX.VmFile[\"onVmMediaElChange\"]>;\n  /** Emitted when the child `<source />` elements are modified. */\n  vmSrcSetChange!: Emitter<JSX.VmFile[\"onVmSrcSetChange\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-file', VmFile);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmError', 'vmMediaElChange', 'vmSrcSetChange'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmFullscreenControl,\n  VmControl,\n  VmIcon,\n  VmTooltip \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst FullscreenControlInputs: string[] = [\n  'enterIcon',\n  'exitIcon',\n  'icons',\n  'tooltipPosition',\n  'tooltipDirection',\n  'hideTooltip',\n  'keys',\n  'isFullscreenActive',\n  'i18n',\n  'playbackReady',\n];\n\nconst FullscreenControlMethods: string[] = [\n  \n];\n\nconst FullscreenControlOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface FullscreenControl extends Components.VmFullscreenControl {}\n\n@ProxyCmp({\n  inputs: FullscreenControlInputs,\n  methods: FullscreenControlMethods,\n})\n@Component({\n  selector: 'vm-fullscreen-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: FullscreenControlInputs,\n  outputs: FullscreenControlOutputs,\n})\nexport class FullscreenControl {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-fullscreen-control', VmFullscreenControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-tooltip', VmTooltip);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmHls,\n  VmFile,\n  VmVideo \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst HlsInputs: string[] = [\n  'version',\n  'libSrc',\n  'config',\n  'crossOrigin',\n  'preload',\n  'poster',\n  'controlsList',\n  'autoPiP',\n  'disablePiP',\n  'disableRemotePlayback',\n  'playbackReady',\n  'mediaTitle',\n];\n\nconst HlsMethods: string[] = [\n  'getAdapter',\n];\n\nconst HlsOutputs: string[] = [\n  'vmError',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Hls extends Components.VmHls {}\n\n@ProxyCmp({\n  inputs: HlsInputs,\n  methods: HlsMethods,\n})\n@Component({\n  selector: 'vm-hls',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: HlsInputs,\n  outputs: HlsOutputs,\n})\nexport class Hls {\n  protected el: HTMLElement;\n\n  /** Emitted when an error has occurred. */\n  vmError!: Emitter<JSX.VmHls[\"onVmError\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-hls', VmHls);\n    define('vm-file', VmFile);\n    define('vm-video', VmVideo);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmError'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmIcon \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst IconInputs: string[] = [\n  'name',\n  'src',\n  'label',\n  'library',\n  'icons',\n];\n\nconst IconMethods: string[] = [\n  'redraw',\n];\n\nconst IconOutputs: string[] = [\n  'vmLoad',\n  'vmError',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Icon extends Components.VmIcon {}\n\n@ProxyCmp({\n  inputs: IconInputs,\n  methods: IconMethods,\n})\n@Component({\n  selector: 'vm-icon',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: IconInputs,\n  outputs: IconOutputs,\n})\nexport class Icon {\n  protected el: HTMLElement;\n\n  /** Emitted when the icon has loaded. */\n  vmLoad!: Emitter<JSX.VmIcon[\"onVmLoad\"]>;\n  /** Emitted when the icon failed to load. */\n  vmError!: Emitter<JSX.VmIcon[\"onVmError\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-icon', VmIcon);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmLoad', 'vmError'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmIconLibrary \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst IconLibraryInputs: string[] = [\n  'name',\n  'resolver',\n  'icons',\n];\n\nconst IconLibraryMethods: string[] = [\n  \n];\n\nconst IconLibraryOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface IconLibrary extends Components.VmIconLibrary {}\n\n@ProxyCmp({\n  inputs: IconLibraryInputs,\n  methods: IconLibraryMethods,\n})\n@Component({\n  selector: 'vm-icon-library',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: IconLibraryInputs,\n  outputs: IconLibraryOutputs,\n})\nexport class IconLibrary {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-icon-library', VmIconLibrary);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmLiveIndicator \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst LiveIndicatorInputs: string[] = [\n  'isLive',\n  'i18n',\n];\n\nconst LiveIndicatorMethods: string[] = [\n  \n];\n\nconst LiveIndicatorOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface LiveIndicator extends Components.VmLiveIndicator {}\n\n@ProxyCmp({\n  inputs: LiveIndicatorInputs,\n  methods: LiveIndicatorMethods,\n})\n@Component({\n  selector: 'vm-live-indicator',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: LiveIndicatorInputs,\n  outputs: LiveIndicatorOutputs,\n})\nexport class LiveIndicator {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-live-indicator', VmLiveIndicator);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmLoadingScreen \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst LoadingScreenInputs: string[] = [\n  'playbackReady',\n  'hideDots',\n];\n\nconst LoadingScreenMethods: string[] = [\n  \n];\n\nconst LoadingScreenOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface LoadingScreen extends Components.VmLoadingScreen {}\n\n@ProxyCmp({\n  inputs: LoadingScreenInputs,\n  methods: LoadingScreenMethods,\n})\n@Component({\n  selector: 'vm-loading-screen',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: LoadingScreenInputs,\n  outputs: LoadingScreenOutputs,\n})\nexport class LoadingScreen {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-loading-screen', VmLoadingScreen);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmMenu \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst MenuInputs: string[] = [\n  'active',\n  'identifier',\n  'controller',\n  'slideInDirection',\n];\n\nconst MenuMethods: string[] = [\n  'focusMenu',\n  'blurMenu',\n  'getActiveMenuItem',\n  'setActiveMenuItem',\n  'calculateHeight',\n];\n\nconst MenuOutputs: string[] = [\n  'vmOpen',\n  'vmClose',\n  'vmFocus',\n  'vmBlur',\n  'vmActiveSubmenuChange',\n  'vmActiveMenuItemChange',\n  'vmMenuHeightChange',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Menu extends Components.VmMenu {}\n\n@ProxyCmp({\n  inputs: MenuInputs,\n  methods: MenuMethods,\n})\n@Component({\n  selector: 'vm-menu',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: MenuInputs,\n  outputs: MenuOutputs,\n})\nexport class Menu {\n  protected el: HTMLElement;\n\n  /** Emitted when the menu is open/active. */\n  vmOpen!: Emitter<JSX.VmMenu[\"onVmOpen\"]>;\n  /** Emitted when the menu has closed/is not active. */\n  vmClose!: Emitter<JSX.VmMenu[\"onVmClose\"]>;\n  /** Emitted when the menu is focused. */\n  vmFocus!: Emitter<JSX.VmMenu[\"onVmFocus\"]>;\n  /** Emitted when the menu loses focus. */\n  vmBlur!: Emitter<JSX.VmMenu[\"onVmBlur\"]>;\n  /** Emitted when the active submenu changes. */\n  vmActiveSubmenuChange!: Emitter<JSX.VmMenu[\"onVmActiveSubmenuChange\"]>;\n  /** Emitted when the currently focused menu item changes. */\n  vmActiveMenuItemChange!: Emitter<JSX.VmMenu[\"onVmActiveMenuItemChange\"]>;\n  /** Emitted when the height of the menu changes. */\n  vmMenuHeightChange!: Emitter<JSX.VmMenu[\"onVmMenuHeightChange\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-menu', VmMenu);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmOpen', 'vmClose', 'vmFocus', 'vmBlur', 'vmActiveSubmenuChange', 'vmActiveMenuItemChange', 'vmMenuHeightChange'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmMenuItem,\n  VmIcon \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst MenuItemInputs: string[] = [\n  'identifier',\n  'hidden',\n  'label',\n  'menu',\n  'expanded',\n  'checked',\n  'hint',\n  'badge',\n  'checkIcon',\n  'icons',\n  'isTouch',\n];\n\nconst MenuItemMethods: string[] = [\n  'focusItem',\n  'blurItem',\n  'getHeight',\n];\n\nconst MenuItemOutputs: string[] = [\n  'vmFocus',\n  'vmBlur',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface MenuItem extends Components.VmMenuItem {}\n\n@ProxyCmp({\n  inputs: MenuItemInputs,\n  methods: MenuItemMethods,\n})\n@Component({\n  selector: 'vm-menu-item',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: MenuItemInputs,\n  outputs: MenuItemOutputs,\n})\nexport class MenuItem {\n  protected el: HTMLElement;\n\n  /** Emitted when the item is focused. */\n  vmFocus!: Emitter<JSX.VmMenuItem[\"onVmFocus\"]>;\n  /** Emitted when the item loses focus. */\n  vmBlur!: Emitter<JSX.VmMenuItem[\"onVmBlur\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-menu-item', VmMenuItem);\n    define('vm-icon', VmIcon);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmFocus', 'vmBlur'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmMenuRadio,\n  VmIcon,\n  VmMenuItem \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst MenuRadioInputs: string[] = [\n  'label',\n  'value',\n  'checked',\n  'badge',\n  'checkIcon',\n  'icons',\n];\n\nconst MenuRadioMethods: string[] = [\n  \n];\n\nconst MenuRadioOutputs: string[] = [\n  'vmCheck',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface MenuRadio extends Components.VmMenuRadio {}\n\n@ProxyCmp({\n  inputs: MenuRadioInputs,\n  methods: MenuRadioMethods,\n})\n@Component({\n  selector: 'vm-menu-radio',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: MenuRadioInputs,\n  outputs: MenuRadioOutputs,\n})\nexport class MenuRadio {\n  protected el: HTMLElement;\n\n  /** Emitted when the radio button is selected. */\n  vmCheck!: Emitter<JSX.VmMenuRadio[\"onVmCheck\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-menu-radio', VmMenuRadio);\n    define('vm-icon', VmIcon);\n    define('vm-menu-item', VmMenuItem);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmCheck'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmMenuRadioGroup \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst MenuRadioGroupInputs: string[] = [\n  'value',\n];\n\nconst MenuRadioGroupMethods: string[] = [\n  \n];\n\nconst MenuRadioGroupOutputs: string[] = [\n  'vmCheck',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface MenuRadioGroup extends Components.VmMenuRadioGroup {}\n\n@ProxyCmp({\n  inputs: MenuRadioGroupInputs,\n  methods: MenuRadioGroupMethods,\n})\n@Component({\n  selector: 'vm-menu-radio-group',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: MenuRadioGroupInputs,\n  outputs: MenuRadioGroupOutputs,\n})\nexport class MenuRadioGroup {\n  protected el: HTMLElement;\n\n  /** Emitted when a new radio button is selected for this group. */\n  vmCheck!: Emitter<JSX.VmMenuRadioGroup[\"onVmCheck\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-menu-radio-group', VmMenuRadioGroup);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmCheck'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmMuteControl,\n  VmControl,\n  VmIcon,\n  VmTooltip \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst MuteControlInputs: string[] = [\n  'lowVolumeIcon',\n  'highVolumeIcon',\n  'mutedIcon',\n  'icons',\n  'tooltipPosition',\n  'tooltipDirection',\n  'hideTooltip',\n  'keys',\n  'volume',\n  'muted',\n  'i18n',\n];\n\nconst MuteControlMethods: string[] = [\n  \n];\n\nconst MuteControlOutputs: string[] = [\n  'vmFocus',\n  'vmBlur',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface MuteControl extends Components.VmMuteControl {}\n\n@ProxyCmp({\n  inputs: MuteControlInputs,\n  methods: MuteControlMethods,\n})\n@Component({\n  selector: 'vm-mute-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: MuteControlInputs,\n  outputs: MuteControlOutputs,\n})\nexport class MuteControl {\n  protected el: HTMLElement;\n\n  /** Emitted when the control receives focus. */\n  vmFocus!: Emitter<JSX.VmMuteControl[\"onVmFocus\"]>;\n  /** Emitted when the control loses focus. */\n  vmBlur!: Emitter<JSX.VmMuteControl[\"onVmBlur\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-mute-control', VmMuteControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-tooltip', VmTooltip);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmFocus', 'vmBlur'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmPipControl,\n  VmControl,\n  VmIcon,\n  VmTooltip \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst PipControlInputs: string[] = [\n  'enterIcon',\n  'exitIcon',\n  'icons',\n  'tooltipPosition',\n  'tooltipDirection',\n  'hideTooltip',\n  'keys',\n  'isPiPActive',\n  'i18n',\n  'playbackReady',\n];\n\nconst PipControlMethods: string[] = [\n  \n];\n\nconst PipControlOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface PipControl extends Components.VmPipControl {}\n\n@ProxyCmp({\n  inputs: PipControlInputs,\n  methods: PipControlMethods,\n})\n@Component({\n  selector: 'vm-pip-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: PipControlInputs,\n  outputs: PipControlOutputs,\n})\nexport class PipControl {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-pip-control', VmPipControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-tooltip', VmTooltip);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmPlaybackControl,\n  VmControl,\n  VmIcon,\n  VmTooltip \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst PlaybackControlInputs: string[] = [\n  'playIcon',\n  'pauseIcon',\n  'icons',\n  'tooltipPosition',\n  'tooltipDirection',\n  'hideTooltip',\n  'keys',\n  'paused',\n  'i18n',\n];\n\nconst PlaybackControlMethods: string[] = [\n  \n];\n\nconst PlaybackControlOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface PlaybackControl extends Components.VmPlaybackControl {}\n\n@ProxyCmp({\n  inputs: PlaybackControlInputs,\n  methods: PlaybackControlMethods,\n})\n@Component({\n  selector: 'vm-playback-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: PlaybackControlInputs,\n  outputs: PlaybackControlOutputs,\n})\nexport class PlaybackControl {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-playback-control', VmPlaybackControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-tooltip', VmTooltip);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmPlayer \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst PlayerInputs: string[] = [\n  'logger',\n  'theme',\n  'icons',\n  'paused',\n  'playing',\n  'duration',\n  'mediaTitle',\n  'currentProvider',\n  'currentSrc',\n  'currentPoster',\n  'currentTime',\n  'autoplay',\n  'ready',\n  'playbackReady',\n  'loop',\n  'muted',\n  'buffered',\n  'playbackRate',\n  'playbackRates',\n  'playbackQuality',\n  'playbackQualities',\n  'seeking',\n  'debug',\n  'playbackStarted',\n  'playbackEnded',\n  'buffering',\n  'controls',\n  'isControlsActive',\n  'isSettingsActive',\n  'volume',\n  'isFullscreenActive',\n  'aspectRatio',\n  'viewType',\n  'isAudioView',\n  'isVideoView',\n  'mediaType',\n  'isAudio',\n  'isVideo',\n  'isLive',\n  'isMobile',\n  'isTouch',\n  'isPiPActive',\n  'textTracks',\n  'currentTextTrack',\n  'isTextTrackVisible',\n  'shouldRenderNativeTextTracks',\n  'audioTracks',\n  'currentAudioTrack',\n  'autopause',\n  'playsinline',\n  'language',\n  'translations',\n  'languages',\n  'i18n',\n];\n\nconst PlayerMethods: string[] = [\n  'getProvider',\n  'getAdapter',\n  'play',\n  'pause',\n  'canPlay',\n  'canAutoplay',\n  'canMutedAutoplay',\n  'canSetPlaybackRate',\n  'canSetPlaybackQuality',\n  'canSetFullscreen',\n  'enterFullscreen',\n  'exitFullscreen',\n  'canSetPiP',\n  'enterPiP',\n  'exitPiP',\n  'canSetAudioTrack',\n  'setCurrentAudioTrack',\n  'canSetTextTrack',\n  'setCurrentTextTrack',\n  'canSetTextTrackVisibility',\n  'setTextTrackVisibility',\n  'extendLanguage',\n  'getContainer',\n  'callAdapter',\n];\n\nconst PlayerOutputs: string[] = [\n  'vmThemeChange',\n  'vmPausedChange',\n  'vmPlay',\n  'vmPlayingChange',\n  'vmSeekingChange',\n  'vmSeeked',\n  'vmBufferingChange',\n  'vmDurationChange',\n  'vmCurrentTimeChange',\n  'vmReady',\n  'vmPlaybackReady',\n  'vmPlaybackStarted',\n  'vmPlaybackEnded',\n  'vmBufferedChange',\n  'vmError',\n  'vmLoadStart',\n  'vmCurrentProviderChange',\n  'vmCurrentSrcChange',\n  'vmCurrentPosterChange',\n  'vmMediaTitleChange',\n  'vmControlsChange',\n  'vmPlaybackRateChange',\n  'vmPlaybackRatesChange',\n  'vmPlaybackQualityChange',\n  'vmPlaybackQualitiesChange',\n  'vmMutedChange',\n  'vmVolumeChange',\n  'vmViewTypeChange',\n  'vmMediaTypeChange',\n  'vmLiveChange',\n  'vmTouchChange',\n  'vmLanguageChange',\n  'vmI18nChange',\n  'vmTranslationsChange',\n  'vmLanguagesChange',\n  'vmFullscreenChange',\n  'vmPiPChange',\n  'vmTextTracksChange',\n  'vmCurrentTextTrackChange',\n  'vmTextTrackVisibleChange',\n  'vmAudioTracksChange',\n  'vmCurrentAudioTrackChange',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Player extends Components.VmPlayer {}\n\n@ProxyCmp({\n  inputs: PlayerInputs,\n  methods: PlayerMethods,\n})\n@Component({\n  selector: 'vm-player',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: PlayerInputs,\n  outputs: PlayerOutputs,\n})\nexport class Player {\n  protected el: HTMLElement;\n\n  /** Emitted when the `theme` prop changes value. */\n  vmThemeChange!: Emitter<JSX.VmPlayer[\"onVmThemeChange\"]>;\n  /** Emitted when the `paused` prop changes value. */\n  vmPausedChange!: Emitter<JSX.VmPlayer[\"onVmPausedChange\"]>;\n  /** Emitted when the media is transitioning from `paused` to `playing`. Event flow: `paused` ->\n`play` -> `playing`. The media starts `playing` once enough content has buffered to\nbegin/resume playback. */\n  vmPlay!: Emitter<JSX.VmPlayer[\"onVmPlay\"]>;\n  /** Emitted when the `playing` prop changes value. */\n  vmPlayingChange!: Emitter<JSX.VmPlayer[\"onVmPlayingChange\"]>;\n  /** Emitted when the `seeking` prop changes value. */\n  vmSeekingChange!: Emitter<JSX.VmPlayer[\"onVmSeekingChange\"]>;\n  /** Emitted directly after the player has successfully transitioned/seeked to a new time position.\nEvent flow: `seeking` -> `seeked`. */\n  vmSeeked!: Emitter<JSX.VmPlayer[\"onVmSeeked\"]>;\n  /** Emitted when the `buffering` prop changes value. */\n  vmBufferingChange!: Emitter<JSX.VmPlayer[\"onVmBufferingChange\"]>;\n  /** Emitted when the `duration` prop changes value. */\n  vmDurationChange!: Emitter<JSX.VmPlayer[\"onVmDurationChange\"]>;\n  /** Emitted when the `currentTime` prop changes value. */\n  vmCurrentTimeChange!: Emitter<JSX.VmPlayer[\"onVmCurrentTimeChange\"]>;\n  /** Emitted when the player has loaded and is ready to be interacted with. */\n  vmReady!: Emitter<JSX.VmPlayer[\"onVmReady\"]>;\n  /** Emitted when the media is ready to begin playback. The following props are guaranteed to be\ndefined when this fires: `mediaTitle`, `currentSrc`, `currentPoster`, `duration`, `mediaType`,\n`viewType`. */\n  vmPlaybackReady!: Emitter<JSX.VmPlayer[\"onVmPlaybackReady\"]>;\n  /** Emitted when the media initiates playback. */\n  vmPlaybackStarted!: Emitter<JSX.VmPlayer[\"onVmPlaybackStarted\"]>;\n  /** Emitted when playback reaches the end of the media. */\n  vmPlaybackEnded!: Emitter<JSX.VmPlayer[\"onVmPlaybackEnded\"]>;\n  /** Emitted when the `buffered` prop changes value. */\n  vmBufferedChange!: Emitter<JSX.VmPlayer[\"onVmBufferedChange\"]>;\n  /** Emitted when an any error has occurred within the player. */\n  vmError!: Emitter<JSX.VmPlayer[\"onVmError\"]>;\n  /** Emitted when the provider starts loading a media resource. */\n  vmLoadStart!: Emitter<JSX.VmPlayer[\"onVmLoadStart\"]>;\n  /** Emitted when the `currentProvider` prop changes value. */\n  vmCurrentProviderChange!: Emitter<JSX.VmPlayer[\"onVmCurrentProviderChange\"]>;\n  /** Emitted when the `currentSrc` prop changes value. */\n  vmCurrentSrcChange!: Emitter<JSX.VmPlayer[\"onVmCurrentSrcChange\"]>;\n  /** Emitted when the `currentPoster` prop changes value. */\n  vmCurrentPosterChange!: Emitter<JSX.VmPlayer[\"onVmCurrentPosterChange\"]>;\n  /** Emitted when the `mediaTitle` prop changes value. */\n  vmMediaTitleChange!: Emitter<JSX.VmPlayer[\"onVmMediaTitleChange\"]>;\n  /** Emitted when the `isControlsActive` prop changes value. */\n  vmControlsChange!: Emitter<JSX.VmPlayer[\"onVmControlsChange\"]>;\n  /** Emitted when the `playbackRate` prop changes value. */\n  vmPlaybackRateChange!: Emitter<JSX.VmPlayer[\"onVmPlaybackRateChange\"]>;\n  /** Emitted when the `playbackRates` prop changes value. */\n  vmPlaybackRatesChange!: Emitter<JSX.VmPlayer[\"onVmPlaybackRatesChange\"]>;\n  /** Emitted when the `playbackQuality` prop changes value. */\n  vmPlaybackQualityChange!: Emitter<JSX.VmPlayer[\"onVmPlaybackQualityChange\"]>;\n  /** Emitted when the `playbackQualities` prop changes value. */\n  vmPlaybackQualitiesChange!: Emitter<JSX.VmPlayer[\"onVmPlaybackQualitiesChange\"]>;\n  /** Emitted when the `muted` prop changes value. */\n  vmMutedChange!: Emitter<JSX.VmPlayer[\"onVmMutedChange\"]>;\n  /** Emitted when the `volume` prop changes value. */\n  vmVolumeChange!: Emitter<JSX.VmPlayer[\"onVmVolumeChange\"]>;\n  /** Emitted when the `viewType` prop changes value. */\n  vmViewTypeChange!: Emitter<JSX.VmPlayer[\"onVmViewTypeChange\"]>;\n  /** Emitted when the `mediaType` prop changes value. */\n  vmMediaTypeChange!: Emitter<JSX.VmPlayer[\"onVmMediaTypeChange\"]>;\n  /** Emitted when the `isLive` prop changes value. */\n  vmLiveChange!: Emitter<JSX.VmPlayer[\"onVmLiveChange\"]>;\n  /** Emitted when the `isTouch` prop changes value. */\n  vmTouchChange!: Emitter<JSX.VmPlayer[\"onVmTouchChange\"]>;\n  /** Emitted when the `language` prop changes value. */\n  vmLanguageChange!: Emitter<JSX.VmPlayer[\"onVmLanguageChange\"]>;\n  /** Emitted when the `i18n` prop changes value. */\n  vmI18nChange!: Emitter<JSX.VmPlayer[\"onVmI18nChange\"]>;\n  /** Emitted when the `translations` prop changes value. */\n  vmTranslationsChange!: Emitter<JSX.VmPlayer[\"onVmTranslationsChange\"]>;\n  /** Emitted when the `languages` prop changes value. */\n  vmLanguagesChange!: Emitter<JSX.VmPlayer[\"onVmLanguagesChange\"]>;\n  /** Emitted when the `isFullscreenActive` prop changes value. */\n  vmFullscreenChange!: Emitter<JSX.VmPlayer[\"onVmFullscreenChange\"]>;\n  /** Emitted when the `isPiPActive` prop changes value. */\n  vmPiPChange!: Emitter<JSX.VmPlayer[\"onVmPiPChange\"]>;\n  /** Emitted when the `textTracks` prop changes value. */\n  vmTextTracksChange!: Emitter<JSX.VmPlayer[\"onVmTextTracksChange\"]>;\n  /** Emitted when the `currentTextTrack` prop changes value. */\n  vmCurrentTextTrackChange!: Emitter<JSX.VmPlayer[\"onVmCurrentTextTrackChange\"]>;\n  /** Emitted when the `isTextTrackVisible` prop changes value. */\n  vmTextTrackVisibleChange!: Emitter<JSX.VmPlayer[\"onVmTextTrackVisibleChange\"]>;\n  /** Emitted when the `audioTracks` prop changes value. */\n  vmAudioTracksChange!: Emitter<JSX.VmPlayer[\"onVmAudioTracksChange\"]>;\n  /** Emitted when the `currentAudioTrack` prop changes value. */\n  vmCurrentAudioTrackChange!: Emitter<JSX.VmPlayer[\"onVmCurrentAudioTrackChange\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-player', VmPlayer);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmThemeChange', 'vmPausedChange', 'vmPlay', 'vmPlayingChange', 'vmSeekingChange', 'vmSeeked', 'vmBufferingChange', 'vmDurationChange', 'vmCurrentTimeChange', 'vmReady', 'vmPlaybackReady', 'vmPlaybackStarted', 'vmPlaybackEnded', 'vmBufferedChange', 'vmError', 'vmLoadStart', 'vmCurrentProviderChange', 'vmCurrentSrcChange', 'vmCurrentPosterChange', 'vmMediaTitleChange', 'vmControlsChange', 'vmPlaybackRateChange', 'vmPlaybackRatesChange', 'vmPlaybackQualityChange', 'vmPlaybackQualitiesChange', 'vmMutedChange', 'vmVolumeChange', 'vmViewTypeChange', 'vmMediaTypeChange', 'vmLiveChange', 'vmTouchChange', 'vmLanguageChange', 'vmI18nChange', 'vmTranslationsChange', 'vmLanguagesChange', 'vmFullscreenChange', 'vmPiPChange', 'vmTextTracksChange', 'vmCurrentTextTrackChange', 'vmTextTrackVisibleChange', 'vmAudioTracksChange', 'vmCurrentAudioTrackChange'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmPoster \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst PosterInputs: string[] = [\n  'fit',\n  'isVideoView',\n  'currentPoster',\n  'mediaTitle',\n  'playbackStarted',\n  'currentTime',\n];\n\nconst PosterMethods: string[] = [\n  \n];\n\nconst PosterOutputs: string[] = [\n  'vmLoaded',\n  'vmWillShow',\n  'vmWillHide',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Poster extends Components.VmPoster {}\n\n@ProxyCmp({\n  inputs: PosterInputs,\n  methods: PosterMethods,\n})\n@Component({\n  selector: 'vm-poster',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: PosterInputs,\n  outputs: PosterOutputs,\n})\nexport class Poster {\n  protected el: HTMLElement;\n\n  /** Emitted when the poster has loaded. */\n  vmLoaded!: Emitter<JSX.VmPoster[\"onVmLoaded\"]>;\n  /** Emitted when the poster will be shown. */\n  vmWillShow!: Emitter<JSX.VmPoster[\"onVmWillShow\"]>;\n  /** Emitted when the poster will be hidden. */\n  vmWillHide!: Emitter<JSX.VmPoster[\"onVmWillHide\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-poster', VmPoster);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmLoaded', 'vmWillShow', 'vmWillHide'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmScrim \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst ScrimInputs: string[] = [\n  'gradient',\n  'isVideoView',\n  'isControlsActive',\n];\n\nconst ScrimMethods: string[] = [\n  \n];\n\nconst ScrimOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Scrim extends Components.VmScrim {}\n\n@ProxyCmp({\n  inputs: ScrimInputs,\n  methods: ScrimMethods,\n})\n@Component({\n  selector: 'vm-scrim',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ScrimInputs,\n  outputs: ScrimOutputs,\n})\nexport class Scrim {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-scrim', VmScrim);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmScrubberControl,\n  VmSlider,\n  VmTooltip \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst ScrubberControlInputs: string[] = [\n  'alwaysShowHours',\n  'hideTooltip',\n  'currentTime',\n  'duration',\n  'noKeyboard',\n  'buffering',\n  'buffered',\n  'i18n',\n];\n\nconst ScrubberControlMethods: string[] = [\n  \n];\n\nconst ScrubberControlOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface ScrubberControl extends Components.VmScrubberControl {}\n\n@ProxyCmp({\n  inputs: ScrubberControlInputs,\n  methods: ScrubberControlMethods,\n})\n@Component({\n  selector: 'vm-scrubber-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ScrubberControlInputs,\n  outputs: ScrubberControlOutputs,\n})\nexport class ScrubberControl {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-scrubber-control', VmScrubberControl);\n    define('vm-slider', VmSlider);\n    define('vm-tooltip', VmTooltip);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmSettings,\n  VmMenu \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst SettingsInputs: string[] = [\n  'pin',\n  'active',\n  'isMobile',\n  'isAudioView',\n];\n\nconst SettingsMethods: string[] = [\n  'setController',\n];\n\nconst SettingsOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Settings extends Components.VmSettings {}\n\n@ProxyCmp({\n  inputs: SettingsInputs,\n  methods: SettingsMethods,\n})\n@Component({\n  selector: 'vm-settings',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: SettingsInputs,\n  outputs: SettingsOutputs,\n})\nexport class Settings {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-settings', VmSettings);\n    define('vm-menu', VmMenu);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmSettingsControl,\n  VmControl,\n  VmIcon,\n  VmTooltip \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst SettingsControlInputs: string[] = [\n  'icon',\n  'icons',\n  'tooltipPosition',\n  'tooltipDirection',\n  'menu',\n  'expanded',\n  'i18n',\n  'hideTooltip',\n];\n\nconst SettingsControlMethods: string[] = [\n  'focusControl',\n  'blurControl',\n];\n\nconst SettingsControlOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface SettingsControl extends Components.VmSettingsControl {}\n\n@ProxyCmp({\n  inputs: SettingsControlInputs,\n  methods: SettingsControlMethods,\n})\n@Component({\n  selector: 'vm-settings-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: SettingsControlInputs,\n  outputs: SettingsControlOutputs,\n})\nexport class SettingsControl {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-settings-control', VmSettingsControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-tooltip', VmTooltip);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmSkeleton \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst SkeletonInputs: string[] = [\n  'effect',\n  'ready',\n];\n\nconst SkeletonMethods: string[] = [\n  \n];\n\nconst SkeletonOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Skeleton extends Components.VmSkeleton {}\n\n@ProxyCmp({\n  inputs: SkeletonInputs,\n  methods: SkeletonMethods,\n})\n@Component({\n  selector: 'vm-skeleton',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: SkeletonInputs,\n  outputs: SkeletonOutputs,\n})\nexport class Skeleton {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-skeleton', VmSkeleton);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmSlider \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst SliderInputs: string[] = [\n  'step',\n  'min',\n  'max',\n  'value',\n  'valueText',\n  'label',\n];\n\nconst SliderMethods: string[] = [\n  \n];\n\nconst SliderOutputs: string[] = [\n  'vmValueChange',\n  'vmFocus',\n  'vmBlur',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Slider extends Components.VmSlider {}\n\n@ProxyCmp({\n  inputs: SliderInputs,\n  methods: SliderMethods,\n})\n@Component({\n  selector: 'vm-slider',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: SliderInputs,\n  outputs: SliderOutputs,\n})\nexport class Slider {\n  protected el: HTMLElement;\n\n  /** Emitted when the value of the underlying `input` field changes. */\n  vmValueChange!: Emitter<JSX.VmSlider[\"onVmValueChange\"]>;\n  /** Emitted when the slider receives focus. */\n  vmFocus!: Emitter<JSX.VmSlider[\"onVmFocus\"]>;\n  /** Emitted when the slider loses focus. */\n  vmBlur!: Emitter<JSX.VmSlider[\"onVmBlur\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-slider', VmSlider);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmValueChange', 'vmFocus', 'vmBlur'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmSpinner \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst SpinnerInputs: string[] = [\n  'isVideoView',\n  'currentProvider',\n  'showWhenMediaLoading',\n  'playbackReady',\n  'buffering',\n];\n\nconst SpinnerMethods: string[] = [\n  \n];\n\nconst SpinnerOutputs: string[] = [\n  'vmWillShow',\n  'vmWillHide',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Spinner extends Components.VmSpinner {}\n\n@ProxyCmp({\n  inputs: SpinnerInputs,\n  methods: SpinnerMethods,\n})\n@Component({\n  selector: 'vm-spinner',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: SpinnerInputs,\n  outputs: SpinnerOutputs,\n})\nexport class Spinner {\n  protected el: HTMLElement;\n\n  /** Emitted when the spinner will be shown. */\n  vmWillShow!: Emitter<JSX.VmSpinner[\"onVmWillShow\"]>;\n  /** Emitted when the spinner will be hidden. */\n  vmWillHide!: Emitter<JSX.VmSpinner[\"onVmWillHide\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-spinner', VmSpinner);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmWillShow', 'vmWillHide'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmSubmenu,\n  VmIcon,\n  VmMenu,\n  VmMenuItem \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst SubmenuInputs: string[] = [\n  'label',\n  'hint',\n  'slideInDirection',\n  'active',\n];\n\nconst SubmenuMethods: string[] = [\n  'getController',\n  'getMenu',\n  'getControllerHeight',\n];\n\nconst SubmenuOutputs: string[] = [\n  'vmOpenSubmenu',\n  'vmCloseSubmenu',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Submenu extends Components.VmSubmenu {}\n\n@ProxyCmp({\n  inputs: SubmenuInputs,\n  methods: SubmenuMethods,\n})\n@Component({\n  selector: 'vm-submenu',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: SubmenuInputs,\n  outputs: SubmenuOutputs,\n})\nexport class Submenu {\n  protected el: HTMLElement;\n\n  /** Emitted when the submenu is open/active. */\n  vmOpenSubmenu!: Emitter<JSX.VmSubmenu[\"onVmOpenSubmenu\"]>;\n  /** Emitted when the submenu has closed/is not active. */\n  vmCloseSubmenu!: Emitter<JSX.VmSubmenu[\"onVmCloseSubmenu\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-submenu', VmSubmenu);\n    define('vm-icon', VmIcon);\n    define('vm-menu', VmMenu);\n    define('vm-menu-item', VmMenuItem);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmOpenSubmenu', 'vmCloseSubmenu'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmTime \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst TimeInputs: string[] = [\n  'label',\n  'seconds',\n  'alwaysShowHours',\n];\n\nconst TimeMethods: string[] = [\n  \n];\n\nconst TimeOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Time extends Components.VmTime {}\n\n@ProxyCmp({\n  inputs: TimeInputs,\n  methods: TimeMethods,\n})\n@Component({\n  selector: 'vm-time',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: TimeInputs,\n  outputs: TimeOutputs,\n})\nexport class Time {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-time', VmTime);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmTimeProgress,\n  VmCurrentTime,\n  VmTime,\n  VmEndTime \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst TimeProgressInputs: string[] = [\n  'separator',\n  'alwaysShowHours',\n];\n\nconst TimeProgressMethods: string[] = [\n  \n];\n\nconst TimeProgressOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface TimeProgress extends Components.VmTimeProgress {}\n\n@ProxyCmp({\n  inputs: TimeProgressInputs,\n  methods: TimeProgressMethods,\n})\n@Component({\n  selector: 'vm-time-progress',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: TimeProgressInputs,\n  outputs: TimeProgressOutputs,\n})\nexport class TimeProgress {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-time-progress', VmTimeProgress);\n    define('vm-current-time', VmCurrentTime);\n    define('vm-time', VmTime);\n    define('vm-end-time', VmEndTime);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmTooltip \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst TooltipInputs: string[] = [\n  'hidden',\n  'active',\n  'position',\n  'direction',\n  'isTouch',\n  'isMobile',\n];\n\nconst TooltipMethods: string[] = [\n  \n];\n\nconst TooltipOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Tooltip extends Components.VmTooltip {}\n\n@ProxyCmp({\n  inputs: TooltipInputs,\n  methods: TooltipMethods,\n})\n@Component({\n  selector: 'vm-tooltip',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: TooltipInputs,\n  outputs: TooltipOutputs,\n})\nexport class Tooltip {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-tooltip', VmTooltip);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmUi \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst UiInputs: string[] = [\n  'isVideoView',\n  'playsinline',\n  'isFullscreenActive',\n];\n\nconst UiMethods: string[] = [\n  \n];\n\nconst UiOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Ui extends Components.VmUi {}\n\n@ProxyCmp({\n  inputs: UiInputs,\n  methods: UiMethods,\n})\n@Component({\n  selector: 'vm-ui',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: UiInputs,\n  outputs: UiOutputs,\n})\nexport class Ui {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-ui', VmUi);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmVideo,\n  VmFile \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst VideoInputs: string[] = [\n  'willAttach',\n  'hasCustomTextManager',\n  'crossOrigin',\n  'preload',\n  'poster',\n  'controlsList',\n  'autoPiP',\n  'disablePiP',\n  'disableRemotePlayback',\n  'mediaTitle',\n];\n\nconst VideoMethods: string[] = [\n  'getAdapter',\n];\n\nconst VideoOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Video extends Components.VmVideo {}\n\n@ProxyCmp({\n  inputs: VideoInputs,\n  methods: VideoMethods,\n})\n@Component({\n  selector: 'vm-video',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: VideoInputs,\n  outputs: VideoOutputs,\n})\nexport class Video {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-video', VmVideo);\n    define('vm-file', VmFile);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmVimeo,\n  VmEmbed \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst VimeoInputs: string[] = [\n  'videoId',\n  'byline',\n  'color',\n  'portrait',\n  'noAutoAspectRatio',\n  'poster',\n  'cookies',\n  'language',\n  'aspectRatio',\n  'autoplay',\n  'controls',\n  'logger',\n  'loop',\n  'muted',\n  'playsinline',\n];\n\nconst VimeoMethods: string[] = [\n  'getAdapter',\n];\n\nconst VimeoOutputs: string[] = [\n  'vmError',\n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Vimeo extends Components.VmVimeo {}\n\n@ProxyCmp({\n  inputs: VimeoInputs,\n  methods: VimeoMethods,\n})\n@Component({\n  selector: 'vm-vimeo',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: VimeoInputs,\n  outputs: VimeoOutputs,\n})\nexport class Vimeo {\n  protected el: HTMLElement;\n\n  /** Emitted when an error has occurred. */\n  vmError!: Emitter<JSX.VmVimeo[\"onVmError\"]>;\n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-vimeo', VmVimeo);\n    define('vm-embed', VmEmbed);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, ['vmError'])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmVolumeControl,\n  VmControl,\n  VmIcon,\n  VmMuteControl,\n  VmTooltip,\n  VmSlider \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst VolumeControlInputs: string[] = [\n  'lowVolumeIcon',\n  'highVolumeIcon',\n  'mutedIcon',\n  'icons',\n  'tooltipPosition',\n  'tooltipDirection',\n  'hideTooltip',\n  'muteKeys',\n  'noKeyboard',\n  'muted',\n  'volume',\n  'isMobile',\n  'i18n',\n];\n\nconst VolumeControlMethods: string[] = [\n  \n];\n\nconst VolumeControlOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface VolumeControl extends Components.VmVolumeControl {}\n\n@ProxyCmp({\n  inputs: VolumeControlInputs,\n  methods: VolumeControlMethods,\n})\n@Component({\n  selector: 'vm-volume-control',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: VolumeControlInputs,\n  outputs: VolumeControlOutputs,\n})\nexport class VolumeControl {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-volume-control', VmVolumeControl);\n    define('vm-control', VmControl);\n    define('vm-icon', VmIcon);\n    define('vm-mute-control', VmMuteControl);\n    define('vm-tooltip', VmTooltip);\n    define('vm-slider', VmSlider);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { ProxyCmp, initOutputs } from '../lib';\nimport type { JSX, Components } from '@vime/core/dist/types';\n\nimport { \n  VmYoutube,\n  VmEmbed \n} from '@vime/core';\n\nimport { define } from '../lib';\n  \n\nconst YoutubeInputs: string[] = [\n  'cookies',\n  'videoId',\n  'showFullscreenControl',\n  'poster',\n  'language',\n  'autoplay',\n  'controls',\n  'logger',\n  'loop',\n  'muted',\n  'playsinline',\n];\n\nconst YoutubeMethods: string[] = [\n  'getAdapter',\n];\n\nconst YoutubeOutputs: string[] = [\n  \n];\n\nexport type Emitter<T extends ((...args: any[]) => any) | undefined> = EventEmitter<Parameters<Exclude<T, undefined>>[0]>;\n\nexport declare interface Youtube extends Components.VmYoutube {}\n\n@ProxyCmp({\n  inputs: YoutubeInputs,\n  methods: YoutubeMethods,\n})\n@Component({\n  selector: 'vm-youtube',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: YoutubeInputs,\n  outputs: YoutubeOutputs,\n})\nexport class Youtube {\n  protected el: HTMLElement;\n\n  \n\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    define('vm-youtube', VmYoutube);\n    define('vm-embed', VmEmbed);\n    c.detach();\n    this.el = r.nativeElement;\n    initOutputs(this, [])\n  }\n}\n  ","import {\n  PlayerProp,\n  Dispatcher,\n  findPlayer,\n  usePlayerContext,\n  createDispatcher,\n} from '@vime/core';\nimport { ElementRef, Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class VimeComponent {\n  private playerDispatch: Dispatcher = () => {};\n\n  private unbindPlayerContext = () => {};\n\n  private playerCache = new Map<PlayerProp, any>();\n\n  protected player?: HTMLVmPlayerElement;\n\n  protected abstract ref: ElementRef;\n\n  constructor(private readonly playerProps: PlayerProp[]) {\n    playerProps.forEach(prop => {\n      this.playerCache.set(prop, (this as any)[prop]);\n    });\n\n    const props = playerProps.reduce(\n      (prev, prop) => ({\n        ...prev,\n        [prop]: {\n          get() {\n            return (this as any).playerCache.get(prop);\n          },\n          set: (value: any) => {\n            if (this.playerCache.get(prop) !== value) {\n              this.playerDispatch(prop as any, value);\n              this.playerCache.set(prop, value);\n            }\n          },\n        },\n      }),\n      {},\n    );\n\n    Object.defineProperties(this, props);\n  }\n\n  async ngAfterViewInit() {\n    if (!this.ref.nativeElement) return;\n    this.player = await findPlayer(this.ref.nativeElement);\n    if (!this.player) return;\n\n    this.playerDispatch = createDispatcher(this.ref.nativeElement);\n\n    this.unbindPlayerContext = await usePlayerContext(\n      this.ref.nativeElement,\n      this.playerProps,\n      (prop, value) => {\n        this.playerCache.set(prop as any, value);\n        (this as any)[prop] = value;\n      },\n      this.player,\n    );\n  }\n\n  ngOnDestroy() {\n    this.unbindPlayerContext?.();\n    this.playerCache.clear();\n  }\n}\n","\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\nimport { NgModule } from '@angular/core';\n\nimport {\n  Audio,\n  CaptionControl,\n  Captions,\n  ClickToPlay,\n  Control,\n  ControlGroup,\n  ControlSpacer,\n  Controls,\n  CurrentTime,\n  Dailymotion,\n  Dash,\n  DblClickFullscreen,\n  DefaultControls,\n  DefaultSettings,\n  DefaultUi,\n  Embed,\n  EndTime,\n  File,\n  FullscreenControl,\n  Hls,\n  Icon,\n  IconLibrary,\n  LiveIndicator,\n  LoadingScreen,\n  Menu,\n  MenuItem,\n  MenuRadio,\n  MenuRadioGroup,\n  MuteControl,\n  PipControl,\n  PlaybackControl,\n  Player,\n  Poster,\n  Scrim,\n  ScrubberControl,\n  Settings,\n  SettingsControl,\n  Skeleton,\n  Slider,\n  Spinner,\n  Submenu,\n  Time,\n  TimeProgress,\n  Tooltip,\n  Ui,\n  Video,\n  Vimeo,\n  VolumeControl,\n  Youtube,\n} from './components';\n\nconst DECLARATIONS = [\n  Audio,\n  CaptionControl,\n  Captions,\n  ClickToPlay,\n  Control,\n  ControlGroup,\n  ControlSpacer,\n  Controls,\n  CurrentTime,\n  Dailymotion,\n  Dash,\n  DblClickFullscreen,\n  DefaultControls,\n  DefaultSettings,\n  DefaultUi,\n  Embed,\n  EndTime,\n  File,\n  FullscreenControl,\n  Hls,\n  Icon,\n  IconLibrary,\n  LiveIndicator,\n  LoadingScreen,\n  Menu,\n  MenuItem,\n  MenuRadio,\n  MenuRadioGroup,\n  MuteControl,\n  PipControl,\n  PlaybackControl,\n  Player,\n  Poster,\n  Scrim,\n  ScrubberControl,\n  Settings,\n  SettingsControl,\n  Skeleton,\n  Slider,\n  Spinner,\n  Submenu,\n  Time,\n  TimeProgress,\n  Tooltip,\n  Ui,\n  Video,\n  Vimeo,\n  VolumeControl,\n  Youtube,\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  exports: DECLARATIONS,\n  imports: [],\n  providers: [],\n})\nexport class VimeModule {}\n  "]}