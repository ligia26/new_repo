{"version":3,"file":"ngx-qrcode-styling.mjs","sources":["../../../projects/ngx-qrcode-styling/src/lib/ngx-qrcode-styling.templates.ts","../../../projects/ngx-qrcode-styling/src/lib/ngx-qrcode-styling.helper.ts","../../../projects/ngx-qrcode-styling/src/lib/ngx-qrcode-styling.service.ts","../../../projects/ngx-qrcode-styling/src/lib/ngx-qrcode-styling.component.ts","../../../projects/ngx-qrcode-styling/src/lib/ngx-qrcode-styling.module.ts","../../../projects/ngx-qrcode-styling/src/public-api.ts","../../../projects/ngx-qrcode-styling/src/ngx-qrcode-styling.ts"],"sourcesContent":["import { Options } from \"./ngx-qrcode-styling.options\";\r\n\r\nexport const Templates = (name: string) => {\r\n    switch (name) {\r\n        case 'default':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#202020',\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                }\r\n            } as Options;\r\n        case 'ocean':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    type: 'dots',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#36CDA5'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#1582AE'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#0277BD'\r\n                        }]\r\n                    }\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                },\r\n                cornersSquareOptions: {\r\n                    type: 'square'\r\n                }\r\n            } as Options;\r\n        case 'sunflower':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    type: 'dots',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#BB8412'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#4D762E'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#2F702F'\r\n                        }]\r\n                    }\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                },\r\n                cornersDotOptions: {\r\n                    color: '#006B3B',\r\n                    type: 'dot'\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#006B3B',\r\n                    type: 'extra-rounded'\r\n                }\r\n            } as Options;\r\n        case 'luxury':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    type: 'classy-rounded',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#E29C0F'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#913C0C'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#732E0C'\r\n                        }]\r\n                    }\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                },\r\n                cornersDotOptions: {\r\n                    color: '#732E0C',\r\n                    type: 'dot'\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#732E0C',\r\n                    type: 'extra-rounded'\r\n                }\r\n            } as Options;\r\n        case 'bitcoin':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#3a3a3a',\r\n                    type: 'dots'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                },\r\n                cornersDotOptions: {\r\n                    color: '#ff9900'\r\n                },\r\n                cornersSquareOptions: {\r\n                    type: 'extra-rounded'\r\n                }\r\n            } as Options;\r\n        case 'starbucks':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#3a3a3a',\r\n                    type: 'dots'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                },\r\n                cornersDotOptions: {\r\n                    color: '#00643C',\r\n                    type: 'dot'\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#00643C',\r\n                    type: 'extra-rounded'\r\n                }\r\n            } as Options;\r\n        case 'angular':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#c3002f',\r\n                    type: 'dots'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                }\r\n            } as Options;\r\n        case 'facebook':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#4D72A9',\r\n                    type: 'dots'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                }\r\n            } as Options;\r\n        case 'beans':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#416B2C',\r\n                    type: 'dots'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                },\r\n                cornersDotOptions: {\r\n                    color: '#60A541',\r\n                    type: 'dot'\r\n                },\r\n                cornersSquareOptions: {\r\n                    type: 'extra-rounded'\r\n                }\r\n            } as Options;\r\n        case 'green':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#006B3B',\r\n                    type: 'dots'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                },\r\n                cornersDotOptions: {\r\n                    color: '#006B3B',\r\n                    type: 'dot'\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#006B3B',\r\n                    type: 'extra-rounded'\r\n                }\r\n            } as Options;\r\n        case 'sky':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#2c7597',\r\n                    type: 'rounded'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                },\r\n            } as Options;\r\n        case 'mosaic':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    type: 'rounded',\r\n                    gradient: {\r\n                        rotation: 190,\r\n                        type: 'linear',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#0277BD'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#943A40'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#A13535'\r\n                        }]\r\n                    }\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                }\r\n            } as Options;\r\n        case 'coffee':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#5E4F39',\r\n                    type: 'dots'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#FAEDE7\",\r\n                }\r\n            } as Options;\r\n        case 'vintage':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#2D7363',\r\n                    type: 'extra-rounded'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#E7E5C5\",\r\n                },\r\n                cornersDotOptions: {\r\n                    color: '#BE8C49',\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#2D7363',\r\n                }\r\n            } as Options;\r\n        case 'stamp':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#2a3c16',\r\n                    type: 'square'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#9cc66e\",\r\n                },\r\n                cornersDotOptions: {\r\n                    color: '#4c692c',\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#2a3c16',\r\n                }\r\n            } as Options;\r\n        case 'chess':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#F4EAA5',\r\n                    type: 'dots'\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#494B49\",\r\n                }\r\n            } as Options;\r\n        case 'jungle':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    type: 'classy-rounded',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#84b931'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#537234'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#537234'\r\n                        }]\r\n                    }\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#434343',\r\n                    gradient: {\r\n                    type: 'radial',\r\n                    colorStops: [{\r\n                        offset: 0,\r\n                        color: '#84b931'\r\n                    }, {\r\n                        offset: 1,\r\n                        color: '#537234'\r\n                    }, {\r\n                        offset: 2,\r\n                        color: '#537234'\r\n                    }]\r\n                    }\r\n                }\r\n            } as Options;\r\n        case 'arabic':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    type: 'classy-rounded',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#393939'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#393939'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#393939'\r\n                        }]\r\n                    }\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#434343',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#393939'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#72a28b'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#72a28b'\r\n                        }]\r\n                    }\r\n                }\r\n            } as Options;\r\n        case 'tea':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    type: 'extra-rounded',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#72b0b4'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#035558'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#035558'\r\n                        }]\r\n                    }\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#434343',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#72b0b4'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#035558'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#035558'\r\n                        }]\r\n                    }\r\n                }\r\n            } as Options;\r\n        case 'grape':\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    type: 'rounded',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#7076ae'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#2a3240'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#2a3240'\r\n                        }]\r\n                    }\r\n                },\r\n                cornersSquareOptions: {\r\n                    color: '#434343',\r\n                    gradient: {\r\n                        type: 'radial',\r\n                        colorStops: [{\r\n                            offset: 0,\r\n                            color: '#7b7cb5'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#2a3240'\r\n                        }, {\r\n                            offset: 2,\r\n                            color: '#2a3240'\r\n                        }]\r\n                    }\r\n                }\r\n            } as Options;\r\n        default:\r\n            return {\r\n                data: '',\r\n                qrOptions: {\r\n                    errorCorrectionLevel: 'Q'\r\n                },\r\n                dotsOptions: {\r\n                    color: '#202020',\r\n                },\r\n                backgroundOptions: {\r\n                    color: \"#ffffff\",\r\n                }\r\n            } as Options;\r\n    }\r\n}","import QRCodeStyling from 'qr-code-styling';\r\nimport { AsyncSubject } from 'rxjs';\r\n\r\nimport { Options } from './ngx-qrcode-styling.options';\r\nimport { Templates } from './ngx-qrcode-styling.templates';\r\n\r\n/**\r\n * drawQrcode\r\n * @param config \r\n * @param container \r\n * @returns \r\n */\r\nexport function drawQrcode(config: Options, container: HTMLElement | HTMLVideoElement | HTMLCanvasElement | SVGElement | any): AsyncSubject<any> {\r\n\r\n    const subject = new AsyncSubject();\r\n\r\n    // Reject\r\n    if (!config || !container) {\r\n        subject.error('Container or Config not available!');\r\n        subject.complete();\r\n        return subject;\r\n    };\r\n\r\n    const element = document.createElement(\"div\");\r\n\r\n    /**\r\n     * QRCODE_NONE_FRAME\r\n     * @returns \r\n     */\r\n    const QRCODE_NONE_FRAME = () => {\r\n        if (config?.frameOptions) {\r\n            return false;\r\n        } else {\r\n            const encodeConfig = () => {\r\n                let deep = config && JSON.parse(JSON.stringify(config)); // deep\r\n                return Object.assign({ data: (window as any).unescape(encodeURIComponent(deep?.data ?? '')) }, deep);\r\n            }\r\n            // removeChild\r\n            while (container.firstChild) {\r\n                container.removeChild(container.lastChild);\r\n            }\r\n            const CR = new QRCodeStyling(encodeConfig() as Options);\r\n            // append to container\r\n            CR.append(container);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const styleName = config?.frameOptions?.style ?? 'F_020';\r\n    const height = config?.frameOptions?.height ?? 300;\r\n    const width = config?.frameOptions?.width ?? 300;\r\n    const x = config?.frameOptions?.x ?? 50;\r\n    const y = config?.frameOptions?.y ?? 50;\r\n\r\n    /**\r\n     * ADD_FRAME_SVG_TO_ELEMENT\r\n     * @returns\r\n     */\r\n    const ADD_FRAME_SVG_TO_ELEMENT = () => {\r\n        const http = fetch(`https://cdn.jsdelivr.net/gh/id1945/ngx-qrcode-styling/svg/1.2.9/${styleName}.svg`, { method: 'GET' })\r\n        return new Promise((resolve, reject) => {\r\n            http.then(response => response.text()).then(result => {\r\n                if (result !== \"404: Not Found\") {\r\n                    upgradeSvg(result);\r\n                }\r\n                resolve(result);\r\n            }).catch(error => {\r\n                console.error(error);\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    const upgradeSvg = (result: string) => {\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(result, \"image/svg+xml\");\r\n        if (doc) {\r\n            const svgEl = (doc.documentElement.children as any)[styleName + '_svg'];\r\n            if (!svgEl) return;\r\n            const textEls = svgEl.getElementsByClassName(\"frame-text\");\r\n            const contentEls = svgEl.getElementsByClassName(\"frame-content\");\r\n            const containerEls = svgEl.getElementsByClassName(\"frame-container\");\r\n            config?.frameOptions?.background && svgEl.setAttribute('style',`background: ${config?.frameOptions?.background};${svgEl?.getAttribute('style')}`);\r\n            const updateStyle = (el: any, config: any) => {\r\n                if (el) {\r\n                    for (const key in config) {\r\n                        if ((['x', 'y', 'transform'] as any).includes(key)) {\r\n                            el.setAttribute(key, config && config[key]);\r\n                        } else if ((['textContent'] as any).includes(key)) {\r\n                            el[key] = config && config[key];\r\n                        } else {\r\n                            el.style[key] = config && config[key];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const createElementNS = (config: any) => {\r\n                const svgNS = \"http://www.w3.org/2000/svg\";\r\n                const newText = document.createElementNS(svgNS, \"text\");\r\n                updateStyle(newText, config);\r\n                svgEl.appendChild(newText);\r\n            }\r\n\r\n            if (config?.frameOptions?.texts) {\r\n                [...config.frameOptions.texts].forEach((text: any, i: any) => {\r\n                    const el = [...textEls]?.[i];\r\n                    el ? updateStyle(el, text) : createElementNS(text);\r\n                });\r\n            }\r\n\r\n            if (config?.frameOptions?.containers) {\r\n                [...containerEls].forEach((el: any, i: any) => {\r\n                    updateStyle(el, config?.frameOptions?.containers?.[i]);\r\n                });\r\n            }\r\n\r\n            if (config?.frameOptions?.contents) {\r\n                [...contentEls].forEach((el: any, i: any) => {\r\n                    updateStyle(el, config?.frameOptions?.contents?.[i]);\r\n                });\r\n            }\r\n\r\n            element.appendChild(doc.documentElement);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * UPDATE_POSITION_QRCODE_ON_FRAME\r\n     * @returns HTMLElement\r\n     */\r\n    const UPDATE_POSITION_QRCODE_ON_FRAME = () => {\r\n        const after = element.querySelector('.ngx_qrcode_styling_after');\r\n        if (after && config?.zIndex === 1) {\r\n            after?.setAttribute(\"transform\", `translate(${x},${y})`);\r\n            return after as HTMLElement;\r\n        }\r\n        const before = element.querySelector('.ngx_qrcode_styling_before');\r\n        before?.setAttribute(\"transform\", `translate(${x},${y})`);\r\n        return before as HTMLElement;\r\n    }\r\n\r\n    /**\r\n     * UPDATE_ROTATE_SCALE_QRCODE_ON_FRAME\r\n     * @param svg\r\n     * @returns void\r\n     */\r\n    const UPDATE_ROTATE_SCALE_QRCODE_ON_FRAME = (svg: HTMLElement) => {\r\n        if (svg && config?.rotate) {\r\n            svg?.childNodes?.[0]?.childNodes?.forEach((node: any) => {\r\n                if (node.nodeName === 'rect') {\r\n                    node.style.transformOrigin = `50% 50%`;\r\n                    node.style.transform = `rotate(${config?.rotate ?? 0}deg)`;\r\n                }\r\n            });\r\n        }\r\n        if (svg && config?.scale) {\r\n            svg?.childNodes?.[0]?.childNodes?.forEach((node: any) => {\r\n                if (node.nodeName === 'rect') {\r\n                    node.style.scale = config?.scale ?? 0;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * CREATE_QRCODE_INTO_FRAME\r\n     * @param addsvg \r\n     * @returns \r\n     */\r\n    const CREATE_QRCODE_INTO_FRAME = (addsvg: HTMLElement) => {\r\n        const defaultConfig = () => {\r\n            let deep = config && JSON.parse(JSON.stringify(config)); // deep\r\n            deep = { ...deep, ...{ type: 'svg', data: (window as any).unescape(encodeURIComponent(deep?.data ?? '')) } };\r\n            delete deep.frameOptions;\r\n            delete deep.template;\r\n            return deep;\r\n        }\r\n        // removeChild\r\n        while (container?.firstChild) {\r\n            container.removeChild(container.lastChild);\r\n        }\r\n        const CR = new QRCodeStyling(defaultConfig() as Options);\r\n        return CR?._svgDrawingPromise?.then(() => {\r\n            CR.append(addsvg);\r\n        }).catch((error: any) => console.error(error))\r\n    }\r\n\r\n    /**\r\n     * QRCODE_TYPE_SVG\r\n     * @returns \r\n     */\r\n    const QRCODE_TYPE_SVG = () => {\r\n        if (config?.type === 'svg') {\r\n            UPDATE_SIZE_SVG();\r\n            container.appendChild(element);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * CREATE_CANVAS_WITH_SIZE\r\n     * @returns \r\n     */\r\n    const CREATE_CANVAS_WITH_SIZE = () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = height;\r\n        canvas.width = width;\r\n        container.appendChild(canvas);\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     * ELEMENT_CONVERT_TO_BASE64\r\n     * @param s1 \r\n     * @returns \r\n     */\r\n    const ELEMENT_CONVERT_TO_BASE64 = (s1: HTMLElement) => {\r\n        let b64 = \"data:image/svg+xml;base64,\";\r\n        const xml = s1 && new XMLSerializer().serializeToString(s1);\r\n        return b64 += xml && btoa(unescape(encodeURIComponent(xml)));\r\n    }\r\n\r\n    /**\r\n     * UPDATE_SIZE_SVG\r\n     * @returns \r\n     */\r\n    const UPDATE_SIZE_SVG = () => {\r\n        const s1 = element.querySelector(`#${styleName}_svg`);\r\n        s1 && s1.setAttribute('height', `${height}px`);\r\n        s1 && s1.setAttribute('width', `${width}px`);\r\n        return s1 as HTMLElement;\r\n    }\r\n\r\n    /**\r\n     * BASE64_TO_BLOB\r\n     * @param base64Image \r\n     * @returns \r\n     */\r\n    const BASE64_TO_BLOB = (base64Image: string) => {\r\n        // Split into two parts\r\n        const parts = base64Image.split(\";base64,\");\r\n        // Hold the content type\r\n        const imageType = parts[0].split(\":\")[1];\r\n        // Decode Base64 string\r\n        const decodedData = window.atob(parts[1]);\r\n        // Create UNIT8ARRAY of size same as row data length\r\n        const uInt8Array = new Uint8Array(decodedData.length);\r\n        // Insert all character code into uInt8Array\r\n        for (let i = 0; i < decodedData.length; ++i) {\r\n            uInt8Array[i] = decodedData.charCodeAt(i);\r\n        }\r\n        // Return BLOB image after conversion\r\n        return new Blob([uInt8Array], { type: imageType });\r\n    }\r\n\r\n    /**\r\n     * CREATE_IMAGE\r\n     */\r\n    const CREATE_IMAGE = () => {\r\n        const img = new Image();\r\n        const ctx = CREATE_CANVAS_WITH_SIZE().getContext(\"2d\");\r\n        img.onload = function () {\r\n            ctx && ctx.drawImage(img, 0, 0);\r\n        };\r\n        const blob = BASE64_TO_BLOB(ELEMENT_CONVERT_TO_BASE64(UPDATE_SIZE_SVG()));\r\n        const blobUrl = URL.createObjectURL(blob);\r\n        img.src = blobUrl;\r\n    }\r\n\r\n    /**\r\n     * MAIN\r\n     */\r\n    (async function () {\r\n        if (QRCODE_NONE_FRAME()) {\r\n            subject.next({ config, container });\r\n            subject.complete();\r\n            return // Mode qrcode basic\r\n        } else {\r\n            await ADD_FRAME_SVG_TO_ELEMENT();\r\n            const ADDSVG = UPDATE_POSITION_QRCODE_ON_FRAME();\r\n            await CREATE_QRCODE_INTO_FRAME(ADDSVG);\r\n            UPDATE_ROTATE_SCALE_QRCODE_ON_FRAME(ADDSVG);\r\n            if (QRCODE_TYPE_SVG()) {\r\n                // Mode qrcode + frame type svg\r\n                subject.next({ config, container });\r\n                subject.complete();\r\n            } else {\r\n                // Mode qrcode + frame type canvas\r\n                CREATE_IMAGE();\r\n                subject.next({ config, container });\r\n                subject.complete();\r\n            }\r\n        }\r\n    })();\r\n\r\n    return subject;\r\n}\r\n\r\n\r\n/**\r\n * defaultTemplate\r\n * @param config \r\n * @returns \r\n */\r\nexport const defaultTemplate = (config?: Options): Options => {\r\n    let deep = config && JSON.parse(JSON.stringify(config));\r\n    return config?.template ? { ...Templates(config.template.toLocaleLowerCase()), ...deep } : deep;\r\n};\r\n\r\n/**\r\n * deepUpdate\r\n * @param config \r\n * @param configUpdate \r\n * @returns \r\n */\r\nexport const deepUpdate = async (config: Options, configUpdate: Options): Promise<Options> => {\r\n    const origin = config && JSON.parse(JSON.stringify(config));\r\n    let clone = { ...origin, ...configUpdate };\r\n    const keys = ['frameOptions', 'qrOptions', 'imageOptions', 'dotsOptions', 'cornersSquareOptions', 'cornersDotOptions', 'backgroundOptions'];\r\n    for await (const key of keys) {\r\n        if (key in configUpdate) {\r\n            const update = {\r\n                [key]: { ...origin[key], ...(configUpdate as any)[key] }\r\n            };\r\n            clone = { ...clone, ...update };\r\n        }\r\n    }\r\n    return clone;\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { AsyncSubject } from 'rxjs';\r\n\r\nimport { deepUpdate, defaultTemplate, drawQrcode } from './ngx-qrcode-styling.helper';\r\nimport { Options } from './ngx-qrcode-styling.options';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxQrcodeStylingService {\r\n\r\n  /**\r\n   * create\r\n   * @param config \r\n   * @param container \r\n   * @returns \r\n   */\r\n  public create(config: Options, container: HTMLElement | HTMLVideoElement | HTMLCanvasElement | SVGElement | any): AsyncSubject<any> {\r\n    return drawQrcode(defaultTemplate(config), container);\r\n  }\r\n\r\n  /**\r\n   * update\r\n   * @param config \r\n   * @param configUpdate \r\n   * @param container \r\n   * @returns \r\n   */\r\n  public update(config: Options, configUpdate: Options, container: HTMLElement | HTMLVideoElement | HTMLCanvasElement | SVGElement | any): AsyncSubject<any> {\r\n    const subject = new AsyncSubject();\r\n    (async function () {\r\n      const conf = await deepUpdate(defaultTemplate(config), defaultTemplate(configUpdate));\r\n      drawQrcode(conf, container).subscribe(s => {\r\n        subject.next(s);\r\n        subject.complete();\r\n      });\r\n    })();\r\n    return subject;\r\n  }\r\n\r\n  /**\r\n   * download image\r\n   * @param fileName eg: demo.png\r\n   * @param container \r\n   * @param timeout \r\n   * @returns \r\n   */\r\n  public download(container: HTMLElement | HTMLVideoElement | HTMLCanvasElement | SVGElement | any, fileName = '', timeout = 0): AsyncSubject<any> {\r\n    const subject = new AsyncSubject();\r\n\r\n    const _fileName = (type: string) => {\r\n      if (!fileName) {\r\n        fileName = `ngx_qrcode_styling_${Date.now()}.${type}`\r\n      }\r\n    }\r\n\r\n    const _download = (dataURL: string) => {\r\n      const link = document.createElement('a');\r\n      link.download = fileName;\r\n      link.href = dataURL;\r\n      link.click();\r\n      link.remove();\r\n    }\r\n\r\n    const _complete = (url: string) => {\r\n      if (url) {\r\n        _download(url);\r\n        subject.next({ fileName, container, url: url });\r\n        subject.complete();\r\n      } else {\r\n        subject.error('Container not found!');\r\n        subject.complete();\r\n      }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      const canvas = container?.querySelector('canvas');\r\n      if (canvas) {\r\n        _fileName('png');\r\n        const typeImg = fileName ? fileName?.split('.')?.slice(-1)?.toString() : 'png';\r\n        canvas.toBlob((blob: any) => _complete(URL.createObjectURL(blob)), 'image/' + typeImg);\r\n      } else {\r\n        const svg = container?.querySelector('svg');\r\n        if (svg) {\r\n          _fileName('svg');\r\n          const svgData = svg.outerHTML;\r\n          const svgBlob = new Blob([svgData], { type: \"image/svg+xml;charset=utf-8\" });\r\n          const svgUrl = URL.createObjectURL(svgBlob);\r\n          _complete(svgUrl);\r\n        } else {\r\n          _complete('');\r\n        }\r\n      }\r\n    }, timeout);\r\n    return subject;\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AsyncSubject } from 'rxjs';\r\n\r\nimport {\r\n  CornerDotType,\r\n  CornerSquareType,\r\n  DotType,\r\n  DrawType,\r\n  ErrorCorrectionLevel,\r\n  FrameStyle,\r\n  Gradient,\r\n  Mode,\r\n  Options,\r\n  ShapeType,\r\n  TemplateType,\r\n  TypeNumber,\r\n  UnknownObject,\r\n} from './ngx-qrcode-styling.options';\r\nimport { NgxQrcodeStylingService } from './ngx-qrcode-styling.service';\r\n\r\n@Component({\r\n  selector: 'ngx-qrcode-styling',\r\n  template: '<ng-content></ng-content>',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxQrcodeStylingComponent implements OnInit {\r\n\r\n  /**\r\n   * Options\r\n   */\r\n  @Input()\r\n  public config!: Options;\r\n\r\n  /**\r\n   * TemplateType\r\n   */\r\n  @Input()\r\n  public template: TemplateType = 'default';\r\n\r\n  /**\r\n   * DrawType\r\n   */\r\n  @Input()\r\n  public type!: DrawType;\r\n\r\n  /**\r\n   * ShapeType\r\n   */\r\n  @Input()\r\n  public shape!: ShapeType;\r\n\r\n  /**\r\n   * number\r\n   */\r\n  @Input()\r\n  public width!: number;\r\n\r\n  /**\r\n   * number\r\n   */\r\n  @Input()\r\n  public height!: number;\r\n\r\n  /**\r\n   * number\r\n   */\r\n  @Input()\r\n  public margin!: number;\r\n\r\n  /**\r\n   * string\r\n   */\r\n  @Input()\r\n  public data!: string;\r\n\r\n  /**\r\n   * string\r\n   */\r\n  @Input()\r\n  public image!: string;\r\n\r\n  /**\r\n   * number\r\n   */\r\n  @Input()\r\n  public scale: number = 0;\r\n\r\n  /**\r\n   * number\r\n   */\r\n  @Input()\r\n  public rotate: number = 0;\r\n\r\n  /**\r\n   * number\r\n   */\r\n  @Input()\r\n  public zIndex: 1 | 2 = 2;\r\n\r\n  /**\r\n   * object\r\n   */\r\n  @Input()\r\n  public frameOptions!: {\r\n    style?: FrameStyle;\r\n    height?: number;\r\n    width?: number;\r\n    x?: number;\r\n    y?: number;\r\n    background?: string;\r\n    texts?: UnknownObject[];\r\n    contents?: UnknownObject[];\r\n    containers?: UnknownObject[];\r\n  };\r\n\r\n  /**\r\n   * object\r\n   */\r\n  @Input()\r\n  qrOptions!: {\r\n    typeNumber?: TypeNumber;\r\n    mode?: Mode;\r\n    errorCorrectionLevel?: ErrorCorrectionLevel;\r\n  };\r\n\r\n  /**\r\n   * object\r\n   */\r\n  @Input()\r\n  imageOptions!: {\r\n    hideBackgroundDots?: boolean;\r\n    imageSize?: number;\r\n    crossOrigin?: string;\r\n    margin?: number;\r\n  };\r\n\r\n  /**\r\n   * object\r\n   */\r\n  @Input()\r\n  dotsOptions!: {\r\n    type?: DotType;\r\n    color?: string;\r\n    gradient?: Gradient;\r\n  };\r\n\r\n  /**\r\n   * object\r\n   */\r\n  @Input()\r\n  cornersSquareOptions!: {\r\n    type?: CornerSquareType;\r\n    color?: string;\r\n    gradient?: Gradient;\r\n  };\r\n\r\n  /**\r\n   * object\r\n   */\r\n  @Input()\r\n  cornersDotOptions!: {\r\n    type?: CornerDotType;\r\n    color?: string;\r\n    gradient?: Gradient;\r\n  };\r\n\r\n  /**\r\n   * object\r\n   */\r\n  @Input()\r\n  backgroundOptions!: {\r\n    round?: number;\r\n    color?: string;\r\n    gradient?: Gradient;\r\n  };\r\n\r\n  constructor(\r\n    private canvas: ElementRef,\r\n    private service: NgxQrcodeStylingService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.canvas) {\r\n\r\n      /**\r\n       * @Input override\r\n       */\r\n      if (this.template)\r\n        this.config = {\r\n          ...this.config,\r\n          template: this.template\r\n        };\r\n\r\n      if (this.type)\r\n        this.config = {\r\n          ...this.config,\r\n          type: this.type\r\n        };\r\n\r\n      if (this.shape)\r\n        this.config = {\r\n          ...this.config,\r\n          shape: this.shape\r\n        };\r\n\r\n      if (this.width)\r\n        this.config = {\r\n          ...this.config,\r\n          width: this.width\r\n        };\r\n\r\n      if (this.height)\r\n        this.config = {\r\n          ...this.config,\r\n          height: this.height\r\n        };\r\n\r\n      if (this.margin)\r\n        this.config = {\r\n          ...this.config,\r\n          margin: this.margin\r\n        };\r\n\r\n      if (this.data)\r\n        this.config = {\r\n          ...this.config,\r\n          data: this.data\r\n        };\r\n\r\n      if (this.image)\r\n        this.config = {\r\n          ...this.config,\r\n          image: this.image\r\n        };\r\n\r\n      if (this.scale)\r\n        this.config = {\r\n          ...this.config,\r\n          scale: this.scale\r\n        };\r\n\r\n      if (this.rotate)\r\n        this.config = {\r\n          ...this.config,\r\n          rotate: this.rotate\r\n        };\r\n\r\n      if (this.zIndex)\r\n        this.config = {\r\n          ...this.config,\r\n          zIndex: this.zIndex\r\n        };\r\n\r\n      if (this.frameOptions)\r\n        this.config = {\r\n          ...this.config,\r\n          frameOptions: this.frameOptions\r\n        };\r\n\r\n      if (this.qrOptions)\r\n        this.config = {\r\n          ...this.config,\r\n          qrOptions: this.qrOptions\r\n        };\r\n\r\n      if (this.imageOptions)\r\n        this.config = {\r\n          ...this.config,\r\n          imageOptions: this.imageOptions\r\n        };\r\n\r\n      if (this.dotsOptions)\r\n        this.config = {\r\n          ...this.config,\r\n          dotsOptions: this.dotsOptions\r\n        };\r\n\r\n      if (this.cornersSquareOptions)\r\n        this.config = {\r\n          ...this.config,\r\n          cornersSquareOptions: this.cornersSquareOptions\r\n        };\r\n\r\n      if (this.cornersDotOptions)\r\n        this.config = {\r\n          ...this.config,\r\n          cornersDotOptions: this.cornersDotOptions\r\n        };\r\n\r\n      if (this.backgroundOptions)\r\n        this.config = {\r\n          ...this.config,\r\n          backgroundOptions: this.backgroundOptions\r\n        };\r\n\r\n      this.create(this.config);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create\r\n   * @param config \r\n   * @returns \r\n   */\r\n  public create(config: Options): AsyncSubject<any> {\r\n    return this.service.create(config, this.canvas.nativeElement);\r\n  }\r\n\r\n  /**\r\n   * update\r\n   * @param config \r\n   * @param configUpdate \r\n   * @returns \r\n   */\r\n  public update(config: Options, configUpdate: Options): AsyncSubject<any> {\r\n    return this.service.update(config, configUpdate, this.canvas.nativeElement);\r\n  }\r\n\r\n  /**\r\n   * download image\r\n   * @param fileName eg: demo.png\r\n   * @param timeout \r\n   * @returns \r\n   */\r\n  public download(fileName?: string, timeout = 0): AsyncSubject<any> {\r\n    return this.service.download(this.canvas.nativeElement, fileName, timeout);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxQrcodeStylingComponent } from './ngx-qrcode-styling.component';\r\nimport { NgxQrcodeStylingService } from './ngx-qrcode-styling.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxQrcodeStylingComponent\r\n  ],\r\n  exports: [\r\n    NgxQrcodeStylingComponent\r\n  ],\r\n  providers: [\r\n    NgxQrcodeStylingService\r\n  ]\r\n})\r\nexport class NgxQrcodeStylingModule { }\r\n","/*\r\n * Public API Surface of ngx-qrcode-styling\r\n */\r\n\r\nexport * from './lib/ngx-qrcode-styling.templates';\r\nexport * from './lib/ngx-qrcode-styling.options';\r\nexport * from './lib/ngx-qrcode-styling.service';\r\nexport * from './lib/ngx-qrcode-styling.component';\r\nexport * from './lib/ngx-qrcode-styling.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NgxQrcodeStylingService"],"mappings":"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"}