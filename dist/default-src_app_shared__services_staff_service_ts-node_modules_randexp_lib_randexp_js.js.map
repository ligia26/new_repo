{"version":3,"file":"default-src_app_shared__services_staff_service_ts-node_modules_randexp_lib_randexp_js.js","mappings":";;;;;;;;;;;;;;;;;AAA2C;AACK;AAKzC,IAAME,YAAY,GAAlB,MAAMA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,iBAAiB,CAACC,IAAY,EAAEC,IAAY,EAAEC,IAAa,EAAEC,GAAY,EAAEC,OAAgB;IACzF,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,qCAAqC,GAAGL,IAAI,GAAG,QAAQ,GAAGC,IAAI,GAAG,QAAQ,GAAGC,IAAI,GAAG,OAAO,GAAGC,GAAG,EAAEC,OAAO,CAAC;EAClI;EAEAE,WAAW,CAACC,MAAc;IACxB,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,iCAAiC,GAAGD,MAAM,CAAC;EAClE;EAEAE,UAAU,CAACF,MAAc,EAAEG,OAAe;IACxC,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,gCAAgC,GAAGJ,MAAM,EAAEG,OAAO,CAAC;EAC1E;EAEAE,OAAO,CAACF,OAAe;IACrB,OAAO,IAAI,CAACZ,IAAI,CAACO,IAAI,CAAC,qBAAqB,EAAEK,OAAO,CAAC;EACvD;EAEAG,UAAU,CAACN,MAAc;IACvB,OAAO,IAAI,CAACT,IAAI,CAACgB,MAAM,CAAC,gCAAgC,GAAGP,MAAM,CAAC;EACpE;EAEAQ,kBAAkB,CAACR,MAAc,EAAES,QAAgB;IACjD,OAAO,IAAI,CAAClB,IAAI,CAACa,GAAG,CAAC,wCAAwC,GAAGJ,MAAM,EAAES,QAAQ,CAAC;EACnF;EAEAC,kBAAkB,CAACC,YAAqB,EAAEC,MAAgB;IACxD,OAAO,IAAI,CAACrB,IAAI,CAACa,GAAG,CAAC,8CAA8C,GAAGO,YAAY,GAAG,UAAU,GAAGC,MAAM,EAAE,EAAE,CAAC;EAC/G;EAEAC,iBAAiB,CAACb,MAAgB,EAAEc,KAAe;IACjD,OAAO,IAAI,CAACvB,IAAI,CAACa,GAAG,CAAC,uCAAuC,GAAGJ,MAAM,GAAI,SAAS,GAAGc,KAAK,EAAE,EAAE,CAAC;EACjG;EAEAC,qBAAqB,CAACf,MAAc;IAClC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,2CAA2C,GAAGD,MAAM,CAAC;EAC5E;EAAC;;;;AAtCUX,YAAY,sDAHxBF,yDAAU,CAAC;EACV6B,UAAU,EAAE;CACb,CAAC,GACW3B,YAAY,CAwCxB;;;;;;;;;;;;AC9CY;;AACb;;AAGA;AACA,MAAM4B,QAAQ,CAAC;EACX3B,WAAW,CAAC4B,GAAG,EAAEC,IAAI,EAAE;IACnB,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAG,CAAC,GAAGD,IAAI,GAAGD,GAAG;EAChC;EAEAG,QAAQ,CAACC,KAAK,EAAE;IACZ,OAAO,EAAE,IAAI,CAACH,IAAI,GAAGG,KAAK,CAACJ,GAAG,IAAI,IAAI,CAACA,GAAG,GAAGI,KAAK,CAACH,IAAI,CAAC;EAC5D;EAEAI,OAAO,CAACD,KAAK,EAAE;IACX,OAAO,EAAE,IAAI,CAACH,IAAI,GAAG,CAAC,GAAGG,KAAK,CAACJ,GAAG,IAAI,IAAI,CAACA,GAAG,GAAG,CAAC,GAAGI,KAAK,CAACH,IAAI,CAAC;EACpE;;EAEA;EACAK,GAAG,CAACF,KAAK,EAAE;IACP,OAAO,IAAIL,QAAQ,CACfQ,IAAI,CAACC,GAAG,CAAC,IAAI,CAACR,GAAG,EAAEI,KAAK,CAACJ,GAAG,CAAC,EAC7BO,IAAI,CAACE,GAAG,CAAC,IAAI,CAACR,IAAI,EAAEG,KAAK,CAACH,IAAI,CAAC,CAClC;EACL;;EAEA;EACA;EACAS,QAAQ,CAACN,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACJ,GAAG,IAAI,IAAI,CAACA,GAAG,IAAII,KAAK,CAACH,IAAI,IAAI,IAAI,CAACA,IAAI,EAAE;MAClD,OAAO,EAAE;IACb,CAAC,MAAM,IAAIG,KAAK,CAACJ,GAAG,GAAG,IAAI,CAACA,GAAG,IAAII,KAAK,CAACH,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;MACvD,OAAO,CACH,IAAIF,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAEI,KAAK,CAACJ,GAAG,GAAG,CAAC,CAAC,EACrC,IAAID,QAAQ,CAACK,KAAK,CAACH,IAAI,GAAG,CAAC,EAAE,IAAI,CAACA,IAAI,CAAC,CAC1C;IACL,CAAC,MAAM,IAAIG,KAAK,CAACJ,GAAG,IAAI,IAAI,CAACA,GAAG,EAAE;MAC9B,OAAO,CAAC,IAAID,QAAQ,CAACK,KAAK,CAACH,IAAI,GAAG,CAAC,EAAE,IAAI,CAACA,IAAI,CAAC,CAAC;IACpD,CAAC,MAAM;MACH,OAAO,CAAC,IAAIF,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAEI,KAAK,CAACJ,GAAG,GAAG,CAAC,CAAC,CAAC;IAClD;EACJ;EAEAW,QAAQ,GAAG;IACP,OAAO,IAAI,CAACX,GAAG,IAAI,IAAI,CAACC,IAAI,GACxB,IAAI,CAACD,GAAG,CAACW,QAAQ,EAAE,GAAG,IAAI,CAACX,GAAG,GAAG,GAAG,GAAG,IAAI,CAACC,IAAI;EACxD;AACJ;AAGA,MAAMW,MAAM,CAAC;EACTxC,WAAW,CAACyC,CAAC,EAAEC,CAAC,EAAE;IACd,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACb,MAAM,GAAG,CAAC;IACf,IAAIW,CAAC,IAAI,IAAI,EAAE,IAAI,CAACP,GAAG,CAACO,CAAC,EAAEC,CAAC,CAAC;EACjC;EAEAE,cAAc,GAAG;IACb,IAAI,CAACd,MAAM,GAAG,IAAI,CAACa,MAAM,CAACE,MAAM,CAAC,CAACC,QAAQ,EAAEd,KAAK,KAAK;MAClD,OAAOc,QAAQ,GAAGd,KAAK,CAACF,MAAM;IAClC,CAAC,EAAE,CAAC,CAAC;EACT;EAEAI,GAAG,CAACO,CAAC,EAAEC,CAAC,EAAE;IACN,IAAIK,IAAI,GAAIC,QAAQ,IAAK;MACrB,IAAIC,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAG,IAAI,CAACN,MAAM,CAACb,MAAM,IAAI,CAACkB,QAAQ,CAACf,OAAO,CAAC,IAAI,CAACU,MAAM,CAACM,CAAC,CAAC,CAAC,EAAE;QAChEA,CAAC,EAAE;MACP;MACA,IAAIC,SAAS,GAAG,IAAI,CAACP,MAAM,CAACQ,KAAK,CAAC,CAAC,EAAEF,CAAC,CAAC;MACvC,OAAOA,CAAC,GAAG,IAAI,CAACN,MAAM,CAACb,MAAM,IAAIkB,QAAQ,CAACf,OAAO,CAAC,IAAI,CAACU,MAAM,CAACM,CAAC,CAAC,CAAC,EAAE;QAC/DD,QAAQ,GAAGA,QAAQ,CAACd,GAAG,CAAC,IAAI,CAACS,MAAM,CAACM,CAAC,CAAC,CAAC;QACvCA,CAAC,EAAE;MACP;MACAC,SAAS,CAACE,IAAI,CAACJ,QAAQ,CAAC;MACxB,IAAI,CAACL,MAAM,GAAGO,SAAS,CAACG,MAAM,CAAC,IAAI,CAACV,MAAM,CAACQ,KAAK,CAACF,CAAC,CAAC,CAAC;MACpD,IAAI,CAACL,cAAc,EAAE;IACzB,CAAC;IAED,IAAIH,CAAC,YAAYD,MAAM,EAAE;MACrBC,CAAC,CAACE,MAAM,CAACW,OAAO,CAACP,IAAI,CAAC;IAC1B,CAAC,MAAM;MACH,IAAIL,CAAC,IAAI,IAAI,EAAEA,CAAC,GAAGD,CAAC;MACpBM,IAAI,CAAC,IAAIpB,QAAQ,CAACc,CAAC,EAAEC,CAAC,CAAC,CAAC;IAC5B;IACA,OAAO,IAAI;EACf;EAEAJ,QAAQ,CAACG,CAAC,EAAEC,CAAC,EAAE;IACX,IAAIa,SAAS,GAAIP,QAAQ,IAAK;MAC1B,IAAIC,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAG,IAAI,CAACN,MAAM,CAACb,MAAM,IAAI,CAACkB,QAAQ,CAACjB,QAAQ,CAAC,IAAI,CAACY,MAAM,CAACM,CAAC,CAAC,CAAC,EAAE;QACjEA,CAAC,EAAE;MACP;MACA,IAAIC,SAAS,GAAG,IAAI,CAACP,MAAM,CAACQ,KAAK,CAAC,CAAC,EAAEF,CAAC,CAAC;MACvC,OAAOA,CAAC,GAAG,IAAI,CAACN,MAAM,CAACb,MAAM,IAAIkB,QAAQ,CAACjB,QAAQ,CAAC,IAAI,CAACY,MAAM,CAACM,CAAC,CAAC,CAAC,EAAE;QAChEC,SAAS,GAAGA,SAAS,CAACG,MAAM,CAAC,IAAI,CAACV,MAAM,CAACM,CAAC,CAAC,CAACX,QAAQ,CAACU,QAAQ,CAAC,CAAC;QAC/DC,CAAC,EAAE;MACP;MACA,IAAI,CAACN,MAAM,GAAGO,SAAS,CAACG,MAAM,CAAC,IAAI,CAACV,MAAM,CAACQ,KAAK,CAACF,CAAC,CAAC,CAAC;MACpD,IAAI,CAACL,cAAc,EAAE;IACzB,CAAC;IAED,IAAIH,CAAC,YAAYD,MAAM,EAAE;MACrBC,CAAC,CAACE,MAAM,CAACW,OAAO,CAACC,SAAS,CAAC;IAC/B,CAAC,MAAM;MACH,IAAIb,CAAC,IAAI,IAAI,EAAEA,CAAC,GAAGD,CAAC;MACpBc,SAAS,CAAC,IAAI5B,QAAQ,CAACc,CAAC,EAAEC,CAAC,CAAC,CAAC;IACjC;IACA,OAAO,IAAI;EACf;EAEAc,SAAS,CAACf,CAAC,EAAEC,CAAC,EAAE;IACZ,IAAIQ,SAAS,GAAG,EAAE;IAClB,IAAIO,UAAU,GAAIT,QAAQ,IAAK;MAC3B,IAAIC,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAG,IAAI,CAACN,MAAM,CAACb,MAAM,IAAI,CAACkB,QAAQ,CAACjB,QAAQ,CAAC,IAAI,CAACY,MAAM,CAACM,CAAC,CAAC,CAAC,EAAE;QACjEA,CAAC,EAAE;MACP;MACA,OAAOA,CAAC,GAAG,IAAI,CAACN,MAAM,CAACb,MAAM,IAAIkB,QAAQ,CAACjB,QAAQ,CAAC,IAAI,CAACY,MAAM,CAACM,CAAC,CAAC,CAAC,EAAE;QAChE,IAAIrB,GAAG,GAAGO,IAAI,CAACE,GAAG,CAAC,IAAI,CAACM,MAAM,CAACM,CAAC,CAAC,CAACrB,GAAG,EAAEoB,QAAQ,CAACpB,GAAG,CAAC;QACpD,IAAIC,IAAI,GAAGM,IAAI,CAACC,GAAG,CAAC,IAAI,CAACO,MAAM,CAACM,CAAC,CAAC,CAACpB,IAAI,EAAEmB,QAAQ,CAACnB,IAAI,CAAC;QACvDqB,SAAS,CAACE,IAAI,CAAC,IAAIzB,QAAQ,CAACC,GAAG,EAAEC,IAAI,CAAC,CAAC;QACvCoB,CAAC,EAAE;MACP;IACJ,CAAC;IAED,IAAIR,CAAC,YAAYD,MAAM,EAAE;MACrBC,CAAC,CAACE,MAAM,CAACW,OAAO,CAACG,UAAU,CAAC;IAChC,CAAC,MAAM;MACH,IAAIf,CAAC,IAAI,IAAI,EAAEA,CAAC,GAAGD,CAAC;MACpBgB,UAAU,CAAC,IAAI9B,QAAQ,CAACc,CAAC,EAAEC,CAAC,CAAC,CAAC;IAClC;IACA,IAAI,CAACC,MAAM,GAAGO,SAAS;IACvB,IAAI,CAACN,cAAc,EAAE;IACrB,OAAO,IAAI;EACf;EAEAc,KAAK,CAACA,KAAK,EAAE;IACT,IAAIT,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAG,IAAI,CAACN,MAAM,CAACb,MAAM,IAAI,IAAI,CAACa,MAAM,CAACM,CAAC,CAAC,CAACnB,MAAM,IAAI4B,KAAK,EAAE;MAC7DA,KAAK,IAAI,IAAI,CAACf,MAAM,CAACM,CAAC,CAAC,CAACnB,MAAM;MAC9BmB,CAAC,EAAE;IACP;IACA,OAAO,IAAI,CAACN,MAAM,CAACM,CAAC,CAAC,CAACrB,GAAG,GAAG8B,KAAK;EACrC;EAEAnB,QAAQ,GAAG;IACP,OAAO,IAAI,GAAG,IAAI,CAACI,MAAM,CAACgB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;EAC/C;EAEAC,KAAK,GAAG;IACJ,OAAO,IAAIpB,MAAM,CAAC,IAAI,CAAC;EAC3B;EAEAqB,OAAO,GAAG;IACN,OAAO,IAAI,CAAClB,MAAM,CAACE,MAAM,CAAC,CAACiB,MAAM,EAAEd,QAAQ,KAAK;MAC5C,IAAIC,CAAC,GAAGD,QAAQ,CAACpB,GAAG;MACpB,OAAOqB,CAAC,IAAID,QAAQ,CAACnB,IAAI,EAAE;QACvBiC,MAAM,CAACV,IAAI,CAACH,CAAC,CAAC;QACdA,CAAC,EAAE;MACP;MACA,OAAOa,MAAM;IACjB,CAAC,EAAE,EAAE,CAAC;EACV;EAEAC,SAAS,GAAG;IACR,OAAO,IAAI,CAACpB,MAAM,CAACqB,GAAG,CAAEhB,QAAQ,KAAM;MAClCpB,GAAG,EAAEoB,QAAQ,CAACpB,GAAG;MACjBC,IAAI,EAAEmB,QAAQ,CAACnB,IAAI;MACnBC,MAAM,EAAE,CAAC,GAAGkB,QAAQ,CAACnB,IAAI,GAAGmB,QAAQ,CAACpB;IACzC,CAAC,CAAC,CAAC;EACP;AACJ;AAEAqC,MAAM,CAACC,OAAO,GAAG1B,MAAM;;;;;;;;;;ACjLvB,MAAM2B,GAAG,GAAMC,mBAAO,CAAC,gBAAK,CAAC;AAC7B,MAAM5B,MAAM,GAAG4B,mBAAO,CAAC,mBAAQ,CAAC;AAChC,MAAMC,KAAK,GAAIF,GAAG,CAACE,KAAK;AAGxBJ,MAAM,CAACC,OAAO,GAAG,MAAMI,OAAO,CAAC;EAC7B;AACF;AACA;AACA;AACA;EACEtE,WAAW,CAACuE,MAAM,EAAEC,CAAC,EAAE;IACrB,IAAI,CAACC,YAAY,CAACF,MAAM,CAAC;IACzB,IAAIA,MAAM,YAAYG,MAAM,EAAE;MAC5B,IAAI,CAACC,UAAU,GAAGJ,MAAM,CAACI,UAAU;MACnC,IAAI,CAACC,SAAS,GAAGL,MAAM,CAACK,SAAS;MACjCL,MAAM,GAAGA,MAAM,CAACM,MAAM;IAExB,CAAC,MAAM,IAAI,OAAON,MAAM,KAAK,QAAQ,EAAE;MACrC,IAAI,CAACI,UAAU,GAAGH,CAAC,IAAIA,CAAC,CAACM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;MAC5C,IAAI,CAACF,SAAS,GAAGJ,CAAC,IAAIA,CAAC,CAACM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,IAAI,CAACC,MAAM,GAAGb,GAAG,CAACI,MAAM,CAAC;EAC3B;;EAGA;AACF;AACA;AACA;AACA;AACA;EACEE,YAAY,CAACF,MAAM,EAAE;IACnB;IACA;IACA;IACA,IAAI,CAAClC,GAAG,GAAGkC,MAAM,CAAClC,GAAG,IAAI,IAAI,GAAGkC,MAAM,CAAClC,GAAG,GACxCiC,OAAO,CAACW,SAAS,CAAC5C,GAAG,IAAI,IAAI,GAAGiC,OAAO,CAACW,SAAS,CAAC5C,GAAG,GAAG,GAAG;;IAE7D;IACA;IACA,IAAI,CAAC6C,YAAY,GAAGX,MAAM,CAACW,YAAY,GACrCX,MAAM,CAACW,YAAY,GAAG,IAAI,CAACA,YAAY,CAACtB,KAAK,EAAE;IAEjD,IAAIW,MAAM,CAACY,OAAO,EAAE;MAClB,IAAI,CAACA,OAAO,GAAGZ,MAAM,CAACY,OAAO;IAC/B;EACF;;EAGA;AACF;AACA;AACA;AACA;EACEC,GAAG,GAAG;IACJ,OAAO,IAAI,CAACC,IAAI,CAAC,IAAI,CAACL,MAAM,EAAE,EAAE,CAAC;EACnC;;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;EACEK,IAAI,CAACC,KAAK,EAAEC,MAAM,EAAE;IAClB,IAAIC,KAAK,EAAEC,GAAG,EAAEC,CAAC,EAAEzC,CAAC,EAAE0C,CAAC;IAEvB,QAAQL,KAAK,CAACM,IAAI;MAChB,KAAKvB,KAAK,CAACwB,IAAI;MACf,KAAKxB,KAAK,CAACyB,KAAK;QACd;QACA,IAAIR,KAAK,CAACS,UAAU,IAAIT,KAAK,CAACU,aAAa,EAAE;UAAE,OAAO,EAAE;QAAE;;QAE1D;QACA,IAAIV,KAAK,CAACW,QAAQ,IAAIX,KAAK,CAACY,WAAW,KAAKC,SAAS,EAAE;UACrDb,KAAK,CAACY,WAAW,GAAGX,MAAM,CAACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC3C;QAEAoC,KAAK,GAAGF,KAAK,CAACc,OAAO,GACnB,IAAI,CAACC,WAAW,CAACf,KAAK,CAACc,OAAO,CAAC,GAAGd,KAAK,CAACE,KAAK;QAE/CC,GAAG,GAAG,EAAE;QACR,KAAKxC,CAAC,GAAG,CAAC,EAAE0C,CAAC,GAAGH,KAAK,CAAC1D,MAAM,EAAEmB,CAAC,GAAG0C,CAAC,EAAE1C,CAAC,EAAE,EAAE;UACxCwC,GAAG,IAAI,IAAI,CAACJ,IAAI,CAACG,KAAK,CAACvC,CAAC,CAAC,EAAEsC,MAAM,CAAC;QACpC;QAEA,IAAID,KAAK,CAACW,QAAQ,EAAE;UAClBV,MAAM,CAACD,KAAK,CAACY,WAAW,CAAC,GAAGT,GAAG;QACjC;QACA,OAAOA,GAAG;MAEZ,KAAKpB,KAAK,CAACiC,QAAQ;QACjB;QACA,OAAO,EAAE;MAEX,KAAKjC,KAAK,CAACkC,GAAG;QACZ,IAAIC,WAAW,GAAG,IAAI,CAACC,OAAO,CAACnB,KAAK,CAAC;QACrC,IAAI,CAACkB,WAAW,CAAC1E,MAAM,EAAE;UAAE,OAAO,EAAE;QAAE;QACtC,OAAO4E,MAAM,CAACC,YAAY,CAAC,IAAI,CAACN,WAAW,CAACG,WAAW,CAAC,CAAC;MAE3D,KAAKnC,KAAK,CAACuC,UAAU;QACnB;QACAlB,CAAC,GAAG,IAAI,CAACP,OAAO,CAACG,KAAK,CAAClD,GAAG,EACxBkD,KAAK,CAACjD,GAAG,KAAKwE,QAAQ,GAAGvB,KAAK,CAAClD,GAAG,GAAG,IAAI,CAACC,GAAG,GAAGiD,KAAK,CAACjD,GAAG,CAAC;QAE5DoD,GAAG,GAAG,EAAE;QACR,KAAKxC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyC,CAAC,EAAEzC,CAAC,EAAE,EAAE;UACtBwC,GAAG,IAAI,IAAI,CAACJ,IAAI,CAACC,KAAK,CAACwB,KAAK,EAAEvB,MAAM,CAAC;QACvC;QAEA,OAAOE,GAAG;MAEZ,KAAKpB,KAAK,CAAC0C,SAAS;QAClB,OAAOxB,MAAM,CAACD,KAAK,CAACwB,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE;MAEtC,KAAKzC,KAAK,CAAC2C,IAAI;QACb,IAAIC,IAAI,GAAG,IAAI,CAACtC,UAAU,IAAI,IAAI,CAACuC,SAAS,EAAE,GAC5C,IAAI,CAACC,YAAY,CAAC7B,KAAK,CAACwB,KAAK,CAAC,GAAGxB,KAAK,CAACwB,KAAK;QAC9C,OAAOJ,MAAM,CAACC,YAAY,CAACM,IAAI,CAAC;IAAC;EAEvC;;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,YAAY,CAACF,IAAI,EAAE;IACjB,OAAOA,IAAI,IAAI,EAAE,IAAIA,IAAI,IAAIA,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE,GAC5C,EAAE,IAAIA,IAAI,IAAIA,IAAI,IAAI,EAAE,GAAK,EAAE,GAAG,CAAC,CAAC;EACxC;;EAGA;AACF;AACA;AACA;AACA;EACEC,SAAS,GAAG;IACV,OAAO,CAAC,IAAI,CAAC/B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;;EAGA;AACF;AACA;AACA;AACA;AACA;EACEkB,WAAW,CAACe,GAAG,EAAE;IACf,IAAIA,GAAG,YAAY5E,MAAM,EAAE;MACzB,OAAO4E,GAAG,CAAC1D,KAAK,CAAC,IAAI,CAACyB,OAAO,CAAC,CAAC,EAAEiC,GAAG,CAACtF,MAAM,GAAG,CAAC,CAAC,CAAC;IACnD;IACA,OAAOsF,GAAG,CAAC,IAAI,CAACjC,OAAO,CAAC,CAAC,EAAEiC,GAAG,CAACtF,MAAM,GAAG,CAAC,CAAC,CAAC;EAC7C;;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;EACE2E,OAAO,CAACnB,KAAK,EAAE;IACb,IAAIA,KAAK,CAACM,IAAI,KAAKzB,GAAG,CAACE,KAAK,CAAC2C,IAAI,EAAE;MACjC,OAAO,IAAIxE,MAAM,CAAC8C,KAAK,CAACwB,KAAK,CAAC;IAChC,CAAC,MAAM,IAAIxB,KAAK,CAACM,IAAI,KAAKzB,GAAG,CAACE,KAAK,CAACgD,KAAK,EAAE;MACzC,OAAO,IAAI7E,MAAM,CAAC8C,KAAK,CAACgC,IAAI,EAAEhC,KAAK,CAACiC,EAAE,CAAC;IACzC,CAAC,MAAM;MACL,IAAIC,MAAM,GAAG,IAAIhF,MAAM,EAAE;MACzB,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqC,KAAK,CAACmC,GAAG,CAAC3F,MAAM,EAAEmB,CAAC,EAAE,EAAE;QACzC,IAAID,QAAQ,GAAG,IAAI,CAACyD,OAAO,CAACnB,KAAK,CAACmC,GAAG,CAACxE,CAAC,CAAC,CAAC;QACzCuE,MAAM,CAACtF,GAAG,CAACc,QAAQ,CAAC;QACpB,IAAI,IAAI,CAAC2B,UAAU,EAAE;UACnB,KAAK,IAAI+C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1E,QAAQ,CAAClB,MAAM,EAAE4F,CAAC,EAAE,EAAE;YACxC,IAAIT,IAAI,GAAGjE,QAAQ,CAACU,KAAK,CAACgE,CAAC,CAAC;YAC5B,IAAIC,aAAa,GAAG,IAAI,CAACR,YAAY,CAACF,IAAI,CAAC;YAC3C,IAAIA,IAAI,KAAKU,aAAa,EAAE;cAC1BH,MAAM,CAACtF,GAAG,CAACyF,aAAa,CAAC;YAC3B;UACF;QACF;MACF;MACA,IAAIrC,KAAK,CAACsC,GAAG,EAAE;QACb,OAAO,IAAI,CAAC1C,YAAY,CAACtB,KAAK,EAAE,CAACtB,QAAQ,CAACkF,MAAM,CAAC;MACnD,CAAC,MAAM;QACL,OAAO,IAAI,CAACtC,YAAY,CAACtB,KAAK,EAAE,CAACJ,SAAS,CAACgE,MAAM,CAAC;MACpD;IACF;EACF;;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;EACErC,OAAO,CAAC1C,CAAC,EAAEC,CAAC,EAAE;IACZ,OAAOD,CAAC,GAAGN,IAAI,CAAC0F,KAAK,CAAC1F,IAAI,CAAC2F,MAAM,EAAE,IAAI,CAAC,GAAGpF,CAAC,GAAGD,CAAC,CAAC,CAAC;EACpD;;EAGA;AACF;AACA;EACE,IAAIyC,YAAY,GAAG;IACjB,OAAO,IAAI,CAAC6C,MAAM,GAAG,IAAI,CAACA,MAAM,IAAI,IAAIvF,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC;EACzD;EAEA,IAAI0C,YAAY,CAAClD,KAAK,EAAE;IACtB,IAAI,CAAC+F,MAAM,GAAG/F,KAAK;EACrB;;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOgG,OAAO,CAACzD,MAAM,EAAEC,CAAC,EAAE;IACxB,IAAIwD,OAAO;IACX,IAAG,OAAOzD,MAAM,KAAK,QAAQ,EAAE;MAC7BA,MAAM,GAAG,IAAIG,MAAM,CAACH,MAAM,EAAEC,CAAC,CAAC;IAChC;IAEA,IAAID,MAAM,CAAC0D,QAAQ,KAAK9B,SAAS,EAAE;MACjC6B,OAAO,GAAG,IAAI1D,OAAO,CAACC,MAAM,EAAEC,CAAC,CAAC;MAChCD,MAAM,CAAC0D,QAAQ,GAAGD,OAAO;IAC3B,CAAC,MAAM;MACLA,OAAO,GAAGzD,MAAM,CAAC0D,QAAQ;MACzBD,OAAO,CAACvD,YAAY,CAACF,MAAM,CAAC;IAC9B;IACA,OAAOyD,OAAO,CAAC5C,GAAG,EAAE;EACtB;;EAGA;AACF;AACA;EACE,OAAO8C,KAAK,GAAG;IACb;IACAxD,MAAM,CAACO,SAAS,CAACG,GAAG,GAAG,YAAW;MAChC,OAAOd,OAAO,CAAC0D,OAAO,CAAC,IAAI,CAAC;IAC9B,CAAC;EACH;AACF,CAAC;;;;;;;;;;ACpQD,MAAMG,IAAI,GAAQ/D,mBAAO,CAAC,mBAAQ,CAAC;AACnC,MAAMC,KAAK,GAAOD,mBAAO,CAAC,oBAAS,CAAC;AACpC,MAAMgE,IAAI,GAAQhE,mBAAO,CAAC,mBAAQ,CAAC;AACnC,MAAMiE,SAAS,GAAGjE,mBAAO,CAAC,wBAAa,CAAC;AAGxCH,MAAM,CAACC,OAAO,GAAIoE,SAAS,IAAK;EAC9B,IAAIrF,CAAC,GAAG,CAAC;IAAE0C,CAAC;IAAE4C,CAAC;IACbC,KAAK,GAAG;MAAE5C,IAAI,EAAEvB,KAAK,CAACwB,IAAI;MAAEL,KAAK,EAAE;IAAE,CAAC;IAEtC;IACAiD,SAAS,GAAGD,KAAK;IACjBE,IAAI,GAAGF,KAAK,CAAChD,KAAK;IAClBmD,UAAU,GAAG,EAAE;EAGjB,IAAIC,SAAS,GAAI3F,CAAC,IAAK;IACrBkF,IAAI,CAACU,KAAK,CAACP,SAAS,EAAG,+BAA8BrF,CAAC,GAAG,CAAE,EAAC,CAAC;EAC/D,CAAC;;EAED;EACA,IAAIwC,GAAG,GAAG0C,IAAI,CAACW,UAAU,CAACR,SAAS,CAAC;EACpC3C,CAAC,GAAGF,GAAG,CAAC3D,MAAM;;EAEd;EACA,OAAOmB,CAAC,GAAG0C,CAAC,EAAE;IACZ4C,CAAC,GAAG9C,GAAG,CAACxC,CAAC,EAAE,CAAC;IAEZ,QAAQsF,CAAC;MACP;MACA,KAAK,IAAI;QACPA,CAAC,GAAG9C,GAAG,CAACxC,CAAC,EAAE,CAAC;QAEZ,QAAQsF,CAAC;UACP,KAAK,GAAG;YACNG,IAAI,CAACtF,IAAI,CAACiF,SAAS,CAACU,YAAY,EAAE,CAAC;YACnC;UAEF,KAAK,GAAG;YACNL,IAAI,CAACtF,IAAI,CAACiF,SAAS,CAACW,eAAe,EAAE,CAAC;YACtC;UAEF,KAAK,GAAG;YACNN,IAAI,CAACtF,IAAI,CAACgF,IAAI,CAACa,KAAK,EAAE,CAAC;YACvB;UAEF,KAAK,GAAG;YACNP,IAAI,CAACtF,IAAI,CAACgF,IAAI,CAACc,QAAQ,EAAE,CAAC;YAC1B;UAEF,KAAK,GAAG;YACNR,IAAI,CAACtF,IAAI,CAACgF,IAAI,CAACe,IAAI,EAAE,CAAC;YACtB;UAEF,KAAK,GAAG;YACNT,IAAI,CAACtF,IAAI,CAACgF,IAAI,CAACgB,OAAO,EAAE,CAAC;YACzB;UAEF,KAAK,GAAG;YACNV,IAAI,CAACtF,IAAI,CAACgF,IAAI,CAACiB,UAAU,EAAE,CAAC;YAC5B;UAEF,KAAK,GAAG;YACNX,IAAI,CAACtF,IAAI,CAACgF,IAAI,CAACkB,aAAa,EAAE,CAAC;YAC/B;UAEF;YACE;YACA;YACA,IAAI,IAAI,CAACC,IAAI,CAAChB,CAAC,CAAC,EAAE;cAChBG,IAAI,CAACtF,IAAI,CAAC;gBAAEwC,IAAI,EAAEvB,KAAK,CAAC0C,SAAS;gBAAED,KAAK,EAAE0C,QAAQ,CAACjB,CAAC,EAAE,EAAE;cAAE,CAAC,CAAC;;cAE9D;YACA,CAAC,MAAM;cACLG,IAAI,CAACtF,IAAI,CAAC;gBAAEwC,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;gBAAEF,KAAK,EAAEyB,CAAC,CAACkB,UAAU,CAAC,CAAC;cAAE,CAAC,CAAC;YACzD;QAAC;QAGL;;MAGF;MACA,KAAK,GAAG;QACNf,IAAI,CAACtF,IAAI,CAACiF,SAAS,CAACqB,KAAK,EAAE,CAAC;QAC5B;MAEF,KAAK,GAAG;QACNhB,IAAI,CAACtF,IAAI,CAACiF,SAAS,CAACsB,GAAG,EAAE,CAAC;QAC1B;;MAGF;MACA,KAAK,GAAG;QACN;QACA,IAAI/B,GAAG;QACP,IAAInC,GAAG,CAACxC,CAAC,CAAC,KAAK,GAAG,EAAE;UAClB2E,GAAG,GAAG,IAAI;UACV3E,CAAC,EAAE;QACL,CAAC,MAAM;UACL2E,GAAG,GAAG,KAAK;QACb;;QAEA;QACA,IAAIgC,WAAW,GAAGzB,IAAI,CAAC0B,aAAa,CAACpE,GAAG,CAACtC,KAAK,CAACF,CAAC,CAAC,EAAEqF,SAAS,CAAC;;QAE7D;QACArF,CAAC,IAAI2G,WAAW,CAAC,CAAC,CAAC;QACnBlB,IAAI,CAACtF,IAAI,CAAC;UACRwC,IAAI,EAAEvB,KAAK,CAACkC,GAAG;UACfkB,GAAG,EAAEmC,WAAW,CAAC,CAAC,CAAC;UACnBhC;QACF,CAAC,CAAC;QAEF;;MAGF;MACA,KAAK,GAAG;QACNc,IAAI,CAACtF,IAAI,CAACgF,IAAI,CAAC0B,OAAO,EAAE,CAAC;QACzB;;MAGF;MACA,KAAK,GAAG;QACN;QACA,IAAIC,KAAK,GAAG;UACVnE,IAAI,EAAEvB,KAAK,CAACyB,KAAK;UACjBN,KAAK,EAAE,EAAE;UACTS,QAAQ,EAAE;QACZ,CAAC;QAEDsC,CAAC,GAAG9C,GAAG,CAACxC,CAAC,CAAC;;QAEV;QACA,IAAIsF,CAAC,KAAK,GAAG,EAAE;UACbA,CAAC,GAAG9C,GAAG,CAACxC,CAAC,GAAG,CAAC,CAAC;UACdA,CAAC,IAAI,CAAC;;UAEN;UACA,IAAIsF,CAAC,KAAK,GAAG,EAAE;YACbwB,KAAK,CAAChE,UAAU,GAAG,IAAI;;YAEzB;UACA,CAAC,MAAM,IAAIwC,CAAC,KAAK,GAAG,EAAE;YACpBwB,KAAK,CAAC/D,aAAa,GAAG,IAAI;UAE5B,CAAC,MAAM,IAAIuC,CAAC,KAAK,GAAG,EAAE;YACpBJ,IAAI,CAACU,KAAK,CAACP,SAAS,EACjB,6BAA4BC,CAAE,GAAE,GAChC,wBAAuBtF,CAAC,GAAG,CAAE,EAAC,CAAC;UACpC;UAEA8G,KAAK,CAAC9D,QAAQ,GAAG,KAAK;QACxB;;QAEA;QACAyC,IAAI,CAACtF,IAAI,CAAC2G,KAAK,CAAC;;QAEhB;QACApB,UAAU,CAACvF,IAAI,CAACqF,SAAS,CAAC;;QAE1B;QACAA,SAAS,GAAGsB,KAAK;QACjBrB,IAAI,GAAGqB,KAAK,CAACvE,KAAK;QAClB;;MAGF;MACA,KAAK,GAAG;QACN,IAAImD,UAAU,CAAC7G,MAAM,KAAK,CAAC,EAAE;UAC3BqG,IAAI,CAACU,KAAK,CAACP,SAAS,EAAG,yBAAwBrF,CAAC,GAAG,CAAE,EAAC,CAAC;QACzD;QACAwF,SAAS,GAAGE,UAAU,CAACqB,GAAG,EAAE;;QAE5B;QACA;QACAtB,IAAI,GAAGD,SAAS,CAACrC,OAAO,GACtBqC,SAAS,CAACrC,OAAO,CAACqC,SAAS,CAACrC,OAAO,CAACtE,MAAM,GAAG,CAAC,CAAC,GAAG2G,SAAS,CAACjD,KAAK;QACnE;;MAGF;MACA,KAAK,GAAG;QACN;QACA;QACA,IAAI,CAACiD,SAAS,CAACrC,OAAO,EAAE;UACtBqC,SAAS,CAACrC,OAAO,GAAG,CAACqC,SAAS,CAACjD,KAAK,CAAC;UACrC,OAAOiD,SAAS,CAACjD,KAAK;QACxB;;QAEA;QACA,IAAIA,KAAK,GAAG,EAAE;QACdiD,SAAS,CAACrC,OAAO,CAAChD,IAAI,CAACoC,KAAK,CAAC;QAC7BkD,IAAI,GAAGlD,KAAK;QACZ;;MAGF;MACA;MACA;MACA;MACA;MACA,KAAK,GAAG;QACN,IAAIyE,EAAE,GAAG,oBAAoB,CAACC,IAAI,CAACzE,GAAG,CAACtC,KAAK,CAACF,CAAC,CAAC,CAAC;UAAEb,GAAG;UAAEC,GAAG;QAC1D,IAAI4H,EAAE,KAAK,IAAI,EAAE;UACf,IAAIvB,IAAI,CAAC5G,MAAM,KAAK,CAAC,EAAE;YACrB8G,SAAS,CAAC3F,CAAC,CAAC;UACd;UACAb,GAAG,GAAGoH,QAAQ,CAACS,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UACzB5H,GAAG,GAAG4H,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC,GAAGT,QAAQ,CAACS,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGpD,QAAQ,GAAGzE,GAAG;UAC1Da,CAAC,IAAIgH,EAAE,CAAC,CAAC,CAAC,CAACnI,MAAM;UAEjB4G,IAAI,CAACtF,IAAI,CAAC;YACRwC,IAAI,EAAEvB,KAAK,CAACuC,UAAU;YACtBxE,GAAG;YACHC,GAAG;YACHyE,KAAK,EAAE4B,IAAI,CAACsB,GAAG;UACjB,CAAC,CAAC;QACJ,CAAC,MAAM;UACLtB,IAAI,CAACtF,IAAI,CAAC;YACRwC,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;YAChBF,KAAK,EAAE;UACT,CAAC,CAAC;QACJ;QACA;MAEF,KAAK,GAAG;QACN,IAAI4B,IAAI,CAAC5G,MAAM,KAAK,CAAC,EAAE;UACrB8G,SAAS,CAAC3F,CAAC,CAAC;QACd;QACAyF,IAAI,CAACtF,IAAI,CAAC;UACRwC,IAAI,EAAEvB,KAAK,CAACuC,UAAU;UACtBxE,GAAG,EAAE,CAAC;UACNC,GAAG,EAAE,CAAC;UACNyE,KAAK,EAAE4B,IAAI,CAACsB,GAAG;QACjB,CAAC,CAAC;QACF;MAEF,KAAK,GAAG;QACN,IAAItB,IAAI,CAAC5G,MAAM,KAAK,CAAC,EAAE;UACrB8G,SAAS,CAAC3F,CAAC,CAAC;QACd;QACAyF,IAAI,CAACtF,IAAI,CAAC;UACRwC,IAAI,EAAEvB,KAAK,CAACuC,UAAU;UACtBxE,GAAG,EAAE,CAAC;UACNC,GAAG,EAAEwE,QAAQ;UACbC,KAAK,EAAE4B,IAAI,CAACsB,GAAG;QACjB,CAAC,CAAC;QACF;MAEF,KAAK,GAAG;QACN,IAAItB,IAAI,CAAC5G,MAAM,KAAK,CAAC,EAAE;UACrB8G,SAAS,CAAC3F,CAAC,CAAC;QACd;QACAyF,IAAI,CAACtF,IAAI,CAAC;UACRwC,IAAI,EAAEvB,KAAK,CAACuC,UAAU;UACtBxE,GAAG,EAAE,CAAC;UACNC,GAAG,EAAEwE,QAAQ;UACbC,KAAK,EAAE4B,IAAI,CAACsB,GAAG;QACjB,CAAC,CAAC;QACF;;MAGF;MACA;QACEtB,IAAI,CAACtF,IAAI,CAAC;UACRwC,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;UAChBF,KAAK,EAAEyB,CAAC,CAACkB,UAAU,CAAC,CAAC;QACvB,CAAC,CAAC;IAAC;EAGT;;EAEA;EACA,IAAId,UAAU,CAAC7G,MAAM,KAAK,CAAC,EAAE;IAC3BqG,IAAI,CAACU,KAAK,CAACP,SAAS,EAAE,oBAAoB,CAAC;EAC7C;EAEA,OAAOE,KAAK;AACd,CAAC;AAEDvE,oBAAoB,GAAGI,KAAK;;;;;;;;;;ACzR5B,MAAMA,KAAK,GAAGD,mBAAO,CAAC,oBAAS,CAAC;AAChCF,oBAAoB,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACiC,QAAQ;EAAEQ,KAAK,EAAE;AAAI,CAAC,CAAC;AACnE5C,uBAAuB,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACiC,QAAQ;EAAEQ,KAAK,EAAE;AAAI,CAAC,CAAC;AACtE5C,aAAa,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACiC,QAAQ;EAAEQ,KAAK,EAAE;AAAI,CAAC,CAAC;AAC5D5C,WAAW,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACiC,QAAQ;EAAEQ,KAAK,EAAE;AAAI,CAAC,CAAC;;;;;;;;;;ACJ1D,MAAMzC,KAAK,GAAGD,mBAAO,CAAC,oBAAS,CAAC;AAEhC,MAAM+F,IAAI,GAAG,MAAM,CAAC;EAAEvE,IAAI,EAAEvB,KAAK,CAACgD,KAAK;EAAGC,IAAI,EAAE,EAAE;EAAEC,EAAE,EAAE;AAAG,CAAC,CAAC;AAE7D,MAAM6C,KAAK,GAAG,MAAM;EAClB,OAAO,CACL;IAAExE,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAElB,IAAI,EAAEvB,KAAK,CAACgD,KAAK;IAAEC,IAAI,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAI,CAAC,EACxC;IAAE3B,IAAI,EAAEvB,KAAK,CAACgD,KAAK;IAAEC,IAAI,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAG,CAAC,CACxC,CAAClE,MAAM,CAAC8G,IAAI,EAAE,CAAC;AAClB,CAAC;AAED,MAAME,UAAU,GAAG,MAAM;EACvB,OAAO,CACL;IAAEzE,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC9B;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAI,CAAC,EAChC;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAK,CAAC,EACjC;IAAElB,IAAI,EAAEvB,KAAK,CAACgD,KAAK;IAAEC,IAAI,EAAE,IAAI;IAAEC,EAAE,EAAE;EAAK,CAAC,EAC3C;IAAE3B,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAK,CAAC,EACjC;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAK,CAAC,EACjC;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAK,CAAC,EACjC;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAK,CAAC,EACjC;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAM,CAAC,EAClC;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAM,CAAC,CACnC;AACH,CAAC;AAED,MAAMwD,UAAU,GAAG,MAAM;EACvB,OAAO,CACL;IAAE1E,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAK,CAAC,EACjC;IAAElB,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;IAAEF,KAAK,EAAE;EAAK,CAAC,CAClC;AACH,CAAC;;AAED;AACA5C,aAAa,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACkC,GAAG;EAAEkB,GAAG,EAAE2C,KAAK,EAAE;EAAExC,GAAG,EAAE;AAAM,CAAC,CAAC;AACrE1D,gBAAgB,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACkC,GAAG;EAAEkB,GAAG,EAAE2C,KAAK,EAAE;EAAExC,GAAG,EAAE;AAAK,CAAC,CAAC;AACvE1D,YAAY,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACkC,GAAG;EAAEkB,GAAG,EAAE0C,IAAI,EAAE;EAAEvC,GAAG,EAAE;AAAM,CAAC,CAAC;AACnE1D,eAAe,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACkC,GAAG;EAAEkB,GAAG,EAAE0C,IAAI,EAAE;EAAEvC,GAAG,EAAE;AAAK,CAAC,CAAC;AACrE1D,kBAAkB,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACkC,GAAG;EAAEkB,GAAG,EAAE4C,UAAU,EAAE;EAAEzC,GAAG,EAAE;AAAM,CAAC,CAAC;AAC/E1D,qBAAqB,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACkC,GAAG;EAAEkB,GAAG,EAAE4C,UAAU,EAAE;EAAEzC,GAAG,EAAE;AAAK,CAAC,CAAC;AACjF1D,eAAe,GAAG,OAAO;EAAE0B,IAAI,EAAEvB,KAAK,CAACkC,GAAG;EAAEkB,GAAG,EAAE6C,UAAU,EAAE;EAAE1C,GAAG,EAAE;AAAK,CAAC,CAAC;;;;;;;;;;AChD3E3D,MAAM,CAACC,OAAO,GAAG;EACf2B,IAAI,EAAS,CAAC;EACdC,KAAK,EAAQ,CAAC;EACdQ,QAAQ,EAAK,CAAC;EACdC,GAAG,EAAU,CAAC;EACdc,KAAK,EAAQ,CAAC;EACdT,UAAU,EAAG,CAAC;EACdG,SAAS,EAAI,CAAC;EACdC,IAAI,EAAS;AACf,CAAC;;;;;;;;;;ACTD,MAAM3C,KAAK,GAAGD,mBAAO,CAAC,oBAAS,CAAC;AAChC,MAAMgE,IAAI,GAAIhE,mBAAO,CAAC,mBAAQ,CAAC;AAG/B,MAAMmG,IAAI,GAAG,oCAAoC;AACjD,MAAMC,IAAI,GAAG;EAAE,GAAG,EAAE,CAAC;EAAE,GAAG,EAAE,CAAC;EAAE,GAAG,EAAE,EAAE;EAAE,GAAG,EAAE,EAAE;EAAE,GAAG,EAAE,EAAE;EAAE,GAAG,EAAE;AAAG,CAAC;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACAtG,kBAAkB,GAAG,UAASuB,GAAG,EAAE;EACjC;EACA,IAAIgF,WAAW,GAAG,8FAA8F;EAChHhF,GAAG,GAAGA,GAAG,CAACiF,OAAO,CAACD,WAAW,EAAE,UAASE,CAAC,EAAEjI,CAAC,EAAEkI,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC7E,IAAIL,GAAG,EAAE;MACP,OAAOD,CAAC;IACV;IAEA,IAAI1D,IAAI,GAAGvE,CAAC,GAAG,CAAC,GACdmI,GAAG,GAAKrB,QAAQ,CAACqB,GAAG,EAAE,EAAE,CAAC,GACzBC,GAAG,GAAKtB,QAAQ,CAACsB,GAAG,EAAE,EAAE,CAAC,GACzBC,EAAE,GAAMvB,QAAQ,CAACuB,EAAE,EAAI,CAAC,CAAC,GACzBC,KAAK,GAAGT,IAAI,CAACzF,OAAO,CAACkG,KAAK,CAAC,GAC3BR,IAAI,CAACS,KAAK,CAAC;IAEb,IAAI1C,CAAC,GAAG7B,MAAM,CAACC,YAAY,CAACM,IAAI,CAAC;;IAEjC;IACA,IAAI,kBAAkB,CAACsC,IAAI,CAAChB,CAAC,CAAC,EAAE;MAC9BA,CAAC,GAAG,IAAI,GAAGA,CAAC;IACd;IAEA,OAAOA,CAAC;EACV,CAAC,CAAC;EAEF,OAAO9C,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvB,qBAAqB,GAAG,CAACuB,GAAG,EAAE6C,SAAS,KAAK;EAC1C;EACA,IAAItD,MAAM,GAAG,EAAE;EACf,IAAIT,MAAM,GAAG,2FAA2F;EACxG,IAAI0F,EAAE,EAAE1B,CAAC;EAGT,OAAO,CAAC0B,EAAE,GAAG1F,MAAM,CAAC2F,IAAI,CAACzE,GAAG,CAAC,KAAK,IAAI,EAAE;IACtC,IAAIwE,EAAE,CAAC,CAAC,CAAC,EAAE;MACTjF,MAAM,CAAC5B,IAAI,CAACgF,IAAI,CAACa,KAAK,EAAE,CAAC;IAE3B,CAAC,MAAM,IAAIgB,EAAE,CAAC,CAAC,CAAC,EAAE;MAChBjF,MAAM,CAAC5B,IAAI,CAACgF,IAAI,CAACe,IAAI,EAAE,CAAC;IAE1B,CAAC,MAAM,IAAIc,EAAE,CAAC,CAAC,CAAC,EAAE;MAChBjF,MAAM,CAAC5B,IAAI,CAACgF,IAAI,CAACiB,UAAU,EAAE,CAAC;IAEhC,CAAC,MAAM,IAAIY,EAAE,CAAC,CAAC,CAAC,EAAE;MAChBjF,MAAM,CAAC5B,IAAI,CAACgF,IAAI,CAACc,QAAQ,EAAE,CAAC;IAE9B,CAAC,MAAM,IAAIe,EAAE,CAAC,CAAC,CAAC,EAAE;MAChBjF,MAAM,CAAC5B,IAAI,CAACgF,IAAI,CAACgB,OAAO,EAAE,CAAC;IAE7B,CAAC,MAAM,IAAIa,EAAE,CAAC,CAAC,CAAC,EAAE;MAChBjF,MAAM,CAAC5B,IAAI,CAACgF,IAAI,CAACkB,aAAa,EAAE,CAAC;IAEnC,CAAC,MAAM,IAAIW,EAAE,CAAC,CAAC,CAAC,EAAE;MAChBjF,MAAM,CAAC5B,IAAI,CAAC;QACVwC,IAAI,EAAEvB,KAAK,CAACgD,KAAK;QACjBC,IAAI,EAAE,CAAC2C,EAAE,CAAC,CAAC,CAAC,IAAIA,EAAE,CAAC,CAAC,CAAC,EAAER,UAAU,CAAC,CAAC,CAAC;QACpClC,EAAE,EAAE0C,EAAE,CAAC,EAAE,CAAC,CAACR,UAAU,CAAC,CAAC;MACzB,CAAC,CAAC;IAEJ,CAAC,MAAM,IAAKlB,CAAC,GAAG0B,EAAE,CAAC,EAAE,CAAC,EAAG;MACvBjF,MAAM,CAAC5B,IAAI,CAAC;QACVwC,IAAI,EAAEvB,KAAK,CAAC2C,IAAI;QAChBF,KAAK,EAAEyB,CAAC,CAACkB,UAAU,CAAC,CAAC;MACvB,CAAC,CAAC;IAEJ,CAAC,MAAM;MACL,OAAO,CAACzE,MAAM,EAAET,MAAM,CAAC2G,SAAS,CAAC;IACnC;EACF;EAEAhH,OAAO,CAAC2E,KAAK,CAACP,SAAS,EAAE,8BAA8B,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACApE,aAAa,GAAG,CAACK,MAAM,EAAE4G,GAAG,KAAK;EAC/B,MAAM,IAAIC,WAAW,CAAC,+BAA+B,GAAG7G,MAAM,GAAG,KAAK,GAAG4G,GAAG,CAAC;AAC/E,CAAC","sources":["./src/app/shared/_services/staff.service.ts","./node_modules/drange/lib/index.js","./node_modules/randexp/lib/randexp.js","./node_modules/ret/lib/index.js","./node_modules/ret/lib/positions.js","./node_modules/ret/lib/sets.js","./node_modules/ret/lib/types.js","./node_modules/ret/lib/util.js"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaffService {\n\n  constructor(private http: HttpClient) { }\n\n  listUsersFiltered(page: number, size: number, sort?: string, dir?: string, filters?: object) {\n    return this.http.post('/bestinform/listUsersFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters);\n  }\n\n  getUserById(userId: string) {\n    return this.http.get('/bestinform/getUserById?userId=' + userId);\n  }\n\n  updateUser(userId: string, userObj: object) {\n    return this.http.put('/bestinform/updateUser?userId=' + userId, userObj);\n  }\n\n  addUser(userObj: object) {\n    return this.http.post('/bestinform/addUser', userObj);\n  }\n\n  deleteUser(userId: string) {\n    return this.http.delete('/bestinform/deleteUser?userId=' + userId);\n  }\n\n  changeUserPassword(userId: string, password: string) {\n    return this.http.put('/bestinform/changeUserPassword?userId=' + userId, password);\n  }\n\n  changeActiveStatus(targetUserId : string, accept : boolean){\n    return this.http.put('/bestinform/changeActiveStatus?targetUserId=' + targetUserId + '&accept=' + accept, {});\n  }\n\n  changeBlockStatus(userId  : string, block : boolean){\n    return this.http.put('/bestinform/changeBlockStatus?userId=' + userId  + '&block=' + block, {});\n  }\n\n  sendRegistrationEmail(userId: string) {\n    return this.http.get('/bestinform/sendRegistrationEmail?userId=' + userId);\n  }\n\n}\n","'use strict';\n/* eslint indent: 4 */\n\n\n// Private helper class\nclass SubRange {\n    constructor(low, high) {\n        this.low = low;\n        this.high = high;\n        this.length = 1 + high - low;\n    }\n\n    overlaps(range) {\n        return !(this.high < range.low || this.low > range.high);\n    }\n\n    touches(range) {\n        return !(this.high + 1 < range.low || this.low - 1 > range.high);\n    }\n\n    // Returns inclusive combination of SubRanges as a SubRange.\n    add(range) {\n        return new SubRange(\n            Math.min(this.low, range.low),\n            Math.max(this.high, range.high)\n        );\n    }\n\n    // Returns subtraction of SubRanges as an array of SubRanges.\n    // (There's a case where subtraction divides it in 2)\n    subtract(range) {\n        if (range.low <= this.low && range.high >= this.high) {\n            return [];\n        } else if (range.low > this.low && range.high < this.high) {\n            return [\n                new SubRange(this.low, range.low - 1),\n                new SubRange(range.high + 1, this.high)\n            ];\n        } else if (range.low <= this.low) {\n            return [new SubRange(range.high + 1, this.high)];\n        } else {\n            return [new SubRange(this.low, range.low - 1)];\n        }\n    }\n\n    toString() {\n        return this.low == this.high ?\n            this.low.toString() : this.low + '-' + this.high;\n    }\n}\n\n\nclass DRange {\n    constructor(a, b) {\n        this.ranges = [];\n        this.length = 0;\n        if (a != null) this.add(a, b);\n    }\n\n    _update_length() {\n        this.length = this.ranges.reduce((previous, range) => {\n            return previous + range.length;\n        }, 0);\n    }\n\n    add(a, b) {\n        var _add = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.touches(this.ranges[i])) {\n                i++;\n            }\n            var newRanges = this.ranges.slice(0, i);\n            while (i < this.ranges.length && subrange.touches(this.ranges[i])) {\n                subrange = subrange.add(this.ranges[i]);\n                i++;\n            }\n            newRanges.push(subrange);\n            this.ranges = newRanges.concat(this.ranges.slice(i));\n            this._update_length();\n        }\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_add);\n        } else {\n            if (b == null) b = a;\n            _add(new SubRange(a, b));\n        }\n        return this;\n    }\n\n    subtract(a, b) {\n        var _subtract = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.overlaps(this.ranges[i])) {\n                i++;\n            }\n            var newRanges = this.ranges.slice(0, i);\n            while (i < this.ranges.length && subrange.overlaps(this.ranges[i])) {\n                newRanges = newRanges.concat(this.ranges[i].subtract(subrange));\n                i++;\n            }\n            this.ranges = newRanges.concat(this.ranges.slice(i));\n            this._update_length();\n        };\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_subtract);\n        } else {\n            if (b == null) b = a;\n            _subtract(new SubRange(a, b));\n        }\n        return this;\n    }\n\n    intersect(a, b) {\n        var newRanges = [];\n        var _intersect = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.overlaps(this.ranges[i])) {\n                i++;\n            }\n            while (i < this.ranges.length && subrange.overlaps(this.ranges[i])) {\n                var low = Math.max(this.ranges[i].low, subrange.low);\n                var high = Math.min(this.ranges[i].high, subrange.high);\n                newRanges.push(new SubRange(low, high));\n                i++;\n            }\n        };\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_intersect);\n        } else {\n            if (b == null) b = a;\n            _intersect(new SubRange(a, b));\n        }\n        this.ranges = newRanges;\n        this._update_length();\n        return this;\n    }\n\n    index(index) {\n        var i = 0;\n        while (i < this.ranges.length && this.ranges[i].length <= index) {\n            index -= this.ranges[i].length;\n            i++;\n        }\n        return this.ranges[i].low + index;\n    }\n\n    toString() {\n        return '[ ' + this.ranges.join(', ') + ' ]';\n    }\n\n    clone() {\n        return new DRange(this);\n    }\n\n    numbers() {\n        return this.ranges.reduce((result, subrange) => {\n            var i = subrange.low;\n            while (i <= subrange.high) {\n                result.push(i);\n                i++;\n            }\n            return result;\n        }, []);\n    }\n\n    subranges() {\n        return this.ranges.map((subrange) => ({\n            low: subrange.low,\n            high: subrange.high,\n            length: 1 + subrange.high - subrange.low\n        }));\n    }\n}\n\nmodule.exports = DRange;\n","const ret    = require('ret');\nconst DRange = require('drange');\nconst types  = ret.types;\n\n\nmodule.exports = class RandExp {\n  /**\n   * @constructor\n   * @param {RegExp|String} regexp\n   * @param {String} m\n   */\n  constructor(regexp, m) {\n    this._setDefaults(regexp);\n    if (regexp instanceof RegExp) {\n      this.ignoreCase = regexp.ignoreCase;\n      this.multiline = regexp.multiline;\n      regexp = regexp.source;\n\n    } else if (typeof regexp === 'string') {\n      this.ignoreCase = m && m.indexOf('i') !== -1;\n      this.multiline = m && m.indexOf('m') !== -1;\n    } else {\n      throw new Error('Expected a regexp or string');\n    }\n\n    this.tokens = ret(regexp);\n  }\n\n\n  /**\n   * Checks if some custom properties have been set for this regexp.\n   *\n   * @param {RandExp} randexp\n   * @param {RegExp} regexp\n   */\n  _setDefaults(regexp) {\n    // When a repetitional token has its max set to Infinite,\n    // randexp won't actually generate a random amount between min and Infinite\n    // instead it will see Infinite as min + 100.\n    this.max = regexp.max != null ? regexp.max :\n      RandExp.prototype.max != null ? RandExp.prototype.max : 100;\n\n    // This allows expanding to include additional characters\n    // for instance: RandExp.defaultRange.add(0, 65535);\n    this.defaultRange = regexp.defaultRange ?\n      regexp.defaultRange : this.defaultRange.clone();\n\n    if (regexp.randInt) {\n      this.randInt = regexp.randInt;\n    }\n  }\n\n\n  /**\n   * Generates the random string.\n   *\n   * @return {String}\n   */\n  gen() {\n    return this._gen(this.tokens, []);\n  }\n\n\n  /**\n   * Generate random string modeled after given tokens.\n   *\n   * @param {Object} token\n   * @param {Array.<String>} groups\n   * @return {String}\n   */\n  _gen(token, groups) {\n    var stack, str, n, i, l;\n\n    switch (token.type) {\n      case types.ROOT:\n      case types.GROUP:\n        // Ignore lookaheads for now.\n        if (token.followedBy || token.notFollowedBy) { return ''; }\n\n        // Insert placeholder until group string is generated.\n        if (token.remember && token.groupNumber === undefined) {\n          token.groupNumber = groups.push(null) - 1;\n        }\n\n        stack = token.options ?\n          this._randSelect(token.options) : token.stack;\n\n        str = '';\n        for (i = 0, l = stack.length; i < l; i++) {\n          str += this._gen(stack[i], groups);\n        }\n\n        if (token.remember) {\n          groups[token.groupNumber] = str;\n        }\n        return str;\n\n      case types.POSITION:\n        // Do nothing for now.\n        return '';\n\n      case types.SET:\n        var expandedSet = this._expand(token);\n        if (!expandedSet.length) { return ''; }\n        return String.fromCharCode(this._randSelect(expandedSet));\n\n      case types.REPETITION:\n        // Randomly generate number between min and max.\n        n = this.randInt(token.min,\n          token.max === Infinity ? token.min + this.max : token.max);\n\n        str = '';\n        for (i = 0; i < n; i++) {\n          str += this._gen(token.value, groups);\n        }\n\n        return str;\n\n      case types.REFERENCE:\n        return groups[token.value - 1] || '';\n\n      case types.CHAR:\n        var code = this.ignoreCase && this._randBool() ?\n          this._toOtherCase(token.value) : token.value;\n        return String.fromCharCode(code);\n    }\n  }\n\n\n  /**\n   * If code is alphabetic, converts to other case.\n   * If not alphabetic, returns back code.\n   *\n   * @param {Number} code\n   * @return {Number}\n   */\n  _toOtherCase(code) {\n    return code + (97 <= code && code <= 122 ? -32 :\n      65 <= code && code <= 90  ?  32 : 0);\n  }\n\n\n  /**\n   * Randomly returns a true or false value.\n   *\n   * @return {Boolean}\n   */\n  _randBool() {\n    return !this.randInt(0, 1);\n  }\n\n\n  /**\n   * Randomly selects and returns a value from the array.\n   *\n   * @param {Array.<Object>} arr\n   * @return {Object}\n   */\n  _randSelect(arr) {\n    if (arr instanceof DRange) {\n      return arr.index(this.randInt(0, arr.length - 1));\n    }\n    return arr[this.randInt(0, arr.length - 1)];\n  }\n\n\n  /**\n   * expands a token to a DiscontinuousRange of characters which has a\n   * length and an index function (for random selecting)\n   *\n   * @param {Object} token\n   * @return {DiscontinuousRange}\n   */\n  _expand(token) {\n    if (token.type === ret.types.CHAR) {\n      return new DRange(token.value);\n    } else if (token.type === ret.types.RANGE) {\n      return new DRange(token.from, token.to);\n    } else {\n      let drange = new DRange();\n      for (let i = 0; i < token.set.length; i++) {\n        let subrange = this._expand(token.set[i]);\n        drange.add(subrange);\n        if (this.ignoreCase) {\n          for (let j = 0; j < subrange.length; j++) {\n            let code = subrange.index(j);\n            let otherCaseCode = this._toOtherCase(code);\n            if (code !== otherCaseCode) {\n              drange.add(otherCaseCode);\n            }\n          }\n        }\n      }\n      if (token.not) {\n        return this.defaultRange.clone().subtract(drange);\n      } else {\n        return this.defaultRange.clone().intersect(drange);\n      }\n    }\n  }\n\n\n  /**\n   * Randomly generates and returns a number between a and b (inclusive).\n   *\n   * @param {Number} a\n   * @param {Number} b\n   * @return {Number}\n   */\n  randInt(a, b) {\n    return a + Math.floor(Math.random() * (1 + b - a));\n  }\n\n\n  /**\n   * Default range of characters to generate from.\n   */\n  get defaultRange() {\n    return this._range = this._range || new DRange(32, 126);\n  }\n\n  set defaultRange(range) {\n    this._range = range;\n  }\n\n\n  /**\n   *\n   * Enables use of randexp with a shorter call.\n   *\n   * @param {RegExp|String| regexp}\n   * @param {String} m\n   * @return {String}\n   */\n  static randexp(regexp, m) {\n    var randexp;\n    if(typeof regexp === 'string') {\n      regexp = new RegExp(regexp, m);\n    }\n\n    if (regexp._randexp === undefined) {\n      randexp = new RandExp(regexp, m);\n      regexp._randexp = randexp;\n    } else {\n      randexp = regexp._randexp;\n      randexp._setDefaults(regexp);\n    }\n    return randexp.gen();\n  }\n\n\n  /**\n   * Enables sugary /regexp/.gen syntax.\n   */\n  static sugar() {\n    /* eshint freeze:false */\n    RegExp.prototype.gen = function() {\n      return RandExp.randexp(this);\n    };\n  }\n};\n","const util      = require('./util');\nconst types     = require('./types');\nconst sets      = require('./sets');\nconst positions = require('./positions');\n\n\nmodule.exports = (regexpStr) => {\n  var i = 0, l, c,\n    start = { type: types.ROOT, stack: []},\n\n    // Keep track of last clause/group and stack.\n    lastGroup = start,\n    last = start.stack,\n    groupStack = [];\n\n\n  var repeatErr = (i) => {\n    util.error(regexpStr, `Nothing to repeat at column ${i - 1}`);\n  };\n\n  // Decode a few escaped characters.\n  var str = util.strToChars(regexpStr);\n  l = str.length;\n\n  // Iterate through each character in string.\n  while (i < l) {\n    c = str[i++];\n\n    switch (c) {\n      // Handle escaped characters, inclues a few sets.\n      case '\\\\':\n        c = str[i++];\n\n        switch (c) {\n          case 'b':\n            last.push(positions.wordBoundary());\n            break;\n\n          case 'B':\n            last.push(positions.nonWordBoundary());\n            break;\n\n          case 'w':\n            last.push(sets.words());\n            break;\n\n          case 'W':\n            last.push(sets.notWords());\n            break;\n\n          case 'd':\n            last.push(sets.ints());\n            break;\n\n          case 'D':\n            last.push(sets.notInts());\n            break;\n\n          case 's':\n            last.push(sets.whitespace());\n            break;\n\n          case 'S':\n            last.push(sets.notWhitespace());\n            break;\n\n          default:\n            // Check if c is integer.\n            // In which case it's a reference.\n            if (/\\d/.test(c)) {\n              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });\n\n            // Escaped character.\n            } else {\n              last.push({ type: types.CHAR, value: c.charCodeAt(0) });\n            }\n        }\n\n        break;\n\n\n      // Positionals.\n      case '^':\n        last.push(positions.begin());\n        break;\n\n      case '$':\n        last.push(positions.end());\n        break;\n\n\n      // Handle custom sets.\n      case '[':\n        // Check if this class is 'anti' i.e. [^abc].\n        var not;\n        if (str[i] === '^') {\n          not = true;\n          i++;\n        } else {\n          not = false;\n        }\n\n        // Get all the characters in class.\n        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);\n\n        // Increase index by length of class.\n        i += classTokens[1];\n        last.push({\n          type: types.SET,\n          set: classTokens[0],\n          not,\n        });\n\n        break;\n\n\n      // Class of any character except \\n.\n      case '.':\n        last.push(sets.anyChar());\n        break;\n\n\n      // Push group onto stack.\n      case '(':\n        // Create group.\n        var group = {\n          type: types.GROUP,\n          stack: [],\n          remember: true,\n        };\n\n        c = str[i];\n\n        // If if this is a special kind of group.\n        if (c === '?') {\n          c = str[i + 1];\n          i += 2;\n\n          // Match if followed by.\n          if (c === '=') {\n            group.followedBy = true;\n\n          // Match if not followed by.\n          } else if (c === '!') {\n            group.notFollowedBy = true;\n\n          } else if (c !== ':') {\n            util.error(regexpStr,\n              `Invalid group, character '${c}'` +\n              ` after '?' at column ${i - 1}`);\n          }\n\n          group.remember = false;\n        }\n\n        // Insert subgroup into current group stack.\n        last.push(group);\n\n        // Remember the current group for when the group closes.\n        groupStack.push(lastGroup);\n\n        // Make this new group the current group.\n        lastGroup = group;\n        last = group.stack;\n        break;\n\n\n      // Pop group out of stack.\n      case ')':\n        if (groupStack.length === 0) {\n          util.error(regexpStr, `Unmatched ) at column ${i - 1}`);\n        }\n        lastGroup = groupStack.pop();\n\n        // Check if this group has a PIPE.\n        // To get back the correct last stack.\n        last = lastGroup.options ?\n          lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;\n        break;\n\n\n      // Use pipe character to give more choices.\n      case '|':\n        // Create array where options are if this is the first PIPE\n        // in this clause.\n        if (!lastGroup.options) {\n          lastGroup.options = [lastGroup.stack];\n          delete lastGroup.stack;\n        }\n\n        // Create a new stack and add to options for rest of clause.\n        var stack = [];\n        lastGroup.options.push(stack);\n        last = stack;\n        break;\n\n\n      // Repetition.\n      // For every repetition, remove last element from last stack\n      // then insert back a RANGE object.\n      // This design is chosen because there could be more than\n      // one repetition symbols in a regex i.e. `a?+{2,3}`.\n      case '{':\n        var rs = /^(\\d+)(,(\\d+)?)?\\}/.exec(str.slice(i)), min, max;\n        if (rs !== null) {\n          if (last.length === 0) {\n            repeatErr(i);\n          }\n          min = parseInt(rs[1], 10);\n          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;\n          i += rs[0].length;\n\n          last.push({\n            type: types.REPETITION,\n            min,\n            max,\n            value: last.pop(),\n          });\n        } else {\n          last.push({\n            type: types.CHAR,\n            value: 123,\n          });\n        }\n        break;\n\n      case '?':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 0,\n          max: 1,\n          value: last.pop(),\n        });\n        break;\n\n      case '+':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 1,\n          max: Infinity,\n          value: last.pop(),\n        });\n        break;\n\n      case '*':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 0,\n          max: Infinity,\n          value: last.pop(),\n        });\n        break;\n\n\n      // Default is a character that is not `\\[](){}?+*^$`.\n      default:\n        last.push({\n          type: types.CHAR,\n          value: c.charCodeAt(0),\n        });\n    }\n\n  }\n\n  // Check if any groups have not been closed.\n  if (groupStack.length !== 0) {\n    util.error(regexpStr, 'Unterminated group');\n  }\n\n  return start;\n};\n\nmodule.exports.types = types;\n","const types = require('./types');\nexports.wordBoundary = () => ({ type: types.POSITION, value: 'b' });\nexports.nonWordBoundary = () => ({ type: types.POSITION, value: 'B' });\nexports.begin = () => ({ type: types.POSITION, value: '^' });\nexports.end = () => ({ type: types.POSITION, value: '$' });\n","const types = require('./types');\n\nconst INTS = () => [{ type: types.RANGE , from: 48, to: 57 }];\n\nconst WORDS = () => {\n  return [\n    { type: types.CHAR, value: 95 },\n    { type: types.RANGE, from: 97, to: 122 },\n    { type: types.RANGE, from: 65, to: 90 }\n  ].concat(INTS());\n};\n\nconst WHITESPACE = () => {\n  return [\n    { type: types.CHAR, value: 9 },\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 11 },\n    { type: types.CHAR, value: 12 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 32 },\n    { type: types.CHAR, value: 160 },\n    { type: types.CHAR, value: 5760 },\n    { type: types.RANGE, from: 8192, to: 8202 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n    { type: types.CHAR, value: 8239 },\n    { type: types.CHAR, value: 8287 },\n    { type: types.CHAR, value: 12288 },\n    { type: types.CHAR, value: 65279 }\n  ];\n};\n\nconst NOTANYCHAR = () => {\n  return [\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n  ];\n};\n\n// Predefined class objects.\nexports.words = () => ({ type: types.SET, set: WORDS(), not: false });\nexports.notWords = () => ({ type: types.SET, set: WORDS(), not: true });\nexports.ints = () => ({ type: types.SET, set: INTS(), not: false });\nexports.notInts = () => ({ type: types.SET, set: INTS(), not: true });\nexports.whitespace = () => ({ type: types.SET, set: WHITESPACE(), not: false });\nexports.notWhitespace = () => ({ type: types.SET, set: WHITESPACE(), not: true });\nexports.anyChar = () => ({ type: types.SET, set: NOTANYCHAR(), not: true });\n","module.exports = {\n  ROOT       : 0,\n  GROUP      : 1,\n  POSITION   : 2,\n  SET        : 3,\n  RANGE      : 4,\n  REPETITION : 5,\n  REFERENCE  : 6,\n  CHAR       : 7,\n};\n","const types = require('./types');\nconst sets  = require('./sets');\n\n\nconst CTRL = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^ ?';\nconst SLSH = { '0': 0, 't': 9, 'n': 10, 'v': 11, 'f': 12, 'r': 13 };\n\n/**\n * Finds character representations in str and convert all to\n * their respective characters\n *\n * @param {String} str\n * @return {String}\n */\nexports.strToChars = function(str) {\n  /* jshint maxlen: false */\n  var chars_regex = /(\\[\\\\b\\])|(\\\\)?\\\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z[\\\\\\]^?])|([0tnvfr]))/g;\n  str = str.replace(chars_regex, function(s, b, lbs, a16, b16, c8, dctrl, eslsh) {\n    if (lbs) {\n      return s;\n    }\n\n    var code = b ? 8 :\n      a16   ? parseInt(a16, 16) :\n      b16   ? parseInt(b16, 16) :\n      c8    ? parseInt(c8,   8) :\n      dctrl ? CTRL.indexOf(dctrl) :\n      SLSH[eslsh];\n\n    var c = String.fromCharCode(code);\n\n    // Escape special regex characters.\n    if (/[[\\]{}^$.|?*+()]/.test(c)) {\n      c = '\\\\' + c;\n    }\n\n    return c;\n  });\n\n  return str;\n};\n\n\n/**\n * turns class into tokens\n * reads str until it encounters a ] not preceeded by a \\\n *\n * @param {String} str\n * @param {String} regexpStr\n * @return {Array.<Array.<Object>, Number>}\n */\nexports.tokenizeClass = (str, regexpStr) => {\n  /* jshint maxlen: false */\n  var tokens = [];\n  var regexp = /\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\)(.)|([^\\]\\\\]))-(?:\\\\)?([^\\]]))|(\\])|(?:\\\\)?([^])/g;\n  var rs, c;\n\n\n  while ((rs = regexp.exec(str)) != null) {\n    if (rs[1]) {\n      tokens.push(sets.words());\n\n    } else if (rs[2]) {\n      tokens.push(sets.ints());\n\n    } else if (rs[3]) {\n      tokens.push(sets.whitespace());\n\n    } else if (rs[4]) {\n      tokens.push(sets.notWords());\n\n    } else if (rs[5]) {\n      tokens.push(sets.notInts());\n\n    } else if (rs[6]) {\n      tokens.push(sets.notWhitespace());\n\n    } else if (rs[7]) {\n      tokens.push({\n        type: types.RANGE,\n        from: (rs[8] || rs[9]).charCodeAt(0),\n        to: rs[10].charCodeAt(0),\n      });\n\n    } else if ((c = rs[12])) {\n      tokens.push({\n        type: types.CHAR,\n        value: c.charCodeAt(0),\n      });\n\n    } else {\n      return [tokens, regexp.lastIndex];\n    }\n  }\n\n  exports.error(regexpStr, 'Unterminated character class');\n};\n\n\n/**\n * Shortcut to throw errors.\n *\n * @param {String} regexp\n * @param {String} msg\n */\nexports.error = (regexp, msg) => {\n  throw new SyntaxError('Invalid regular expression: /' + regexp + '/: ' + msg);\n};\n"],"names":["Injectable","HttpClient","StaffService","constructor","http","listUsersFiltered","page","size","sort","dir","filters","post","getUserById","userId","get","updateUser","userObj","put","addUser","deleteUser","delete","changeUserPassword","password","changeActiveStatus","targetUserId","accept","changeBlockStatus","block","sendRegistrationEmail","providedIn","SubRange","low","high","length","overlaps","range","touches","add","Math","min","max","subtract","toString","DRange","a","b","ranges","_update_length","reduce","previous","_add","subrange","i","newRanges","slice","push","concat","forEach","_subtract","intersect","_intersect","index","join","clone","numbers","result","subranges","map","module","exports","ret","require","types","RandExp","regexp","m","_setDefaults","RegExp","ignoreCase","multiline","source","indexOf","Error","tokens","prototype","defaultRange","randInt","gen","_gen","token","groups","stack","str","n","l","type","ROOT","GROUP","followedBy","notFollowedBy","remember","groupNumber","undefined","options","_randSelect","POSITION","SET","expandedSet","_expand","String","fromCharCode","REPETITION","Infinity","value","REFERENCE","CHAR","code","_randBool","_toOtherCase","arr","RANGE","from","to","drange","set","j","otherCaseCode","not","floor","random","_range","randexp","_randexp","sugar","util","sets","positions","regexpStr","c","start","lastGroup","last","groupStack","repeatErr","error","strToChars","wordBoundary","nonWordBoundary","words","notWords","ints","notInts","whitespace","notWhitespace","test","parseInt","charCodeAt","begin","end","classTokens","tokenizeClass","anyChar","group","pop","rs","exec","INTS","WORDS","WHITESPACE","NOTANYCHAR","CTRL","SLSH","chars_regex","replace","s","lbs","a16","b16","c8","dctrl","eslsh","lastIndex","msg","SyntaxError"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3,4,5,6,7]}