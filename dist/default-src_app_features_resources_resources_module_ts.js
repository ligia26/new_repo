(self["webpackChunkbestinform"] = self["webpackChunkbestinform"] || []).push([["default-src_app_features_resources_resources_module_ts"],{

/***/ 36072:
/*!***********************************************************!*\
  !*** ./src/app/features/resources/_pipes/orderBy.pipe.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OrderByPipe": () => (/* binding */ OrderByPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 22560);


let OrderByPipe = class OrderByPipe {
  transform(array, field) {
    if (!Array.isArray(array)) {
      return;
    }
    array.sort((a, b) => {
      if (a[field] < b[field]) {
        return -1;
      } else if (a[field] > b[field]) {
        return 1;
      } else {
        return 0;
      }
    });
    return array;
  }
};
OrderByPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({
  name: 'orderBy'
})], OrderByPipe);


/***/ }),

/***/ 2232:
/*!***************************************************************************!*\
  !*** ./src/app/features/resources/_services/booking-timeslots.service.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BookingTimeslotsService": () => (/* binding */ BookingTimeslotsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let BookingTimeslotsService = class BookingTimeslotsService {
  constructor(http) {
    this.http = http;
    this.refreshServiceList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(false);
    this.serviceList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.deleteServiceList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
  }
  /** Listeners */
  refreshServiceListData() {
    return this.refreshServiceList$.asObservable();
  }
  serviceListData() {
    return this.serviceList$.asObservable();
  }
  /** Custom Functions */
  addServiceToList(service) {
    this.serviceList$.next(this.serviceList$.getValue().concat(service));
  }
  addServiceToDeleteList(service) {
    this.deleteServiceList$.next(this.deleteServiceList$.getValue().concat(service));
  }
  //------------------REQUESTS------------------
  getServicesByResourceId(resourceId) {
    return this.http.get('/bestinform/getBookingTimeSlotListByResourceId?resourceId=' + resourceId);
  }
  createService(resourceId, service) {
    return this.http.post('/bestinform/createBookingTimeSlot?resourceId=' + resourceId, service);
  }
  updateServiceByServiceId(serviceId, service) {
    return this.http.put('/bestinform/updateBookingTimeSlot?bookingTimeSlotId=' + serviceId, service);
  }
  deleteService(serviceId) {
    return this.http.delete('/bestinform/deleteBookingTimeSlotById?bookingTimeSlotId=' + serviceId);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
BookingTimeslotsService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], BookingTimeslotsService);


/***/ }),

/***/ 16203:
/*!**************************************************************************!*\
  !*** ./src/app/features/resources/_services/cultural-booking.service.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CulturalBookingService": () => (/* binding */ CulturalBookingService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let CulturalBookingService = class CulturalBookingService {
  constructor(http) {
    this.http = http;
    this.culturalRoom$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(null);
  }
  culturalRoomData() {
    return this.culturalRoom$.asObservable();
  }
  //------------------REQUESTS------------------
  createCulturalRoom(resourceId, culturalRoom) {
    return this.http.post('/bestinform/createCulturalRoom?resourceId=' + resourceId, culturalRoom);
  }
  updateCulturalRoom(culturalRoomId, newCulturalRoom) {
    return this.http.put('/bestinform/updateCulturalRoom?culturalRoomId=' + culturalRoomId, newCulturalRoom);
  }
  getResourceCulturalRooms(resourceId) {
    return this.http.get('/bestinform/getResourceCulturalRooms?resourceId=' + resourceId);
  }
  getCulturalRoomById(culturalRoomId) {
    return this.http.get('/bestinform/getCulturalRoomById?culturalRoomId=' + culturalRoomId);
  }
  deleteCulturalRoom(culturalRoomId) {
    return this.http.delete('/bestinform/deleteCulturalRoom?culturalRoomId=' + culturalRoomId);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
CulturalBookingService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], CulturalBookingService);


/***/ }),

/***/ 87491:
/*!**************************************************************!*\
  !*** ./src/app/features/resources/_services/menu.service.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MenuService": () => (/* binding */ MenuService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let MenuService = class MenuService {
  constructor(http) {
    this.http = http;
    this.refreshMenuList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(false);
    this.menuList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.deleteArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.menuId$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(undefined);
  }
  refreshMenuListData() {
    return this.refreshMenuList$.asObservable();
  }
  menuListData() {
    return this.menuList$.asObservable();
  }
  addCategoryToList(categ) {
    this.menuList$.next(this.menuList$.getValue().concat(categ));
  }
  addCategoryToDeleteArray(categ) {
    this.deleteArray$.next(this.deleteArray$.getValue().concat(categ));
  }
  //req
  createMenu(resourceId, menu) {
    return this.http.post('/bestinform/createResourceMenu?resourceId=' + resourceId, menu);
  }
  getMenuById(menuId) {
    return this.http.get('/bestinform/getMenuById?menuId=' + menuId);
  }
  getMenuByResourceId(resourceId) {
    return this.http.get('/bestinform/getResourceMenu?resourceId=' + resourceId);
  }
  updateMenu(menuId, menu) {
    return this.http.put('/bestinform/updateMenu?menuId=' + menuId, menu);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
MenuService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], MenuService);


/***/ }),

/***/ 83590:
/*!**********************************************************************!*\
  !*** ./src/app/features/resources/_services/product-list.service.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProductListService": () => (/* binding */ ProductListService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let ProductListService = class ProductListService {
  constructor(http) {
    this.http = http;
    this.refreshProductList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(false);
    this.productsList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.deleteProdList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.imagesArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.attachmentArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
  }
  /** Listeners */
  refreshProductListData() {
    return this.refreshProductList$.asObservable();
  }
  productListData() {
    return this.productsList$.asObservable();
  }
  /** Custom Functions */
  addProductToList(product) {
    this.productsList$.next(this.productsList$.getValue().concat(product));
  }
  addProductToDeleteList(product) {
    this.deleteProdList$.next(this.deleteProdList$.getValue().concat(product));
  }
  addImgtoImgList(img) {
    this.imagesArray$.next(this.imagesArray$.getValue().concat(img));
  }
  addAttachmentToList(attach) {
    this.attachmentArray$.next(this.attachmentArray$.getValue().concat(attach));
  }
  //------------------REQUESTS------------------
  createProduct(resourceId, product) {
    return this.http.post('/bestinform/createProduct?resourceId=' + resourceId, product);
  }
  getProductsByResourceId(resourceId) {
    return this.http.get('/bestinform/getProductListByResourceId?resourceId=' + resourceId);
  }
  updateProduct(productId, product) {
    return this.http.put('/bestinform/updateProduct?productId=' + productId, product);
  }
  deleteProduct(productId) {
    return this.http.delete('/bestinform/deleteProduct?productId=' + productId);
  }
  uploadImageForProduct(productId, image) {
    return this.http.post('/bestinform/uploadProductImages?productId=' + productId, image);
  }
  uploadAttachmentForProduct(productId, file) {
    return this.http.post('/bestinform/uploadProductAttachment?productId=' + productId, file);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
ProductListService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], ProductListService);


/***/ }),

/***/ 2933:
/*!************************************************************************!*\
  !*** ./src/app/features/resources/_services/rental-booking.service.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RentalBookingService": () => (/* binding */ RentalBookingService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let RentalBookingService = class RentalBookingService {
  constructor(http) {
    this.http = http;
    this.refreshRoomList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(false);
    this.roomList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.deleteArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.imagesArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
  }
  /** Listeners */
  refreshRoomListData() {
    return this.refreshRoomList$.asObservable();
  }
  roomListData() {
    return this.roomList$.asObservable();
  }
  /** TO DO: de sters*/
  deleteArrayData() {
    return this.deleteArray$.asObservable();
  }
  imagesArrayData() {
    return this.imagesArray$.asObservable();
  }
  /** Custom Functions */
  addRoomToList(room) {
    this.roomList$.next(this.roomList$.getValue().concat(room));
  }
  addRoomToDeleteArray(room) {
    this.deleteArray$.next(this.deleteArray$.getValue().concat(room));
  }
  addImgToImagesArray(img) {
    this.imagesArray$.next(this.imagesArray$.getValue().concat(img));
  }
  /** API Requests  */
  createRoom(id, data) {
    return this.http.post('/bestinform/createRoom?resourceId=' + id, data);
  }
  createRooms(id, data) {
    return this.http.post('/bestinform/createRooms?resourceId=' + id, data);
  }
  updateRoom(id, data) {
    return this.http.put('/bestinform/updateRoom?roomItemId=' + id, data);
  }
  deleteRoom(roomId) {
    return this.http.delete('/bestinform/deleteRoom?roomItemId=' + roomId);
  }
  getRoomList(resourceId) {
    return this.http.get('/bestinform/getRoomListByResourceId?resourceId=' + resourceId);
  }
  uploadRoomThumbnail(roomId, image) {
    return this.http.post('/bestinform/uploadRoomImage?roomId=' + roomId, image);
  }
  uploadRoomGallery(roomId, images) {
    return this.http.post('/bestinform/uploadRoomItemImages?roomItemId=' + roomId, images);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
RentalBookingService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], RentalBookingService);


/***/ }),

/***/ 9845:
/*!*****************************************************************!*\
  !*** ./src/app/features/resources/_services/stepper.service.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StepperService": () => (/* binding */ StepperService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let StepperService = class StepperService {
  // stepperStage$ = new BehaviorSubject('Configure/Edit');
  constructor(http) {
    this.http = http;
    // Stepper
    this.step$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(0);
    this.stepsTitle$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.stepperStage$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject('Add');
    // Listen to Step Stage Changes
    this.getStepperStage().subscribe({
      next: stage => {
        console.log('STAGE', stage);
        this.changeStepperStage(stage);
      }
    });
  }
  /** Stepper Listener*/
  getStep() {
    return this.step$.asObservable();
  }
  getStepsTitle() {
    return this.stepsTitle$.asObservable();
  }
  getStepperStage() {
    return this.stepperStage$.asObservable();
  }
  /** Go to next step*/
  nextStep(notCultural) {
    // Check if you get to the last step
    if (this.step$.getValue() === this.stepsTitle$.getValue()[this.stepsTitle$.getValue().length - 1].id) {
      return;
    }
    if (notCultural) {
      // Skip related
      this.step$.next(this.step$.getValue() + 2);
    } else {
      // Go one step forward
      this.step$.next(this.step$.getValue() + 1);
    }
  }
  /** Go to previous step*/
  prevStep(notCultural) {
    // Check if you get to the first step
    if (this.step$.getValue() === this.stepsTitle$.getValue()[0].id) {
      return;
    }
    if (notCultural) {
      // Skip related
      this.step$.next(this.step$.getValue() - 2);
    } else {
      // Go one step back
      this.step$.next(this.step$.getValue() - 1);
    }
  }
  /** Change Stepper Stage*/
  changeStepperStage(stage) {
    if (stage === 'Add') {
      return this.stepsTitle$.next([{
        id: 0,
        stepName: 'Domeniul'
      }, {
        id: 1,
        stepName: 'Categorie resurse'
      }, {
        id: 2,
        stepName: 'Tipul de resursă'
      }, {
        id: 3,
        stepName: 'Configurație'
      }]);
    } else if (stage === 'Configure/Edit') {
      return this.stepsTitle$.next([{
        id: 0,
        stepName: 'Informatii generale'
      }, {
        id: 1,
        stepName: 'Facilități'
      }, {
        id: 2,
        stepName: 'Setup'
      }, {
        id: 3,
        stepName: 'Resurse asociate'
      }, {
        id: 4,
        stepName: 'Politici'
      }, {
        id: 5,
        stepName: 'Galerie'
      }, {
        id: 6,
        stepName: 'Payment'
      }]);
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
StepperService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], StepperService);


/***/ }),

/***/ 33224:
/*!*************************************************************************!*\
  !*** ./src/app/features/resources/_services/tickets-booking.service.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TicketsBookingService": () => (/* binding */ TicketsBookingService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var _resources_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resources.service */ 39266);





let TicketsBookingService = class TicketsBookingService {
  constructor(http, resourceService) {
    this.http = http;
    this.resourceService = resourceService;
    this.refreshTicketList$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
    this.ticketsList$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject([]);
    this.createArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject([]);
    this.refreshCreateArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
    this.initList$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject([]);
    this.deleteArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject([]);
    this.refreshDeleteArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
    this.updateArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject([]);
    this.refreshUpdateArray$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
  }
  /** Listeners */
  refreshTicketListData() {
    return this.refreshTicketList$.asObservable();
  }
  refreshTicketCreateData() {
    return this.refreshCreateArray$.asObservable();
  }
  refreshTicketDeleteData() {
    return this.refreshDeleteArray$.asObservable();
  }
  refreshTicketUpdateData() {
    return this.refreshUpdateArray$.asObservable();
  }
  ticketListData() {
    return this.ticketsList$.asObservable();
  }
  createArrayData() {
    return this.createArray$.asObservable();
  }
  updateArrayData() {
    return this.updateArray$.asObservable();
  }
  /** Custom Functions */
  addTicketToList(ticket) {
    this.ticketsList$.next(this.ticketsList$.getValue().concat(ticket));
  }
  addTicketToCreateArrayEdit(ticket) {
    this.createArray$.next(this.createArray$.getValue().concat(ticket));
  }
  addTicketToDeleteArray(ticket) {
    this.deleteArray$.next(this.deleteArray$.getValue().concat(ticket));
  }
  addTicketToUpdateArray(ticket) {
    this.updateArray$.next(this.updateArray$.getValue().concat(ticket));
  }
  //------------------REQUESTS------------------
  createTicket(resourceId, ticket) {
    return this.http.post('/bestinform/createTicket?resourceId=' + resourceId, ticket);
  }
  createTickets(resourceId, tickets) {
    return this.http.post('/bestinform/createTickets?resourceId=' + resourceId, tickets);
  }
  updateTicket(ticketId, ticket) {
    return this.http.put('/bestinform/updateTicket?ticketId=' + ticketId, ticket);
  }
  deleteTicket(ticketId) {
    return this.http.delete('/bestinform/deleteTicket?ticketId=' + ticketId);
  }
  getTicketList(resourceId) {
    return this.http.get('/bestinform/getTicketListByResourceId?resourceId=' + resourceId);
    // .pipe(tap((res:any) => this.initList$.next(res)))
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient
  }, {
    type: _resources_service__WEBPACK_IMPORTED_MODULE_0__.ResourcesService
  }];
};
TicketsBookingService = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)({
  providedIn: 'root'
})], TicketsBookingService);


/***/ }),

/***/ 23235:
/*!********************************************************************!*\
  !*** ./src/app/features/resources/_services/timepicker.service.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimepickerService": () => (/* binding */ TimepickerService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let TimepickerService = class TimepickerService {
  constructor(http) {
    this.http = http;
    this.refreshTimetableList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(false);
    this.timetableList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.refreshTimepickerList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(false);
    this.timepickerList$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
    this.timepickerId$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(undefined);
    this.timePicker$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(undefined);
    this.changePolicies$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(undefined);
    this.bookingPolicies$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(undefined);
    this.hasFreeEntry = false;
  }
  setFreeEntry(newValue) {
    this.hasFreeEntry = newValue;
  }
  getFreeEntry() {
    return this.hasFreeEntry;
  }
  refreshTimetableListData() {
    return this.refreshTimetableList$.asObservable();
  }
  refreshTimepickerListData() {
    return this.refreshTimepickerList$.asObservable();
  }
  // ------------------- REQUESTS ------------------
  createTimepicker(resourceId, timepicker) {
    return this.http.post('/bestinform/createBookingTimePicker?resourceId=' + resourceId, timepicker);
  }
  getTimepickerByResourceId(resourceId) {
    return this.http.get('/bestinform/getBookingTimePickerByResourceId?resourceId=' + resourceId);
  }
  updateTimepicker(timepickerId, timepicker) {
    return this.http.put('/bestinform/updateBookingTimePicker?bookingTimePickerId=' + timepickerId, timepicker);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
TimepickerService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], TimepickerService);


/***/ }),

/***/ 35238:
/*!********************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/provider-create-shared-experience/provider-create-shared-experience.component.ts ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProviderCreateSharedExperienceComponent": () => (/* binding */ ProviderCreateSharedExperienceComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _provider_create_shared_experience_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider-create-shared-experience.component.html?ngResource */ 73941);
/* harmony import */ var _provider_create_shared_experience_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider-create-shared-experience.component.scss?ngResource */ 95569);
/* harmony import */ var _provider_create_shared_experience_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_provider_create_shared_experience_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _shared_services_shared_experiences_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/_services/shared-experiences.service */ 229);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_services/resources.service */ 39266);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/_services/resources.service */ 3145);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/_services/toast.service */ 62941);












let ProviderCreateSharedExperienceComponent = class ProviderCreateSharedExperienceComponent {
  constructor(dialogRef, resourceId, sharedExperienceService, resourceService, resourcesService, datePipe, fb, toastService) {
    this.dialogRef = dialogRef;
    this.resourceId = resourceId;
    this.sharedExperienceService = sharedExperienceService;
    this.resourceService = resourceService;
    this.resourcesService = resourcesService;
    this.datePipe = datePipe;
    this.fb = fb;
    this.toastService = toastService;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
    this.timeslotsArray = [];
    this.chosenResourceTimeslots = [];
    this.today = new Date();
    this.showErrorMsg = false;
  }
  ngOnInit() {
    console.log(this.resourceId);
    this.getCurrentResource();
    this.getTimepickerForResource(this.resourceId);
    this.formInit();
  }
  formInit() {
    this.sharedExperienceForm = this.fb.group({
      name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required],
      description: [''],
      hasParticipantsLimit: [false],
      participantsMaxNumber: [0]
    });
  }
  getCurrentResource() {
    this.resourceService.getResourceById(this.resourceId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: resource => {
        this.currentResource = resource;
      }
    });
  }
  getTimepickerForResource(resourceId) {
    this.resourcesService.getTimeslotsByResourceId(resourceId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: timeslots => {
        this.timeslotsArray = timeslots;
        console.log('toate activitatile', timeslots);
        console.log('TIMESLOTS FOR CHOSEN RS', timeslots[0]?.slotItems);
        this.bookingTimeslotId = null;
        this.date = null;
      }
    });
  }
  bookingTimeslotChanged(id) {
    console.log(id);
    this.bookingTimeslotId = id;
    this.date = null;
    this.chosenResourceTimeslots = [];
  }
  dateChanged() {
    console.log(this.datePipe.transform(this.date, 'EEEE'));
    this.slotChosen = undefined;
    this.resourcesService.getAvailableSlotByDate(this.bookingTimeslotId, this.datePipe.transform(this.date, 'yyyy-MM-dd')).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: timeslots => {
        console.log('TIMESLOTS FOR CHOSEN RS', timeslots);
        this.chosenResourceTimeslots = timeslots;
      }
    });
  }
  close() {
    this.dialogRef.close();
  }
  save() {
    this.sharedExperienceForm.markAllAsTouched();
    if (this.sharedExperienceForm.valid) {
      const experienceObj = {
        ...this.sharedExperienceForm.value,
        startDate: this.datePipe.transform(this.date, 'yyyy-MM-dd'),
        startHour: this.slotChosen?.startHour,
        resourceId: this.resourceId,
        timeSlotReservation: {
          itemsNumber: 1,
          date: this.datePipe.transform(this.date, 'yyyy-MM-dd'),
          hour: this.slotChosen?.startHour,
          bookingTimeSlotId: this.bookingTimeslotId
        }
      };
      console.log('exp', experienceObj);
      this.sharedExperienceService.createSharedExperience(experienceObj).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.takeUntil)(this.ngUnsubscribe)).subscribe({
        next: res => {
          console.log('dupa create', res);
          if (res.success) {
            this.toastService.showToast('Success', 'Your shared resource was created!', "success");
            this.close();
          }
        }
      });
    }
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__.MAT_DIALOG_DATA]
    }]
  }, {
    type: _shared_services_shared_experiences_service__WEBPACK_IMPORTED_MODULE_2__.SharedExperiencesService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_4__.ResourcesService
  }, {
    type: _angular_common__WEBPACK_IMPORTED_MODULE_11__.DatePipe
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormBuilder
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_5__.ToastService
  }];
};
ProviderCreateSharedExperienceComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_10__.Component)({
  selector: 'app-provider-create-shared-experience',
  template: _provider_create_shared_experience_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.DatePipe],
  styles: [(_provider_create_shared_experience_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ProviderCreateSharedExperienceComponent);


/***/ }),

/***/ 31117:
/*!******************************************************************************************!*\
  !*** ./src/app/features/resources/components/provider-lobby/provider-lobby.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProviderLobbyComponent": () => (/* binding */ ProviderLobbyComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _provider_lobby_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider-lobby.component.html?ngResource */ 97747);
/* harmony import */ var _provider_lobby_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider-lobby.component.scss?ngResource */ 7782);
/* harmony import */ var _provider_lobby_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_provider_lobby_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _shared_services_shared_experiences_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/_services/shared-experiences.service */ 229);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/_services/userData.service */ 32763);








let ProviderLobbyComponent = class ProviderLobbyComponent {
  constructor(dialogRef, resourceId, sharedExperienceService, userDataService) {
    this.dialogRef = dialogRef;
    this.resourceId = resourceId;
    this.sharedExperienceService = sharedExperienceService;
    this.userDataService = userDataService;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subject();
    this.isHost = false;
  }
  ngOnInit() {
    this.getSharedExperience();
  }
  getSharedExperience() {
    this.sharedExperienceService.getSharedExperienceById(this.resourceId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: experience => {
        console.log('experienta mea', experience);
        this.currentExperience = {
          ...experience
        };
        this.makeParticipantsArrays();
        console.log('experienta curenta', this.currentExperience);
      }
    });
  }
  makeParticipantsArrays() {
    this.arrayParticipants = [];
    this.arrayPending = [];
    if (this.currentExperience?.participants.length > 0) {
      this.currentExperience?.participants.forEach(participant => {
        console.log(participant);
        if (participant.accepted && participant.type !== 'owner') {
          this.arrayParticipants.push(participant);
        } else if (!participant.accepted && participant.type === 'request') {
          this.arrayPending.push(participant);
          console.log(this.arrayPending);
        }
      });
    }
  }
  checkIfHost() {
    this.userDataService.getCurrentUser().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: user => {
        this.currentUserId = user.id;
        if (this.currentExperience.userId === user.id) {
          this.isHost = true;
        }
      }
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__.MAT_DIALOG_DATA]
    }]
  }, {
    type: _shared_services_shared_experiences_service__WEBPACK_IMPORTED_MODULE_2__.SharedExperiencesService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_3__.UserDataService
  }];
};
ProviderLobbyComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-provider-lobby',
  template: _provider_lobby_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_provider_lobby_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ProviderLobbyComponent);


/***/ }),

/***/ 47884:
/*!********************************************************************************************************!*\
  !*** ./src/app/features/resources/components/resource-radio-option/resource-radio-option.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourceRadioOptionComponent": () => (/* binding */ ResourceRadioOptionComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _resource_radio_option_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resource-radio-option.component.html?ngResource */ 1884);
/* harmony import */ var _resource_radio_option_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource-radio-option.component.scss?ngResource */ 27151);
/* harmony import */ var _resource_radio_option_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_resource_radio_option_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 22560);




let ResourceRadioOptionComponent = class ResourceRadioOptionComponent {
  constructor(cd) {
    this.cd = cd;
  }
  ngAfterViewInit() {
    this.cd.detectChanges();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ChangeDetectorRef
  }];
  static #_2 = this.propDecorators = {
    iconPath: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    optionName: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    optionId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    initialValue: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }]
  };
};
ResourceRadioOptionComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  selector: 'app-resource-radio-option',
  template: _resource_radio_option_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_resource_radio_option_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ResourceRadioOptionComponent);


/***/ }),

/***/ 280:
/*!************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/shared-experiences-list/shared-experiences-list.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SharedExperiencesListComponent": () => (/* binding */ SharedExperiencesListComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _shared_experiences_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared-experiences-list.component.html?ngResource */ 49019);
/* harmony import */ var _shared_experiences_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared-experiences-list.component.scss?ngResource */ 63971);
/* harmony import */ var _shared_experiences_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_shared_experiences_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _shared_services_shared_experiences_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/_services/shared-experiences.service */ 229);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_services/resources.service */ 39266);
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/sort */ 92197);
/* harmony import */ var _provider_lobby_provider_lobby_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../provider-lobby/provider-lobby.component */ 31117);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/_services/userData.service */ 32763);











let SharedExperiencesListComponent = class SharedExperiencesListComponent {
  constructor(dialogRef, resourceId, sharedExperienceService, resourceService, dialog, userService) {
    this.dialogRef = dialogRef;
    this.resourceId = resourceId;
    this.sharedExperienceService = sharedExperienceService;
    this.resourceService = resourceService;
    this.dialog = dialog;
    this.userService = userService;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
    this.pageNumber = 0;
    this.pageSize = 10;
    this.pageSizeArray = [10, 25, 50, 100];
    this.sorting = 'date';
    this.dir = 'desc';
    this.dataSource = [];
    this.displayedColumns = ['id', 'name', 'date', 'time', 'participants', 'actions'];
  }
  ngOnInit() {
    this.getCurrentUser();
    console.log('list res id', this.resourceId);
    // this.getSharedExperiencesList();
    this.getCurrentResource();
  }
  pageChanged(event) {
    console.log('page changed');
  }
  getCurrentUser() {
    this.userService.getCurrentUser().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: user => {
        this.userId = user.id;
        this.getSharedExperiencesList();
      }
    });
  }
  getSharedExperiencesList() {
    const filters = {
      resourceId: this.resourceId,
      userId: this.userId
    };
    this.sharedExperienceService.listSharedExperiencesFiltered(this.pageNumber, this.pageSize, this.sorting, this.dir, filters).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: expList => {
        console.log('EXP LIST', expList);
        this.dataSource = expList?.content;
        this.totalElements = expList?.totalElements;
      }
    });
  }
  getCurrentResource() {
    this.resourceService.getResourceById(this.resourceId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: resource => {
        this.currentResource = resource;
      }
    });
  }
  openSharedExperienceLobbyModal(resourceId) {
    this.dialog.open(_provider_lobby_provider_lobby_component__WEBPACK_IMPORTED_MODULE_4__.ProviderLobbyComponent, {
      width: '1000px',
      height: '750px',
      data: resourceId
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__.MAT_DIALOG_DATA]
    }]
  }, {
    type: _shared_services_shared_experiences_service__WEBPACK_IMPORTED_MODULE_2__.SharedExperiencesService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__.MatDialog
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__.UserDataService
  }];
  static #_2 = this.propDecorators = {
    sort: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewChild,
      args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_10__.MatSort, {
        static: true
      }]
    }]
  };
};
SharedExperiencesListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
  selector: 'app-shared-experiences-list',
  template: _shared_experiences_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_shared_experiences_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], SharedExperiencesListComponent);


/***/ }),

/***/ 75522:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/add-mode/add-new-template/add-new-template.component.ts ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddNewTemplateComponent": () => (/* binding */ AddNewTemplateComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_new_template_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-new-template.component.html?ngResource */ 65674);
/* harmony import */ var _add_new_template_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-new-template.component.scss?ngResource */ 39750);
/* harmony import */ var _add_new_template_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_add_new_template_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../_services/stepper.service */ 9845);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/_services/resources.service */ 3145);
/* harmony import */ var _shared_services_domains_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../shared/_services/domains.service */ 58820);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../shared/_services/createResource.service */ 92821);












let AddNewTemplateComponent = class AddNewTemplateComponent {
  /** Add Stage  - END */
  constructor(resourceService, stepperService, settingService, domainSv, domainService, router, route, createResourceService) {
    this.resourceService = resourceService;
    this.stepperService = stepperService;
    this.settingService = settingService;
    this.domainSv = domainSv;
    this.domainService = domainService;
    this.router = router;
    this.route = route;
    this.createResourceService = createResourceService;
    this.categoriesToBeExcluded = [];
    // Form
    this.templateForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroup({
      domain: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
      categoryId: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
      resourceTypeId: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required)
    });
    this.displayForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroup({
      domain: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
      categoryId: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
      resourceTypeId: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required)
    });
    // Backend Data
    this.optionsList = [];
  }
  ngOnInit() {
    this.getEventCategId();
    this.getTransportCategId();
    this.getCategoriesId();
    this.providerData = this.createResourceService.providerData$.getValue();
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            if(this.templateForm.value.resourceTypeId){
                this.stepperService.step$.next(2);
            }else if(this.templateForm.value.resourceTypeId){
                this.stepperService.step$.next(1);
            }else if(this.templateForm.value.domain){
                this.stepperService.step$.next(0);
            }
              this.dataForAddStage();
         }
    })*/
    // Listen to step changes
    this.stepperService.getStep().subscribe({
      next: stepNumber => this.step = stepNumber
    });
    this.dataForAddStage();
  }
  getDomain(domainId) {
    this.domainSv.getDomainById(domainId).subscribe({
      next: domain => {
        this.domain = domain.nameEn;
      }
    });
  }
  getCategory(categoryId) {
    this.domainService.getResourceCategoryById(categoryId).subscribe({
      next: categ => {
        this.category = categ.nameEn;
      }
    });
  }
  getResourceType(resType) {
    this.domainService.getResourceTypeById(resType).subscribe({
      next: resType => {
        this.resourceType = resType.nameEn;
      }
    });
  }
  getEventCategId() {
    this.settingService.getSystemSetting().subscribe({
      next: resp => {
        this.eventsId = resp.eventCategoryId;
      }
    });
  }
  getTransportCategId() {
    this.settingService.getSystemSetting().subscribe({
      next: resp => {
        this.transportId = resp.transportCategoryId;
      }
    });
  }
  getCategoriesId() {
    this.settingService.getSystemSetting().subscribe({
      next: resp => {
        this.categoriesToBeExcluded.push(resp.transportCategoryId);
        this.categoriesToBeExcluded.push(resp.eventCategoryId);
      }
    });
  }
  /** Get BackEnd Data for Options*/
  dataForAddStage() {
    console.log('add stage');
    // Data Loaded
    this.dataLoaded = false;
    switch (this.step) {
      case 0:
        this.resourceService.getListOfDomains().subscribe({
          next: data => {
            this.optionsList = data.filter(domain => domain.nameEn !== 'Jobs Market');
            this.templateForm.patchValue({
              domain: this.templateForm.value.domain.length > 0 ? this.templateForm.value.domain : data[0].id
            });
            this.getDomain(this.templateForm.value.domain);
            // Data Loaded
            this.dataLoaded = true;
            console.log(this.templateForm.get('domain'));
          },
          error: error => console.log(error)
        });
        break;
      case 1:
        this.resourceService.getAllResourceCategoriesByResourceDomain(this.templateForm.value.domain).subscribe({
          next: data => {
            this.optionsList = data;
            this.categoriesToBeExcluded.forEach(id => {
              this.optionsList = this.optionsList.filter(categ => categ.id !== id);
            });
            this.getDomain(this.templateForm.value.domain);
            this.templateForm.patchValue({
              categoryId: this.templateForm.value.categoryId.length > 0 ? this.templateForm.value.categoryId : data[0].id
            });
            this.getCategory(this.templateForm.value.categoryId);
            // Data Loaded
            this.dataLoaded = true;
          },
          error: error => console.log(error)
        });
        break;
      case 2:
        this.resourceService.getAllResourceTypesByResourceCategory(this.templateForm.value.categoryId).subscribe({
          next: data => {
            this.optionsList = data;
            this.getCategory(this.templateForm.value.categoryId);
            this.templateForm.patchValue({
              resourceTypeId: this.templateForm.value.resourceTypeId.length > 0 ? this.templateForm.value.resourceTypeId : data[0].id
            });
            this.getResourceType(this.templateForm.value.resourceTypeId);
            // Data Loaded
            this.dataLoaded = true;
          },
          error: error => console.log(error)
        });
        break;
      case 3:
        // Add Template Type Object
        this.resourceService.addTemplate(this.templateForm.value);
        break;
      default:
        this.optionsList = [];
    }
  }
  goToStep(value) {
    this.stepperService.step$.next(value);
    this.dataForAddStage();
  }
  /** Go to next step*/
  nextStep() {
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  checkIfFirstStep() {
    if (this.step === 0) {
      void this.router.navigate(['../list'], {
        relativeTo: this.route
      });
      return;
    }
    this.prevStep();
    this.dataForAddStage();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_2__.ResourcesService
  }, {
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__.StepperService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_4__.SystemSettingsService
  }, {
    type: _shared_services_domains_service__WEBPACK_IMPORTED_MODULE_6__.DomainsService
  }, {
    type: _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_5__.ResourcesService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_9__.Router
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_9__.ActivatedRoute
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_7__.CreateResourceService
  }];
};
AddNewTemplateComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_11__.Component)({
  selector: 'app-add-new-template',
  template: _add_new_template_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_add_new_template_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AddNewTemplateComponent);


/***/ }),

/***/ 37547:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/facilities/facilities.component.ts ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FacilitiesComponent": () => (/* binding */ FacilitiesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _facilities_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./facilities.component.html?ngResource */ 76432);
/* harmony import */ var _facilities_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./facilities.component.scss?ngResource */ 41218);
/* harmony import */ var _facilities_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_facilities_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../_services/menu.service */ 87491);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_14__);




















let FacilitiesComponent = class FacilitiesComponent {
  constructor(resourceService, stepperService, userService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService) {
    this.resourceService = resourceService;
    this.stepperService = stepperService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.facilitiesByCategory = [];
    this.form = this.resourceService.facilitiesForm$.getValue();
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    // Facilities Section
    this.createFacilitiesSection(this.resourceService.attributesFromResourceTemplate$.getValue());
    // Create Dynamic Form
    this.createDynamicForm(this.resourceService.attributesFromResourceTemplate$.getValue().filter(item => item.tabName === 'facilities'));
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }
  /** Create Facilities Section */
  createFacilitiesSection(facilities) {
    // Store facilities attributes ID
    const facilitiesAttributeIds = facilities.find(section => section.tabName === 'facilities').tabAttributes.map(attribute => attribute.id);
    // Get Facilities Attributes
    this.resourceService.getAttributes(facilitiesAttributeIds).subscribe({
      next: data => {
        // Sort facilities by categoryName
        this.facilitiesByCategory = data.reduce((acc, item) => {
          // Check if there is an object with the same categoryZone value
          const index = acc.findIndex(x => x.categoryName === item.categoryName);
          // If - There is an categoryZone with the same value, then we add the attributes
          // Else - We create one
          if (index !== -1) {
            acc[index].tabAttributes.push({
              id: item.id,
              categoryId: item.categoryId,
              name: item.name,
              order: item.order,
              size: item.size,
              valueType: item.valueType
            });
          } else {
            acc.push({
              categoryName: item.categoryName,
              tabAttributes: [{
                id: item.id,
                categoryId: item.categoryId,
                name: item.name,
                order: item.order,
                size: item.size,
                valueType: item.valueType
              }]
            });
          }
          // Return the transform array after all items have been processed
          return acc;
        }, []);
        this.resourceService.facilitiesByCategory$.next(this.facilitiesByCategory);
      },
      error: error => console.log(error)
    });
  }
  /** Input Column Creator*/
  columnSize(size) {
    switch (size) {
      case 'full_row':
        return 'col-12';
      case 'half_row':
        return 'col-md-6 col-12';
      default:
        return 'col-12';
    }
  }
  /** Create Dynamic Form */
  createDynamicForm(formSection) {
    // Loop through from Sections
    for (const section of formSection) {
      // Loop through section attributes
      for (const inputField of section.tabAttributes) {
        // Create form inputs
        if (inputField.valueType === 'toggle') {
          this.form.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(inputField.attributeValue ? inputField.attributeValue : 'false'));
        }
        this.form.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(inputField.attributeValue ? inputField.attributeValue : '', inputField.propertyRequired ? _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required : null));
      }
    }
  }
  /** Go to next step*/
  nextStep() {
    // // Mark as touched
    this.form.markAllAsTouched();
    // Check form validation
    if (this.form.invalid) {
      return;
    }
    // Go the next step
    this.stepperService.nextStep();
  }
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.resourceService.relatedResources$.next([]);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      bookingPolicies: combineForms.value?.bookingPolicies ? {
        depositRequiredPercentage: combineForms.value.bookingPolicies?.depositRequiredPercentage || 0,
        depositRequiredAmount: combineForms.value.bookingPolicies?.depositRequiredAmount || 0,
        advancePartialPaymentPercentage: combineForms.value.bookingPolicies?.advancePartialPaymentPercentage || 0,
        advanceFullPayment: combineForms.value.bookingPolicies?.advanceFullPayment || false
      } : this.resourceService.resourceTemplateData$.getValue()?.bookingPolicies,
      startDate: combineForms.value?.startDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment__WEBPACK_IMPORTED_MODULE_14___default()(combineForms.value?.startDate)?.format('YYYY-MM-DDTHH:mm') : null,
      endDate: combineForms.value?.endDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment__WEBPACK_IMPORTED_MODULE_14___default()(combineForms.value?.endDate)?.format('YYYY-MM-DDTHH:mm') : null,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        const currentRelatedRes = this.resourceService.relatedResources$.getValue();
        const resourceRelatedRes = this.resourceService.resourceTemplateData$.getValue()?.relatedResources;
        if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id === resourceRelatedRes[0]) {
          // nu fac nimic
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id !== resourceRelatedRes[0]) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if ((resourceRelatedRes?.length === 0 || !resourceRelatedRes) && currentRelatedRes?.length > 0) {
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length === 0) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
        }
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log('ATTACHMENT', attach);
                        if (product.id === attach.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', attach.attachmentFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('attachment uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log('ATTACHMENT', attach);
                        if (product.id === attach.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', attach.attachmentFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('attachment uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea atasamentului!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  ngOnDestroy() {
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_2__.ResourcesService
  }, {
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__.StepperService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_13__.MenuService
  }];
};
FacilitiesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_19__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_20__.Component)({
  selector: 'app-facilities',
  template: _facilities_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_facilities_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], FacilitiesComponent);


/***/ }),

/***/ 22646:
/*!*************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/gallery/gallery.component.ts ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GalleryComponent": () => (/* binding */ GalleryComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _gallery_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gallery.component.html?ngResource */ 74110);
/* harmony import */ var _gallery_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gallery.component.scss?ngResource */ 39348);
/* harmony import */ var _gallery_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_gallery_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../_services/stepper.service */ 9845);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../_services/resources.service */ 39266);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../_services/cultural-booking.service */ 16203);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_15__);





















let GalleryComponent = class GalleryComponent {
  constructor(stepperService, resourceService, userService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.resourceService = resourceService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_16__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    this.form = this.resourceService.filesForm$.getValue();
    this.resourceForm = this.resourceService.resourceData.getValue();
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.galleryUrls = [];
    this.galleryFiles = [];
    this.videoUrls = [];
    this.videoFiles = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  // resourceId = this.resourceService.resourceId$.getValue();
  ngOnInit() {
    this.resourceService.getResourceId().subscribe({
      next: id => {
        if (id) this.resourceId = id;
      }
    });
    console.log("on init gallery", this.resourceId);
    console.log("on init gallery 2", this.resourceForm);
    console.log("on init gallery 3", this.form.value);
    console.log("on init gallery 4", this.resourceService.filesForm$.getValue().value);
    if (this.resourceId) {
      console.log("form de la service pe edit res", this.resourceService.filesForm$.getValue());
      console.log("sunt pe edit res si formularul curent e asta", this.form.value);
      // this.form.addControl('thumbnail', new FormControl(this.resourceForm.featuredImage));
      // this.form.addControl('images', new FormControl(this.resourceForm.images));
      // this.form.addControl('videos', new FormControl(this.resourceForm.videos))
      this.thumbnailUrl = Object.assign({}, this.resourceForm.featuredImage);
      this.galleryUrls = Object.assign([], this.resourceForm.images);
      this.videoUrls = Object.assign([], this.resourceForm.videos);
      if (!this.resourceForm.featuredImage) {
        this.thumbnailUrl = {
          fileName: undefined,
          filePath: undefined
        };
      }
      const serviceForm = this.resourceService.filesForm$.getValue();
      if (serviceForm.value?.thumbnail instanceof Blob) {
        const reader = new FileReader();
        reader.onload = () => this.thumbnailUrl.filePath = reader.result;
        reader.readAsDataURL(serviceForm.value?.thumbnail);
        this.thumbnailFile = serviceForm.value?.thumbnail;
      } else {
        this.thumbnailUrl = serviceForm.value?.thumbnail;
      }
      if (serviceForm.value?.images?.length > 0) {
        serviceForm.value.images.forEach(image => {
          if (image instanceof File) {
            const reader = new FileReader();
            reader.onload = () => this.galleryUrls.push({
              filePath: reader.result,
              fileName: image.name
            });
            reader.readAsDataURL(image);
            this.galleryFiles.push(image);
          } else {
            this.galleryUrls.push(image);
          }
          console.log(this.galleryUrls);
        });
      }
      if (serviceForm.value?.videos?.length > 0) {
        serviceForm.value.videos.forEach(video => {
          if (video instanceof File) {
            const reader = new FileReader();
            reader.onload = () => this.videoUrls.push({
              filePath: reader.result,
              fileName: video.name
            });
            reader.readAsDataURL(video);
            this.videoFiles.push(video);
          } else {
            this.videoUrls.push(video);
          }
        });
      }
    } else {
      const serviceForm = this.resourceService.filesForm$.getValue();
      this.form.addControl("thumbnail", new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl(serviceForm.value?.thumbnail ? serviceForm.value.thumbnail : undefined));
      // this.form.addControl('images', new FormControl(serviceForm.value?.images?.length > 0 ? serviceForm.value?.images : []));
      // this.form.addControl('videos', new FormControl(serviceForm.value?.videos?.length > 0 ? serviceForm.value?.videos : []));
      if (serviceForm.value?.thumbnail && serviceForm.value?.thumbnail instanceof Blob) {
        const reader = new FileReader();
        reader.onload = () => this.thumbnailUrl.filePath = reader.result;
        reader.readAsDataURL(serviceForm.value?.thumbnail);
        this.thumbnailFile = serviceForm.value?.thumbnail;
      }
      if (serviceForm.value?.images?.length > 0) {
        serviceForm.value.images.forEach(image => {
          console.log("fiecare image", image);
          console.log(this.galleryFiles);
          console.log(this.galleryUrls);
          if (image instanceof File) {
            const reader = new FileReader();
            reader.onload = () => this.galleryUrls.push({
              filePath: reader.result,
              fileName: image.name
            });
            reader.readAsDataURL(image);
            this.galleryFiles.push(image);
          }
          console.log(this.galleryUrls);
        });
      }
      if (serviceForm.value?.videos?.length > 0) {
        serviceForm.value.videos.forEach(video => {
          const reader = new FileReader();
          reader.onload = () => this.videoUrls.push({
            filePath: reader.result,
            fileName: video.name
          });
          reader.readAsDataURL(video);
          this.videoFiles.push(video);
        });
      }
    }
    //for save resource
    // if (this.resourceService.resourceId$.getValue()) {
    //     this.resourceId = this.resourceService.resourceId$.getValue();
    // }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes("ROLE_PROVIDER")) {
        this.isProvider = true;
      }
      if (response.roles.includes("ROLE_STAFF")) {
        this.isStaff = true;
      }
      if (response.roles.includes("ROLE_SUPER_ADMIN")) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
            if (event instanceof NavigationStart) {
                // save your data
                console.log('AM PLECAT PA PA');
                this.clearFields();
            }
        });*/
  }

  onThumbnailChange(event) {
    console.log("EVENT", event.target.files[0].size);
    if (event.target.files && event.target.files[0]) {
      if (event.target.files[0].size < 2 * 1024 * 1024) {
        this.thumbnailUrl.fileName = event.target.files[0].name;
        this.thumbnailFile = event.target.files[0];
        this.form.setControl("thumbnail", new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl(event.target.files[0]));
        console.log("form", this.form);
        const reader = new FileReader();
        reader.onload = () => this.thumbnailUrl.filePath = reader.result;
        reader.readAsDataURL(this.thumbnailFile);
      } else {
        this.toastService.showToast("Erorr", "File size is bigger than 2MB!", "error");
        this.thumbnailUrl = {
          fileName: undefined,
          filePath: undefined
        };
        this.thumbnailFile = undefined;
        this.form.setControl("thumbnail", new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl(null));
      }
    }
  }
  removeThumbnail() {
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.thumbnailFile = undefined;
    this.form.setControl("thumbnail", new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl(null));
  }
  onImageChange(event, inputRef) {
    console.log(event.target.files);
    if (event.target.files && event.target.files[0]) {
      let imagesLength = event.target.files.length;
      if (this.galleryUrls.length > 0) {
        const newUrlLength = this.galleryUrls.length;
        for (let i = 0; i < imagesLength; i++) {
          if (event.target.files[i].size < 2 * 1024 * 1024) {
            this.galleryUrls.push({
              fileName: event.target.files[i].name,
              filePath: undefined
            });
            this.galleryFiles.push(event.target.files[i]);
            this.form.setControl("images", new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl(this.galleryFiles));
            const reader = new FileReader();
            reader.onload = () => {
              this.galleryUrls[newUrlLength + i].filePath = reader.result;
              inputRef.value = null;
            };
            reader.readAsDataURL(this.galleryFiles[this.galleryFiles.length - 1]);
          } else {
            this.toastService.showToast("Erorr", "File named " + event.target.files[i].name + " has a bigger size than 2MB!", "error");
            return;
          }
        }
      } else {
        for (let i = 0; i < imagesLength; i++) {
          if (event.target.files[i].size < 2 * 1024 * 1024) {
            this.galleryUrls.push({
              fileName: event.target.files[i].name,
              filePath: undefined
            });
            this.galleryFiles.push(event.target.files[i]);
            this.form.setControl("images", new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl(this.galleryFiles));
            const reader = new FileReader();
            reader.onload = () => {
              // this.galleryUrls[this.galleryUrls.length - 1].filePath = reader.result;
              this.galleryUrls[i].filePath = reader.result;
              inputRef.value = null;
            };
            reader.readAsDataURL(this.galleryFiles[this.galleryFiles.length - 1]);
          } else {
            this.toastService.showToast("Erorr", "File named " + event.target.files[i].name + " has a bigger size than 2MB!", "error");
            return;
          }
        }
      }
    }
    console.log("gallery urls after upload img on edit", this.galleryUrls);
    console.log("form after upload img on edit", this.form.value);
  }
  removeImage(index) {
    this.galleryUrls.splice(index, 1);
    this.galleryFiles.splice(index, 1);
    if (this.resourceId && this.resourceForm.images.length > 0) {
      this.resourceForm.images.splice(index, 1);
    }
  }
  onVideoChange(event, inputRef) {
    if (event.target.files && event.target.files[0]) {
      const videoLength = event.target.files.length;
      if (this.videoUrls.length > 0) {
        const newUrlLength = this.videoUrls.length;
        for (let i = 0; i < videoLength; i++) {
          this.videoUrls.push({
            fileName: event.target.files[i].name,
            filePath: undefined
          });
          this.videoFiles.push(event.target.files[i]);
          this.form.setControl("videos", new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl(this.videoFiles));
          const reader = new FileReader();
          reader.onload = () => {
            this.videoUrls[newUrlLength + i].filePath = reader.result;
            inputRef.value = null;
          };
          reader.readAsDataURL(this.videoFiles[this.videoFiles.length - 1]);
        }
      } else {
        for (let i = 0; i < videoLength; i++) {
          this.videoUrls.push({
            fileName: event.target.files[i].name,
            filePath: undefined
          });
          this.videoFiles.push(event.target.files[i]);
          this.form.setControl("videos", new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl(this.videoFiles));
          const reader = new FileReader();
          reader.onload = () => {
            // this.galleryUrls[this.galleryUrls.length - 1].filePath = reader.result;
            this.videoUrls[i].filePath = reader.result;
            inputRef.value = null;
          };
          reader.readAsDataURL(this.videoFiles[this.videoFiles.length - 1]);
        }
      }
    }
  }
  removeVideo(index) {
    this.videoUrls.splice(index, 1);
    this.videoFiles.splice(index, 1);
    if (this.resourceId && this.resourceForm.videos.length > 0) {
      this.resourceForm.videos.splice(index, 1);
    }
  }
  /** Go to next step*/
  nextStep() {
    // // Mark as touched
    // this.form.markAllAsTouched()
    //
    // // Check form validation
    // if (this.form.invalid) {
    //     return
    // }
    // this.resourceService.resourceData.next(this.form.value)
    console.log("next step", this.resourceService.filesForm$.getValue());
    console.log("next step", this.form.value);
    // this.resourceService.filesForm$.next(this.form.value)
    // Go the next step
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    console.log(this.form.value);
    console.log("imgs", this.galleryUrls);
    console.log("videos", this.videoUrls);
    this.stepperService.prevStep();
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.resourceService.relatedResources$.next([]);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log("FILES FORM", this.resourceService.filesForm$.getValue());
    console.log("Form-uri combinate", combineForms.value);
    console.log("Atribute", this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log("Form-uri combinate 2", this.resourceService.resourceTemplateData$.getValue());
    console.log("Form-uri combinate 3", this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === "multiple-select") {
              console.log("ATTR SENT", attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log("FORM DATA", formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log("sa ne uitam aici", this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? "" : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      bookingPolicies: combineForms.value?.bookingPolicies ? {
        depositRequiredPercentage: combineForms.value.bookingPolicies?.depositRequiredPercentage || 0,
        depositRequiredAmount: combineForms.value.bookingPolicies?.depositRequiredAmount || 0,
        advancePartialPaymentPercentage: combineForms.value.bookingPolicies?.advancePartialPaymentPercentage || 0,
        advanceFullPayment: combineForms.value.bookingPolicies?.advanceFullPayment || false
      } : null,
      startDate: combineForms.value?.startDate !== "Invalid date" && this.currentBookingType === "culturalBooking" ? moment__WEBPACK_IMPORTED_MODULE_15___default()(combineForms.value?.startDate)?.format("YYYY-MM-DDTHH:mm") : null,
      endDate: combineForms.value?.endDate !== "Invalid date" && this.currentBookingType === "culturalBooking" ? moment__WEBPACK_IMPORTED_MODULE_15___default()(combineForms.value?.endDate)?.format("YYYY-MM-DDTHH:mm") : null,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log("FORM OBJ", formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        const currentRelatedRes = this.resourceService.relatedResources$.getValue();
        const resourceRelatedRes = this.resourceService.resourceTemplateData$.getValue()?.relatedResources;
        if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id === resourceRelatedRes[0]) {
          // nu fac nimic
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id !== resourceRelatedRes[0]) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if ((resourceRelatedRes?.length === 0 || !resourceRelatedRes) && currentRelatedRes?.length > 0) {
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length === 0) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
        }
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append("file", combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log("Diferenta arrays", newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append("files", galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), "image", imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log("Diferenta arrays", newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append("files", videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), "video", videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log("n-am in create");
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log("am in update");
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log("n-am in update");
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === "add") {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log("array", imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log("imaginea cu id-ul " + product.id + " va avea astea", imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append("images", imageObj.imageFile);
                            console.log("thumb data", thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log("thumbnail uploadat", thumb);
                              },
                              error: error => {
                                if (error.error.reason === "fileSizeTooBig") {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === "wrongExtension") {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log("ATTACHMENT", attach);
                        if (product.id === attach.id) {
                          console.log("imaginea cu id-ul " + product.id + " va avea astea", attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append("file", attach.attachmentFile);
                            console.log("thumb data", thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log("attachment uploadat", thumb);
                              },
                              error: error => {
                                if (error.error.reason === "fileSizeTooBig") {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === "wrongExtension") {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === "update") {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log("update prod", respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log("array", imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log("imaginea cu id-ul " + product.id + " va avea astea", imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append("images", imageObj.imageFile);
                            console.log("thumb data", thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log("thumbnail uploadat", thumb);
                              },
                              error: error => {
                                if (error.error.reason === "fileSizeTooBig") {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === "wrongExtension") {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log("ATTACHMENT", attach);
                        if (product.id === attach.id) {
                          console.log("imaginea cu id-ul " + product.id + " va avea astea", attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append("file", attach.attachmentFile);
                            console.log("thumb data", thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log("attachment uploadat", thumb);
                              },
                              error: error => {
                                if (error.error.reason === "fileSizeTooBig") {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === "wrongExtension") {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea atasamentului!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log("array", imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log("imaginea cu id-ul " + product.id + " va avea astea", imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append("images", imageObj.imageFile);
                          console.log("thumb data", thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log("thumbnail uploadat", thumb);
                            },
                            error: error => {
                              if (error.error.reason === "fileSizeTooBig") {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === "wrongExtension") {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === "add") {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === "update") {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === "add") {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log("array", imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log("imaginea cu id-ul " + room.id + " va avea astea", imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append("file", imageObj.featuredImage);
                            console.log("thumb data", thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log("thumbnail uploadat", thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === "upload") {
                                imagesData.append("images", galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log("galerie uploadata", gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === "update") {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log("array", imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log("imaginea cu id-ul " + room.id + " va avea astea", imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append("file", imageObj.featuredImage);
                          console.log("thumb data", thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log("thumbnail uploadat", thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log("inainte de gall", imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === "upload") {
                              imagesData.append("images", galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log("galerie uploadata", gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === "culturalBooking" && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === "menu" && this.timepickerService.timepickerId$.getValue()) {
            console.log("TIMEPICKER", this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log("TIMEPICKER", this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log("TIME PICKER ON", timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === "menu") {
            console.log("menuList", this.menuService.menuList$.getValue());
            console.log("menu id", this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log("menu id", this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast("succes", "Resursa a fost actualizată cu succes", "success");
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(["/private/provider/resources/my-list"], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(["/private/staff/resources/list"], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(["/private/admin/resources/list"], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast("succes", "Resursa a fost actualizată cu succes", "success");
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(["/private/provider/resources/my-list"], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(["/private/staff/resources/list"], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(["/private/admin/resources/list"], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast("Eroare", "A aparut o problema tehnica!", "error");
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_19__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_19__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_13__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__.CulturalBookingService
  }];
};
GalleryComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_20__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_21__.Component)({
  selector: "app-gallery",
  template: _gallery_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_gallery_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], GalleryComponent);


/***/ }),

/***/ 61144:
/*!***************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/general-informations/general-informations.component.ts ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GeneralInformationsComponent": () => (/* binding */ GeneralInformationsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _general_informations_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./general-informations.component.html?ngResource */ 57442);
/* harmony import */ var _general_informations_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./general-informations.component.scss?ngResource */ 59891);
/* harmony import */ var _general_informations_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_general_informations_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../_services/stepper.service */ 9845);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../_services/resources.service */ 39266);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../_services/cultural-booking.service */ 16203);
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! moment/moment */ 56908);
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_15__);





















let GeneralInformationsComponent = class GeneralInformationsComponent {
  constructor(stepperService, resourceService, userService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.resourceService = resourceService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.form = this.resourceService.generalInformationForm$.getValue();
    this.formSections = [];
    this.formSectionsToSend = [];
    this.facilitiesTab = {};
    this.countries = [];
    this.cities = [];
    // Form
    this.templateForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({
      domain: new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required),
      categoryId: new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required),
      resourceTypeId: new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required)
    });
    this.tripsAndItineraries = [];
    this.tripsAndItinAttributes = [];
    this.dataLoaded = false;
    this.hasSharedExperience = false;
    this.hasForItinerary = false;
    this.hasStartEndDates = false;
    /*today = new Date();
    currentDay = moment(
        this.today.setMinutes(Math.ceil(this.today.getMinutes() / 15 + ((this.today.getMinutes() % 15) === 0 ? 1 : 0)) * 15),
        'DD MM YYYY HH:mm'
    );*/
    this.currentDay = moment_moment__WEBPACK_IMPORTED_MODULE_15__();
    this.canCreateAttr = false;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_17__.Subject();
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_18__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    console.log('DATA ON INIT', this.form.value);
    console.log('DATA ON INIT FROM SERV', this.resourceService.generalInformationForm$.getValue().value);
    console.log('RESOURCE TEMPLATE DATA', this.resourceService.resourceTemplateData$.getValue().value);
    // if (this.resourceService.resourceId$.getValue()) {
    //     this.getCities(this.resourceService.resourceTemplateData$.getValue().country);
    // }
    this.formSections = [];
    this.formSectionsToSend = [];
    this.tripsAndItinAttributes = [];
    this.getCountries();
    this.createManualInputs();
    console.log('GENERAL INFO DE LA SERV 1', this.resourceService.generalInformationForm$.getValue());
    console.log('GENERAL-INFO', this.resourceService.resourceTemplateData$.getValue());
    this.tripsItinObj = this.resourceService.tripsItinerariesObject$.getValue();
    // console.log('OBJECT', this.tripsItinObj);
    this.tripsAndItineraries = this.resourceService.settingsTripsItineraries$.getValue();
    // Check if the resource have coordinates
    this.geographicalCoordinates = this.resourceService.resourceTemplateData$.getValue().geographicalCoordinates;
    // this.formSections = this.resourceService.attributesFromResourceTemplate$.getValue().filter(item => item.tabName !== 'facilities');
    // console.log('again',this.formSections);
    // this.form.addControl('title', new FormControl('title', Validators.required));
    // this.form.addControl('description', new FormControl('descr', Validators.required));
    // this.form.addControl('address', new FormControl('adress', Validators.required));
    // this.form.addControl('country', new FormControl('country', Validators.required));
    // this.form.addControl('city', new FormControl('city', Validators.required));
    // this.form.addControl('latitude', new FormControl('13254', Validators.required));
    // this.form.addControl('longitude', new FormControl('654', Validators.required));
    // Form Sections - Filtered
    //TO CHECK
    this.resourceService.getAttributesData().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: attributes => {
        if (attributes === undefined) {
          console.log(attributes);
          this.formSections = [];
          this.formSectionsToSend = [];
          this.tripsAndItinAttributes = [];
        } else {
          this.tripsAndItinAttributes = [];
          this.formSections = attributes;
          const facilities = attributes.filter(item => item.tabName === 'facilities');
          this.facilitiesTab = facilities[0];
          this.createDynamicForm(attributes);
        }
      }
    });
    // this.resourceService.listenForGeneralInfo()
    //     .pipe(takeUntil(this.ngUnsubscribe))
    //     .subscribe({
    //         next: listener => {
    //             //  console.log('LISTENER AICI', listener)
    //             if (listener) {
    //                 this.form.markAllAsTouched();
    //                 if (this.form.valid) {
    //                     // this.makeFormSectionsToSend();
    //                 } else {
    //                     return
    //                 }
    //             }
    //         }
    //     })
    // this.createDynamicForm(this.formSections);
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }
  /** Input Column Creator*/
  columnSize(size) {
    switch (size) {
      case 'full_row':
        return 'col-12';
      case 'half_row':
        return 'col-md-6 col-12';
      default:
        return 'col-12';
    }
  }
  createManualInputs() {
    this.form = this.resourceService.generalInformationForm$.getValue();
    console.log('initial form', {
      ...this.form.value
    });
    console.log('initial state', {
      ...this.resourceService.generalInformationForm$.getValue().value
    });
    if (this.resourceService.resourceId$.getValue()) {
      this.getCities(this.form.value.country);
    }
    // else if (this.form.value.country) {
    //     this.getCities(this.form.value.country);
    // }
    if (this.resourceService.resourceTemplateData$.getValue().bookingType === 'serviceBookingTimeSlots') {
      //  console.log('E IN TRAVEL');
      console.log('E IN TRAVEL', this.resourceService.travelId$.getValue());
      this.form.addControl('sharedExperience', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().sharedExperience : null));
      this.hasSharedExperience = true;
    } else {
      this.hasSharedExperience = false;
    }
    console.log('general info form', this.form.value);
    //if healthcare or education domain, hide "used for itineraries"
    if (this.resourceService.medicalId$.getValue() === this.resourceService.resourceTemplateType$.getValue().domain || this.resourceService.educationId$.getValue() === this.resourceService.resourceTemplateType$.getValue().domain) {
      this.form.addControl('forItinerary', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().forItinerary : null));
      this.hasForItinerary = true;
    } else {
      this.hasForItinerary = false;
    }
    // Create Manual Inputs
    this.form.addControl('title', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().title : null, _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required));
    this.form.addControl('description', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().description : null, _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required));
    this.form.addControl('address', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().address : null, _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required));
    this.form.addControl('country', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().country : null, _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required));
    this.form.addControl('city', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().city : null, _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required));
    this.form.addControl('sharedExperience', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().sharedExperience : null));
    this.form.addControl('forItinerary', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().forItinerary : null));
    if (this.resourceService.resourceTemplateData$.getValue().bookingType === 'culturalBooking') {
      this.form.addControl('startDate', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? moment_moment__WEBPACK_IMPORTED_MODULE_15__(this.resourceService.resourceTemplateData$.getValue().startDate).format('YYYY-MM-DDTHH:mm') : this.currentDay.format('YYYY-MM-DDTHH:mm'), _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required));
      this.form.addControl('endDate', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? moment_moment__WEBPACK_IMPORTED_MODULE_15__(this.resourceService.resourceTemplateData$.getValue().endDate).format('YYYY-MM-DDTHH:mm') : this.currentDay.format('YYYY-MM-DDTHH:mm'), _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required));
      this.hasStartEndDates = true;
    } else {
      this.hasStartEndDates = false;
    }
    // this.form.addControl('latitude', new FormControl(this.resourceService.resourceTemplateData$.getValue().geographicalCoordinates?.latitude));
    // this.form.addControl('longitude', new FormControl(this.resourceService.resourceTemplateData$.getValue().geographicalCoordinates?.longitude));
    this.form.addControl('latitude', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().geographicalCoordinates?.latitude : 0));
    this.form.addControl('longitude', new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(this.resourceService.resourceId$.getValue() ? this.resourceService.resourceTemplateData$.getValue().geographicalCoordinates?.longitude : 0));
    // this.dataLoaded = true;
    // console.log('GENERAL INFO DE LA SERV', this.resourceService.generalInformationForm$.getValue())
    console.log('after form', {
      ...this.form.value
    });
    console.log('after state', {
      ...this.resourceService.generalInformationForm$.getValue().value
    });
  }
  /** Create Dynamic Form */
  createDynamicForm(formSection) {
    // Loop through from Sections
    // console.log('create trips', this.tripsAndItinAttributes)
    this.formSections = formSection.filter(item => item.tabName !== 'facilities');
    // console.log('create sections', this.formSections)
    for (const section of formSection) {
      // Loop through section attributes
      for (const inputField of section.tabAttributes) {
        if (this.form.contains(inputField.name)) {
          if (inputField.valueType === 'multiple-select') {
            let multipleValue = this.form.get(inputField.name).value;
            console.log('MULTIPLE SELECT', multipleValue, Array.isArray(multipleValue));
            if (Array.isArray(multipleValue)) {
              this.form.get(inputField.name).patchValue(multipleValue);
            } else {
              this.form.get(inputField.name).patchValue(multipleValue.split(','));
            }
            // this.form.get(inputField.name).patchValue(multipleValue.length > 0 ? multipleValue.split(',') : []);
          }

          const findTripIndex = this.tripsAndItineraries.find(attr => attr === inputField.categoryId);
          // if (findTripIndex && section.tabName === 'general_info') {
          //     this.tripsAndItinAttributes.push(inputField);
          //     console.log('TRIPS LALA 1', this.tripsAndItinAttributes);
          //     const sectionsFiltered = section.tabAttributes.filter(attr => attr.id !== inputField.id);
          //     // console.log('filter',sectionsFiltered)
          //     this.formSections.map(sectionToChange => {
          //         if (sectionToChange.tabName === 'general_info') {
          //             return sectionToChange.tabAttributes = sectionsFiltered;
          //         }
          //     })
          //
          // }
        } else {
          if (inputField.valueType === 'toggle') {
            this.form.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(inputField.attributeValue ? inputField.attributeValue : 'false'));
          } else if (inputField.valueType === 'multiple-select') {
            console.log('MULTIPLE SELECT FIRST', inputField.attributeValue);
            this.form.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(inputField.attributeValue ? inputField.attributeValue.split(',') : []));
          }
          this.form.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormControl(inputField.attributeValue ? inputField.attributeValue : '', inputField.propertyRequired ? _angular_forms__WEBPACK_IMPORTED_MODULE_16__.Validators.required : null));
          const findTripIndex = this.tripsAndItineraries.find(attr => attr === inputField.categoryId);
          // if (findTripIndex && section.tabName === 'general_info') {
          //     this.tripsAndItinAttributes.push(inputField);
          //     console.log('TRIPS LALA 2', this.tripsAndItinAttributes);
          //     const sectionsFiltered = section.tabAttributes.filter(attr => attr.id !== inputField.id);
          //     // console.log('filter',sectionsFiltered)
          //     this.formSections.map(sectionToChange => {
          //         if (sectionToChange.tabName === 'general_info') {
          //             return sectionToChange.tabAttributes = sectionsFiltered;
          //         }
          //     })
          //
          // }
        }
      }
    }
    // // this.dataLoaded = true;
    // console.log('lalallaalal', this.formSections);
    // console.log('FORM', this.form.value);
    console.log('trips ATRTR', this.tripsAndItinAttributes);
  }
  makeFormSectionsToSend() {
    this.formSectionsToSend = [];
    this.formSectionsToSend = this.formSections;
    this.formSectionsToSend.push(this.facilitiesTab);
    this.formSectionsToSend.map(section => {
      if (section.tabName === 'general_info') {
        this.tripsAndItinAttributes.forEach(attr => {
          attr = {
            ...attr,
            attributeValue: this.form.get(attr.name).value
          };
          return section.tabAttributes.push(attr);
        });
      } else {
        try {
          section.tabAttributes.forEach(attribute => {
            if (attribute.valueType === 'multiple-select') {
              this.form.get(attribute.name).patchValue(this.form?.get(attribute.name).value.join());
            }
          });
        } catch (error) {}
      }
    });
    // console.log('to send', this.formSectionsToSend);
  }

  getCountries() {
    this.resourceService.getAllCountries().subscribe({
      next: countries => {
        this.countries = countries;
      }
    });
  }
  getCities(event) {
    if (event?.value) {
      this.form.get('latitude').patchValue(0);
      this.form.get('longitude').patchValue(0);
    }
    const country = {
      country: event?.value ? event.value : event
    };
    this.resourceService.getCityFilter(0, -1, null, null, country).subscribe({
      next: cities => {
        console.log(cities);
        this.cities = cities.content;
      }
    });
  }
  getCoordinates(event) {
    const name = {
      name: event.value
    };
    this.resourceService.getCityFilter(0, -1, null, null, name).subscribe({
      next: city => {
        this.form.get('latitude').patchValue(city.content[0].geographicalCoordinates.latitude);
        this.form.get('longitude').patchValue(city.content[0].geographicalCoordinates.longitude);
      }
    });
  }
  /** Go to next step*/
  nextStep() {
    // // Mark as touched
    this.form.markAllAsTouched();
    this.makeFormSectionsToSend();
    // // Check form validation
    if (this.form.invalid) {
      return;
    }
    // Go the next step
    this.stepperService.nextStep();
    // console.log(this.form.value)
    // this.resourceService.attributesFromResourceTemplate$.next(this.formSectionsToSend);
    // console.log('allalalalla', this.resourceService.attributesFromResourceTemplate$.getValue())
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.resourceService.relatedResources$.next([]);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    console.log('start date', combineForms.value?.startDate);
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      bookingPolicies: combineForms.value?.bookingPolicies ? {
        depositRequiredPercentage: combineForms.value.bookingPolicies?.depositRequiredPercentage || 0,
        depositRequiredAmount: combineForms.value.bookingPolicies?.depositRequiredAmount || 0,
        advancePartialPaymentPercentage: combineForms.value.bookingPolicies?.advancePartialPaymentPercentage || 0,
        advanceFullPayment: combineForms.value.bookingPolicies?.advanceFullPayment || false
      } : this.resourceService.resourceTemplateData$.getValue()?.bookingPolicies,
      startDate: combineForms.value?.startDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment_moment__WEBPACK_IMPORTED_MODULE_15__(combineForms.value?.startDate)?.format('YYYY-MM-DDTHH:mm') : null,
      endDate: combineForms.value?.endDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment_moment__WEBPACK_IMPORTED_MODULE_15__(combineForms.value?.endDate)?.format('YYYY-MM-DDTHH:mm') : null,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        const currentRelatedRes = this.resourceService.relatedResources$.getValue();
        const resourceRelatedRes = this.resourceService.resourceTemplateData$.getValue()?.relatedResources;
        if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id === resourceRelatedRes[0]) {
          // nu fac nimic
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id !== resourceRelatedRes[0]) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if ((resourceRelatedRes?.length === 0 || !resourceRelatedRes) && currentRelatedRes?.length > 0) {
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length === 0) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
        }
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log('ATTACHMENT', attach);
                        if (product.id === attach.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', attach.attachmentFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('attachment uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log('ATTACHMENT', attach);
                        if (product.id === attach.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', attach.attachmentFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('attachment uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea atasamentului!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_6__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_7__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_8__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_9__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_10__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_11__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_12__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_4__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_13__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__.CulturalBookingService
  }];
};
GeneralInformationsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_23__.Component)({
  selector: 'app-general-informations',
  template: _general_informations_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_general_informations_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], GeneralInformationsComponent);


/***/ }),

/***/ 1523:
/*!*************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/payment/payment.component.ts ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PaymentComponent": () => (/* binding */ PaymentComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _payment_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./payment.component.html?ngResource */ 30994);
/* harmony import */ var _payment_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./payment.component.scss?ngResource */ 667);
/* harmony import */ var _payment_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_payment_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../_services/cultural-booking.service */ 16203);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_14__);




















let PaymentComponent = class PaymentComponent {
  constructor(resourceService, stepperService, roomService, ticketService, toastService, router, userService, timepickerService, productService, timeslotService, createResourceService, menuService, culturalBookingService) {
    this.resourceService = resourceService;
    this.stepperService = stepperService;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.toastService = toastService;
    this.router = router;
    this.userService = userService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.createResourceService = createResourceService;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.commission = 0;
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.roomsArray = this.roomService.roomList$.getValue();
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
        this.commission = response?.percentageCommission;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
        this.getCommission();
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
        this.getCommission();
      }
    });
    if (this.resourceService.resourceId$.getValue()) {
      this.currentResourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
  }
  getCommission() {
    if (this.isStaff || this.isAdmin) {
      if (this.createResourceService.providerData$.getValue()) {
        const providerId = this.createResourceService.providerData$.getValue().providerId;
        console.log('prov id', providerId);
        this.userService.getUserById(providerId).subscribe({
          next: provider => {
            this.commission = provider?.percentageCommission;
          }
        });
      }
    }
  }
  /** Go to next step*/
  nextStep() {
    this.isSubmitLoading$.next(true);
    console.log('LAST STEP');
    // // Mark as touched
    // this.form.markAllAsTouched()
    //
    // // Check form validation
    // if (this.form.invalid) {
    //     return
    // }
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('Form-uri combinate', combineForms.value);
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    const accomodationPolicy = {
      accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
    };
    console.log('payment end date', combineForms.value?.startDate);
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail ? combineForms.value.thumbnail : {
        filePath: null,
        fileName: null
      },
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      bookingPolicies: combineForms.value?.bookingPolicies ? {
        depositRequiredPercentage: combineForms.value.bookingPolicies?.depositRequiredPercentage || 0,
        depositRequiredAmount: combineForms.value.bookingPolicies?.depositRequiredAmount || 0,
        advancePartialPaymentPercentage: combineForms.value.bookingPolicies?.advancePartialPaymentPercentage || 0,
        advanceFullPayment: combineForms.value.bookingPolicies?.advanceFullPayment || false
      } : null,
      startDate: combineForms.value?.startDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment__WEBPACK_IMPORTED_MODULE_14___default()(combineForms.value?.startDate)?.format('YYYY-MM-DDTHH:mm') : null,
      endDate: combineForms.value?.endDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment__WEBPACK_IMPORTED_MODULE_14___default()(combineForms.value?.endDate)?.format('YYYY-MM-DDTHH:mm') : null,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue(),
      policy: accomodationPolicy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log(formObject);
    // Check if you are on edit or create
    if (this.resourceService.resourceId$.getValue()) {
      // this.currentResourceId =  this.resourceService.resourceId$.getValue();
      console.log('id-ul resursei curente', this.resourceService.resourceId$.getValue());
      this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
        next: data => {
          console.log(data);
          const currentRelatedRes = this.resourceService.relatedResources$.getValue();
          const resourceRelatedRes = this.resourceService.resourceTemplateData$.getValue()?.relatedResources;
          if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id === resourceRelatedRes[0]) {
            // nu fac nimic
          } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id !== resourceRelatedRes[0]) {
            this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
            this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
          } else if ((resourceRelatedRes?.length === 0 || !resourceRelatedRes) && currentRelatedRes?.length > 0) {
            this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
          } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length === 0) {
            this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
          }
          if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
            const thumbnailData = new FormData();
            thumbnailData.append('file', combineForms.value.thumbnail);
            this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
          }
          if (combineForms.value.images?.length > 0) {
            const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
            console.log('Diferenta arrays', newImages);
            if (newImages?.length > 0) {
              const imagesData = new FormData();
              newImages.forEach(galleryFile => {
                imagesData.append('files', galleryFile);
              });
              this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
            }
          }
          if (combineForms.value.videos?.length > 0) {
            const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
            console.log('Diferenta arrays', newVideos);
            if (newVideos?.length > 0) {
              const videosData = new FormData();
              newVideos.forEach(videoFile => {
                videosData.append('files', videoFile);
              });
              this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
            }
          }
          if (data.success) {
            // console.log('TICKETs');
            // console.log('CREATE ARRAY', this.ticketService.createArray$.getValue());
            // console.log('current res id', this.currentResourceId);
            // this.timepickerService.timetableList$.next([]);
            //ticket-booking
            // this.ticketService.ticketsList$.next([]);
            // menu
            if (this.currentBookingType === 'menu') {
              if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue()?.length > 0) {
                console.log('menuList', this.menuService.menuList$.getValue());
                this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
              } else {
                if (this.menuService.menuList$.getValue()?.length > 0) {
                  this.$fileObservables.push(this.menuService.createMenu(this.resourceService.resourceId$.getValue(), this.menuService.menuList$.getValue()));
                }
              }
            }
            if (this.ticketService.createArray$.getValue()?.length > 0) {
              // Create new tickets
              this.$fileObservables.push(this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()));
              // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
              //             this.ticketService.createArray$.next([]);
              //             console.log(this.ticketService.createArray$.getValue());
              //         }
              //     }
              // })
            } else {
              console.log('n-am in create');
            }
            if (this.ticketService.updateArray$.getValue()?.length > 0) {
              console.log('am in update');
              //Update tickets
              const updateArray = this.ticketService.updateArray$.getValue();
              updateArray.forEach(ticket => {
                this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
                // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
                //     next: (tickets: { success: boolean, reason: string }) => {
                //         if (tickets.success) {
                //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
                //             this.ticketService.updateArray$.next([]);
                //         }
                //     }
                // })
              });
            } else {
              console.log('n-am in update');
            }
            if (this.ticketService.deleteArray$.getValue()?.length > 0) {
              //Delete tickets
              const deleteArray = this.ticketService.deleteArray$.getValue();
              deleteArray.forEach(ticket => {
                // console.log('ticket de sters', ticket)
                this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
                // this.ticketService.deleteTicket(ticket.id).subscribe({
                //     next: (tickets: { success: boolean, reason: string }) => {
                //         if (tickets.success) {
                //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
                //             this.ticketService.deleteArray$.next([]);
                //         }
                //     },
                //     error: err => {
                //         console.log(err);
                //     }
                //
                // })
              });
            }

            if (this.productService.productsList$.getValue().length > 0) {
              const prodArray = this.productService.productsList$.getValue();
              prodArray.forEach(product => {
                if (product.state === 'add') {
                  this.productService.createProduct(this.currentResourceId, product).subscribe({
                    next: respAdd => {
                      if (respAdd) {
                        const imagArray = this.productService.imagesArray$.getValue();
                        console.log('array', imagArray);
                        imagArray.forEach(imageObj => {
                          if (product.id === imageObj.id) {
                            console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                            if (imageObj.imageFile !== undefined) {
                              const thumbnailData = new FormData();
                              thumbnailData.append('images', imageObj.imageFile);
                              console.log('thumb data', thumbnailData);
                              // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                              this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                                next: thumb => {
                                  console.log('thumbnail uploadat', thumb);
                                },
                                error: error => {
                                  if (error.error.reason === 'fileSizeTooBig') {
                                    this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                  } else if (error.error.reason === 'wrongExtension') {
                                    this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                  } else {
                                    this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                  }
                                }
                              });
                            }
                            this.productService.imagesArray$.next([]);
                          }
                        });
                        const attachArray = this.productService.attachmentArray$.getValue();
                        attachArray.forEach(attach => {
                          console.log('ATTACHMENT', attach);
                          if (product.id === attach.id) {
                            console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                            if (attach.attachmentFile !== undefined) {
                              const thumbnailData = new FormData();
                              thumbnailData.append('file', attach.attachmentFile);
                              console.log('thumb data', thumbnailData);
                              // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                              this.productService.uploadAttachmentForProduct(respAdd.reason, thumbnailData).subscribe({
                                next: thumb => {
                                  console.log('attachment uploadat', thumb);
                                },
                                error: error => {
                                  if (error.error.reason === 'fileSizeTooBig') {
                                    this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                  } else if (error.error.reason === 'wrongExtension') {
                                    this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                  } else {
                                    this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                  }
                                }
                              });
                            }
                            this.productService.attachmentArray$.next([]);
                          }
                        });
                      }
                    }
                  });
                } else if (product.state === 'update') {
                  this.productService.updateProduct(product.id, product).subscribe({
                    next: respUpdate => {
                      console.log('update prod', respUpdate);
                      if (respUpdate) {
                        const imagArray = this.productService.imagesArray$.getValue();
                        console.log('array', imagArray);
                        imagArray.forEach(imageObj => {
                          if (product.id === imageObj.id) {
                            console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                            if (imageObj.imageFile !== undefined) {
                              const thumbnailData = new FormData();
                              thumbnailData.append('images', imageObj.imageFile);
                              console.log('thumb data', thumbnailData);
                              // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                              this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                                next: thumb => {
                                  console.log('thumbnail uploadat', thumb);
                                },
                                error: error => {
                                  if (error.error.reason === 'fileSizeTooBig') {
                                    this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                  } else if (error.error.reason === 'wrongExtension') {
                                    this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                  } else {
                                    this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                  }
                                }
                              });
                            }
                            this.productService.imagesArray$.next([]);
                          }
                        });
                        const attachArray = this.productService.attachmentArray$.getValue();
                        attachArray.forEach(attach => {
                          console.log('ATTACHMENT', attach);
                          if (product.id === attach.id) {
                            console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                            if (attach.attachmentFile !== undefined) {
                              const thumbnailData = new FormData();
                              thumbnailData.append('file', attach.attachmentFile);
                              console.log('thumb data', thumbnailData);
                              // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                              this.productService.uploadAttachmentForProduct(product.id, thumbnailData).subscribe({
                                next: thumb => {
                                  console.log('attachment uploadat', thumb);
                                },
                                error: error => {
                                  if (error.error.reason === 'fileSizeTooBig') {
                                    this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                  } else if (error.error.reason === 'wrongExtension') {
                                    this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                  } else {
                                    this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea atasamentului!", "error");
                                  }
                                }
                              });
                            }
                            this.productService.attachmentArray$.next([]);
                          }
                        });
                      }
                    }
                  });
                }
              });
            }
            //product list
            if (this.productService.deleteProdList$.getValue().length > 0) {
              const deleteProdArray = this.productService.deleteProdList$.getValue();
              deleteProdArray.forEach(product => {
                this.productService.deleteProduct(product.id).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              });
            }
            //service time slot
            if (this.timeslotService.serviceList$.getValue().length > 0) {
              const serviceArray = this.timeslotService.serviceList$.getValue();
              serviceArray.forEach(service => {
                if (service.state === 'add') {
                  this.$fileObservables.push(this.timeslotService.createService(this.currentResourceId, service));
                } else if (service.state === 'update') {
                  this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
                }
              });
            }
            if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
              const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
              deleteServArray.forEach(service => {
                this.$fileObservables.push(this.timeslotService.deleteService(service.id));
              });
            }
            //rental-booking
            if (this.roomsArray.length > 0) {
              this.roomsArray.forEach(room => {
                if (room.state === 'add') {
                  this.roomService.createRoom(this.currentResourceId, room).subscribe({
                    next: resp => {
                      // console.log('adaugare camera pe edit resursa', resp);
                      if (resp.success) {
                        const imagArray = this.roomService.imagesArray$.getValue();
                        console.log('array', imagArray);
                        imagArray.forEach(imageObj => {
                          if (room.id === imageObj.id) {
                            console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                            if (imageObj.featuredImage !== undefined) {
                              const thumbnailData = new FormData();
                              thumbnailData.append('file', imageObj.featuredImage);
                              console.log('thumb data', thumbnailData);
                              // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                              this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                                next: thumb => {
                                  console.log('thumbnail uploadat', thumb);
                                }
                              });
                            }
                            if (imageObj.gallery.length > 0) {
                              const imagesData = new FormData();
                              imageObj.gallery.forEach(galleryFile => {
                                if (galleryFile.state === 'upload') {
                                  imagesData.append('images', galleryFile.file);
                                }
                              });
                              // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                              this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                                next: gallery => {
                                  console.log('galerie uploadata', gallery);
                                },
                                error: error => {
                                  if (error.error.reason === 'fileSizeTooBig') {
                                    this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                  } else if (error.error.reason === 'wrongExtension') {
                                    this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                  } else {
                                    this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                  }
                                }
                              });
                            }
                            this.roomService.imagesArray$.next([]);
                          }
                        });
                      }
                    }
                  });
                } else if (room.state === 'update') {
                  this.roomService.updateRoom(room.id, room).subscribe({
                    next: resp => {
                      // console.log('editare camera pe edit resursa', resp);
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                            this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            console.log('inainte de gall', imageObj.gallery);
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                            this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  });
                }
              });
            }
            if (this.roomService.deleteArray$.getValue().length > 0) {
              const deleteRooms = this.roomService.deleteArray$.getValue();
              deleteRooms.forEach(room => {
                this.$fileObservables.push(this.roomService.deleteRoom(room.id));
                // this.roomService.deleteRoom(room.id).subscribe({
                //     next: (resp: { success: boolean, reason: string }) => {
                //         console.log('stergere camera', resp);
                //         if (resp.success) {
                //             this.roomService.deleteArray$.next([]);
                //         }
                //     }
                // })
              });
            }
            // cultural booking
            if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
              const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
              this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
            }
            //menu-booking
            if (this.timepickerService.timepickerId$.getValue()) {
              const timepicker = {
                timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
                bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
                changePolicies: this.timepickerService.changePolicies$.getValue(),
                ignoreAvailability: this.timepickerService.getFreeEntry()
              };
              console.log('TIMEPICKER AICI', timepicker);
              this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timepicker));
              // this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timepicker).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         if(resp.success){
              //             this.timepickerService.timepickerId$.next(undefined);
              //             this.timepickerService.timepickerList$.next([]);
              //         }
              //     }
              // })
            }
          }

          if (this.$fileObservables.length > 0) {
            (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
              this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
              setTimeout(() => {
                if (this.isProvider) {
                  this.isSubmitLoading$.next(false);
                  this.router.navigate(['/private/provider/resources/my-list'], {
                    state: {
                      submit: true
                    }
                  });
                } else if (this.isStaff) {
                  this.isSubmitLoading$.next(false);
                  this.router.navigate(['/private/staff/resources/list'], {
                    state: {
                      submit: true
                    }
                  });
                } else if (this.isAdmin) {
                  this.isSubmitLoading$.next(false);
                  this.router.navigate(['/private/admin/resources/list'], {
                    state: {
                      submit: true
                    }
                  });
                }
              }, 3000);
            });
          } else {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          }
        }
      });
    } else {
      const providerId = this.createResourceService.providerData$.getValue()?.providerId ? this.createResourceService.providerData$.getValue().providerId : null;
      this.resourceService.addResource(formObject, providerId).subscribe({
        next: data => {
          console.log(data);
          if (this.resourceService.relatedResources$.getValue()?.length > 0) {
            this.$fileObservables.push(this.resourceService.addRelatedresources(data.reason, this.resourceService.relatedResources$.getValue()[0].id));
          }
          if (combineForms.value.thumbnail) {
            const thumbnailData = new FormData();
            thumbnailData.append('file', combineForms.value.thumbnail);
            this.$fileObservables.push(this.resourceService.uploadResourceImage(data.reason, thumbnailData));
          }
          // const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          // console.log('Diferenta arrays', newImages);
          console.log('IMAGE', combineForms.value.images?.length);
          if (combineForms.value.images?.length > 0) {
            const imagesData = new FormData();
            combineForms.value.images.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(data.reason, 'image', imagesData));
          }
          if (combineForms.value?.videos?.length > 0) {
            const videosData = new FormData();
            combineForms.value.videos.forEach(galleryFile => {
              videosData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(data.reason, 'video', videosData));
          }
          // if (this.timepickerService.timepickerList$.getValue().length > 0) {
          //     const timepicker = {
          //         timetables: this.timepickerService.timepickerList$.getValue()
          //     }
          //
          //     this.$fileObservables.push( this.timepickerService.createTimepicker(data.reason, timepicker));
          //
          // }
          // if(this.timepickerService.timePicker$.getValue()){
          //     this.$fileObservables.push( this.timepickerService.createTimepicker(data.reason, this.timepickerService.timePicker$.getValue()));
          // }
          if (this.resourceService.resourceTemplateData$.getValue().bookingType === 'menu') {
            const timepicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            this.$fileObservables.push(this.timepickerService.createTimepicker(data.reason, timepicker));
            console.log('TIMEPICKER AICI', timepicker);
          }
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              this.roomService.createRoom(data.reason, room).subscribe({
                next: res => {
                  if (res.success) {
                    console.log('SE ADAUGA O CAMERA', res.success);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(res.reason, thumbnailData));
                          this.roomService.uploadRoomThumbnail(res.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            imagesData.append('images', galleryFile);
                          });
                          // this.$fileObservables.push(this.roomService.uploadRoomGallery(res.reason, imagesData));
                          this.roomService.uploadRoomGallery(res.reason, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          if (this.productService.productsList$.getValue().length > 0) {
            console.log('exista in product list');
            this.productService.productsList$.getValue().forEach(product => {
              this.productService.createProduct(data.reason, product).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                    const attachArray = this.productService.attachmentArray$.getValue();
                    attachArray.forEach(attach => {
                      console.log('ATTACHMENT', attach);
                      if (product.id === attach.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                        if (attach.attachmentFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', attach.attachmentFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadAttachmentForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('attachment uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.attachmentArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          // Create tickets
          this.ticketService.ticketListData().subscribe({
            next: ticketList => {
              if (ticketList.length > 0) {
                this.$fileObservables.push(this.ticketService.createTickets(data.reason, this.ticketService.ticketsList$.getValue()));
              }
            }
          });
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            this.timeslotService.serviceList$.getValue().forEach(service => {
              this.$fileObservables.push(this.timeslotService.createService(data.reason, service));
            });
          }
          // create cultural room
          if (this.culturalBookingService.culturalRoom$.getValue()) {
            const newCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.createCulturalRoom(data.reason, newCulturalRoom));
          }
          if (this.menuService.menuList$.getValue().length > 0) {
            this.$fileObservables.push(this.menuService.createMenu(data.reason, this.menuService.menuList$.getValue()));
          }
          if (this.$fileObservables.length > 0) {
            (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
              this.toastService.showToast('succes', 'Resursa a fost adăugată cu succes', 'success');
              setTimeout(() => {
                if (this.isProvider) {
                  this.isSubmitLoading$.next(false);
                  this.router.navigate(['/private/provider/resources/my-list'], {
                    state: {
                      submit: true
                    }
                  });
                } else if (this.isStaff) {
                  this.isSubmitLoading$.next(false);
                  this.router.navigate(['/private/staff/resources/list'], {
                    state: {
                      submit: true
                    }
                  });
                } else if (this.isAdmin) {
                  this.isSubmitLoading$.next(false);
                  this.router.navigate(['/private/admin/resources/list'], {
                    state: {
                      submit: true
                    }
                  });
                }
              }, 3000);
            });
          } else {
            this.toastService.showToast('succes', 'Resursa a fost adăugată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          }
        },
        error: error => {
          this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
          this.isSubmitLoading$.next(false);
          console.log(error);
        }
      });
    }
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_4__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_7__.TicketsBookingService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_5__.ToastService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.Router
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_6__.UserDataService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_8__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_9__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_10__.BookingTimeslotsService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__.CreateResourceService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_12__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_13__.CulturalBookingService
  }];
};
PaymentComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_19__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_20__.Component)({
  selector: 'app-payment',
  template: _payment_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_payment_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], PaymentComponent);


/***/ }),

/***/ 8119:
/*!************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/no-policy/no-policy.component.ts ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NoPolicyComponent": () => (/* binding */ NoPolicyComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _no_policy_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./no-policy.component.html?ngResource */ 99550);
/* harmony import */ var _no_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./no-policy.component.scss?ngResource */ 98760);
/* harmony import */ var _no_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_no_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);





















let NoPolicyComponent = class NoPolicyComponent {
  constructor(stepperService, fb, resourceService, timepickerService, userService, route, router, roomService, ticketService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.fb = fb;
    this.resourceService = resourceService;
    this.timepickerService = timepickerService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.days = ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'];
    this.tabIndex = 0;
    this.isEditMode = false;
    this.showTimetable = false;
    this.timetableArr = [];
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_16__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.getTemplate();
    this.formInit();
    this.initConfigTabs();
    console.log('TIMETABLE', this.timepickerService.timetableList$.getValue());
    this.timepickerService.refreshTimetableListData().subscribe({
      next: timetable => {
        this.timetableForm.get('timetable').patchValue(this.timepickerService.timetableList$.getValue());
      }
    });
    this.resourceService.listenForPolicy().subscribe({
      next: policy => {
        if (policy) {
          this.sendTimePicker();
          this.timepickerService.timetableList$.next(this.timetableForm.get('timetable').value);
        }
      }
    });
    console.log(this.resourceService.resourceTemplateType$.getValue());
    console.log(this.resourceService.resourceTemplateData$.getValue());
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }

  formInit() {
    this.timetableForm = this.fb.group({
      timetable: this.fb.array([])
    });
  }
  timetable() {
    return this.timetableForm.get('timetable');
  }
  newDayTab(day) {
    return this.fb.group({
      day: day,
      startTime: moment__WEBPACK_IMPORTED_MODULE_5__('00:00', 'HH:mm'),
      endTime: moment__WEBPACK_IMPORTED_MODULE_5__('00:00', 'HH:mm'),
      closed: [false]
    }, {
      validators: this.checkTimeSlots
    });
  }
  addDayTab(day) {
    this.timetable().push(this.newDayTab(day));
  }
  removeDayTab(tabIndex) {
    this.timetable().removeAt(tabIndex);
  }
  initConfigTabs() {
    this.days.forEach(item => {
      this.addDayTab(item);
    });
  }
  checkIfEdit() {
    if (this.resourceService.resourceId$.getValue()) {
      this.isEditMode = true;
      if (this.showTimetable) {
        if (this.timepickerService.timetableList$.getValue().length > 0) {
          console.log('TIMETABLE EXISTENT', this.timepickerService.timetableList$.getValue());
          const serviceTimetable = this.timepickerService.timetableList$.getValue();
          serviceTimetable.forEach(day => {
            day.startTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.startTime, 'HH:mm');
            day.endTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.endTime, 'HH:mm');
          });
          this.timetableForm.get('timetable').patchValue(serviceTimetable);
          console.log('MODIFICARE TT', this.timetableForm.value);
        } else {
          const timetable = this.resourceService.resourceTemplateData$.getValue().timetable;
          if (timetable) {
            timetable.forEach(day => {
              day.startTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.startTime, 'HH:mm');
              day.endTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.endTime, 'HH:mm');
            });
            this.timetableForm.get('timetable').patchValue(timetable);
          } else {
            this.formInit();
          }
        }
        // this.timetableForm.get('timetable').patchValue(this.resourceService.resourceTemplateData$.getValue().timetable);
      }
    } else {
      this.isEditMode = false;
      if (this.showTimetable) {
        if (this.timepickerService.timetableList$.getValue().length > 0) {
          console.log('TIMETABLE EXISTENT', this.timepickerService.timetableList$.getValue());
          const serviceTimetable = this.timepickerService.timetableList$.getValue();
          serviceTimetable.forEach(day => {
            day.startTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.startTime, 'HH:mm');
            day.endTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.endTime, 'HH:mm');
          });
          this.timetableForm.get('timetable').patchValue(serviceTimetable);
          console.log('MODIFICARE TT', this.timetableForm.value);
        }
        // this.timetableForm.get('timetable').patchValue(this.resourceService.resourceTemplateData$.getValue().timetable);
      }
    }
  }

  getTemplate() {
    this.resourceService.getListResourceTemplateFiltered(0, -1, '', '', this.resourceService.resourceTemplateType$.getValue()).subscribe({
      next: temp => {
        const template = temp.content[0];
        if (template.timetable) {
          this.showTimetable = true;
          this.checkIfEdit();
        } else {
          this.showTimetable = false;
        }
      }
    });
  }
  checkTimeSlots(control) {
    const startTime = control.get('startTime');
    const endTime = control.get('endTime');
    const closed = control.get('closed');
    // console.log('CHECK start', moment(startTime.value).format('HH:mm'));
    // console.log('CHECK end',moment(endTime.value).format('HH:mm'));
    if (!closed.value) {
      if (moment__WEBPACK_IMPORTED_MODULE_5__(startTime.value).format('HH:mm') >= moment__WEBPACK_IMPORTED_MODULE_5__(endTime.value).format('HH:mm')) {
        console.log('nu e bine');
        endTime.setErrors({
          invalidTime: true
        });
      }
    } else {
      endTime.setErrors(null);
    }
    return;
  }
  sendTimePicker() {
    this.timetableForm.get('timetable').value.forEach((day, index) => {
      day.endTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.endTime).format('HH:mm');
      day.startTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.startTime).format('HH:mm');
    });
  }
  /** Go to next step*/
  nextStep() {
    if (this.showTimetable) {
      // // Mark as touched
      this.timetableForm.markAllAsTouched();
      // Check form validation
      if (this.timetableForm.invalid) {
        return;
      } else {
        this.sendTimePicker();
        this.timepickerService.timetableList$.next(this.timetableForm.get('timetable').value);
        console.log('NEXT', this.timetableForm.get('timetable').value);
      }
    }
    // Go the next step
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    if (this.showTimetable) {
      this.timetableForm.markAllAsTouched();
      // Check form validation
      if (this.timetableForm.invalid) {
        return;
      } else {
        this.sendTimePicker();
        this.timepickerService.timetableList$.next(this.timetableForm.get('timetable').value);
        console.log('PREVIEW', this.timetableForm.get('timetable').value);
      }
    }
    this.stepperService.prevStep(true);
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log('ATTACHMENT', attach);
                        if (product.id === attach.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', attach.attachmentFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('attachment uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log('ATTACHMENT', attach);
                        if (product.id === attach.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', attach.attachmentFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('attachment uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea atasamentului!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormBuilder
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_4__.TimepickerService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_6__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_19__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_19__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_7__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_8__.TicketsBookingService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_9__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_10__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_11__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_12__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_13__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_14__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_15__.CulturalBookingService
  }];
};
NoPolicyComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_20__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_21__.Component)({
  selector: 'app-no-policy',
  template: _no_policy_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_no_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], NoPolicyComponent);


/***/ }),

/***/ 11029:
/*!****************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy-cultural-booking/policy-cultural-booking.component.ts ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PolicyCulturalBookingComponent": () => (/* binding */ PolicyCulturalBookingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _policy_cultural_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policy-cultural-booking.component.html?ngResource */ 40363);
/* harmony import */ var _policy_cultural_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./policy-cultural-booking.component.scss?ngResource */ 91630);
/* harmony import */ var _policy_cultural_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_policy_cultural_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_15__);





















let PolicyCulturalBookingComponent = class PolicyCulturalBookingComponent {
  constructor(stepperService, resourceService, userService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService, fb) {
    this.stepperService = stepperService;
    this.resourceService = resourceService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.fb = fb;
    this.form = this.resourceService.generalInformationForm$.getValue();
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_16__.BehaviorSubject(false);
    this.$fileObservables = [];
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_17__.Subject();
    this.isSubmitLoading$.asObservable().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_18__.takeUntil)(this.ngUnsubscribe)).subscribe(res => this.isSubmitLoading = res);
  }
  ngOnInit() {
    this.createManualInputs();
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
    this.bookingPoliciesValueChanges();
  }
  bookingPoliciesValueChanges() {
    const bookingPolicies = this.form.get('bookingPolicies');
    bookingPolicies.valueChanges.pipe(
    // distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),
    (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.takeUntil)(this.ngUnsubscribe)).subscribe(newValues => {
      console.log('before', {
        ...newValues
      });
      for (const bookingType in newValues) {
        if (newValues[bookingType] === true) {
          if (!this.previousBookingType) {
            this.previousBookingType = bookingType;
            this.selectedBookingType = bookingType;
          } else if (bookingType !== this.selectedBookingType) {
            this.previousBookingType = this.selectedBookingType;
            this.selectedBookingType = bookingType;
            break;
          }
        }
      }
      if (this.previousBookingType && this.selectedBookingType && this.previousBookingType !== this.selectedBookingType) {
        bookingPolicies.get(this.previousBookingType).patchValue(false, {
          emitEvent: false
        });
        if (this.previousBookingType === 'depositRequired') {
          if (bookingPolicies.get('depositRequiredPercentage').disabled) {
            bookingPolicies.get('depositRequiredAmount').patchValue(0, {
              emitEvent: false
            });
          }
          if (bookingPolicies.get('depositRequiredAmount').disabled) {
            bookingPolicies.get('depositRequiredPercentage').patchValue(0, {
              emitEvent: false
            });
          }
        }
        if (this.previousBookingType === 'advancePartialPayment') {
          bookingPolicies.get('advancePartialPaymentPercentage').patchValue(0, {
            emitEvent: false
          });
        }
      }
      console.log('after', this.form.get('bookingPolicies').value);
    });
  }
  requireCheckboxesToBeCheckedValidator(minRequired = 1) {
    console.log('se apeleaza');
    return function validate(formGroup) {
      let checked = 0;
      // console.log('se apeleaza 2');
      Object.keys(formGroup.controls).forEach(key => {
        const control = formGroup.controls[key];
        if (control.value === true) {
          checked++;
        }
      });
      if (checked < minRequired) {
        return {
          requireCheckboxesToBeChecked: true
        };
      }
      return null;
    };
  }
  bookingPolicyEdit(event, type) {
    if (event && type === 'depositRequired') {
      this.form.get('bookingPolicies').get('depositRequiredAmount')?.enable();
      this.form.get('bookingPolicies').get('depositRequiredPercentage')?.enable();
      this.form.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.form.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.form.get('bookingPolicies').get('advanceFullPayment')?.setValue(false);
      this.form.get('bookingPolicies').get('advancePartialPayment')?.setValue(false);
      this.form.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.form.get('bookingPolicies').get('advancePartialPaymentPercentage').disable();
    }
    if (event && type === 'advanceFullPayment') {
      console.log('full payment');
      this.form.get('bookingPolicies').get('depositRequired')?.setValue(false);
      // this.ticketForm.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.form.get('bookingPolicies').get('depositRequiredAmount')?.disable();
      // this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.form.get('bookingPolicies').get('depositRequiredPercentage')?.disable();
      this.form.get('bookingPolicies').get('advancePartialPayment')?.setValue(false);
      // this.ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.form.get('bookingPolicies').get('advancePartialPaymentPercentage')?.disable();
    }
    if (event && type === 'advancePartialPayment') {
      this.form.get('bookingPolicies').get('advanceFullPayment')?.setValue(false);
      this.form.get('bookingPolicies').get('advancePartialPaymentPercentage')?.enable();
      this.form.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.form.get('bookingPolicies').get('depositRequired')?.setValue(false);
      this.form.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.form.get('bookingPolicies').get('depositRequiredAmount')?.disable();
      this.form.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.form.get('bookingPolicies').get('depositRequiredPercentage')?.disable();
    }
  }
  checkDepositType(type) {
    if (this.form.get('bookingPolicies').get('depositRequired').value) {
      if (type === 'percentage') {
        if (this.form.get('bookingPolicies').get('depositRequiredPercentage').value > 0) {
          this.form.get('bookingPolicies').get('depositRequiredAmount').patchValue(0);
          this.form.get('bookingPolicies').get('depositRequiredAmount').disable();
        } else if (this.form.get('bookingPolicies').get('depositRequiredPercentage').value === 0 || !this.form.get('bookingPolicies').get('depositRequiredPercentage').value) {
          this.form.get('bookingPolicies').get('depositRequiredAmount').enable();
        }
      } else if (type === 'amount') {
        if (this.form.get('bookingPolicies').get('depositRequiredAmount').value > 0) {
          this.form.get('bookingPolicies').get('depositRequiredPercentage').patchValue(0);
          this.form.get('bookingPolicies').get('depositRequiredPercentage').disable();
        } else if (this.form.get('bookingPolicies').get('depositRequiredAmount').value === 0 || !this.form.get('bookingPolicies').get('depositRequiredPercentage').value) {
          this.form.get('bookingPolicies').get('depositRequiredPercentage').enable();
        }
      }
    }
  }
  createManualInputs() {
    this.form = this.resourceService.generalInformationForm$.getValue();
    console.log('initial form', {
      ...this.form.value
    });
    console.log('initial state', {
      ...this.resourceService.generalInformationForm$.getValue().value
    });
    if (this.resourceService.resourceId$.getValue()) {
      const bookingPolicies = this.fb.group({
        depositRequired: false,
        advancePartialPayment: false,
        advanceFullPayment: false,
        depositRequiredPercentage: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.pattern('^(?:[1-9][0-9]?|100)$')])],
        depositRequiredAmount: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.pattern('^[1-9]\\d*$')])],
        advancePartialPaymentPercentage: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.pattern('^(?:[1-9][0-9]?|100)$')])]
      }, {
        validators: this.requireCheckboxesToBeCheckedValidator()
      });
      if (!this.form.value.bookingPolicies) {
        this.form.addControl('bookingPolicies', bookingPolicies);
        this.form.get('bookingPolicies').patchValue(this.resourceService.resourceTemplateData$.getValue().bookingPolicies);
      }
      console.log('intra pe edit', this.resourceService.resourceTemplateData$.getValue().bookingPolicies);
    } else {
      const bookingPolicies = this.fb.group({
        depositRequired: false,
        advancePartialPayment: false,
        advanceFullPayment: false,
        depositRequiredPercentage: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.pattern('^(?:[1-9][0-9]?|100)$')])],
        depositRequiredAmount: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.pattern('^[1-9]\\d*$')])],
        advancePartialPaymentPercentage: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.pattern('^(?:[1-9][0-9]?|100)$')])]
      }, {
        validators: this.requireCheckboxesToBeCheckedValidator()
      });
      this.form.addControl('bookingPolicies', bookingPolicies);
      console.log('intra pe new', this.form);
    }
    // this.dataLoaded = true;
    // console.log('GENERAL INFO DE LA SERV', this.resourceService.generalInformationForm$.getValue())
    if (this.form.value?.bookingPolicies) {
      console.log('avem template data', this.form.value?.bookingPolicies);
      const bookingPolicyValue = this.form.value?.bookingPolicies;
      if (bookingPolicyValue?.advanceFullPayment) {
        this.previousBookingType = 'advanceFullPayment';
        this.selectedBookingType = 'advanceFullPayment';
        this.bookingPolicyEdit(true, 'advanceFullPayment');
      }
      if (bookingPolicyValue?.depositRequiredPercentage > 0) {
        this.form.get('bookingPolicies.depositRequired').patchValue(true);
        this.previousBookingType = 'depositRequired';
        this.selectedBookingType = 'depositRequired';
        this.checkDepositType('percentage');
        this.form.get('bookingPolicies').get('advancePartialPaymentPercentage').disable();
      }
      if (bookingPolicyValue?.depositRequiredAmount > 0) {
        this.form.get('bookingPolicies.depositRequired').patchValue(true);
        this.previousBookingType = 'depositRequired';
        this.selectedBookingType = 'depositRequired';
        this.checkDepositType('amount');
      }
      if (bookingPolicyValue?.advancePartialPaymentPercentage > 0) {
        this.form.get('bookingPolicies.advancePartialPayment').patchValue(true);
        this.previousBookingType = 'advancePartialPayment';
        this.selectedBookingType = 'advancePartialPayment';
        this.form.get('bookingPolicies').get('depositRequiredAmount').disable();
        this.form.get('bookingPolicies').get('depositRequiredPercentage').disable();
      }
    }
    console.log('after form', {
      ...this.form.value
    });
    console.log('after state', {
      ...this.resourceService.generalInformationForm$.getValue().value
    });
  }
  /** Go to previous step*/
  prevStep() {
    console.log('form prev', this.form);
    // // Mark as touched
    this.form.markAllAsTouched();
    // // Check form validation
    if (this.form.invalid) {
      return;
    }
    // Go the next step
    this.stepperService.prevStep();
    // console.log(this.form.value)
    // this.resourceService.attributesFromResourceTemplate$.next(this.formSectionsToSend);
    // console.log('allalalalla', this.resourceService.attributesFromResourceTemplate$.getValue())
  }
  /** Go to next step*/
  nextStep() {
    // // Mark as touched
    this.form.markAllAsTouched();
    // // Check form validation
    if (this.form.invalid) {
      return;
    }
    // Go the next step
    this.stepperService.nextStep();
    // console.log(this.form.value)
    // this.resourceService.attributesFromResourceTemplate$.next(this.formSectionsToSend);
    // console.log('allalalalla', this.resourceService.attributesFromResourceTemplate$.getValue())
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.resourceService.relatedResources$.next([]);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      bookingPolicies: combineForms.value?.bookingPolicies ? {
        depositRequiredPercentage: combineForms.value.bookingPolicies?.depositRequiredPercentage || 0,
        depositRequiredAmount: combineForms.value.bookingPolicies?.depositRequiredAmount || 0,
        advancePartialPaymentPercentage: combineForms.value.bookingPolicies?.advancePartialPaymentPercentage || 0,
        advanceFullPayment: combineForms.value.bookingPolicies?.advanceFullPayment || false
      } : null,
      startDate: moment__WEBPACK_IMPORTED_MODULE_15__(combineForms.value?.startDate)?.format('YYYY-MM-DDTHH:mm') || null,
      endDate: moment__WEBPACK_IMPORTED_MODULE_15__(combineForms.value?.endDate)?.format('YYYY-MM-DDTHH:mm') || null,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_13__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__.CulturalBookingService
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormBuilder
  }];
};
PolicyCulturalBookingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_23__.Component)({
  selector: 'app-policy-cultural-booking',
  template: _policy_cultural_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_policy_cultural_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], PolicyCulturalBookingComponent);


/***/ }),

/***/ 44934:
/*!************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy-rental-booking/policy-rental-booking.component.ts ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PolicyRentalBookingComponent": () => (/* binding */ PolicyRentalBookingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _policy_rental_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policy-rental-booking.component.html?ngResource */ 39710);
/* harmony import */ var _policy_rental_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./policy-rental-booking.component.scss?ngResource */ 17718);
/* harmony import */ var _policy_rental_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_policy_rental_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);




















let PolicyRentalBookingComponent = class PolicyRentalBookingComponent {
  constructor(stepperService, fb, resourceService, userService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.fb = fb;
    this.resourceService = resourceService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.formInit();
    // this.resourceService.listenForPolicyRental().subscribe({
    //     next: policy => {
    //         if (policy) {
    //             this.sendAccPolicy();
    //         }
    //     }
    // })
    if (this.resourceService.resourceId$.getValue()) {
      console.log('AICI TOATE DATELE', this.resourceService.resourceTemplateData$.getValue());
      console.log('AICI POLICY', this.resourceService.resourceTemplateType$.getValue().policy);
      console.log('POLICY ACC', this.resourceService.accommodationPolicy$.getValue());
      this.makeFormOnEdit(this.resourceService.accommodationPolicy$.getValue());
      // this.form.patchValue()
    } else {
      this.makeFormOnEdit(this.resourceService.accommodationPolicy$.getValue());
    }
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }

  formInit() {
    this.form = this.fb.group({
      checkInStartHour: [null],
      checkInEndHour: [null],
      checkOutStartHour: [null],
      checkOutEndHour: [null]
    });
  }
  makeFormOnEdit(policy) {
    console.log(policy);
    this.form.patchValue(policy);
    console.log(this.form.value);
  }
  sendAccPolicy() {
    this.resourceService.accommodationPolicy$.next(this.form.value);
  }
  setNull(control) {
    this.form.get(control).setValue(null);
    console.log(this.form.value);
  }
  valueChange(control) {
    this.form.get(control).setValue(this.form.get(control).value);
    console.log(this.form.value);
  }
  /** Go to next step*/
  nextStep() {
    // // Mark as touched
    // this.form.markAllAsTouched()
    //
    // // Check form validation
    // if (this.form.invalid) {
    //     return
    // }
    this.sendAccPolicy();
    // Go the next step
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    this.sendAccPolicy();
    this.stepperService.prevStep(true);
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        const currentRelatedRes = this.resourceService.relatedResources$.getValue();
        const resourceRelatedRes = this.resourceService.resourceTemplateData$.getValue()?.relatedResources;
        if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id === resourceRelatedRes[0]) {
          // nu fac nimic
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id !== resourceRelatedRes[0]) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if ((resourceRelatedRes?.length === 0 || !resourceRelatedRes) && currentRelatedRes?.length > 0) {
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length === 0) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
        }
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_16__.FormBuilder
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_13__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__.CulturalBookingService
  }];
};
PolicyRentalBookingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_19__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_20__.Component)({
  selector: 'app-policy-rental-booking',
  template: _policy_rental_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_policy_rental_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], PolicyRentalBookingComponent);


/***/ }),

/***/ 1721:
/*!***********************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy.component.ts ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PolicyComponent": () => (/* binding */ PolicyComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _policy_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policy.component.html?ngResource */ 97596);
/* harmony import */ var _policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./policy.component.scss?ngResource */ 24942);
/* harmony import */ var _policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../_services/stepper.service */ 9845);





let PolicyComponent = class PolicyComponent {
  constructor(stepperService) {
    this.stepperService = stepperService;
  }
  /** Go to next step*/
  nextStep() {
    // // Mark as touched
    // this.form.markAllAsTouched()
    //
    // // Check form validation
    // if (this.form.invalid) {
    //     return
    // }
    // Go the next step
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }];
};
PolicyComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-policy',
  template: _policy_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], PolicyComponent);


/***/ }),

/***/ 34572:
/*!****************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/restaurant-policy/restaurant-policy.component.ts ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RestaurantPolicyComponent": () => (/* binding */ RestaurantPolicyComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _restaurant_policy_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./restaurant-policy.component.html?ngResource */ 84664);
/* harmony import */ var _restaurant_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./restaurant-policy.component.scss?ngResource */ 52948);
/* harmony import */ var _restaurant_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_restaurant_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);





















let RestaurantPolicyComponent = class RestaurantPolicyComponent {
  constructor(stepperService, fb, resourceService, timepickerService, userService, route, router, roomService, ticketService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.fb = fb;
    this.resourceService = resourceService;
    this.timepickerService = timepickerService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.days = ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'];
    this.tabIndex = 0;
    this.isEditMode = false;
    this.showTimetable = false;
    this.timetableArr = [];
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_16__.Subject();
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_17__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.formInit();
    this.initConfigTabs();
    this.checkIfEdit();
    this.timepickerService.refreshTimetableListData().subscribe({
      next: timetable => {
        const timetableValue = this.timepickerService.timetableList$.getValue();
        timetableValue.forEach(day => {
          day.startTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.startTime, 'HH:mm');
          day.endTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.endTime, 'HH:mm');
        });
        this.timetableForm.get('timetable').patchValue(timetableValue);
        // this.timetableForm.get('timetable').patchValue(this.timepickerService.timetableList$.getValue());
      }
    });

    console.log('INIT 1', this.timepickerService.bookingPolicies$.getValue());
    console.log('INIT 2', this.timepickerService.changePolicies$.getValue());
    if (this.timepickerService.bookingPolicies$.getValue()?.depositRequired) {
      this.timetableForm.get('bookingPolicies.depositRequired').patchValue(true);
      this.timetableForm.get('bookingPolicies.depositRequiredAmount').patchValue(this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount);
      this.previousBookingType = 'depositRequired';
      this.selectedBookingType = 'depositRequired';
    }
    if (this.timepickerService.changePolicies$.getValue()?.nonRefundable) {
      this.timetableForm.get('changePolicies.nonRefundable').setValue(true);
      this.timetableForm.get('changePolicies.freeCancellation.freeCancellation').setValue(false);
      this.timetableForm.get('changePolicies.freeCancellation.deadlineDays').disable();
    }
    if (this.timepickerService.changePolicies$.getValue()?.modifiable) {
      this.timetableForm.get('changePolicies.modifiable').patchValue(true);
    }
    if (this.timepickerService.changePolicies$.getValue()?.freeCancellation.freeCancellation) {
      this.timetableForm.get('changePolicies.nonRefundable').setValue(false);
      this.timetableForm.get('changePolicies.freeCancellation.freeCancellation').setValue(true);
      this.timetableForm.get('changePolicies.freeCancellation.deadlineDays').enable();
      this.timetableForm.get('changePolicies.freeCancellation.deadlineDays').setValue(this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays);
    }
    // this.resourceService.listenForPolicyMenu().subscribe({
    //     next: policyMenu => {
    //         console.log('POLITICI 1', policyMenu)
    //
    //         if (policyMenu) {
    //             this.sendTimePicker();
    //
    //             const changePoliciesToSend = {
    //                 ...this.timetableForm.get('changePolicies').value,
    //                 freeCancellation: {
    //                     ...this.timetableForm.get('changePolicies.freeCancellation').value,
    //                     deadlineDays: Number(this.timetableForm.get('changePolicies.freeCancellation.deadlineDays').value)
    //                 }
    //             }
    //             this.timepickerService.timetableList$.next(this.timetableForm.get('timetable').value);
    //             this.timepickerService.changePolicies$.next(changePoliciesToSend);
    //             this.timepickerService.bookingPolicies$.next(this.timetableForm.get('bookingPolicies').value);
    //
    //             console.log('POLITICI 2', this.timetableForm.get('bookingPolicies').value)
    //         }
    //
    //     }
    // })
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
    this.bookingPoliciesValueChanges();
  }
  changePolicyEdit(event, type) {
    if (event.checked && type === 'nonRefundable') {
      this.timetableForm.get('changePolicies').get('freeCancellation.freeCancellation').setValue(false);
      this.timetableForm.get('changePolicies').get('freeCancellation.deadlineDays').setValue(0);
      this.timetableForm.get('changePolicies').get('freeCancellation.deadlineDays').disable();
    } else if (event.checked && type === 'freeCancellation') {
      this.timetableForm.get('changePolicies').get('nonRefundable').setValue(false);
      this.timetableForm.get('changePolicies').get('freeCancellation.deadlineDays').enable();
      this.timetableForm.get('changePolicies').get('freeCancellation.deadlineDays').setValue(0);
    }
    if (!event.checked && type === 'nonRefundable') {
      this.timetableForm.get('changePolicies').get('nonRefundable').setValue(false);
    } else if (!event.checked && type === 'freeCancellation') {
      this.timetableForm.get('changePolicies').get('freeCancellation.freeCancellation').setValue(false);
    }
  }
  bookingPoliciesValueChanges() {
    const bookingPolicies = this.timetableForm.get('bookingPolicies');
    bookingPolicies.valueChanges.pipe(
    // distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),
    (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.takeUntil)(this.ngUnsubscribe)).subscribe(newValues => {
      for (const bookingType in newValues) {
        if (newValues[bookingType] === true) {
          if (!this.previousBookingType) {
            this.previousBookingType = bookingType;
            this.selectedBookingType = bookingType;
          } else if (bookingType !== this.selectedBookingType) {
            this.previousBookingType = this.selectedBookingType;
            this.selectedBookingType = bookingType;
            break;
          }
        }
      }
      if (this.previousBookingType && this.selectedBookingType && this.previousBookingType !== this.selectedBookingType) {
        bookingPolicies.get(this.previousBookingType).patchValue(false, {
          emitEvent: false
        });
        if (this.previousBookingType === 'depositRequired') {
          if (bookingPolicies.get('depositRequiredPercentage')?.disabled) {
            bookingPolicies.get('depositRequiredAmount').patchValue(0, {
              emitEvent: false
            });
          }
          if (bookingPolicies.get('depositRequiredAmount').disabled) {
            bookingPolicies.get('depositRequiredPercentage').patchValue(0, {
              emitEvent: false
            });
          }
        }
      }
    });
  }
  formInit() {
    this.timetableForm = this.fb.group({
      timetable: this.fb.array([]),
      bookingPolicies: new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({
        depositRequiredAmount: new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.pattern('^[1-9]\\d*$')),
        depositRequired: new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormControl(false)
      }, this.requireCheckboxesToBeCheckedValidator(1)),
      changePolicies: this.fb.group({
        nonRefundable: false,
        modifiable: false,
        freeCancellation: this.fb.group({
          freeCancellation: false,
          deadlineDays: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.pattern('^[1-9]\\d*$')]
        })
      }, {
        validators: this.customChangePolicyValidation
      })
    });
    console.log('form-init', this.timetableForm.value);
  }
  customChangePolicyValidation(group) {
    const freeCancellation = group.get('freeCancellation.freeCancellation')?.value;
    const deadlineDays = group.get('freeCancellation.deadlineDays')?.value;
    const nonRefundable = group.get('nonRefundable')?.value;
    if (!nonRefundable && !freeCancellation || freeCancellation && deadlineDays === 0) {
      return {
        invalidPolicy: true
      };
    }
    return null;
  }
  requireCheckboxesToBeCheckedValidator(minRequired) {
    return function validate(formGroup) {
      let checked = false; // Use a boolean flag to track if at least one checkbox is checked
      Object.keys(formGroup.controls).forEach(key => {
        const control = formGroup.controls[key];
        if (control.value === true) {
          checked = true; // Set the flag to true if any checkbox is checked
          return; // Exit the loop early, as we only need one checkbox checked
        }
      });

      if (!checked) {
        return {
          requireCheckboxesToBeChecked: true
        };
      }
      return null;
    };
  }
  timetable() {
    return this.timetableForm.get('timetable');
  }
  newDayTab(day) {
    return this.fb.group({
      day: day,
      startTime: moment__WEBPACK_IMPORTED_MODULE_5__('00:00', 'HH:mm'),
      endTime: moment__WEBPACK_IMPORTED_MODULE_5__('00:00', 'HH:mm'),
      closed: [false]
    }, {
      validators: this.checkTimeSlots
    });
  }
  addDayTab(day) {
    this.timetable().push(this.newDayTab(day));
  }
  removeDayTab(tabIndex) {
    this.timetable().removeAt(tabIndex);
  }
  initConfigTabs() {
    this.days.forEach(item => {
      this.addDayTab(item);
    });
  }
  checkIfEdit() {
    if (this.resourceService.resourceId$.getValue()) {
      this.isEditMode = true;
      console.log('tp id', this.resourceService.resourceTemplateData$.getValue().bookingTimePickerId);
      if (this.timepickerService.timetableList$.getValue().length > 0) {
        const serviceTimetable = this.timepickerService.timetableList$.getValue();
        serviceTimetable.forEach(day => {
          day.startTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.startTime, 'HH:mm');
          day.endTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.endTime, 'HH:mm');
        });
        this.timetableForm.get('timetable').patchValue(serviceTimetable);
      } else {
        const timetable = this.resourceService.resourceTemplateData$.getValue().timetable;
        if (!timetable) {
          this.formInit();
        } else {
          timetable.forEach(day => {
            day.startTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.startTime, 'HH:mm');
            day.endTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.endTime, 'HH:mm');
          });
          this.timetableForm.get('timetable').patchValue(timetable);
        }
      }
      this.timepickerService.getTimepickerByResourceId(this.resourceService.resourceTemplateData$.getValue().bookingTimePickerId).subscribe({
        next: timepicker => {
          console.log('timepicker', timepicker);
          this.timetableForm.get('bookingPolicies').patchValue(timepicker?.bookingPolicies ? timepicker?.bookingPolicies : null);
          // if (timepicker?.bookingPolicies?.depositRequiredPercentage > 0 && timepicker?.bookingPolicies?.depositRequiredPercentage ) {
          //     this.checkDepositType('percentage');
          //     this.timetableForm.get('bookingPolicies').get('depositRequired').patchValue(true);
          // } else
          if (timepicker?.bookingPolicies?.depositRequiredAmount > 0) {
            // this.checkDepositType('amount');
            this.timetableForm.get('bookingPolicies').get('depositRequired').patchValue(true);
            console.log('BOOKING', this.timetableForm.value);
          }
          this.timetableForm.get('changePolicies').patchValue(timepicker?.changePolicies ? timepicker?.changePolicies : null);
        }
      });
      if (this.timepickerService.changePolicies$.getValue()) {
        this.timetableForm.get('bookingPolicies').patchValue(this.timepickerService.bookingPolicies$.getValue());
        const changePoliciesToSend = {
          ...this.timepickerService.changePolicies$.getValue(),
          freeCancellation: {
            ...this.timepickerService.changePolicies$.getValue()?.freeCancellation,
            deadlineDays: Number(this.timepickerService.changePolicies$.getValue()?.freeCancellation?.deadlineDays)
          }
        };
        console.log('HERE', changePoliciesToSend);
        this.timetableForm.get('changePolicies').patchValue(changePoliciesToSend);
      } else {
        this.timepickerService.getTimepickerByResourceId(this.resourceService.resourceId$.getValue()).subscribe({
          next: timepicker => {
            console.log('timepicker', timepicker);
            this.timetableForm.get('bookingPolicies').patchValue(timepicker.bookingPolicies);
            // if (timepicker?.bookingPolicies?.depositRequiredPercentage > 0 && timepicker?.bookingPolicies?.depositRequiredPercentage) {
            //     this.checkDepositType('percentage');
            //     this.timetableForm.get('bookingPolicies').get('depositRequired').patchValue(true);
            // } else
            if (timepicker?.bookingPolicies?.depositRequiredAmount > 0) {
              // this.checkDepositType('amount');
              this.timetableForm.get('bookingPolicies').get('depositRequired').patchValue(true);
              console.log('BOOKING', this.timetableForm.value);
            }
            console.log('HERE 2', timepicker.changePolicies);
            const changePoliciesToSend = {
              ...timepicker.changePolicies,
              freeCancellation: {
                ...timepicker.changePolicies?.freeCancellation,
                deadlineDays: Number(timepicker.changePolicies?.freeCancellation?.deadlineDays)
              }
            };
            console.log('HERE', changePoliciesToSend);
            this.timetableForm.get('changePolicies').patchValue(changePoliciesToSend);
          }
        });
      }
    } else {
      this.isEditMode = false;
    }
  }
  freeCancellationCheck(event) {
    if (!event.checked) {
      this.timetableForm.get('changePolicies').get('freeCancellation.deadlineDays').patchValue(0);
    }
  }
  depositCheck(event) {
    console.log('modificat deposit');
    if (!event.checked) {
      this.timetableForm.get('bookingPolicies').get('depositRequiredAmount').patchValue(0);
    }
  }
  // checkDepositType(type) {
  //     if (type === 'percentage') {
  //         if (this.timetableForm.get('bookingPolicies').get('depositRequiredPercentage').value > 0) {
  //             this.timetableForm.get('bookingPolicies').get('depositRequiredAmount').patchValue(0);
  //             this.timetableForm.get('bookingPolicies').get('depositRequiredAmount').disable();
  //         } else if (this.timetableForm.get('bookingPolicies').get('depositRequiredPercentage').value === 0 || !this.timetableForm.get('bookingPolicies').get('depositRequiredPercentage').value) {
  //             this.timetableForm.get('bookingPolicies').get('depositRequiredAmount').enable();
  //         }
  //
  //     } else if (type === 'amount') {
  //         if (this.timetableForm.get('bookingPolicies').get('depositRequiredAmount').value > 0) {
  //             this.timetableForm.get('bookingPolicies').get('depositRequiredPercentage').patchValue(0);
  //             this.timetableForm.get('bookingPolicies').get('depositRequiredPercentage').disable();
  //         } else if (this.timetableForm.get('bookingPolicies').get('depositRequiredAmount').value === 0 || !this.timetableForm.get('bookingPolicies').get('depositRequiredPercentage').value) {
  //             this.timetableForm.get('bookingPolicies').get('depositRequiredPercentage').enable();
  //         }
  //     }
  // }
  advancePaymentCheck(event) {
    if (!event.checked) {
      this.timetableForm.get('bookingPolicies').get('advancePartialPaymentPercentage').patchValue(0);
    }
  }
  /** Go to next step*/
  nextStep() {
    // Mark as touched
    this.timetableForm.markAllAsTouched();
    console.log('NEXT STEP', this.timetableForm.value);
    console.log(this.timetableForm);
    // Check form validation
    if (this.timetableForm.invalid) {
      console.log('INVALID');
      console.log(this.timetableForm.getError('invalidTime'));
      return;
    } else {
      this.sendTimePicker();
      console.log('TIMETABLE', this.timetableForm.get('timetable').value);
      this.timepickerService.timetableList$.next(this.timetableForm.get('timetable').value);
      const changePoliciesToSend = {
        ...this.timetableForm.get('changePolicies').value,
        freeCancellation: {
          ...this.timetableForm.get('changePolicies.freeCancellation').value,
          deadlineDays: Number(this.timetableForm.get('changePolicies.freeCancellation.deadlineDays').value)
        }
      };
      this.timepickerService.changePolicies$.next(changePoliciesToSend);
      this.timepickerService.bookingPolicies$.next(this.timetableForm.get('bookingPolicies').value);
      console.log('NEXT FORM', this.timetableForm.value);
      // console.log('free', changePoliciesToSend)
    }
    // Go the next step
    this.stepperService.nextStep();
  }
  checkTimeSlots(control) {
    const startTime = control.get('startTime');
    const endTime = control.get('endTime');
    const closed = control.get('closed');
    // console.log('closed', closed)
    // console.log('CHECK start', moment(startTime.value).format('HH:mm'));
    // console.log('CHECK end',moment(endTime.value).format('HH:mm'));
    if (!closed.value) {
      if (moment__WEBPACK_IMPORTED_MODULE_5__(startTime.value).format('HH:mm') >= moment__WEBPACK_IMPORTED_MODULE_5__(endTime.value).format('HH:mm')) {
        console.log('nu e bine');
        endTime.setErrors({
          invalidTime: true
        });
      }
    } else {
      endTime.setErrors(null);
    }
    return;
  }
  sendTimePicker() {
    this.timetableForm.get('timetable').value.forEach((day, index) => {
      // console.log('SEND TP', day);
      day.endTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.endTime).format('HH:mm');
      day.startTime = moment__WEBPACK_IMPORTED_MODULE_5__(day.startTime).format('HH:mm');
    });
  }
  /** Go to previous step*/
  prevStep() {
    this.timetableForm.markAllAsTouched();
    console.log('PREV STEP', this.timetableForm);
    // Check form validation
    if (this.timetableForm.invalid) {
      return;
    } else {
      this.sendTimePicker();
      this.timepickerService.timetableList$.next(this.timetableForm.get('timetable').value);
      this.timepickerService.changePolicies$.next(this.timetableForm.get('changePolicies').value);
      this.timepickerService.bookingPolicies$.next(this.timetableForm.get('bookingPolicies').value);
      console.log('PREV FORM', this.timetableForm.value);
    }
    this.stepperService.prevStep(true);
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.timetableForm.markAllAsTouched();
    if (this.timetableForm.valid) {
      this.isSubmitLoading = true;
      console.log('valid');
      this.sendTimePicker();
      console.log('TIMETABLE', this.timetableForm.get('timetable').value);
      this.timepickerService.timetableList$.next(this.timetableForm.get('timetable').value);
      const changePoliciesToSend = {
        ...this.timetableForm.get('changePolicies').value,
        freeCancellation: {
          ...this.timetableForm.get('changePolicies.freeCancellation').value,
          deadlineDays: Number(this.timetableForm.get('changePolicies.freeCancellation.deadlineDays').value)
        }
      };
      this.timepickerService.changePolicies$.next(changePoliciesToSend);
      this.timepickerService.bookingPolicies$.next(this.timetableForm.get('bookingPolicies').value);
      console.log('form', this.timetableForm.value);
      this.roomsArray = this.roomService.roomList$.getValue();
      const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({
        ...this.resourceService.generalInformationForm$.getValue().controls,
        ...this.resourceService.facilitiesForm$.getValue().controls,
        ...this.resourceService.filesForm$.getValue().controls
      });
      console.log('FILES FORM', this.resourceService.filesForm$.getValue());
      console.log('Form-uri combinate', combineForms.value);
      console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
      console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
      console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
      // Empty array
      const formData = [];
      // Sort form inputs by tabName
      for (const control in combineForms.controls) {
        this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
          section.tabAttributes.forEach(attribute => {
            if (attribute.name === control) {
              if (attribute.valueType === 'multiple-select') {
                console.log('ATTR SENT', attribute, combineForms.get(control).value);
                formData.push({
                  tabName: section.tabName,
                  attributeName: control,
                  attributeId: attribute.id,
                  attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                  attributeIconPath: attribute.icon.filePath
                });
              } else {
                formData.push({
                  tabName: section.tabName,
                  attributeName: control,
                  attributeId: attribute.id,
                  attributeValue: combineForms.get(control).value,
                  attributeIconPath: attribute.icon.filePath
                });
              }
            }
          });
        });
      }
      console.log('FORM DATA', formData);
      const attributes = formData.reduce((acc, item) => {
        const index = acc.findIndex(x => x.tabName === item.tabName);
        if (index !== -1) {
          acc[index].tabAttributes.push({
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          });
        } else {
          acc.push({
            tabName: item.tabName,
            tabAttributes: [{
              attributeId: item.attributeId,
              attributeValue: item.attributeValue
            }]
          });
        }
        return acc;
      }, []);
      console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
      // Formatted Form Object
      const formObject = {
        title: combineForms.value.title,
        description: combineForms.value.description,
        address: combineForms.value.address,
        country: combineForms.value.country,
        city: combineForms.value.city,
        slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
        featuredImage: combineForms.value.thumbnail,
        images: this.resourceService.resourceData.getValue().images,
        videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
        geographicalCoordinates: {
          latitude: combineForms.value.latitude,
          longitude: combineForms.value.longitude
        },
        attributes: attributes,
        categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
        domain: this.resourceService.resourceTemplateType$.getValue().domain,
        resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
        bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
        timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
        policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
          accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
        } : this.resourceService.resourceTemplateData$.getValue().policy,
        externalUrl: this.resourceService.externalUrl$.getValue(),
        sharedExperience: combineForms.value.sharedExperience,
        forItinerary: combineForms.value.forItinerary
      };
      console.log('FORM OBJ', formObject);
      if (this.resourceService.resourceId$.getValue()) {
        this.updateResource(formObject, combineForms);
        //added for policies check on menu
        // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
        //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
        //             this.timepickerService.changePolicies$.getValue().modifiable ||
        //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
        //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
        //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
        //         this.updateResource(formObject, combineForms);
        //     } else {
        //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
        //         this.isSubmitLoading$.next(false);
        //     }
        //     //if not menu, everything works like before
        // } else {
        //     this.updateResource(formObject, combineForms);
        // }
      }
    } else {
      console.log('invalid');
      return;
    }
  }
  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormBuilder
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_4__.TimepickerService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_6__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_7__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_8__.TicketsBookingService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_9__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_10__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_11__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_12__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_13__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_14__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_15__.CulturalBookingService
  }];
};
RestaurantPolicyComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_23__.Component)({
  selector: 'app-restaurant-policy',
  template: _restaurant_policy_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_restaurant_policy_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], RestaurantPolicyComponent);


/***/ }),

/***/ 52514:
/*!********************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/related-resource/cultural-related-res/cultural-related-res.component.ts ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CulturalRelatedResComponent": () => (/* binding */ CulturalRelatedResComponent)
/* harmony export */ });
/* harmony import */ var _Users_ligia_bestinform_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _cultural_related_res_component_html_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cultural-related-res.component.html?ngResource */ 55002);
/* harmony import */ var _cultural_related_res_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cultural-related-res.component.scss?ngResource */ 3147);
/* harmony import */ var _cultural_related_res_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_cultural_related_res_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../shared/_services/resources.service */ 3145);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! moment/moment */ 56908);
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_17__);























let CulturalRelatedResComponent = class CulturalRelatedResComponent {
  constructor(stepperService, resourcesService, toastService, usersService, systemService, resourceService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.resourcesService = resourcesService;
    this.toastService = toastService;
    this.usersService = usersService;
    this.systemService = systemService;
    this.resourceService = resourceService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.displayedResourcesColumns = ['title', 'address', 'category', 'purchase', 'status', 'actions'];
    this.pageNumberChoose = 0;
    this.pageSizeChoose = 10;
    this.dataSourceChoose = [];
    this.resToBeAdded = [];
    this.pageSizeArray = [10, 25, 50, 100];
    this.sorting = "date";
    this.dir = 'desc';
    this.isStaff = false;
    this.isProvider = false;
    this.isAdmin = false;
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_18__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.resourceId = this.resourceService.resourceId$.getValue();
    this.theaterCategoryId = this.resourceService.resourceTemplateType$.getValue().categoryId;
    if (this.resourceService.relatedResources$.getValue()?.length > 0) {
      console.log('RELATED RES DIN SERVICIU', this.resourceService.relatedResources$.getValue());
      this.addToRelatedRes(this.resourceService.relatedResources$.getValue()[0]);
    } else {
      if (this.resourceService.resourceId$.getValue()) {
        const relatedRes = this.resourceService.resourceTemplateData$.getValue().relatedResources;
        if (relatedRes?.length > 0) {
          this.getRelatedResource(relatedRes[0]);
        }
      }
    }
    this.runAfterAsyncOperations();
  }
  getRelatedResource(relatedResourcesId) {
    this.resourcesService.getResourceById(relatedResourcesId).subscribe({
      next: res => {
        this.addToRelatedRes(res);
      }
    });
  }
  applyFilter(event) {
    const filterObject = {
      title: this.filterTitleChoose !== '' || this.filterTitleChoose !== null ? this.filterTitleChoose : null,
      userId: this.isProvider ? this.user.id : this.createResourceService.providerData$.getValue()?.providerId,
      excludedCategories: [this.eventCategoryId, this.jobCategoryId]
    };
    console.log('FILTRU', filterObject);
    this.resourcesService.listResourceFiltered(this.pageNumberChoose, this.pageSizeChoose, this.sorting, this.dir, filterObject).subscribe(res => {
      console.log('marimea paginii din apply FIlter', this.pageSizeChoose, this.filterTitleChoose);
      // this.paginationInfo = res;
      this.totalElements = res["totalElements"];
      this.dataSourceChoose = res["content"];
    });
  }
  pageChanged(event) {
    this.pageNumberChoose = event.pageIndex;
    this.pageSizeChoose = event.pageSize;
    this.applyFilter();
  }
  addToRelatedRes(resource) {
    if (this.resToBeAdded.length > 0) {
      this.toastService.showToast('Error', 'Exista deja o resursa asociata acestui eveniment!', "error");
    } else {
      this.resToBeAdded.push(resource);
      console.log('DUPA ADD', this.resToBeAdded);
    }
  }
  removeRelatedResource() {
    this.resToBeAdded = [];
  }
  /** Go to next step*/
  nextStep() {
    if (this.resToBeAdded.length > 0) {
      this.resourceService.relatedResources$.next(this.resToBeAdded);
      console.log(this.resourceService.relatedResources$.getValue());
    }
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    if (this.resToBeAdded.length > 0) {
      this.resourceService.relatedResources$.next(this.resToBeAdded);
    }
    this.stepperService.prevStep();
  }
  //async functions
  getEventCategoryId() {
    return new Promise((resolve, reject) => {
      this.systemService.getSystemSetting().subscribe({
        next: resp => {
          this.eventCategoryId = resp.eventCategoryId;
          console.log('RES SETTINGS', resp);
          console.log('id categorie event', this.eventCategoryId);
          resolve(); // Resolve the promise once the operation is complete
        },

        error: err => {
          reject(err); // Reject the promise if there's an error
        }
      });
    });
  }

  getJobCategoryId() {
    return new Promise((resolve, reject) => {
      this.resourcesService.getListOfDomains().subscribe({
        next: domains => {
          domains.forEach(domain => {
            if (domain.key === 'jobs') {
              this.resourcesService.listCategoryFiltered(0, 1, null, null, {
                domainId: domain.id
              }).subscribe({
                next: category => {
                  this.jobCategoryId = category.content[0].id;
                  resolve(); // Resolve the promise once the operation is complete
                },

                error: err => {
                  reject(err); // Reject the promise if there's an error
                }
              });
            }
          });
        }
      });
    });
  }

  getCurrentUser() {
    return new Promise((resolve, reject) => {
      this.usersService.getCurrentUser().subscribe({
        next: response => {
          this.user = response;
          if (response.roles.includes('ROLE_PROVIDER')) {
            this.isProvider = true;
          }
          if (response.roles.includes('ROLE_STAFF')) {
            this.isStaff = true;
          }
          if (response.roles.includes('ROLE_SUPER_ADMIN')) {
            this.isAdmin = true;
          }
          resolve(); // Resolve the promise once the operation is complete
        },

        error: err => {
          reject(err); // Reject the promise if there's an error
        }
      });
    });
  }

  runAfterAsyncOperations() {
    var _this = this;
    return (0,_Users_ligia_bestinform_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      try {
        yield _this.getEventCategoryId();
        yield _this.getJobCategoryId();
        yield _this.getCurrentUser();
        //  async operations are complete, you can now call the next function
        _this.applyFilter();
      } catch (error) {
        console.error('Error occurred:', error);
      }
    })();
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.resourceService.relatedResources$.next([]);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      startDate: combineForms.value?.startDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment_moment__WEBPACK_IMPORTED_MODULE_17___default()(combineForms.value?.startDate)?.format('YYYY-MM-DDTHH:mm') : null,
      endDate: combineForms.value?.endDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment_moment__WEBPACK_IMPORTED_MODULE_17___default()(combineForms.value?.endDate)?.format('YYYY-MM-DDTHH:mm') : null,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      bookingPolicies: combineForms.value?.bookingPolicies ? {
        depositRequiredPercentage: combineForms.value.bookingPolicies?.depositRequiredPercentage || 0,
        depositRequiredAmount: combineForms.value.bookingPolicies?.depositRequiredAmount || 0,
        advancePartialPaymentPercentage: combineForms.value.bookingPolicies?.advancePartialPaymentPercentage || 0,
        advanceFullPayment: combineForms.value.bookingPolicies?.advanceFullPayment || false
      } : this.resourceService.resourceTemplateData$.getValue()?.bookingPolicies,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        const resourceRelatedRes = this.resourceService.resourceTemplateData$.getValue()?.relatedResources;
        if (resourceRelatedRes?.length > 0 && this.resToBeAdded?.length > 0 && this.resToBeAdded[0]?.id === resourceRelatedRes[0]) {
          // nu fac nimic
        } else if (resourceRelatedRes?.length > 0 && this.resToBeAdded?.length > 0 && this.resToBeAdded[0]?.id !== resourceRelatedRes[0]) {
          console.log('id vechi', resourceRelatedRes[0], 'id nou', this.resToBeAdded[0].id);
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), this.resToBeAdded[0].id));
        } else if ((resourceRelatedRes?.length === 0 || !resourceRelatedRes) && this.resToBeAdded?.length > 0) {
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), this.resToBeAdded[0].id));
        } else if (resourceRelatedRes?.length > 0 && this.resToBeAdded?.length === 0) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
        }
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__.StepperService
  }, {
    type: _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_4__.ResourcesService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_6__.ToastService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__.UserDataService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_8__.SystemSettingsService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_5__.ResourcesService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_9__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_10__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_11__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_12__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_13__.BookingTimeslotsService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_14__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_8__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_15__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__.CulturalBookingService
  }];
};
CulturalRelatedResComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_23__.Component)({
  selector: 'app-cultural-related-res',
  template: _cultural_related_res_component_html_ngResource__WEBPACK_IMPORTED_MODULE_1__,
  styles: [(_cultural_related_res_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default())]
})], CulturalRelatedResComponent);


/***/ }),

/***/ 25457:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/apply-job/apply-job.component.ts ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ApplyJobComponent": () => (/* binding */ ApplyJobComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _apply_job_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apply-job.component.html?ngResource */ 78147);
/* harmony import */ var _apply_job_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apply-job.component.scss?ngResource */ 75899);
/* harmony import */ var _apply_job_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_apply_job_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);





let ApplyJobComponent = class ApplyJobComponent {
  constructor(stepperService) {
    this.stepperService = stepperService;
    this.roomList = [];
    this.dataLoaded = false;
  }
  /** Go to next step*/
  nextStep() {
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }];
};
ApplyJobComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-apply-job',
  template: _apply_job_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_apply_job_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ApplyJobComponent);


/***/ }),

/***/ 16190:
/*!***************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/car-booking/car-booking.component.ts ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CarBookingComponent": () => (/* binding */ CarBookingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _car_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./car-booking.component.html?ngResource */ 16279);
/* harmony import */ var _car_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./car-booking.component.scss?ngResource */ 24605);
/* harmony import */ var _car_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_car_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);





let CarBookingComponent = class CarBookingComponent {
  constructor(stepperService) {
    this.stepperService = stepperService;
    this.roomList = [];
    this.dataLoaded = false;
  }
  /** Go to next step*/
  nextStep() {
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }];
};
CarBookingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-car-booking',
  template: _car_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_car_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], CarBookingComponent);


/***/ }),

/***/ 65733:
/*!*************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/cultural-booking/cultural-booking.component.ts ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CulturalBookingComponent": () => (/* binding */ CulturalBookingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _cultural_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cultural-booking.component.html?ngResource */ 62370);
/* harmony import */ var _cultural_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cultural-booking.component.scss?ngResource */ 6575);
/* harmony import */ var _cultural_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cultural_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs/operators */ 50635);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_14__);





















let CulturalBookingComponent = class CulturalBookingComponent {
  constructor(stepperService, fb, resourceService, userService, router, roomService, ticketService, timepickerService, productService, timeslotService, createResourceService, menuService, toastService, culturalBookingService) {
    this.stepperService = stepperService;
    this.fb = fb;
    this.resourceService = resourceService;
    this.userService = userService;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.createResourceService = createResourceService;
    this.menuService = menuService;
    this.toastService = toastService;
    this.culturalBookingService = culturalBookingService;
    // Cultural Booking specific data
    this.culturalRoomData = null;
    this.zones = this.fb.array([this.fb.group({
      price: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.min(0)]],
      rows: [1, [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.min(1)]],
      columns: [1, [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.min(1)]]
    }, {
      validators: _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required
    })]);
    this.rowsGenerationType = 'numbers';
    this.hasBookedWithReservation = true;
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_16__.BehaviorSubject(false);
    this.$fileObservables = [];
    // END: Generic Add-Edit Resource data
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_17__.Subject();
    this.isSubmitLoading$.asObservable().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_18__.takeUntil)(this.ngUnsubscribe)).subscribe(res => this.isSubmitLoading = res);
  }
  ngOnInit() {
    // Store Resource ID
    this.resourceId = this.resourceService.resourceId$.getValue();
    if (this.resourceId) {
      // get data for edit
      if (!this.culturalBookingService.culturalRoom$.getValue()) {
        this.culturalBookingService.getResourceCulturalRooms(this.resourceService.resourceId$.getValue()).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_19__.map)(culturalRooms => culturalRooms[0]), (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.takeUntil)(this.ngUnsubscribe)).subscribe({
          next: culturalRoom => {
            console.log(culturalRoom);
            this.culturalBookingService.culturalRoom$.next(culturalRoom);
            // this.culturalRoomData = this.culturalBookingService.culturalRoom$.getValue();
            this.culturalRoomData = culturalRoom;
            this.initZonesForm();
            this.hasBookedWithReservation = this.checkIfBookedWithReservation();
          }
        });
      } else {
        this.culturalRoomData = this.culturalBookingService.culturalRoom$.getValue();
        this.initZonesForm();
        this.hasBookedWithReservation = this.checkIfBookedWithReservation();
      }
    } else {
      this.culturalBookingService.culturalRoomData().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_18__.takeUntil)(this.ngUnsubscribe)).subscribe({
        next: culturalRoom => {
          this.culturalRoomData = culturalRoom;
          this.initZonesForm();
          this.hasBookedWithReservation = this.checkIfBookedWithReservation();
        }
      });
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }

  initZonesForm() {
    if (!this.culturalRoomData) return;
    this.culturalRoomData.zones.forEach((zone, zoneIndex) => {
      if (zoneIndex === 0) {
        this.zones.controls[0].patchValue({
          price: zone.price,
          rows: zone.rows,
          columns: zone.columns
        });
      } else {
        this.addZone(zone.price, zone.rows, zone.columns);
      }
      // verificare daca rows sunt numbers sau letters
      const firstRowLabel = zone.rowsForBooking[0].rowLabel;
      if (isNaN(Number(firstRowLabel))) {
        this.rowsGenerationType = 'letters';
      } else {
        this.rowsGenerationType = 'numbers';
      }
    });
  }
  checkIfBookedWithReservation() {
    if (this.culturalRoomData?.zones?.length > 0) {
      for (const zone of this.culturalRoomData.zones) {
        for (const row of zone.rowsForBooking) {
          for (const seat of row.seats) {
            if (seat.seatStatus === 'bookedWithReservation') {
              return true;
            }
          }
        }
      }
    }
    return false;
  }
  addZone(price, rows, columns) {
    this.zones.push(this.fb.group({
      price: [price || 0, [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.min(0)]],
      rows: [rows || 1, [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.min(1)]],
      columns: [columns || 1, [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.min(1)]]
    }));
  }
  removeZone(zoneIndex) {
    this.zones.removeAt(zoneIndex);
  }
  generateSeats() {
    console.log(this.zones.value);
    this.zones.markAllAsTouched();
    if (this.zones.invalid) return;
    let rowLabelAsNumber = 1;
    const newCulturalRoom = {
      name: null,
      date: null,
      zones: this.zones.value.map(zone => {
        return {
          ...zone,
          rowsForBooking: new Array(zone.rows).fill(null).map(() => {
            return {
              rowLabel: this.rowsGenerationType === 'numbers' ? (rowLabelAsNumber++).toString() : this.numberToLetters(rowLabelAsNumber++),
              seats: new Array(zone.columns).fill(null).map((seat, seatIndex) => {
                return {
                  seatColumnLabel: seatIndex + 1,
                  seatStatus: 'available'
                };
              })
            };
          })
        };
      })
    };
    console.log(newCulturalRoom);
    this.culturalRoomData = {
      ...this.culturalRoomData,
      ...newCulturalRoom
    };
  }
  numberToLetters(number) {
    let str = '',
      q,
      r;
    while (number > 0) {
      q = (number - 1) / 26;
      r = (number - 1) % 26;
      number = Math.floor(q);
      str = String.fromCharCode(65 + r) + str;
    }
    return str;
  }
  /** Go to next step*/
  nextStep() {
    console.log(this.culturalRoomData);
    this.culturalBookingService.culturalRoom$.next(this.culturalRoomData);
    this.stepperService.nextStep();
  }
  /** Go to previous step*/
  prevStep() {
    this.culturalBookingService.culturalRoom$.next(this.culturalRoomData);
    this.stepperService.prevStep();
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.resourceService.relatedResources$.next([]);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      bookingPolicies: combineForms.value?.bookingPolicies ? {
        depositRequiredPercentage: combineForms.value.bookingPolicies?.depositRequiredPercentage || 0,
        depositRequiredAmount: combineForms.value.bookingPolicies?.depositRequiredAmount || 0,
        advancePartialPaymentPercentage: combineForms.value.bookingPolicies?.advancePartialPaymentPercentage || 0,
        advanceFullPayment: combineForms.value.bookingPolicies?.advanceFullPayment || false
      } : this.resourceService.resourceTemplateData$.getValue()?.bookingPolicies,
      startDate: combineForms.value?.startDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment__WEBPACK_IMPORTED_MODULE_14___default()(combineForms.value?.startDate)?.format('YYYY-MM-DDTHH:mm') : null,
      endDate: combineForms.value?.endDate !== 'Invalid date' && this.currentBookingType === 'culturalBooking' ? moment__WEBPACK_IMPORTED_MODULE_14___default()(combineForms.value?.endDate)?.format('YYYY-MM-DDTHH:mm') : null,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
    }
  }
  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        const currentRelatedRes = this.resourceService.relatedResources$.getValue();
        const resourceRelatedRes = this.resourceService.resourceTemplateData$.getValue()?.relatedResources;
        if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id === resourceRelatedRes[0]) {
          // nu fac nimic
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length > 0 && currentRelatedRes[0]?.id !== resourceRelatedRes[0]) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if ((resourceRelatedRes?.length === 0 || !resourceRelatedRes) && currentRelatedRes?.length > 0) {
          this.$fileObservables.push(this.resourceService.addRelatedresources(this.resourceService.resourceId$.getValue(), currentRelatedRes[0].id));
        } else if (resourceRelatedRes?.length > 0 && currentRelatedRes?.length === 0) {
          this.$fileObservables.push(this.resourceService.removeRelatedResource(resourceRelatedRes[0], this.resourceService.resourceId$.getValue()));
        }
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray && this.roomsArray?.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalRoomData;
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormBuilder
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__.BookingTimeslotsService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_10__.CreateResourceService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_11__.MenuService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__.ToastService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_13__.CulturalBookingService
  }];
};
CulturalBookingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_23__.Component)({
  selector: 'app-cultural-booking',
  template: _cultural_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_cultural_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], CulturalBookingComponent);


/***/ }),

/***/ 59410:
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/external-url/external-url.component.ts ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExternalUrlComponent": () => (/* binding */ ExternalUrlComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _external_url_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./external-url.component.html?ngResource */ 74270);
/* harmony import */ var _external_url_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./external-url.component.scss?ngResource */ 18584);
/* harmony import */ var _external_url_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_external_url_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);




















let ExternalUrlComponent = class ExternalUrlComponent {
  constructor(stepperService, resourceService, userService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.resourceService = resourceService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.roomList = [];
    this.dataLoaded = false;
    this.externalURL = new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required);
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_16__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.externalURL.patchValue(this.resourceService.resourceTemplateData$.getValue().externalUrl);
    console.log('EXTERNAL URL?', this.resourceService.resourceTemplateData$.getValue().externalUrl);
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }

  sendExternalUrl() {
    this.externalURL.markAsTouched();
    if (this.externalURL.valid) {
      console.log(this.externalURL.value);
      this.resourceService.externalUrl$.next(this.externalURL.value);
    }
  }
  /** Go to next step*/
  nextStep() {
    this.sendExternalUrl();
    this.stepperService.nextStep(true);
  }
  /** Go to previous step*/
  prevStep() {
    this.sendExternalUrl();
    this.stepperService.prevStep();
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_6__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_7__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_8__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_9__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_12__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_13__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_14__.CulturalBookingService
  }];
};
ExternalUrlComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_19__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_20__.Component)({
  selector: 'app-external-url',
  template: _external_url_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_external_url_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExternalUrlComponent);


/***/ }),

/***/ 32473:
/*!********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/add-edit-category/add-edit-category.component.ts ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddEditCategoryComponent": () => (/* binding */ AddEditCategoryComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_edit_category_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-edit-category.component.html?ngResource */ 61885);
/* harmony import */ var _add_edit_category_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-edit-category.component.scss?ngResource */ 44785);
/* harmony import */ var _add_edit_category_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_add_edit_category_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);








let AddEditCategoryComponent = class AddEditCategoryComponent {
  constructor(fb, menuService, resourceService, dialogRef, categoryData) {
    this.fb = fb;
    this.menuService = menuService;
    this.resourceService = resourceService;
    this.dialogRef = dialogRef;
    this.categoryData = categoryData;
    this.isEditMode = false;
  }
  ngOnInit() {
    this.formInit();
    this.checkIfEdit();
  }
  formInit() {
    this.menu = this.fb.group({
      id: [this.categoryData ? undefined : Math.random().toString(36).substring(2, 17)],
      categoryName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required],
      subCategories: this.fb.array([])
    });
  }
  subCategories() {
    return this.menu.get('subCategories');
  }
  newSubcategory() {
    return this.fb.group({
      subCategoryName: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required],
      subCategoryItems: this.fb.array([])
    });
  }
  addSubcategory() {
    this.subCategories().push(this.newSubcategory());
  }
  removeSubcategory(index) {
    this.subCategories().removeAt(index);
  }
  //menu categ items
  subCategoryItems(index) {
    return this.subCategories().at(index)?.get('subCategoryItems');
  }
  newItem() {
    return this.fb.group({
      name: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required],
      price: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.pattern("^[1-9]\\d*$")],
      weight: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.pattern("^[1-9]\\d*$")],
      ingredients: '',
      allergens: '',
      nutritionalFacts: ''
    });
  }
  addItem(index) {
    this.subCategoryItems(index).push(this.newItem());
  }
  removeItem(index, childIndex) {
    this.subCategoryItems(index).removeAt(childIndex);
  }
  onKeyDown(event) {
    console.log(event);
    // Prevent the default behavior of enter and space keys
    if (event.key === 'Enter' || event.code === 'Space') {
      event.preventDefault();
    }
  }
  close() {
    this.dialogRef.close();
  }
  checkIfEdit() {
    if (this.categoryData) {
      this.isEditMode = true;
      this.menu.patchValue(this.categoryData.category);
      if (this.categoryData.category.subCategories.length > 0) {
        this.categoryData.category.subCategories.forEach((subcategory, subcategoryIndex) => {
          this.subCategories().push(this.fb.group({
            subCategoryName: subcategory.subCategoryName,
            subCategoryItems: this.fb.array([])
          }));
          subcategory.subCategoryItems.forEach(item => {
            this.addItem(subcategoryIndex);
          });
          this.subCategoryItems(subcategoryIndex).patchValue(subcategory.subCategoryItems);
        });
      }
    }
  }
  confirm() {
    this.menu.markAllAsTouched();
    if (this.menu.valid) {
      const menu = this.menu.value;
      if (this.isEditMode) {
        this.updateCategory(menu);
        this.dialogRef.close();
      } else {
        this.createCategory(menu);
        this.dialogRef.close();
      }
    } else {
      console.log('formular invalid', this.menu.value);
    }
    console.log(this.menu.value);
  }
  updateCategory(menu) {
    console.log('vr sa editez o categ');
    if (this.resourceService.resourceId$.getValue()) {
      console.log('EDIT pe EDIT resource');
      //update a categ that was added now
      if (this.categoryData.category.state === 'add') {
        // Get prod List
        const menuList = this.menuService.menuList$.getValue();
        // Find selected room by index
        const selectedIndex = menuList.findIndex(category => category.id === menu.id);
        //the state will be 'add' because this room is going to be added in the end
        menu = {
          ...menu,
          state: 'add'
        };
        if (selectedIndex !== -1) {
          menuList[selectedIndex] = menu;
          this.menuService.menuList$.next(menuList);
          this.menuService.refreshMenuList$.next(true);
        } else {
          console.log('menu not found');
        }
      } else {
        //the prod exists on the resource
        // Get prod List
        const menuList = this.menuService.menuList$.getValue();
        // Find selected room by index
        const selectedIndex = menuList.findIndex(category => category.id === menu.id);
        menu = {
          ...menu,
          state: 'update'
        };
        if (selectedIndex !== -1) {
          menuList[selectedIndex] = menu;
          this.menuService.menuList$.next(menuList);
          this.menuService.refreshMenuList$.next(true);
        } else {
          console.log('prod not found');
        }
      }
    } else {
      console.log('EDIT pe ADD resource');
      const categList = this.menuService.menuList$.getValue();
      // Find selected room by index
      const selectedCategIndex = categList.findIndex(category => category.id === menu.id);
      // Check if the room was found and update
      if (selectedCategIndex !== -1) {
        categList[selectedCategIndex] = menu;
        this.menuService.menuList$.next(categList);
      } else {
        console.log('Room not found');
      }
    }
  }
  createCategory(menu) {
    console.log('vr sa ADAUG o categ');
    if (this.resourceService.resourceId$.getValue()) {
      console.log('ADD pe EDIT resource');
      menu = {
        ...menu,
        state: 'add'
      };
      this.menuService.addCategoryToList(menu);
      this.menuService.refreshMenuList$.next(true);
      console.log('list', this.menuService.menuList$.getValue());
    } else {
      this.menuService.addCategoryToList(menu);
      console.log('list', this.menuService.menuList$.getValue());
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormBuilder
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_2__.MenuService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__.MAT_DIALOG_DATA]
    }]
  }];
};
AddEditCategoryComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-add-edit-category',
  template: _add_edit_category_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_add_edit_category_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AddEditCategoryComponent);


/***/ }),

/***/ 97216:
/*!**************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/delete-menu-category/delete-menu-category.component.ts ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteMenuCategoryComponent": () => (/* binding */ DeleteMenuCategoryComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delete_menu_category_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delete-menu-category.component.html?ngResource */ 53658);
/* harmony import */ var _delete_menu_category_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delete-menu-category.component.scss?ngResource */ 58138);
/* harmony import */ var _delete_menu_category_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_delete_menu_category_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/menu.service */ 87491);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/dialog */ 31484);






let DeleteMenuCategoryComponent = class DeleteMenuCategoryComponent {
  constructor(menuService, dialogRef, categoryData) {
    this.menuService = menuService;
    this.dialogRef = dialogRef;
    this.categoryData = categoryData;
  }
  ngOnInit() {
    console.log(this.categoryData);
  }
  close() {
    this.dialogRef.close();
  }
  deleteCategory() {
    const menuList = this.menuService.menuList$.getValue();
    // Exclude the room by id
    const filteredList = menuList.filter(category => category.id !== this.categoryData.category.id);
    // Check if a room was deleted and update the array
    if (filteredList.length !== menuList.length) {
      this.menuService.menuList$.next(filteredList);
      this.menuService.refreshMenuList$.next(true);
      this.close();
    } else {
      console.log(`Room not found`);
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_2__.MenuService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__.MAT_DIALOG_DATA]
    }]
  }];
};
DeleteMenuCategoryComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-delete-menu-category',
  template: _delete_menu_category_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_delete_menu_category_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], DeleteMenuCategoryComponent);


/***/ }),

/***/ 72936:
/*!*************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/menu.component.ts ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MenuComponent": () => (/* binding */ MenuComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _menu_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./menu.component.html?ngResource */ 59788);
/* harmony import */ var _menu_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./menu.component.scss?ngResource */ 73808);
/* harmony import */ var _menu_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_menu_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _add_edit_category_add_edit_category_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./add-edit-category/add-edit-category.component */ 32473);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _delete_menu_category_delete_menu_category_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./delete-menu-category/delete-menu-category.component */ 97216);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);

























let MenuComponent = class MenuComponent {
  constructor(stepperService, fb, resourceService, dialog, userService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.fb = fb;
    this.resourceService = resourceService;
    this.dialog = dialog;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.roomList = [];
    this.dataLoaded = false;
    this.isEditMode = false;
    this.tabIndex = 0;
    this.timepickerArr = [];
    this.timetableArr = [];
    this.categList = [];
    this.timeDifference = [];
    this.days = ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'];
    // checkboxul de deasupra disponibilitatii
    this.hasFreeEntry = false;
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_18__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.timeDifference = [];
    this.formInit();
    this.checkIfEdit();
    // ascultam butonul de save
    // this.resourceService.listenForSetup().subscribe({
    //     next: setupListener => {
    //         console.log('LISTENER', setupListener);
    //         if (setupListener) {
    //             this.menuForm.markAllAsTouched();
    //             if (this.menuForm.valid) {
    //
    //                 // daca nu este bifat checkboxul, construim timetables
    //                 if (!this.hasFreeEntry) {
    //                     this.sendTimePicker();
    //                 }
    //                 console.log(this.menuForm.value);
    //                 this.timepickerService.timePicker$.next(this.menuForm.value);
    //             } else {
    //                 return
    //             }
    //
    //         }
    //     }
    // })
    if (this.resourceService.resourceId$.getValue()) {
      this.menuService.getMenuByResourceId(this.resourceService.resourceId$.getValue()).subscribe({
        next: menu => {
          if (menu) {
            this.menuService.menuId$.next(menu.id);
            console.log('MENU ID', this.menuService.menuId$.getValue());
            if (this.menuService.menuList$.getValue().length === 0) {
              menu.items.forEach(categ => {
                const categToAdd = {
                  ...categ,
                  id: Math.random().toString(36).substring(2, 17)
                };
                this.menuService.addCategoryToList(categToAdd);
              });
              // this.menuService.menuList$.next(menu.items);
              this.categList = this.menuService.menuList$.getValue();
            }
          }
        }
      });
    }
    this.menuService.refreshMenuListData().subscribe({
      next: menu => {
        if (this.resourceId) {
          this.categList = this.menuService.menuList$.getValue();
          // console.log('da', this.categList);
        } else {
          // Get Room List
          this.menuService.menuListData().subscribe({
            next: menuList => {
              this.categList = menuList;
              // console.log('da', this.categList);
            }
          });
        }
      }
    });
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }
  // PENTRU SIESTA
  formInit() {
    this.menuForm = this.fb.group({
      timetables: this.fb.array([])
    }, {
      validators: this.customIntervalValidation
    });
  }
  customIntervalValidation(group) {
    console.log(group);
    let error = 0;
    const timetables = group.get('timetables').value;
    timetables.forEach(day => {
      if (day.timetable?.length === 0) {
        error++;
        // console.log(error)
      }
    });

    if (error === 7) {
      return {
        invalidInterval: true
      };
    }
    return null;
  }
  //timepicker - disponibilitate
  timetables() {
    return this.menuForm.get('timetables');
  }
  newDayTab(day) {
    return this.fb.group({
      day: day,
      maximumPeople: 0,
      tableMinutesNumber: null,
      timetable: this.fb.array([])
    });
  }
  newDayTabNoValidation(day) {
    return this.fb.group({
      day: day,
      maximumPeople: 0,
      tableMinutesNumber: null,
      timetable: this.fb.array([])
    });
  }
  addDayTab(day) {
    this.timetables().push(this.newDayTab(day));
  }
  removeDayTab(tabIndex) {
    this.timetables().removeAt(tabIndex);
  }
  initConfigTabs() {
    this.days.forEach(item => {
      this.addDayTab(item);
    });
  }
  //slots array
  timetable(index) {
    return this.timetables().at(index)?.get('timetable');
  }
  newTimetable(index) {
    return this.fb.group({
      startHour: moment__WEBPACK_IMPORTED_MODULE_8__(),
      endHour: moment__WEBPACK_IMPORTED_MODULE_8__()
    }, {
      validators: [this.checkTime, this.checkTimeSlots]
    });
  }
  addTimetable(index) {
    this.timetable(index).push(this.newTimetable(index));
  }
  removeSlot(index, childIndex) {
    this.timetable(index).removeAt(childIndex);
  }
  openAddModal() {
    this.dialog.open(_add_edit_category_add_edit_category_component__WEBPACK_IMPORTED_MODULE_5__.AddEditCategoryComponent, {
      width: '1500px',
      height: '750px',
      data: undefined
    });
  }
  openEditModal(category) {
    this.dialog.open(_add_edit_category_add_edit_category_component__WEBPACK_IMPORTED_MODULE_5__.AddEditCategoryComponent, {
      width: '1500px',
      height: '750px',
      data: {
        category: category
      }
    });
  }
  openDeleteModal(category, index) {
    this.dialog.open(_delete_menu_category_delete_menu_category_component__WEBPACK_IMPORTED_MODULE_7__.DeleteMenuCategoryComponent, {
      width: '720px',
      height: '400px',
      data: {
        category: category,
        index: index
      }
    });
  }
  checkTimeSlots(control) {
    const startTime = control.get('startHour');
    const endTime = control.get('endHour');
    // console.log('CHECK start', moment(startTime.value).format('HH:mm'));
    // console.log('CHECK end',moment(endTime.value).format('HH:mm'));
    if (moment__WEBPACK_IMPORTED_MODULE_8__(startTime.value).format('HH:mm') >= moment__WEBPACK_IMPORTED_MODULE_8__(endTime.value).format('HH:mm')) {
      // console.log('nu e bine');
      endTime.setErrors({
        invalidTime: true
      });
    }
    return;
  }
  // { [key: string]: boolean } | null
  checkTime(control) {
    // console.log('UGHIRHGNLIERH',control);
    const parentTimetable = control.parent;
    const parentDayTab = parentTimetable?.parent;
    const startHour = moment__WEBPACK_IMPORTED_MODULE_8__(control?.get('startHour')?.value).format('HH:mm');
    const endHour = moment__WEBPACK_IMPORTED_MODULE_8__(control?.get('endHour')?.value).format('HH:mm');
    const tableMinutesNumber = parentDayTab?.get('tableMinutesNumber')?.value;
    if (startHour && endHour) {
      const startParts = startHour.split(':');
      const endParts = endHour.split(':');
      const startMinutes = parseInt(startParts[0]) * 60 + parseInt(startParts[1]);
      const endMinutes = parseInt(endParts[0]) * 60 + parseInt(endParts[1]);
      const minutesDifference = endMinutes - startMinutes;
      console.log('diff', minutesDifference);
      console.log('avg', tableMinutesNumber);
      if (minutesDifference < tableMinutesNumber) {
        // console.log('NU E BINE', minutesDifference, tableMinutesNumber);
        // console.log('parent FG', parentTimetable);
        // console.log('bunic', parentDayTab.value.day);
        control?.get('endHour').setErrors({
          invalidTimeRange: true
        });
      } else {
        // console.log('e bine');
        return null;
      }
    } else {
      return null;
    }
    return null;
  }
  checkIfEdit() {
    if (this.resourceService.resourceId$.getValue()) {
      this.isEditMode = true;
      // console.log('edit res');
      if (this.timepickerService.timePicker$.getValue()) {
        // console.log('avem timepicker', this.timepickerService.timePicker$.getValue())
        this.currentTimepicker = this.timepickerService.timePicker$.getValue();
        this.formOnEdit();
      } else {
        this.timepickerService.getTimepickerByResourceId(this.resourceService.resourceId$.getValue()).subscribe({
          next: timepicker => {
            this.currentTimepicker = timepicker;
            // console.log('TIMEPICKER BY RES ID',timepicker);
            this.timepickerService.timepickerId$.next(timepicker?.id);
            this.formOnEdit();
          }
        });
      }
    } else {
      this.isEditMode = false;
      if (this.timepickerService.timePicker$.getValue()) {
        this.currentTimepicker = this.timepickerService.timePicker$.getValue();
        // console.log('AM TIMEPICKER', this.timepickerService.timePicker$.getValue());
        this.formOnEdit();
      } else {
        this.initConfigTabs();
        this.hasFreeEntry = this.timepickerService.getFreeEntry() || false;
      }
    }
  }
  formOnEdit() {
    this.menuForm.patchValue(this.currentTimepicker);
    console.log(this.currentTimepicker.timetables);
    if (this.currentTimepicker.timetables?.length > 0) {
      this.hasFreeEntry = this.timepickerService.getFreeEntry() || false;
      this.currentTimepicker.timetables.forEach((timetableItem, index) => {
        this.timetables().push(this.fb.group({
          day: timetableItem.day,
          maximumPeople: timetableItem.maximumPeople,
          tableMinutesNumber: timetableItem.tableMinutesNumber,
          timetable: this.fb.array([])
        }));
        timetableItem.timetable.forEach((timetbl, childIndex) => {
          const startTime = moment__WEBPACK_IMPORTED_MODULE_8__(timetbl.startHour, 'HH:mm');
          const endTime = moment__WEBPACK_IMPORTED_MODULE_8__(timetbl.endHour, 'HH:mm');
          this.timetable(index).push(this.fb.group({
            startHour: startTime,
            endHour: endTime
          }));
        });
        // this.timetable(index).patchValue(timetableItem.timetable);
        // console.log('form', this.timetable(index).value);
      });
      // console.log('form', this.menuForm.value)
    } else {
      this.hasFreeEntry = true;
    }
  }
  /** Go to next step*/
  nextStep() {
    console.log(this.menuForm.value);
    this.menuForm.markAllAsTouched();
    if (this.menuForm.valid) {
      this.stepperService.nextStep(true);
      this.timepickerService.setFreeEntry(this.hasFreeEntry);
      // this.makeTimetableArray();
      // this.makeTimepickerArray();
      // this.makeMenuArray(this.timepickerService.timetableList$.getValue(), this.timepickerService.timepickerList$.getValue());
      if (!this.hasFreeEntry) {
        this.sendTimePicker();
        this.timepickerService.timePicker$.next({
          ...this.currentTimepicker,
          ...this.menuForm.value
        });
        // console.log('timepicker', this.timepickerService.timePicker$.getValue());
      }
    } else {
      console.log(this.menuForm.errors);
      return;
    }
  }
  /** Go to previous step*/
  prevStep() {
    this.menuForm.markAllAsTouched();
    if (this.menuForm.valid) {
      this.stepperService.prevStep();
      this.timepickerService.setFreeEntry(this.hasFreeEntry);
      if (!this.hasFreeEntry) {
        this.sendTimePicker();
        this.timepickerService.timePicker$.next({
          ...this.currentTimepicker,
          ...this.menuForm.value
        });
        // console.log('timepicker', this.timepickerService.timePicker$.getValue());
      }
    } else {
      console.log(this.menuForm.errors);
      return;
    }
  }
  sendTimePicker() {
    this.menuForm.value.timetables.forEach((timetableItem, index) => {
      timetableItem.timetable.forEach((timetbl, childIndex) => {
        // console.log('TO SEND', timetbl)
        const startTime = timetbl?.startHour.format('HH:mm');
        const endTime = timetbl?.endHour.format('HH:mm');
        // console.log(this.timetable(index).value[childIndex]);
        this.timetable(index).value[childIndex] = {
          startHour: startTime,
          endHour: endTime
        };
      });
      // this.timetable(index).patchValue(timetableItem.timetable);
      // console.log('form TO SEND', this.menuForm.value);
    });
  }

  setFreeEntry() {
    this.timepickerService.setFreeEntry(this.hasFreeEntry);
    console.log(this.currentTimepicker);
    if (this.isEditMode && this.currentTimepicker?.timetables?.length === 0 && !this.hasFreeEntry) {
      // console.log('situatia asta');
      this.initConfigTabs();
    } else if (this.hasFreeEntry) {
      // console.log('free entry true/add')
      this.timetables().clear();
    } else if (!this.isEditMode && !this.hasFreeEntry) {
      // console.log('free entry false/add')
      this.initConfigTabs();
    }
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.timepickerService.setFreeEntry(this.hasFreeEntry);
    if (!this.hasFreeEntry) {
      this.sendTimePicker();
      this.timepickerService.timePicker$.next({
        ...this.currentTimepicker,
        ...this.menuForm.value
      });
      console.log('timepicker', this.timepickerService.timePicker$.getValue());
    }
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER ON SAVE', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormBuilder
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_21__.MatDialog
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_9__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_22__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_22__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_10__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_11__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_4__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_12__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_13__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_14__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_15__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_16__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_6__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_17__.CulturalBookingService
  }];
};
MenuComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_23__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_24__.Component)({
  selector: 'app-menu',
  template: _menu_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_angular_common__WEBPACK_IMPORTED_MODULE_25__.DatePipe],
  styles: [(_menu_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], MenuComponent);


/***/ }),

/***/ 19187:
/*!*************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/no-booking/no-booking.component.ts ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NoBookingComponent": () => (/* binding */ NoBookingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _no_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./no-booking.component.html?ngResource */ 57212);
/* harmony import */ var _no_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./no-booking.component.scss?ngResource */ 94180);
/* harmony import */ var _no_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_no_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);





let NoBookingComponent = class NoBookingComponent {
  constructor(stepperService) {
    this.stepperService = stepperService;
    this.roomList = [];
    this.dataLoaded = false;
  }
  /** Go to next step*/
  nextStep() {
    this.stepperService.nextStep(true);
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }];
};
NoBookingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-no-booking',
  template: _no_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_no_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], NoBookingComponent);


/***/ }),

/***/ 60791:
/*!***************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/add-edit-product/add-edit-product.component.ts ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddEditProductComponent": () => (/* binding */ AddEditProductComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_edit_product_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-edit-product.component.html?ngResource */ 18044);
/* harmony import */ var _add_edit_product_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-edit-product.component.scss?ngResource */ 12856);
/* harmony import */ var _add_edit_product_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_add_edit_product_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/product-list.service */ 83590);








let AddEditProductComponent = class AddEditProductComponent {
  constructor(dialogRef, fb, resourceService, productService, productData) {
    this.dialogRef = dialogRef;
    this.fb = fb;
    this.resourceService = resourceService;
    this.productService = productService;
    this.productData = productData;
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.attachmentUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.isEditMode = false;
  }
  ngOnInit() {
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.thumbnailFile = undefined;
    this.attachmentUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.attachmentFile = undefined;
    this.formInit();
    this.checkIfEdit();
  }
  formInit() {
    this.productForm = this.fb.group({
      id: [this.productData ? undefined : Math.random().toString(36).substring(2, 17)],
      name: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required],
      description: [null],
      price: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.min(0)],
      images: [],
      attachment: []
    });
  }
  checkIfEdit() {
    if (this.productData) {
      this.isEditMode = true;
      console.log('PRODUCT', this.productData.product);
      this.productForm.patchValue(this.productData.product);
      this.thumbnailUrl = this.productData.product?.images[0];
      this.attachmentUrl = this.productData.product?.attachment;
      if (this.productData.product.state === 'add' || this.productData.product.state === 'update') {
        console.log(this.productData.product);
        const imagesArray = this.productService.imagesArray$.getValue();
        const element = imagesArray.find(element => element.id === this.productData.product.id);
        console.log('am gasit camera in array', element);
        this.thumbnailFile = element?.featuredImage;
        this.thumbnailUrl = element?.featuredImageUrl;
        const attachArray = this.productService.attachmentArray$.getValue();
        console.log('ARRAY CU ATTACHMENTS', attachArray);
        const attach = attachArray.find(elem => elem.id === this.productData.product.id);
        console.log('am gasit attach in in array', attach);
        this.attachmentFile = attach?.attachment;
        this.attachmentUrl = attach?.attachmentUrl;
      }
    }
  }
  confirm() {
    this.productForm.markAllAsTouched();
    if (this.productForm.valid) {
      const product = {
        ...this.productForm.value,
        images: [this.thumbnailUrl]
      };
      if (this.isEditMode) {
        this.updateProduct(product);
        this.close();
      } else {
        this.addProduct(product);
        this.close();
      }
    }
  }
  updateProduct(product) {
    if (this.resourceService.resourceId$.getValue()) {
      console.log('editez un prod pe edit res');
      //EDIT RESOURCE
      //update a product that was added now
      if (this.productData.product.state === 'add') {
        // Get prod List
        const prodList = this.productService.productsList$.getValue();
        // Find selected room by index
        const selectedProdIndex = prodList.findIndex(prod => prod.id === product.id);
        //the state will be 'add' because this room is going to be added in the end
        product = {
          ...product,
          state: 'add'
        };
        if (selectedProdIndex !== -1) {
          prodList[selectedProdIndex] = product;
          this.productService.productsList$.next(prodList);
          const image = {
            id: this.productForm.value.id,
            imageFile: this.thumbnailFile,
            imageUrl: this.thumbnailUrl
          };
          this.productService.addImgtoImgList(image);
          const attachment = {
            id: this.productForm.value.id,
            attachmentFile: this.attachmentFile,
            attachmentUrl: this.attachmentUrl
          };
          this.productService.addAttachmentToList(attachment);
          this.productService.refreshProductList$.next(true);
        } else {
          console.log('prod not found');
        }
      } else {
        //the prod exists on the resource
        // Get prod List
        const prodList = this.productService.productsList$.getValue();
        // Find selected room by index
        const selectedProdIndex = prodList.findIndex(prod => prod.id === product.id);
        product = {
          ...product,
          state: 'update'
        };
        if (selectedProdIndex !== -1) {
          prodList[selectedProdIndex] = product;
          this.productService.productsList$.next(prodList);
          const image = {
            id: this.productForm.value.id,
            imageFile: this.thumbnailFile,
            imageUrl: this.thumbnailUrl
          };
          this.productService.addImgtoImgList(image);
          const attachment = {
            id: this.productForm.value.id,
            attachmentFile: this.attachmentFile,
            attachmentUrl: this.attachmentUrl
          };
          this.productService.addAttachmentToList(attachment);
          this.productService.refreshProductList$.next(true);
        } else {
          console.log('prod not found');
        }
      }
    } else {
      console.log('editez un prod pe add res');
      //CREATE RESOURCE
      // Get prod List
      const prodList = this.productService.productsList$.getValue();
      // find this ticket in the current create list
      const indexInList = prodList.findIndex(product => product.id === this.productForm.value.id);
      // Check if the room was found and update
      if (indexInList !== -1) {
        prodList[indexInList] = this.productForm.value;
        this.productService.productsList$.next(prodList);
        const image = {
          id: this.productForm.value.id,
          imageFile: this.thumbnailFile,
          imageUrl: this.thumbnailUrl
        };
        this.productService.addImgtoImgList(image);
        const attachment = {
          id: this.productForm.value.id,
          attachmentFile: this.attachmentFile,
          attachmentUrl: this.attachmentUrl
        };
        this.productService.addAttachmentToList(attachment);
      } else {
        console.log('prod not found');
      }
    }
  }
  addProduct(product) {
    if (this.resourceService.resourceId$.getValue()) {
      console.log('adaugare prod pe editare res');
      //EDIT RESOURCE
      product = {
        ...product,
        state: 'add'
      };
      this.productService.addProductToList(product);
      const image = {
        id: this.productForm.value.id,
        imageFile: this.thumbnailFile,
        imageUrl: this.thumbnailUrl
      };
      this.productService.addImgtoImgList(image);
      if (this.attachmentFile) {
        const attachment = {
          id: this.productForm.value.id,
          attachmentFile: this.attachmentFile,
          attachmentUrl: this.attachmentUrl
        };
        this.productService.addAttachmentToList(attachment);
      }
      this.productService.refreshProductList$.next(true);
    } else {
      //CREATE RESOURCE
      console.log('adaugare prod pe adaugare res');
      this.productService.addProductToList({
        ...product,
        state: 'add'
      });
      if (this.thumbnailFile) {
        const image = {
          id: this.productForm.value.id,
          imageFile: this.thumbnailFile,
          imageUrl: this.thumbnailUrl
        };
        this.productService.addImgtoImgList(image);
      }
      if (this.attachmentFile) {
        const attachment = {
          id: this.productForm.value.id,
          attachmentFile: this.attachmentFile,
          attachmentUrl: this.attachmentUrl
        };
        this.productService.addAttachmentToList(attachment);
      }
      console.log('list attach', this.productService.attachmentArray$.getValue());
      console.log('lista cu prod', this.productService.productsList$.getValue());
    }
  }
  //----------------------------- IMAGES---------------------------
  onThumbnailChange(event) {
    if (event.target.files && event.target.files[0]) {
      this.thumbnailUrl.fileName = event.target.files[0].name;
      this.thumbnailFile = event.target.files[0];
      const reader = new FileReader();
      reader.onload = () => this.thumbnailUrl.filePath = reader.result;
      reader.readAsDataURL(this.thumbnailFile);
    }
    console.log('thumbNail', this.thumbnailUrl);
    console.log('thumbNail', this.thumbnailFile);
  }
  removeThumbnail() {
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.thumbnailFile = undefined;
  }
  //attachments
  deleteAttachment() {
    this.attachmentFile = undefined;
    this.attachmentUrl = {
      fileName: undefined,
      filePath: undefined
    };
  }
  uploadAttachmentFile(event) {
    if (event.target.files && event.target.files[0]) {
      this.attachmentUrl.fileName = event.target.files[0].name;
      this.attachmentFile = event.target.files[0];
      const reader = new FileReader();
      reader.onload = () => this.attachmentUrl.filePath = reader.result;
      reader.readAsDataURL(this.attachmentFile);
      console.log('thumbNail', this.attachmentUrl);
      console.log('thumbNail', this.attachmentFile);
    }
  }
  close() {
    this.dialogRef.close();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__.MatDialogRef
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormBuilder
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_2__.ResourcesService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_3__.ProductListService
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__.MAT_DIALOG_DATA]
    }]
  }];
};
AddEditProductComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-add-edit-product',
  template: _add_edit_product_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_add_edit_product_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AddEditProductComponent);


/***/ }),

/***/ 44655:
/*!***********************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/delete-product-modal/delete-product-modal.component.ts ***!
  \***********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteProductModalComponent": () => (/* binding */ DeleteProductModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delete_product_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delete-product-modal.component.html?ngResource */ 35144);
/* harmony import */ var _delete_product_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delete-product-modal.component.scss?ngResource */ 95922);
/* harmony import */ var _delete_product_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_delete_product_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);







let DeleteProductModalComponent = class DeleteProductModalComponent {
  constructor(productService, resourceService, dialogRef, productData) {
    this.productService = productService;
    this.resourceService = resourceService;
    this.dialogRef = dialogRef;
    this.productData = productData;
  }
  ngOnInit() {
    this.currentProd = this.productData.product;
  }
  close() {
    this.dialogRef.close();
  }
  deleteProduct() {
    if (this.resourceService.resourceId$.getValue()) {
      console.log('sunt pe edit res si vreau sa sterg');
      //EDIT RESOURCE
      //delete a product just added
      if (this.productData.product.state === 'add') {
        const prodList = this.productService.productsList$.getValue();
        // Exclude the room by id
        const filteredProd = prodList.filter(prod => prod.id !== this.productData.product.id);
        // Check if a room was deleted and update the array
        if (filteredProd.length !== prodList.length) {
          this.productService.productsList$.next(filteredProd);
          this.productService.refreshProductList$.next(true);
          this.close();
        } else {
          console.log(`prod not found`);
        }
      } else {
        //move the prod to delete array
        const prodList = this.productService.productsList$.getValue();
        // Exclude the room by id
        const filteredProds = prodList.filter(prod => prod.id !== this.productData.product.id);
        // Check if a room was deleted and update the array
        if (filteredProds.length !== prodList.length) {
          this.productService.productsList$.next(filteredProds);
          this.productService.addProductToDeleteList(this.productData.product);
          console.log('DELETE ARRAY', this.productService.deleteProdList$.getValue());
          this.productService.refreshProductList$.next(true);
          this.close();
        }
      }
    } else {
      console.log('sunt pe add res si vreau sa sterg');
      //ADD RESOURCE
      // Get products list
      const prodList = this.productService.productsList$.getValue();
      // Exclude the ticket by id
      const filteredProducts = prodList.filter(product => product.id !== this.productData.product.id);
      // Check if a room was deleted and update the array
      if (filteredProducts.length !== prodList.length) {
        this.productService.productsList$.next(filteredProducts);
      } else {
        console.log(`Prod not found`);
      }
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_2__.ProductListService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MAT_DIALOG_DATA]
    }]
  }];
};
DeleteProductModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-delete-product-modal',
  template: _delete_product_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_delete_product_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], DeleteProductModalComponent);


/***/ }),

/***/ 66295:
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/products-list.component.ts ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProductsListComponent": () => (/* binding */ ProductsListComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _products_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./products-list.component.html?ngResource */ 55164);
/* harmony import */ var _products_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./products-list.component.scss?ngResource */ 58797);
/* harmony import */ var _products_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_products_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _add_edit_product_add_edit_product_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-edit-product/add-edit-product.component */ 60791);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _delete_product_modal_delete_product_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./delete-product-modal/delete-product-modal.component */ 44655);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);























let ProductsListComponent = class ProductsListComponent {
  constructor(dialog, stepperService, resourceService, productService, userService, route, router, roomService, ticketService, timepickerService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.dialog = dialog;
    this.stepperService = stepperService;
    this.resourceService = resourceService;
    this.productService = productService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.dataLoaded = false;
    this.productList = [];
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_17__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.resourceId = this.resourceService.resourceId$.getValue();
    if (this.resourceId) {
      this.productService.getProductsByResourceId(this.resourceId).subscribe({
        next: productList => {
          if (this.productService.productsList$.getValue().length === 0) {
            this.productService.productsList$.next(productList);
            this.productList = productList;
          } else {
            this.productList = this.productService.productsList$.getValue();
          }
        }
      });
    }
    this.productService.refreshProductListData().subscribe({
      next: () => {
        if (this.resourceId) {
          this.productList = this.productService.productsList$.getValue();
        } else {
          this.productService.productListData().subscribe({
            next: productList => {
              this.productList = productList;
            }
          });
        }
      }
    });
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
    console.log('LIST', this.productService.productsList$.getValue());
  }
  openAddModal() {
    this.dialog.open(_add_edit_product_add_edit_product_component__WEBPACK_IMPORTED_MODULE_3__.AddEditProductComponent, {
      width: '1500px',
      height: '750px',
      data: undefined
    });
  }
  openEditModal(product) {
    this.dialog.open(_add_edit_product_add_edit_product_component__WEBPACK_IMPORTED_MODULE_3__.AddEditProductComponent, {
      width: '1500px',
      height: '750px',
      data: {
        product: product
      }
    });
  }
  openDeleteModal(product, index) {
    this.dialog.open(_delete_product_modal_delete_product_modal_component__WEBPACK_IMPORTED_MODULE_6__.DeleteProductModalComponent, {
      width: '720px',
      height: '400px',
      data: {
        product: product,
        index: index
      }
    });
  }
  /** Go to next step*/
  nextStep() {
    this.stepperService.nextStep(true);
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log('ATTACHMENT', attach);
                        if (product.id === attach.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', attach.attachmentFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('attachment uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                      const attachArray = this.productService.attachmentArray$.getValue();
                      attachArray.forEach(attach => {
                        console.log('ATTACHMENT', attach);
                        if (product.id === attach.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', attach);
                          if (attach.attachmentFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', attach.attachmentFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadAttachmentForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('attachment uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea atasamentului!", "error");
                                }
                              }
                            });
                          }
                          this.productService.attachmentArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_20__.MatDialog
  }, {
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_4__.ResourcesService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_5__.ProductListService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_8__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_9__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_10__.TimepickerService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_11__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_13__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_14__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_15__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__.CulturalBookingService
  }];
};
ProductsListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_23__.Component)({
  selector: 'app-products-list',
  template: _products_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_products_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ProductsListComponent);


/***/ }),

/***/ 3154:
/*!**********************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/add-edit-room-modal/add-edit-room-modal.component.ts ***!
  \**********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddEditRoomModalComponent": () => (/* binding */ AddEditRoomModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_edit_room_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-edit-room-modal.component.html?ngResource */ 81359);
/* harmony import */ var _add_edit_room_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-edit-room-modal.component.scss?ngResource */ 7816);
/* harmony import */ var _add_edit_room_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_add_edit_room_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 68951);









let AddEditRoomModalComponent = class AddEditRoomModalComponent {
  changePolicyEdit(event, type) {
    if (event.checked && type === 'nonRefundable') {
      this.formRoom.get('changePolicies').get('freeCancellation.freeCancellation').setValue(false);
      this.formRoom.get('changePolicies').get('freeCancellation.deadlineDays').setValue(0);
      this.formRoom.get('changePolicies').get('freeCancellation.deadlineDays').disable();
    } else if (event.checked && type === 'freeCancellation') {
      this.formRoom.get('changePolicies').get('nonRefundable').setValue(false);
      this.formRoom.get('changePolicies').get('freeCancellation.deadlineDays').enable();
      this.formRoom.get('changePolicies').get('freeCancellation.deadlineDays').setValue(0);
    }
    if (!event.checked && type === 'nonRefundable') {
      this.formRoom.get('changePolicies').get('nonRefundable').setValue(false);
    } else if (!event.checked && type === 'freeCancellation') {
      this.formRoom.get('changePolicies').get('freeCancellation.freeCancellation').setValue(false);
    }
  }
  bookingPolicyEdit(event, type) {
    if (event && type === 'depositRequired') {
      this.formRoom.get('bookingPolicies').get('depositRequiredAmount')?.enable();
      this.formRoom.get('bookingPolicies').get('depositRequiredPercentage')?.enable();
      this.formRoom.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('advanceFullPayment')?.setValue(false);
      this.formRoom.get('bookingPolicies').get('advancePartialPayment')?.setValue(false);
      this.formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage').disable();
    }
    if (event && type === 'advanceFullPayment') {
      this.formRoom.get('bookingPolicies').get('depositRequired')?.setValue(false);
      this.formRoom.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('depositRequiredAmount')?.disable();
      this.formRoom.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('depositRequiredPercentage')?.disable();
      this.formRoom.get('bookingPolicies').get('advancePartialPayment')?.setValue(false);
      this.formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage')?.disable();
    }
    if (event && type === 'advancePartialPayment') {
      this.formRoom.get('bookingPolicies').get('advanceFullPayment')?.setValue(false);
      this.formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage')?.enable();
      this.formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('depositRequired')?.setValue(false);
      this.formRoom.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('depositRequiredAmount')?.disable();
      this.formRoom.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.formRoom.get('bookingPolicies').get('depositRequiredPercentage')?.disable();
    }
  }
  customChangePolicyValidation(group) {
    const freeCancellation = group.get('freeCancellation.freeCancellation')?.value;
    const deadlineDays = group.get('freeCancellation.deadlineDays')?.value;
    const nonRefundable = group.get('nonRefundable')?.value;
    if (!nonRefundable && !freeCancellation || freeCancellation && deadlineDays === 0) {
      return {
        invalidPolicy: true
      };
    }
    return null;
  }
  constructor(dialogRef, roomService, resourceService, fb, room) {
    this.dialogRef = dialogRef;
    this.roomService = roomService;
    this.resourceService = resourceService;
    this.fb = fb;
    this.room = room;
    this.formSubmitClicked = false;
    // images url and files
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.galleryUrls = [];
    this.galleryFiles = [];
    this.galleryUrlsUpdate = [];
    this.$fileObservables = [];
    this.selectOptions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    this.activeFacilitiesByCategory = [];
    this.selectedThumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.selectedGalleryImages = [];
    this.selectedGalleryImagesUrl = [];
    this.formRoom = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
      id: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(this.room ? undefined : Math.random().toString(36).substring(2, 17)),
      name: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
      description: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
      roomSize: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.min(0)])),
      bathrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.min(0)])),
      maximumAdultPeople: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
      maximumChildren: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
      minimumStay: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(1, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.min(1)])),
      itemsForBooking: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormArray([
        // new FormGroup(
        //     {
        //     itemNumber: new FormControl('', Validators.required)
        // }
        // ),
      ], _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
      bedType: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormArray([new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
        type: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('Twin Bed', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
        quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required)
      }), new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
        type: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('Queen Bed', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
        quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required)
      }), new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
        type: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('King Bed', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
        quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required)
      }), new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
        type: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('Double Bed', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
        quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required)
      }), new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
        type: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('Single Bed', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
        quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required)
      })]),
      price: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
        regularPrice: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.pattern('^[1-9]\\d*$'), _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.maxLength(6)]),
        weekendPrice: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.pattern('^[1-9]\\d*$'), _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.maxLength(6)])
      }),
      benefits: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(undefined),
      featuredImage: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(undefined),
      images: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(undefined),
      bookingPolicies: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
        depositRequiredPercentage: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.pattern('^(?:[1-9][0-9]?|100)$')]),
        depositRequiredAmount: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.pattern('^[1-9]\\d*$')]),
        depositRequired: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
        advancePartialPayment: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
        advancePartialPaymentPercentage: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.pattern('^(?:[1-9][0-9]?|100)$')]),
        advanceFullPayment: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false)
      }, this.requireCheckboxesToBeCheckedValidator(1)),
      changePolicies: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
        nonRefundable: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
        modifiable: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
        freeCancellation: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
          freeCancellation: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
          deadlineDays: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.pattern('^[1-9]\\d*$'))
        })
      }, {
        validators: this.customChangePolicyValidation
      })
    });
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subject();
  }
  ngOnInit() {
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.thumbnailFile = undefined;
    this.galleryUrls = [];
    this.galleryFiles = [];
    this.facilitiesByCategory();
    if (this.room) {
      console.log('CAMERA', this.room.roomData);
      this.formRoom.patchValue(this.room.roomData);
      if (this.resourceService.resourceId$.getValue()) {
        console.log('suntem pe edit');
        this.thumbnailUrl = this.room.roomData.featuredImage;
        this.galleryUrls = this.room.roomData.images;
        if (this.room.roomData.state === 'add' || this.room.roomData.state === 'update') {
          const imagesArray = this.roomService.imagesArray$.getValue();
          console.log(imagesArray);
          const element = imagesArray.find(element => element.id === this.room.roomData.id);
          console.log('am gasit camera in array', element);
          this.thumbnailFile = element.featuredImage;
          this.thumbnailUrl = element.featuredImageUrl;
          this.galleryFiles = element.gallery;
          this.galleryUrls = element.galleryUrl;
        }
        if (this.room.roomData.changePolicies?.freeCancellation.freeCancellation) {
          this.formRoom.get('changePolicies.nonRefundable').setValue(false);
          this.formRoom.get('changePolicies.freeCancellation.freeCancellation').setValue(true);
          this.formRoom.get('changePolicies.freeCancellation.deadlineDays').enable();
          this.formRoom.get('changePolicies.freeCancellation.deadlineDays').setValue(this.room.roomData.changePolicies?.freeCancellation.deadlineDays);
        }
        if (this.room.roomData.changePolicies?.nonRefundable) {
          this.formRoom.get('changePolicies.nonRefundable').setValue(true);
          this.formRoom.get('changePolicies.freeCancellation.freeCancellation').setValue(false);
          this.formRoom.get('changePolicies.freeCancellation.deadlineDays').disable();
        }
        if (this.room.roomData.bookingPolicies?.advanceFullPayment) {
          this.previousBookingType = 'advanceFullPayment';
          this.selectedBookingType = 'advanceFullPayment';
          this.bookingPolicyEdit(true, 'advanceFullPayment');
        }
        if (this.room.roomData.bookingPolicies?.depositRequiredPercentage > 0) {
          this.formRoom.get('bookingPolicies.depositRequired').patchValue(true);
          this.formRoom.get('bookingPolicies.advancePartialPaymentPercentage').disable();
          this.previousBookingType = 'depositRequired';
          this.selectedBookingType = 'depositRequired';
          this.checkDepositType('percentage');
        }
        if (this.room.roomData.bookingPolicies?.depositRequiredAmount > 0) {
          this.formRoom.get('bookingPolicies.depositRequired').patchValue(true);
          this.formRoom.get('bookingPolicies.advancePartialPaymentPercentage').disable();
          this.previousBookingType = 'depositRequired';
          this.selectedBookingType = 'depositRequired';
          this.checkDepositType('amount');
        }
        if (this.room.roomData.bookingPolicies?.advancePartialPaymentPercentage > 0) {
          this.formRoom.get('bookingPolicies.advancePartialPayment').patchValue(true);
          this.formRoom.get('bookingPolicies.depositRequiredAmount').disable();
          this.formRoom.get('bookingPolicies.depositRequiredPercentage').disable();
          this.previousBookingType = 'advancePartialPayment';
          this.selectedBookingType = 'advancePartialPayment';
        }
      } else {
        const imagesArray = this.roomService.imagesArray$.getValue();
        const element = imagesArray.find(element => element.id === this.room.roomData.id);
        console.log('am gasit camera in array', element);
        this.thumbnailFile = element.featuredImage;
        this.thumbnailUrl = element.featuredImageUrl;
        this.galleryFiles = element.gallery;
        this.galleryUrls = element.galleryUrl;
      }
      this.room.roomData.itemsForBooking.forEach(room => {
        this.getItemsForBooking().push(this.fb.group({
          itemNumber: [room.itemNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required]
        }));
      });
      // this.selectedThumbnailUrl = this.room.roomData.featuredImage
      // this.selectedGalleryImagesUrl = this.room.roomData.images === null ? [] : this.room.roomData.images
    }

    this.bookingPoliciesValueChanges();
  }
  requireCheckboxesToBeCheckedValidator(minRequired) {
    return function validate(formGroup) {
      let checked = false; // Use a boolean flag to track if at least one checkbox is checked
      Object.keys(formGroup.controls).forEach(key => {
        const control = formGroup.controls[key];
        if (control.value === true) {
          checked = true; // Set the flag to true if any checkbox is checked
          return; // Exit the loop early, as we only need one checkbox checked
        }
      });

      if (!checked) {
        return {
          requireCheckboxesToBeChecked: true
        };
      }
      return null;
    };
  }
  bookingPoliciesValueChanges() {
    console.log('TEST');
    const bookingPolicies = this.formRoom.get('bookingPolicies');
    bookingPolicies.valueChanges.pipe(
    // distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),
    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.takeUntil)(this.ngUnsubscribe)).subscribe(newValues => {
      for (const bookingType in newValues) {
        if (newValues[bookingType] === true) {
          if (!this.previousBookingType) {
            this.previousBookingType = bookingType;
            this.selectedBookingType = bookingType;
          } else if (bookingType !== this.selectedBookingType) {
            this.previousBookingType = this.selectedBookingType;
            this.selectedBookingType = bookingType;
            break;
          }
        }
      }
      if (this.previousBookingType && this.selectedBookingType && this.previousBookingType !== this.selectedBookingType) {
        bookingPolicies.get(this.previousBookingType).patchValue(false, {
          emitEvent: false
        });
        if (this.previousBookingType === 'depositRequired') {
          if (bookingPolicies.get('depositRequiredPercentage').disabled) {
            bookingPolicies.get('depositRequiredAmount').patchValue(0, {
              emitEvent: false
            });
          }
          if (bookingPolicies.get('depositRequiredAmount').disabled) {
            bookingPolicies.get('depositRequiredPercentage').patchValue(0, {
              emitEvent: false
            });
          }
        }
        if (this.previousBookingType === 'advancePartialPayment') {
          bookingPolicies.get('advancePartialPaymentPercentage').patchValue(0, {
            emitEvent: false
          });
        }
      }
    });
  }
  submitRoom() {
    console.log(this.formRoom);
    this.formSubmitClicked = true;
    // Mark all inputs as touched
    this.formRoom.markAllAsTouched();
    // Check form validation
    if (this.formRoom.invalid) {
      return;
    }
    // Create benefits layout for back-end specification
    const benefits = [];
    this.activeFacilitiesByCategory.forEach(category => {
      category.tabAttributes.forEach(attribute => {
        if (this.formRoom.value[attribute.name]) {
          benefits.push({
            attributeId: attribute.id,
            attributeValue: this.formRoom.value[attribute.name]
          });
        }
      });
    });
    // Deconstruction Form Data
    const formDataObject = {
      ...this.formRoom.value,
      benefits: benefits,
      changePolicies: {
        ...this.formRoom.get('changePolicies').value,
        freeCancellation: {
          ...this.formRoom.get('changePolicies.freeCancellation').value,
          deadlineDays: Number(this.formRoom.get('changePolicies.freeCancellation.deadlineDays').value)
        }
      }
    };
    console.log('OBJECT AICI', formDataObject);
    // Check if you are on edit
    if (this.room) {
      this.updateRoom(formDataObject);
    } else {
      this.createRoom(formDataObject);
    }
  }
  /** Create Room */
  createRoom(formDataObject) {
    // TODO Add this create on final step and add the rooms with the new request addRooms
    //check if you are on edit resource
    if (this.resourceService.resourceId$.getValue()) {
      //add state field to the object, so you know what to do with this room in the end
      formDataObject = {
        ...formDataObject,
        state: 'add'
      };
      // this.roomService.roomList$.next(this.roomService.roomList$.getValue().concat(room));
      const image = {
        id: this.formRoom.value.id,
        featuredImage: this.thumbnailFile,
        featuredImageUrl: this.thumbnailUrl,
        gallery: this.galleryFiles,
        galleryUrl: this.galleryUrls
      };
      this.roomService.addImgToImagesArray(image);
      console.log('service img', this.roomService.imagesArray$.getValue());
      this.roomService.addRoomToList(formDataObject);
      console.log('room', this.roomService.roomList$.getValue());
      this.roomService.refreshRoomList$.next(true);
      this.close();
    } else {
      //add room on add resource
      // Add new room to the list
      this.roomService.addRoomToList(formDataObject);
      const image = {
        id: this.formRoom.value.id,
        featuredImage: this.thumbnailFile,
        featuredImageUrl: this.thumbnailUrl,
        gallery: this.galleryFiles,
        galleryUrl: this.galleryUrls
      };
      this.roomService.addImgToImagesArray(image);
      console.log('service img', this.roomService.imagesArray$.getValue());
      // Close Modal
      this.close();
    }
  }
  freeCancellationCheck(event) {
    if (!event.checked) {
      this.formRoom.get('changePolicies').get('freeCancellation.deadlineDays').patchValue(0);
    }
  }
  depositCheck(event) {
    if (!event.checked) {
      this.formRoom.get('bookingPolicies').get('depositRequiredPercentage').patchValue(0);
      this.formRoom.get('bookingPolicies').get('depositRequiredAmount').patchValue(0);
    }
  }
  advancePaymentCheck(event) {
    if (!event.checked) {
      this.formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage').patchValue(0);
    }
  }
  checkDepositType(type) {
    if (this.formRoom.get('bookingPolicies').get('depositRequired').value) {
      if (type === 'percentage') {
        if (this.formRoom.get('bookingPolicies').get('depositRequiredPercentage').value > 0) {
          this.formRoom.get('bookingPolicies').get('depositRequiredAmount').patchValue(0);
          this.formRoom.get('bookingPolicies').get('depositRequiredAmount').disable();
        } else if (this.formRoom.get('bookingPolicies').get('depositRequiredPercentage').value === 0 || !this.formRoom.get('bookingPolicies').get('depositRequiredPercentage').value) {
          this.formRoom.get('bookingPolicies').get('depositRequiredAmount').enable();
        }
      } else if (type === 'amount') {
        if (this.formRoom.get('bookingPolicies').get('depositRequiredAmount').value > 0) {
          this.formRoom.get('bookingPolicies').get('depositRequiredPercentage').patchValue(0);
          this.formRoom.get('bookingPolicies').get('depositRequiredPercentage').disable();
        } else if (this.formRoom.get('bookingPolicies').get('depositRequiredAmount').value === 0 || !this.formRoom.get('bookingPolicies').get('depositRequiredPercentage').value) {
          this.formRoom.get('bookingPolicies').get('depositRequiredPercentage').enable();
        }
      }
    }
  }
  /** Update Room */
  updateRoom(formDataObject) {
    if (this.resourceService.resourceId$.getValue()) {
      //check if the room was added now
      if (this.room.roomData.state === 'add') {
        // Get Room List
        const roomList = this.roomService.roomList$.getValue();
        // Find selected room by index
        const selectedRoomIndex = roomList.findIndex(room => room.id === formDataObject.id);
        //the state will be 'add' because this room is going to be added in the end
        formDataObject = {
          ...formDataObject,
          state: 'add'
        };
        // Check if the room was found and update
        if (selectedRoomIndex !== -1) {
          roomList[selectedRoomIndex] = formDataObject;
          this.roomService.roomList$.next(roomList);
          console.log(this.roomService.roomList$.getValue());
          this.roomService.refreshRoomList$.next(true);
          const image = {
            id: this.formRoom.value.id,
            featuredImage: this.thumbnailFile,
            featuredImageUrl: this.thumbnailUrl,
            gallery: this.galleryFiles,
            galleryUrl: this.galleryUrls
          };
          const imgArray = this.roomService.imagesArray$.getValue();
          const imgArrayIndex = imgArray.findIndex(arr => arr.id === formDataObject.id);
          if (imgArrayIndex !== -1) {
            imgArray[imgArrayIndex] = image;
            this.roomService.imagesArray$.next(imgArray);
          } else {
            this.roomService.addImgToImagesArray(image);
          }
          console.log('service img', this.roomService.imagesArray$.getValue());
          this.close();
        } else {
          console.log('Room not found');
        }
      } else {
        //the room was not added now, so you need to change the state to 'update'
        // Get Room List
        const roomList = this.roomService.roomList$.getValue();
        // Find selected room by index
        const selectedRoomIndex = roomList.findIndex(room => room.id === formDataObject.id);
        const urlsArray = formDataObject.images;
        console.log('urls array', urlsArray);
        if (urlsArray) {
          const notUpload = urlsArray.filter(img => img.state !== 'upload');
          console.log('fara upload', notUpload);
          formDataObject = {
            ...formDataObject,
            images: notUpload,
            state: 'update'
          };
        } else {
          formDataObject = {
            ...formDataObject,
            state: 'update'
          };
        }
        console.log('OBJ TO SEND', formDataObject);
        // Check if the room was found and update
        if (selectedRoomIndex !== -1) {
          roomList[selectedRoomIndex] = formDataObject;
          this.roomService.roomList$.next(roomList);
          console.log(this.roomService.roomList$.getValue());
          this.roomService.refreshRoomList$.next(true);
          const image = {
            id: this.formRoom.value.id,
            featuredImage: this.thumbnailFile,
            featuredImageUrl: this.thumbnailUrl,
            gallery: this.galleryFiles,
            galleryUrl: this.galleryUrls
          };
          const imgArray = this.roomService.imagesArray$.getValue();
          const imgArrayIndex = imgArray.findIndex(arr => arr.id === formDataObject.id);
          if (imgArrayIndex !== -1) {
            imgArray[imgArrayIndex] = image;
            this.roomService.imagesArray$.next(imgArray);
            console.log('value', this.roomService.imagesArray$.getValue());
          } else {
            this.roomService.addImgToImagesArray(image);
            console.log('value', this.roomService.imagesArray$.getValue());
          }
          // this.roomService.addImgToImagesArray(image);
          console.log('service img', this.roomService.imagesArray$.getValue());
          this.close();
        } else {
          console.log('Room not found');
        }
      }
    } else {
      //update room on add resource
      // Get Room List
      const roomList = this.roomService.roomList$.getValue();
      // Find selected room by index
      const selectedRoomIndex = roomList.findIndex(room => room.id === formDataObject.id);
      // Check if the room was found and update
      if (selectedRoomIndex !== -1) {
        roomList[selectedRoomIndex] = formDataObject;
        this.roomService.roomList$.next(roomList);
      } else {
        console.log('Room not found');
      }
      // Close Modal
      this.close();
    }
  }
  /** Create Dynamic Form */
  createDynamicForm(formSection) {
    // Loop through from Sections
    for (const section of formSection) {
      // Loop through section attributes
      for (const inputField of section.tabAttributes) {
        // Create form inputs
        this.formRoom.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(inputField.attributeValue ? inputField.attributeValue : 'false'));
      }
    }
  }
  //----------------Room Section-------------//
  /** Add A Room */
  addRoom() {
    this.addRoomToForm();
  }
  /** Remove A Room */
  removeRoom() {
    if (this.getItemsForBooking().length === 1) {
      return;
    }
    this.removeLastRoomAdded();
  }
  /** Access The Room Form Array Values */
  getItemsForBooking() {
    return this.formRoom.get('itemsForBooking');
  }
  /** Create New From Group For A Room */
  createNewRoom() {
    return new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
      itemNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required)
    });
  }
  /** Add New Room To Form */
  addRoomToForm() {
    this.getItemsForBooking().push(this.createNewRoom());
  }
  /** Remove Last Room Added From Form */
  removeLastRoomAdded() {
    this.getItemsForBooking().removeAt(-1);
  }
  //----------------Bed Type Section-------------//
  /** Add A Room Type */
  addBedType(index) {
    this.getBedTypeArray().at(index).get('quantity').patchValue(this.getBedTypeArray().at(index).get('quantity').value + 1);
  }
  /** Remove A Room Type */
  removeBedType(index) {
    if (this.getBedTypeArray().at(index).get('quantity').value === 0) {
      return;
    }
    this.getBedTypeArray().at(index).get('quantity').patchValue(this.getBedTypeArray().at(index).get('quantity').value - 1);
  }
  /** Access The Bet Type Form Array Values */
  getBedTypeArray() {
    return this.formRoom.get('bedType');
  }
  //----------------Facilities-------------//
  /** Filter and create benefits from active facilities */
  facilitiesByCategory() {
    this.resourceService.facilitiesByCategory$.subscribe({
      next: facilities => {
        // Store only the active facility
        this.activeFacilitiesByCategory = facilities.map(item => {
          const tabAttributes = item.tabAttributes.filter(attribute => {
            return this.resourceService.facilitiesForm$.getValue().value[attribute.name] === "true";
          });
          return {
            categoryZone: item.categoryZone,
            tabAttributes: [...tabAttributes]
          };
        });
        // EDIT Mode - Update facilities values
        if (this.room) {
          this.activeFacilitiesByCategory = this.activeFacilitiesByCategory.map(category => {
            const tabAttributes = category.tabAttributes.map(tabAttribute => {
              const matchingAttribute = this.room.roomData.benefits.find(attribute => attribute.attributeId === tabAttribute.id);
              return {
                ...tabAttribute,
                attributeValue: matchingAttribute ? matchingAttribute.attributeValue : null
              };
            });
            return {
              ...category,
              tabAttributes
            };
          });
        }
        this.createDynamicForm(this.activeFacilitiesByCategory);
      }
    });
  }
  //----------------Photos-------------//
  /** Preview Thumbnail */
  previewThumbs(event) {
    const file = event.target.files[0];
    this.selectedThumbsNail = event.target.files[0];
    // File Preview
    const reader = new FileReader();
    reader.onload = () => {
      this.selectedThumbnailUrl.filePath = reader.result;
    };
    reader.readAsDataURL(file);
    // Reset selected input
    event.target.value = null;
  }
  /** Clear Thumbnail */
  clearThumb() {
    this.selectedThumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.selectedThumbsNail = undefined;
  }
  /** Preview Gallery */
  previewGallery(event) {
    if (event.target.files && event.target.files[0]) {
      this.selectedGalleryImages = event.target.files;
      const filesAmount = event.target.files.length;
      // Preview Images
      for (let i = 0; i < filesAmount; i++) {
        const reader = new FileReader();
        reader.onload = event => {
          this.selectedGalleryImagesUrl.push({
            fileName: undefined,
            filePath: event.target.result
          });
        };
        reader.readAsDataURL(event.target.files[i]);
      }
      // Reset selected input
      event.target.value = null;
    }
  }
  /** Clear Gallery list */
  clearGalleryImg(index) {
    this.selectedGalleryImagesUrl.splice(index, 1);
  }
  //----------------Modal-------------//
  /** Close Dialog */
  close() {
    this.dialogRef.close();
  }
  //----------------------------- IMAGES---------------------------
  onThumbnailChange(event) {
    if (event.target.files && event.target.files[0]) {
      this.thumbnailUrl.fileName = event.target.files[0].name;
      this.thumbnailFile = event.target.files[0];
      const reader = new FileReader();
      reader.onload = () => this.thumbnailUrl.filePath = reader.result;
      reader.readAsDataURL(this.thumbnailFile);
    }
    console.log('thumbNail', this.thumbnailUrl);
    console.log('thumbNail', this.thumbnailFile);
  }
  removeThumbnail() {
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.thumbnailFile = undefined;
    this.room.roomData.featuredImage = {
      fileName: null,
      filePath: null
    };
    this.formRoom.get('featuredImage').patchValue({
      fileName: null,
      filePath: null
    });
  }
  onImageChange(event, inputRef) {
    if (this.galleryUrls === null) {
      this.galleryUrls = [];
    }
    if (this.resourceService.resourceId$.getValue()) {
      console.log('edit resursa');
      if (event.target.files && event.target.files[0]) {
        const arrayLength = event.target.files.length;
        const filesArrayLength = this.galleryFiles.length;
        //if the room was already added and gallery has images
        if (this.galleryUrls.length > 0) {
          const newUrlLength = this.galleryUrls.length;
          for (let i = 0; i < arrayLength; i++) {
            this.galleryUrls.push({
              fileName: event.target.files[i].name,
              filePath: undefined,
              state: 'upload'
            });
            this.galleryFiles.push({
              file: event.target.files[i],
              state: 'upload'
            });
            const reader = new FileReader();
            reader.onload = () => {
              this.galleryUrls[newUrlLength + i].filePath = reader.result;
              inputRef.value = null;
            };
            // reader.readAsDataURL(this.galleryFiles[this.galleryFiles.length - 1]);
            reader.readAsDataURL(this.galleryFiles[filesArrayLength + i].file);
          }
        } else {
          //if the gallery is empty
          for (let i = 0; i < arrayLength; i++) {
            this.galleryUrls.push({
              fileName: event.target.files[i].name,
              filePath: undefined,
              state: 'upload'
            });
            this.galleryFiles.push({
              file: event.target.files[i],
              state: 'upload'
            });
            const reader = new FileReader();
            reader.onload = () => {
              this.galleryUrls[i].filePath = reader.result;
              inputRef.value = null;
            };
            // reader.readAsDataURL(this.galleryFiles[this.galleryFiles.length - 1]);
            reader.readAsDataURL(this.galleryFiles[i].file);
          }
        }
      }
    } else {
      console.log('add resursa');
      if (event.target.files && event.target.files[0]) {
        const arrayLength = event.target.files.length;
        //if the room was already added and gallery has images
        if (this.galleryUrls.length > 0) {
          const newUrlLength = this.galleryUrls.length;
          for (let i = 0; i < arrayLength; i++) {
            this.galleryUrls.push({
              fileName: event.target.files[i].name,
              filePath: undefined
            });
            this.galleryFiles.push(event.target.files[i]);
            const reader = new FileReader();
            reader.onload = () => {
              this.galleryUrls[newUrlLength + i].filePath = reader.result;
              inputRef.value = null;
            };
            reader.readAsDataURL(this.galleryFiles[this.galleryFiles.length - 1]);
          }
        } else {
          //if the gallery is empty
          for (let i = 0; i < arrayLength; i++) {
            this.galleryUrls.push({
              fileName: event.target.files[i].name,
              filePath: undefined
            });
            this.galleryFiles.push(event.target.files[i]);
            const reader = new FileReader();
            reader.onload = () => {
              this.galleryUrls[i].filePath = reader.result;
              inputRef.value = null;
            };
            // reader.readAsDataURL(this.galleryFiles[this.galleryFiles.length - 1]);
            reader.readAsDataURL(this.galleryFiles[i]);
          }
        }
      }
    }
  }
  removeImage(index) {
    console.log('urls dupa remove', this.galleryUrls);
    if (this.resourceService.resourceId$.getValue() && this.room.roomData.images.length > 0) {
      this.room.roomData.images.splice(index, 1);
    } else {
      this.galleryUrls.splice(index, 1);
      this.galleryFiles.splice(index, 1);
    }
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__.MatDialogRef
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_2__.RentalBookingService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormBuilder
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__.MAT_DIALOG_DATA]
    }]
  }];
};
AddEditRoomModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
  selector: 'app-add-edit-room-modal',
  template: _add_edit_room_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_add_edit_room_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AddEditRoomModalComponent);


/***/ }),

/***/ 53577:
/*!******************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/delete-room-modal/delete-room-modal.component.ts ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteRoomModalComponent": () => (/* binding */ DeleteRoomModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delete_room_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delete-room-modal.component.html?ngResource */ 79853);
/* harmony import */ var _delete_room_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delete-room-modal.component.scss?ngResource */ 78218);
/* harmony import */ var _delete_room_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_delete_room_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);







let DeleteRoomModalComponent = class DeleteRoomModalComponent {
  constructor(dialogRef, room, roomService, resourceService) {
    this.dialogRef = dialogRef;
    this.room = room;
    this.roomService = roomService;
    this.resourceService = resourceService;
  }
  /** Delete Room */
  deleteRoom() {
    // Check if you are on EDIT
    if (this.resourceService.resourceId$.getValue()) {
      //check if you want to delete a room added now
      if (this.room.roomData.state === 'add') {
        // Get Room List
        const roomList = this.roomService.roomList$.getValue();
        // Exclude the room by id
        const filteredRooms = roomList.filter(room => room.id !== this.room.roomData.id);
        // Check if a room was deleted and update the array
        if (filteredRooms.length !== roomList.length) {
          this.roomService.roomList$.next(filteredRooms);
          this.roomService.refreshRoomList$.next(true);
          this.close();
        } else {
          console.log(`Room not found`);
        }
      } else {
        //just move the room in the delete array
        const roomList = this.roomService.roomList$.getValue();
        // Exclude the room by id
        const filteredRooms = roomList.filter(room => room.id !== this.room.roomData.id);
        // Check if a room was deleted and update the array
        if (filteredRooms.length !== roomList.length) {
          this.roomService.roomList$.next(filteredRooms);
          this.roomService.addRoomToDeleteArray(this.room.roomData);
          console.log('DELETE ARRAY', this.roomService.deleteArray$.getValue());
          this.roomService.refreshRoomList$.next(true);
          this.close();
        }
      }
    } else {
      //delete room in add resource state
      // Get Room List
      const roomList = this.roomService.roomList$.getValue();
      // Exclude the room by id
      const filteredRooms = roomList.filter(room => room.id !== this.room.roomData.id);
      // Check if a room was deleted and update the array
      if (filteredRooms.length !== roomList.length) {
        this.roomService.roomList$.next(filteredRooms);
      } else {
        console.log(`Room not found`);
      }
      // Close Modal
      this.close();
    }
  }
  //----------------Modal-------------//
  /** Close Dialog */
  close() {
    this.dialogRef.close();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MAT_DIALOG_DATA]
    }]
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_2__.RentalBookingService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }];
};
DeleteRoomModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-delete-room-modal',
  template: _delete_room_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_delete_room_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], DeleteRoomModalComponent);


/***/ }),

/***/ 35664:
/*!*********************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/rental-booking.component.ts ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RentalBookingComponent": () => (/* binding */ RentalBookingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _rental_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rental-booking.component.html?ngResource */ 16607);
/* harmony import */ var _rental_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rental-booking.component.scss?ngResource */ 81814);
/* harmony import */ var _rental_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_rental_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _add_edit_room_modal_add_edit_room_modal_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-edit-room-modal/add-edit-room-modal.component */ 3154);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _delete_room_modal_delete_room_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./delete-room-modal/delete-room-modal.component */ 53577);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);























let RentalBookingComponent = class RentalBookingComponent {
  constructor(dialog, stepperService, resourceService, roomService, userService, route, router, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.dialog = dialog;
    this.stepperService = stepperService;
    this.resourceService = resourceService;
    this.roomService = roomService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.roomList = [];
    this.dataLoaded = false;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_17__.Subject();
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_18__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    // Store Resource ID
    this.resourceId = this.resourceService.resourceId$.getValue();
    if (this.resourceId) {
      this.roomService.getRoomList(this.resourceService.resourceId$.getValue()).subscribe({
        next: roomList => {
          if (this.roomService.roomList$.getValue().length === 0) {
            this.roomService.roomList$.next(roomList);
            this.getAttributesForRoom(this.roomService.roomList$.getValue());
          } else {
            this.getAttributesForRoom(this.roomService.roomList$.getValue());
          }
        }
      });
    }
    // Listen to actions for refresh room list
    this.roomService.refreshRoomListData().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: response => {
        console.log(response);
        // Check if you are on EDIT Mode
        if (this.resourceId) {
          this.getAttributesForRoom(this.roomService.roomList$.getValue());
        } else {
          // Get Room List
          this.roomService.roomListData().subscribe({
            next: roomList => {
              this.getAttributesForRoom(roomList);
              console.log('lista', this.roomList);
            }
          });
        }
      }
    });
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }

  getAttributesForRoom(roomList) {
    // Store all attributes ID
    const attributeIdsArray = roomList.map(obj => {
      return obj.benefits.reduce((acc, curr) => {
        acc.push(curr.attributeId);
        return acc;
      }, []);
    }).flat();
    // Get Attribute List
    this.resourceService.getAttributes(attributeIdsArray).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: attributesList => {
        // Combine attribute data with room data
        this.roomList = roomList.map(obj => {
          const benefits = obj.benefits.map(benefit => {
            const attribute = attributesList.find(attr => attr.id === benefit.attributeId);
            return {
              ...benefit,
              name: attribute.name,
              icon: attribute.icon
            };
          });
          return {
            ...obj,
            benefits
          };
        });
        // Data Loaded
        this.dataLoaded = true;
        console.log('lipite', this.roomList);
      }
    });
  }
  openAddModal() {
    this.dialog.open(_add_edit_room_modal_add_edit_room_modal_component__WEBPACK_IMPORTED_MODULE_2__.AddEditRoomModalComponent, {
      width: '1500px',
      height: '750px',
      data: undefined
    });
  }
  openEditModal(roomId) {
    this.dialog.open(_add_edit_room_modal_add_edit_room_modal_component__WEBPACK_IMPORTED_MODULE_2__.AddEditRoomModalComponent, {
      width: '1500px',
      height: '750px',
      data: {
        roomData: this.roomList.find(room => room.id === roomId)
      }
    });
  }
  openDeleteModal(roomId) {
    this.dialog.open(_delete_room_modal_delete_room_modal_component__WEBPACK_IMPORTED_MODULE_6__.DeleteRoomModalComponent, {
      width: '850px',
      height: 'auto',
      data: {
        roomData: this.roomList.find(room => room.id === roomId)
      }
    });
  }
  /** Go to next step*/
  nextStep() {
    this.stepperService.nextStep(true);
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_21__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__.MatDialog
  }, {
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__.StepperService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_4__.ResourcesService
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_5__.RentalBookingService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_23__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_23__.Router
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_8__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_9__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_10__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_11__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_13__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_14__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_15__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__.CulturalBookingService
  }];
};
RentalBookingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_24__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_25__.Component)({
  selector: 'app-rental-booking',
  template: _rental_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_rental_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], RentalBookingComponent);


/***/ }),

/***/ 12840:
/*!****************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/add-edit-service/add-edit-service.component.ts ***!
  \****************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddEditServiceComponent": () => (/* binding */ AddEditServiceComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_edit_service_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-edit-service.component.html?ngResource */ 18819);
/* harmony import */ var _add_edit_service_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-edit-service.component.scss?ngResource */ 11012);
/* harmony import */ var _add_edit_service_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_add_edit_service_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 68951);










let AddEditServiceComponent = class AddEditServiceComponent {
  constructor(fb, resourceService, timeslotService, dialogRef, serviceData) {
    this.fb = fb;
    this.resourceService = resourceService;
    this.timeslotService = timeslotService;
    this.dialogRef = dialogRef;
    this.serviceData = serviceData;
    this.isEditMode = false;
    this.tabIndex = 0;
    this.days = ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'];
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subject();
  }
  // serviceForm = new FormGroup({
  //     id: new FormControl(this.serviceData ? undefined : Math.random().toString(36).substring(2, 17)) ,
  //     name: new FormControl(null, Validators.required),
  //     description: new FormControl(null),
  //     price: new FormControl(null, Validators.min(0)),
  //     slotItems: new FormArray([])
  // })
  ngOnInit() {
    this.formInit();
    this.checkIfEdit();
    this.bookingPoliciesValueChanges();
  }
  bookingPoliciesValueChanges() {
    const bookingPolicies = this.serviceForm.get('bookingPolicies');
    bookingPolicies.valueChanges.pipe(
    // distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),
    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.takeUntil)(this.ngUnsubscribe)).subscribe(newValues => {
      for (const bookingType in newValues) {
        if (newValues[bookingType] === true) {
          if (!this.previousBookingType) {
            this.previousBookingType = bookingType;
            this.selectedBookingType = bookingType;
          } else if (bookingType !== this.selectedBookingType) {
            this.previousBookingType = this.selectedBookingType;
            this.selectedBookingType = bookingType;
            break;
          }
        }
      }
      if (this.previousBookingType && this.selectedBookingType && this.previousBookingType !== this.selectedBookingType) {
        bookingPolicies.get(this.previousBookingType).patchValue(false, {
          emitEvent: false
        });
        if (this.previousBookingType === 'depositRequired') {
          if (bookingPolicies.get('depositRequiredPercentage').disabled) {
            bookingPolicies.get('depositRequiredAmount').patchValue(0, {
              emitEvent: false
            });
          }
          if (bookingPolicies.get('depositRequiredAmount').disabled) {
            bookingPolicies.get('depositRequiredPercentage').patchValue(0, {
              emitEvent: false
            });
          }
        }
        if (this.previousBookingType === 'advancePartialPayment') {
          bookingPolicies.get('advancePartialPaymentPercentage').patchValue(0, {
            emitEvent: false
          });
        }
      }
    });
  }
  formInit() {
    this.serviceForm = this.fb.group({
      id: [this.serviceData ? undefined : Math.random().toString(36).substring(2, 17)],
      name: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required],
      description: [null],
      price: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.min(0)],
      totalItemsNumber: 1,
      slotItems: this.fb.array([]),
      bookingPolicies: this.fb.group({
        depositRequired: false,
        advancePartialPayment: false,
        advanceFullPayment: false,
        depositRequiredPercentage: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.pattern('^(?:[1-9][0-9]?|100)$')])],
        depositRequiredAmount: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.pattern('^[1-9]\\d*$')])],
        advancePartialPaymentPercentage: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.pattern('^(?:[1-9][0-9]?|100)$')])]
      }, {
        validators: this.requireCheckboxesToBeCheckedValidator()
      })
    });
  }
  requireCheckboxesToBeCheckedValidator(minRequired = 1) {
    // console.log('se apeleaza');
    return function validate(formGroup) {
      let checked = 0;
      // console.log('se apeleaza 2');
      Object.keys(formGroup.controls).forEach(key => {
        const control = formGroup.controls[key];
        if (control.value === true) {
          checked++;
        }
      });
      if (checked < minRequired) {
        return {
          requireCheckboxesToBeChecked: true
        };
      }
      return null;
    };
  }
  get slotItems() {
    return this.serviceForm.get('slotItems');
  }
  newDayTab(day) {
    return this.fb.group({
      day: day,
      slots: this.fb.array([])
    });
  }
  addDayTab(day) {
    this.slotItems.push(this.newDayTab(day));
  }
  removeDayTab(tabIndex) {
    this.slotItems.removeAt(tabIndex);
  }
  initConfigTabs() {
    this.days.forEach(item => {
      this.addDayTab(item);
    });
  }
  //slots array
  slots(index) {
    return this.slotItems.at(index)?.get('slots');
  }
  newSlot() {
    return this.fb.group({
      startHour: moment__WEBPACK_IMPORTED_MODULE_4__('00:00', 'HH:mm'),
      endHour: moment__WEBPACK_IMPORTED_MODULE_4__('00:00', 'HH:mm')
    }, {
      validators: this.checkTimeSlots
    });
  }
  addSlot(index) {
    this.slots(index).push(this.newSlot());
  }
  addSlotOnUpdate(index, value) {
    this.slotItems.at(index)?.get('slots').value.push(value);
  }
  removeSlot(index, childIndex) {
    this.slots(index).removeAt(childIndex);
  }
  checkIfEdit() {
    if (this.serviceData) {
      this.isEditMode = true;
      this.serviceForm.patchValue(this.serviceData.service);
      if (this.serviceData.service.slotItems) {
        this.serviceData.service.slotItems.forEach((slotItem, index) => {
          this.slotItems.push(this.fb.group({
            day: slotItem.day,
            slots: this.fb.array([])
          }));
          // console.log('slots', slotItem.slots);
          slotItem.slots.forEach(slot => {
            // this.addSlot(index);
            const startTime = moment__WEBPACK_IMPORTED_MODULE_4__(slot.startHour, 'HH:mm');
            const endTime = moment__WEBPACK_IMPORTED_MODULE_4__(slot.endHour, 'HH:mm');
            this.slots(index).push(this.fb.group({
              startHour: startTime,
              endHour: endTime
            }));
          });
          // this.slots(index).patchValue(slotItem.slots);
        });
      }

      if (this.serviceData.service.bookingPolicies?.advanceFullPayment) {
        this.previousBookingType = 'advanceFullPayment';
        this.selectedBookingType = 'advanceFullPayment';
        this.bookingPolicyEdit(true, 'advanceFullPayment');
      }
      if (this.serviceData.service.bookingPolicies?.depositRequiredPercentage > 0) {
        this.serviceForm.get('bookingPolicies.depositRequired').patchValue(true);
        this.serviceForm.get('bookingPolicies.advancePartialPaymentPercentage').disable();
        this.previousBookingType = 'depositRequired';
        this.selectedBookingType = 'depositRequired';
        this.checkDepositType('percentage');
      }
      if (this.serviceData.service.bookingPolicies?.depositRequiredAmount > 0) {
        this.serviceForm.get('bookingPolicies.depositRequired').patchValue(true);
        this.serviceForm.get('bookingPolicies.advancePartialPaymentPercentage').disable();
        this.previousBookingType = 'depositRequired';
        this.selectedBookingType = 'depositRequired';
        this.checkDepositType('amount');
      }
      if (this.serviceData.service.bookingPolicies?.advancePartialPaymentPercentage > 0) {
        this.serviceForm.get('bookingPolicies.advancePartialPayment').patchValue(true);
        this.serviceForm.get('bookingPolicies.depositRequiredAmount').disable();
        this.serviceForm.get('bookingPolicies.depositRequiredPercentage').disable();
        this.previousBookingType = 'advancePartialPayment';
        this.selectedBookingType = 'advancePartialPayment';
      }
      console.log('form', this.serviceForm.value);
    } else {
      this.isEditMode = false;
      this.initConfigTabs();
    }
  }
  sendTimeSlots() {
    this.serviceForm.value.slotItems.forEach((slotItem, index) => {
      slotItem.slots.forEach((slot, childIndex) => {
        console.log('TO SEND', slot);
        const startTime = slot.startHour.format('HH:mm');
        const endTime = slot.endHour.format('HH:mm');
        this.slots(index).value[childIndex] = {
          startHour: startTime,
          endHour: endTime
        };
      });
      // this.timetable(index).patchValue(timetableItem.timetable);
      // console.log('form TO SEND', this.serviceForm.value);
    });
  }

  checkTimeSlots(control) {
    const startTime = control.get('startHour');
    const endTime = control.get('endHour');
    if (moment__WEBPACK_IMPORTED_MODULE_4__(startTime.value).format('HH:mm') >= moment__WEBPACK_IMPORTED_MODULE_4__(endTime.value).format('HH:mm')) {
      // console.log('nu e bine');
      endTime.setErrors({
        invalidTime: true
      });
    }
    return;
  }
  confirm() {
    this.serviceForm.markAllAsTouched();
    console.log('form', this.serviceForm);
    if (this.serviceForm.valid) {
      this.sendTimeSlots();
      this.close();
      const service = this.serviceForm.value;
      if (this.isEditMode) {
        this.updateService(service);
      } else {
        this.createService(service);
      }
    }
  }
  updateService(service) {
    if (this.resourceService.resourceId$.getValue()) {
      //EDIT RESOURCE
      console.log('EDITARE RESURSA');
      //update a product that was added now
      if (this.serviceData.service.state === 'add') {
        // Get prod List
        const serviceList = this.timeslotService.serviceList$.getValue();
        // Find selected room by index
        const selectedIndex = serviceList.findIndex(prod => prod.id === service.id);
        //the state will be 'add' because this room is going to be added in the end
        service = {
          ...service,
          state: 'add'
        };
        if (selectedIndex !== -1) {
          serviceList[selectedIndex] = service;
          this.timeslotService.serviceList$.next(serviceList);
          this.timeslotService.refreshServiceList$.next(true);
        } else {
          console.log('prod not found');
        }
      } else {
        //the prod exists on the resource
        // Get prod List
        const serviceList = this.timeslotService.serviceList$.getValue();
        // Find selected room by index
        const selectedIndex = serviceList.findIndex(prod => prod.id === service.id);
        service = {
          ...service,
          state: 'update'
        };
        if (selectedIndex !== -1) {
          serviceList[selectedIndex] = service;
          this.timeslotService.serviceList$.next(serviceList);
          this.timeslotService.refreshServiceList$.next(true);
        } else {
          console.log('prod not found');
        }
      }
    } else {
      //ADD RESOURCE
      console.log('ADD RESURSA');
      // Get prod List
      const serviceList = this.timeslotService.serviceList$.getValue();
      // find this ticket in the current create list
      const indexInList = serviceList.findIndex(service => service.id === this.serviceForm.value.id);
      // Check if the room was found and update
      if (indexInList !== -1) {
        serviceList[indexInList] = this.serviceForm.value;
        this.timeslotService.serviceList$.next(serviceList);
      } else {
        console.log('prod not found');
      }
    }
  }
  createService(service) {
    if (this.resourceService.resourceId$.getValue()) {
      //EDIT RESOURCE
      console.log('EDITARE RESURSA');
      service = {
        ...service,
        state: 'add'
      };
      this.timeslotService.addServiceToList(service);
      this.timeslotService.refreshServiceList$.next(true);
    } else {
      //ADD RESOURCE
      console.log('ADD RESURSA');
      this.timeslotService.addServiceToList(service);
      this.timeslotService.refreshServiceList$.next(true);
    }
  }
  depositCheck(event) {
    if (!event.checked) {
      this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage').patchValue(0);
      this.serviceForm.get('bookingPolicies').get('depositRequiredAmount').patchValue(0);
    }
  }
  checkDepositType(type) {
    if (this.serviceForm.get('bookingPolicies').get('depositRequired').value) {
      if (type === 'percentage') {
        if (this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage').value > 0) {
          this.serviceForm.get('bookingPolicies').get('depositRequiredAmount').patchValue(0);
          this.serviceForm.get('bookingPolicies').get('depositRequiredAmount').disable();
        } else if (this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage').value === 0 || !this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage').value) {
          this.serviceForm.get('bookingPolicies').get('depositRequiredAmount').enable();
        }
      } else if (type === 'amount') {
        if (this.serviceForm.get('bookingPolicies').get('depositRequiredAmount').value > 0) {
          this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage').patchValue(0);
          this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage').disable();
        } else if (this.serviceForm.get('bookingPolicies').get('depositRequiredAmount').value === 0 || !this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage').value) {
          this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage').enable();
        }
      }
    }
  }
  bookingPolicyEdit(event, type) {
    if (event && type === 'depositRequired') {
      this.serviceForm.get('bookingPolicies').get('depositRequiredAmount')?.enable();
      this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage')?.enable();
      this.serviceForm.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('advanceFullPayment')?.setValue(false);
      this.serviceForm.get('bookingPolicies').get('advancePartialPayment')?.setValue(false);
      this.serviceForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('advancePartialPaymentPercentage').disable();
    }
    if (event && type === 'advanceFullPayment') {
      this.serviceForm.get('bookingPolicies').get('depositRequired')?.setValue(false);
      this.serviceForm.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('depositRequiredAmount')?.disable();
      this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage')?.disable();
      this.serviceForm.get('bookingPolicies').get('advancePartialPayment')?.setValue(false);
      this.serviceForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.disable();
    }
    if (event && type === 'advancePartialPayment') {
      this.serviceForm.get('bookingPolicies').get('advanceFullPayment')?.setValue(false);
      this.serviceForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.enable();
      this.serviceForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('depositRequired')?.setValue(false);
      this.serviceForm.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('depositRequiredAmount')?.disable();
      this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.serviceForm.get('bookingPolicies').get('depositRequiredPercentage')?.disable();
    }
  }
  advancePaymentCheck(event) {
    if (!event.checked) {
      this.serviceForm.get('bookingPolicies').get('advancePartialPaymentPercentage').patchValue(0);
    }
  }
  close() {
    this.dialogRef.close();
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormBuilder
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_2__.ResourcesService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_3__.BookingTimeslotsService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__.MAT_DIALOG_DATA]
    }]
  }];
};
AddEditServiceComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
  selector: 'app-add-edit-service',
  template: _add_edit_service_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_add_edit_service_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AddEditServiceComponent);


/***/ }),

/***/ 79922:
/*!************************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/delete-modal-service/delete-modal-service.component.ts ***!
  \************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteModalServiceComponent": () => (/* binding */ DeleteModalServiceComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delete_modal_service_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delete-modal-service.component.html?ngResource */ 7365);
/* harmony import */ var _delete_modal_service_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delete-modal-service.component.scss?ngResource */ 13125);
/* harmony import */ var _delete_modal_service_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_delete_modal_service_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/booking-timeslots.service */ 2232);







let DeleteModalServiceComponent = class DeleteModalServiceComponent {
  constructor(timeslotService, resourceService, dialogRef, serviceData) {
    this.timeslotService = timeslotService;
    this.resourceService = resourceService;
    this.dialogRef = dialogRef;
    this.serviceData = serviceData;
  }
  ngOnInit() {
    this.currentService = this.serviceData.service;
  }
  close() {
    this.dialogRef.close();
  }
  deleteService() {
    if (this.resourceService.resourceId$.getValue()) {
      console.log('sunt pe edit res si vreau sa sterg');
      //EDIT RESOURCE
      //delete a product just added
      if (this.serviceData.service.state === 'add') {
        const serviceList = this.timeslotService.serviceList$.getValue();
        // Exclude the room by id
        const filteredList = serviceList.filter(service => service.id !== this.serviceData.service.id);
        // Check if a room was deleted and update the array
        if (filteredList.length !== serviceList.length) {
          this.timeslotService.serviceList$.next(filteredList);
          this.timeslotService.refreshServiceList$.next(true);
          this.close();
        } else {
          console.log(`serv not found`);
        }
      } else {
        //move the prod to delete array
        const serviceList = this.timeslotService.serviceList$.getValue();
        // Exclude the prod by id
        const filteredService = serviceList.filter(prod => prod.id !== this.serviceData.service.id);
        // Check if a prod was deleted and update the array
        if (filteredService.length !== serviceList.length) {
          this.timeslotService.serviceList$.next(filteredService);
          this.timeslotService.addServiceToDeleteList(this.serviceData.service);
          console.log('DELETE ARRAY', this.timeslotService.deleteServiceList$.getValue());
          this.timeslotService.refreshServiceList$.next(true);
          this.close();
        }
      }
    } else {
      console.log('sunt pe add res si vreau sa sterg');
      //ADD RESOURCE
      // Get products list
      const serviceList = this.timeslotService.serviceList$.getValue();
      // Exclude the ticket by id
      const filteredServices = serviceList.filter(product => product.id !== this.serviceData.service.id);
      // Check if a room was deleted and update the array
      if (filteredServices.length !== serviceList.length) {
        this.timeslotService.serviceList$.next(filteredServices);
        this.close();
      } else {
        console.log(`Prod not found`);
      }
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_3__.BookingTimeslotsService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_2__.ResourcesService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MAT_DIALOG_DATA]
    }]
  }];
};
DeleteModalServiceComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-delete-modal-service',
  template: _delete_modal_service_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_delete_modal_service_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], DeleteModalServiceComponent);


/***/ }),

/***/ 79249:
/*!*********************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/service-booking-time-slots.component.ts ***!
  \*********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ServiceBookingTimeSlotsComponent": () => (/* binding */ ServiceBookingTimeSlotsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _service_booking_time_slots_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./service-booking-time-slots.component.html?ngResource */ 50493);
/* harmony import */ var _service_booking_time_slots_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./service-booking-time-slots.component.scss?ngResource */ 92945);
/* harmony import */ var _service_booking_time_slots_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_service_booking_time_slots_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _add_edit_service_add_edit_service_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-edit-service/add-edit-service.component */ 12840);
/* harmony import */ var _delete_modal_service_delete_modal_service_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./delete-modal-service/delete-modal-service.component */ 79922);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);























let ServiceBookingTimeSlotsComponent = class ServiceBookingTimeSlotsComponent {
  // serviceList = [{name:'serv 1', description:'descriere', price: '12'},{name:'serv 1', description:'descriere', price: '12'},{name:'serv 1', description:'descriere', price: '12'}]
  constructor(stepperService, resourceService, timeslotService, dialog, userService, route, router, roomService, ticketService, timepickerService, productService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.stepperService = stepperService;
    this.resourceService = resourceService;
    this.timeslotService = timeslotService;
    this.dialog = dialog;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.dataLoaded = false;
    this.serviceList = [];
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_17__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.resourceId = this.resourceService.resourceId$.getValue();
    if (this.resourceService.resourceId$.getValue()) {
      this.timeslotService.getServicesByResourceId(this.resourceService.resourceId$.getValue()).subscribe({
        next: serviceList => {
          if (this.timeslotService.serviceList$.getValue().length === 0) {
            this.timeslotService.serviceList$.next(serviceList);
            this.serviceList = serviceList;
          } else {
            this.serviceList = this.timeslotService.serviceList$.getValue();
          }
        }
      });
    }
    this.timeslotService.refreshServiceListData().subscribe({
      next: response => {
        console.log('resp from refresh', response);
        if (response) {
          if (this.resourceService.resourceId$.getValue()) {
            this.serviceList = this.timeslotService.serviceList$.getValue();
            console.log('list edit', this.timeslotService.serviceList$.getValue());
          } else {
            this.timeslotService.serviceListData().subscribe({
              next: serviceList => {
                this.serviceList = serviceList;
                console.log('list', this.serviceList);
              }
            });
          }
        }
      }
    });
    //for save resource
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /* this.routeSub = this.router.events.subscribe((event) => {
         if (event instanceof NavigationStart) {
             // save your data
             console.log('AM PLECAT PA PA');
             this.clearFields();
         }
     });*/
  }

  openAddModal() {
    this.dialog.open(_add_edit_service_add_edit_service_component__WEBPACK_IMPORTED_MODULE_3__.AddEditServiceComponent, {
      width: '1500px',
      height: '750px',
      data: undefined
    });
  }
  openEditModal(service) {
    this.dialog.open(_add_edit_service_add_edit_service_component__WEBPACK_IMPORTED_MODULE_3__.AddEditServiceComponent, {
      width: '1500px',
      height: '750px',
      data: {
        service: service
      }
    });
  }
  openDeleteModal(service, index) {
    this.dialog.open(_delete_modal_service_delete_modal_service_component__WEBPACK_IMPORTED_MODULE_4__.DeleteModalServiceComponent, {
      width: '720px',
      height: '400px',
      data: {
        service: service,
        index: index
      }
    });
  }
  /** Go to next step*/
  nextStep() {
    this.stepperService.nextStep(true);
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  ngOnDestroy() {
    this.routeSub?.unsubscribe();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_5__.ResourcesService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_6__.BookingTimeslotsService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_20__.MatDialog
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_8__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_9__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_10__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_11__.ProductListService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_13__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_14__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_15__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__.CulturalBookingService
  }];
};
ServiceBookingTimeSlotsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_23__.Component)({
  selector: 'app-service-booking-time-slots',
  template: _service_booking_time_slots_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_service_booking_time_slots_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ServiceBookingTimeSlotsComponent);


/***/ }),

/***/ 88692:
/*!**************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/add-edit-ticket/add-edit-ticket.component.ts ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddEditTicketComponent": () => (/* binding */ AddEditTicketComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_edit_ticket_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-edit-ticket.component.html?ngResource */ 50308);
/* harmony import */ var _add_edit_ticket_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-edit-ticket.component.scss?ngResource */ 3359);
/* harmony import */ var _add_edit_ticket_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_add_edit_ticket_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);









let AddEditTicketComponent = class AddEditTicketComponent {
  constructor(fb, ticketsBookingService, resourceService, dialogRef, ticketData) {
    this.fb = fb;
    this.ticketsBookingService = ticketsBookingService;
    this.resourceService = resourceService;
    this.dialogRef = dialogRef;
    this.ticketData = ticketData;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subject();
    this.displayLimit = false;
    this.displaySeats = false;
    this.isEditTicketMode = false;
  }
  ngOnInit() {
    this.ticketFormInit();
    this.checkIfEdit();
    this.bookingPoliciesValueChanges();
  }
  bookingPoliciesValueChanges() {
    const bookingPolicies = this.ticketForm.get('bookingPolicies');
    bookingPolicies.valueChanges.pipe(
    // distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),
    (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this.ngUnsubscribe)).subscribe(newValues => {
      for (const bookingType in newValues) {
        if (newValues[bookingType] === true) {
          if (!this.previousBookingType) {
            this.previousBookingType = bookingType;
            this.selectedBookingType = bookingType;
          } else if (bookingType !== this.selectedBookingType) {
            this.previousBookingType = this.selectedBookingType;
            this.selectedBookingType = bookingType;
            break;
          }
        }
      }
      if (this.previousBookingType && this.selectedBookingType && this.previousBookingType !== this.selectedBookingType) {
        bookingPolicies.get(this.previousBookingType).patchValue(false, {
          emitEvent: false
        });
        if (this.previousBookingType === 'depositRequired') {
          if (bookingPolicies.get('depositRequiredPercentage').disabled) {
            bookingPolicies.get('depositRequiredAmount').patchValue(0, {
              emitEvent: false
            });
          }
          if (bookingPolicies.get('depositRequiredAmount').disabled) {
            bookingPolicies.get('depositRequiredPercentage').patchValue(0, {
              emitEvent: false
            });
          }
        }
        if (this.previousBookingType === 'advancePartialPayment') {
          bookingPolicies.get('advancePartialPaymentPercentage').patchValue(0, {
            emitEvent: false
          });
        }
      }
    });
  }
  ticketFormInit() {
    this.ticketForm = this.fb.group({
      id: [this.ticketData ? undefined : Math.random().toString(36).substring(2, 17)],
      name: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
      description: null,
      regularPrice: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.pattern("^[1-9]\\d*$")])],
      weekendPrice: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.pattern("^[1-9]\\d*$")])],
      hasSeat: [false],
      ticketsForBooking: this.fb.array([]),
      limit: [false],
      ticketsLimit: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.min(0), _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.pattern("[0-9]*")])],
      bookingPolicies: this.fb.group({
        depositRequired: false,
        advancePartialPayment: false,
        advanceFullPayment: false,
        depositRequiredPercentage: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.pattern('^(?:[1-9][0-9]?|100)$')])],
        depositRequiredAmount: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.pattern('^[1-9]\\d*$')])],
        advancePartialPaymentPercentage: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.pattern('^(?:[1-9][0-9]?|100)$')])]
      }, {
        validators: this.requireCheckboxesToBeCheckedValidator()
      })
    });
  }
  bookingPolicyEdit(event, type) {
    if (event && type === 'depositRequired') {
      this.ticketForm.get('bookingPolicies').get('depositRequiredAmount')?.enable();
      this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage')?.enable();
      this.ticketForm.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('advanceFullPayment')?.setValue(false);
      this.ticketForm.get('bookingPolicies').get('advancePartialPayment')?.setValue(false);
      this.ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage').disable();
    }
    if (event && type === 'advanceFullPayment') {
      console.log('full payment');
      this.ticketForm.get('bookingPolicies').get('depositRequired')?.setValue(false);
      // this.ticketForm.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('depositRequiredAmount')?.disable();
      // this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage')?.disable();
      this.ticketForm.get('bookingPolicies').get('advancePartialPayment')?.setValue(false);
      // this.ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.disable();
    }
    if (event && type === 'advancePartialPayment') {
      this.ticketForm.get('bookingPolicies').get('advanceFullPayment')?.setValue(false);
      this.ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.enable();
      this.ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('depositRequired')?.setValue(false);
      this.ticketForm.get('bookingPolicies').get('depositRequiredAmount')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('depositRequiredAmount')?.disable();
      this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage')?.setValue(0);
      this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage')?.disable();
    }
  }
  requireCheckboxesToBeCheckedValidator(minRequired = 1) {
    console.log('se apeleaza');
    return function validate(formGroup) {
      let checked = 0;
      // console.log('se apeleaza 2');
      Object.keys(formGroup.controls).forEach(key => {
        const control = formGroup.controls[key];
        if (control.value === true) {
          checked++;
        }
      });
      if (checked < minRequired) {
        return {
          requireCheckboxesToBeChecked: true
        };
      }
      return null;
    };
  }
  checkIfEdit() {
    if (this.ticketData) {
      this.isEditTicketMode = true;
      this.ticketForm.patchValue(this.ticketData.ticket);
      if (this.ticketData.ticket.hasSeat === true) {
        if (this.ticketData.ticket.ticketsForBooking) {
          this.ticketData.ticket.ticketsForBooking.forEach(ticket => {
            this.ticketsForBooking().push(this.fb.group({
              ticketNumber: [ticket.ticketNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
              seatNumber: [ticket.seatNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required]
            }));
          });
        }
        this.displaySeats = true;
      }
      if (this.ticketData.ticket?.limit === true) {
        this.displayLimit = true;
      }
      if (this.ticketData.ticket.bookingPolicies?.advanceFullPayment) {
        this.previousBookingType = 'advanceFullPayment';
        this.selectedBookingType = 'advanceFullPayment';
        this.bookingPolicyEdit(true, 'advanceFullPayment');
      }
      if (this.ticketData.ticket.bookingPolicies?.depositRequiredPercentage > 0) {
        this.ticketForm.get('bookingPolicies.depositRequired').patchValue(true);
        this.ticketForm.get('bookingPolicies.advancePartialPaymentPercentage').disable();
        this.previousBookingType = 'depositRequired';
        this.selectedBookingType = 'depositRequired';
        this.checkDepositType('percentage');
      }
      if (this.ticketData.ticket.bookingPolicies?.depositRequiredAmount > 0) {
        this.ticketForm.get('bookingPolicies.depositRequired').patchValue(true);
        this.ticketForm.get('bookingPolicies.advancePartialPaymentPercentage').disable();
        this.previousBookingType = 'depositRequired';
        this.selectedBookingType = 'depositRequired';
        this.checkDepositType('amount');
      }
      if (this.ticketData.ticket.bookingPolicies?.advancePartialPaymentPercentage > 0) {
        this.ticketForm.get('bookingPolicies.advancePartialPayment').patchValue(true);
        this.ticketForm.get('bookingPolicies.depositRequiredAmount').disable();
        this.ticketForm.get('bookingPolicies.depositRequiredPercentage').disable();
        this.previousBookingType = 'advancePartialPayment';
        this.selectedBookingType = 'advancePartialPayment';
      }
    }
  }
  // form array
  ticketsForBooking() {
    return this.ticketForm.get('ticketsForBooking');
  }
  newTicket() {
    return this.fb.group({
      ticketNumber: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
      seatNumber: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required]
    });
  }
  addTicket() {
    if (this.displayLimit && this.displaySeats) {
      if (this.ticketsForBooking().length < this.ticketForm.value.ticketsLimit) {
        this.ticketsForBooking().push(this.newTicket());
      } else {
        console.log('peste limita');
      }
    } else if (this.displaySeats && !this.displayLimit) {
      this.ticketsForBooking().push(this.newTicket());
    } else {
      console.log('nu se paote');
    }
  }
  removeTicket() {
    if (this.ticketsForBooking().length < 1) {
      return;
    }
    this.ticketsForBooking().removeAt(-1);
  }
  limitChecking(event) {
    console.log(event);
    if (event.checked) {
      this.displayLimit = true;
      // if(this.ticketsForBooking().length > this.ticketForm.value.ticketsLimit){
      //     this.removeTicket();
      // }
    } else {
      this.displayLimit = false;
      // this.ticketForm.get('ticketsLimit').disable();
      this.ticketForm.get('ticketsLimit').patchValue(0);
    }
  }
  seatChecking(event) {
    console.log(event);
    if (event.checked) {
      this.displaySeats = true;
    } else {
      this.displaySeats = false;
      // this.ticketForm.get('ticketsLimit').disable();
      this.ticketForm.get('ticketsLimit').patchValue(null);
    }
  }
  close() {
    this.dialogRef.close();
  }
  confirm() {
    this.ticketForm.markAllAsTouched();
    if (this.ticketForm.valid) {
      if (this.isEditTicketMode) {
        this.updateTicket();
        this.dialogRef.close();
      } else {
        this.createTicket();
        this.dialogRef.close();
      }
    } else {
      console.log('formular invalid', this.ticketForm.value);
      console.log('formular invalid 2', this.ticketForm);
    }
  }
  createTicket() {
    if (this.resourceService.resourceId$.getValue()) {
      this.ticketsBookingService.addTicketToCreateArrayEdit(this.ticketForm.value);
      console.log('CREATE NEW TICKET', this.ticketsBookingService.createArray$.getValue());
      this.ticketsBookingService.refreshCreateArray$.next(true);
    } else {
      this.ticketsBookingService.addTicketToList(this.ticketForm.value);
    }
  }
  updateTicket() {
    this.ticketList = [];
    //check if you are on edit resource
    if (this.resourceService.resourceId$.getValue()) {
      console.log('lista', this.ticketsBookingService.ticketsList$.getValue());
      //we get the initial array
      const initList = this.ticketsBookingService.ticketsList$.getValue();
      //find this ticket in the initial array
      const indexInInitList = initList.findIndex(ticket => ticket.id === this.ticketForm.value.id);
      //we get the createArray to be able to check for the ticket if it was added now
      const createList = this.ticketsBookingService.createArray$.getValue();
      // find this ticket in the current create list
      const indexInCreateList = createList.findIndex(ticket => ticket.id === this.ticketForm.value.id);
      //we get the updateArray to be able to check for this ticket, in case it was a ticket from backend updated now
      const updateList = this.ticketsBookingService.updateArray$.getValue();
      // find this ticket in the current create list
      const indexInUpdateList = updateList.findIndex(ticket => ticket.id === this.ticketForm.value.id);
      if (indexInInitList !== -1) {
        //if the ticket was found in the initial list, it is moved to updateArray
        console.log('case 1', this.ticketsBookingService.ticketsList$.getValue());
        this.ticketsBookingService.addTicketToUpdateArray(this.ticketForm.value);
        const filteredInitList = initList.filter(ticket => ticket.id !== this.ticketForm.value.id);
        console.log('filter 1', filteredInitList);
        this.ticketsBookingService.ticketsList$.next(filteredInitList);
        console.log('case 1 after', this.ticketsBookingService.ticketsList$.getValue());
        this.ticketsBookingService.refreshTicketList$.next(true);
        this.ticketsBookingService.refreshUpdateArray$.next(true);
      } else if (indexInCreateList !== -1) {
        //if the ticket was found in the create list, it is updated here
        createList[indexInCreateList] = this.ticketForm.value;
        this.ticketsBookingService.createArray$.next(createList);
      } else if (indexInUpdateList !== -1) {
        //if the ticket was found in the update list, it is updated here
        updateList[indexInUpdateList] = this.ticketForm.value;
        this.ticketsBookingService.updateArray$.next(updateList);
      } else {
        console.log('ticket not found');
      }
    } else {
      //CREATE RESOURCE
      // Get ticket List
      const ticketList = this.ticketsBookingService.ticketsList$.getValue();
      // find this ticket in the current create list
      const indexInList = ticketList.findIndex(ticket => ticket.id === this.ticketForm.value.id);
      // Check if the room was found and update
      if (indexInList !== -1) {
        ticketList[indexInList] = this.ticketForm.value;
        this.ticketsBookingService.ticketsList$.next(ticketList);
      } else {
        console.log('ticket not found');
      }
    }
  }
  depositCheck(event) {
    if (!event.checked) {
      this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage').patchValue(0);
    }
  }
  advancePaymentCheck(event) {
    if (!event.checked) {
      this.ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage').patchValue(0);
    }
  }
  checkDepositType(type) {
    if (this.ticketForm.get('bookingPolicies').get('depositRequired').value) {
      if (type === 'percentage') {
        if (this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage').value > 0) {
          this.ticketForm.get('bookingPolicies').get('depositRequiredAmount').patchValue(0);
          this.ticketForm.get('bookingPolicies').get('depositRequiredAmount').disable();
        } else if (this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage').value === 0 || !this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage').value) {
          this.ticketForm.get('bookingPolicies').get('depositRequiredAmount').enable();
        }
      } else if (type === 'amount') {
        if (this.ticketForm.get('bookingPolicies').get('depositRequiredAmount').value > 0) {
          this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage').patchValue(0);
          this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage').disable();
        } else if (this.ticketForm.get('bookingPolicies').get('depositRequiredAmount').value === 0 || !this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage').value) {
          this.ticketForm.get('bookingPolicies').get('depositRequiredPercentage').enable();
        }
      }
    }
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormBuilder
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_2__.TicketsBookingService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__.MAT_DIALOG_DATA]
    }]
  }];
};
AddEditTicketComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
  selector: 'app-add-edit-ticket',
  template: _add_edit_ticket_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_add_edit_ticket_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AddEditTicketComponent);


/***/ }),

/***/ 65214:
/*!**********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/delete-ticket/delete-ticket.component.ts ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteTicketComponent": () => (/* binding */ DeleteTicketComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delete_ticket_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delete-ticket.component.html?ngResource */ 31537);
/* harmony import */ var _delete_ticket_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delete-ticket.component.scss?ngResource */ 14056);
/* harmony import */ var _delete_ticket_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_delete_ticket_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../_services/resources.service */ 39266);







let DeleteTicketComponent = class DeleteTicketComponent {
  constructor(ticketService, resourceService, dialogRef, ticketData) {
    this.ticketService = ticketService;
    this.resourceService = resourceService;
    this.dialogRef = dialogRef;
    this.ticketData = ticketData;
  }
  ngOnInit() {
    this.currentTicket = this.ticketData.ticket;
  }
  close() {
    this.dialogRef.close();
  }
  //de tratat cazul in care face update la ceva existent si apoi sterge
  deleteTicket() {
    //chef if you are on EDIT RESOURCE
    if (this.resourceService.resourceId$.getValue()) {
      //we get the initial ticket list from backend (this might be shorter if an item was deleted or updated)
      const initList = this.ticketService.ticketsList$.getValue();
      //find this ticket in the initial list by id
      const filteredOriginalTickets = initList.filter(ticket => ticket.id !== this.ticketData.ticket.id);
      //we get the createArray to be able to look for the ticket if it was added recently
      const createList = this.ticketService.createArray$.getValue();
      // find this ticket in the current create list
      const filteredCreateTickets = createList.filter(ticket => ticket.id !== this.ticketData.ticket.id);
      //we get the updateArray to be able to look for the ticket if it was updated recently
      const updateArray = this.ticketService.updateArray$.getValue();
      // find this ticket in the current update list
      const filteredUpdateTickets = updateArray.filter(ticket => ticket.id !== this.ticketData.ticket.id);
      if (filteredOriginalTickets.length !== initList.length) {
        /**to do ---- de trimis doar id ul*/
        //if you want to detele a ticket from the initial array, it will be moved to the delete array
        this.ticketService.addTicketToDeleteArray(this.ticketData.ticket);
        console.log('delete first array', this.ticketService.deleteArray$.getValue());
        this.ticketService.ticketsList$.next(filteredOriginalTickets);
        this.ticketService.refreshTicketList$.next(true);
      } else if (filteredCreateTickets.length !== createList.length) {
        //if you want to delete a ticket that was created now, you delete it from the create array
        this.ticketService.createArray$.next(filteredCreateTickets);
        console.log('sterg un bilet creat', filteredCreateTickets);
        this.ticketService.refreshCreateArray$.next(true);
      } else if (filteredUpdateTickets.length !== updateArray.length) {
        console.log('vrei sa stergi un ticket care a fost editat');
        //if you want to delete a ticket that was updated this session, it will be moved to the delete array
        this.ticketService.addTicketToDeleteArray(this.ticketData.ticket);
        this.ticketService.updateArray$.next(filteredUpdateTickets);
        console.log('array-ul de delete', this.ticketService.deleteArray$.getValue());
        console.log('array-ul de update', this.ticketService.updateArray$.getValue());
        this.ticketService.refreshUpdateArray$.next(true);
      } else {
        console.log(`nu a fost gasit`);
      }
      this.dialogRef.close();
    } else {
      //on CREATE RESOURCE
      // Get ticket List
      const ticketList = this.ticketService.ticketsList$.getValue();
      // Exclude the ticket by id
      const filteredTickets = ticketList.filter(ticket => ticket.id !== this.ticketData.ticket.id);
      // Check if a room was deleted and update the array
      if (filteredTickets.length !== ticketList.length) {
        this.ticketService.ticketsList$.next(filteredTickets);
      } else {
        console.log(`Room not found`);
      }
      console.log('DELETE');
      this.dialogRef.close();
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_2__.TicketsBookingService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MatDialogRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MAT_DIALOG_DATA]
    }]
  }];
};
DeleteTicketComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-delete-ticket',
  template: _delete_ticket_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_delete_ticket_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], DeleteTicketComponent);


/***/ }),

/***/ 75285:
/*!*********************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/ticket-booking.component.ts ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TicketBookingComponent": () => (/* binding */ TicketBookingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _ticket_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticket-booking.component.html?ngResource */ 43285);
/* harmony import */ var _ticket_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ticket-booking.component.scss?ngResource */ 55411);
/* harmony import */ var _ticket_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ticket_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _add_edit_ticket_add_edit_ticket_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-edit-ticket/add-edit-ticket.component */ 88692);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _delete_ticket_delete_ticket_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./delete-ticket/delete-ticket.component */ 65214);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../_services/resources.service */ 39266);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../_services/menu.service */ 87491);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../_services/cultural-booking.service */ 16203);























let TicketBookingComponent = class TicketBookingComponent {
  constructor(dialog, stepperService, ticketBookingService, resourceService, userService, route, router, roomService, ticketService, timepickerService, productService, timeslotService, toastService, createResourceService, systemSettings, menuService, culturalBookingService) {
    this.dialog = dialog;
    this.stepperService = stepperService;
    this.ticketBookingService = ticketBookingService;
    this.resourceService = resourceService;
    this.userService = userService;
    this.route = route;
    this.router = router;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    this.culturalBookingService = culturalBookingService;
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_17__.BehaviorSubject(false);
    this.unsubscribe = [];
    this.$fileObservables = [];
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_18__.Subject();
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    // Store Resource ID
    this.resourceId = this.resourceService.resourceId$.getValue();
    console.log('INIT LIST TICKETS, res id: ', this.resourceService.resourceId$.getValue());
    this.ticketBookingService.refreshTicketList$.subscribe(resp => {
      console.log('REFRESH TICKET LIST', this.ticketBookingService.ticketsList$.getValue());
      this.ticketList = this.ticketBookingService.ticketsList$.getValue();
    });
    this.ticketBookingService.refreshCreateArray$.subscribe(resp => {
      console.log('REFRESH CREATE LIST', this.ticketBookingService.createArray$.getValue());
      this.createList = this.ticketBookingService.createArray$.getValue();
    });
    this.ticketBookingService.refreshTicketUpdateData().subscribe(resp => {
      console.log('REFRESH UPDATE LIST', this.ticketBookingService.updateArray$.getValue());
      this.updateList = this.ticketBookingService.updateArray$.getValue();
    });
    if (this.resourceId) {
      // If you are on EDIT RESOURCE get the list of tickets from the req only once
      this.ticketBookingService.getTicketList(this.resourceService.resourceId$.getValue()).subscribe({
        next: resp => {
          console.log('GET TICKET LIST SUBSCRIPTION', resp);
          // console.log('COMPARED', JSON.stringify(resp) === JSON.stringify(this.ticketBookingService.ticketsList$.getValue())); //true
          if (this.ticketBookingService.ticketsList$.getValue().length === 0) {
            resp.forEach(ticket => {
              const findTicket = this.ticketBookingService.updateArray$.getValue().find(t => t.id === ticket.id);
              // console.log('FIND TICKET', findTicket);
              if (!findTicket) {
                this.ticketBookingService.addTicketToList(ticket);
              }
            });
            console.log('lista de la be pe edit', this.ticketBookingService.ticketsList$.getValue());
            this.ticketList = this.ticketBookingService.ticketsList$.getValue();
          }
        }
      });
    } else {
      //ticket list to work with on CREATE RESOURCE
      this.ticketBookingService.ticketListData().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.takeUntil)(this.ngUnsubscribe)).subscribe({
        next: ticketList => {
          this.ticketList = ticketList;
          console.log('lista de create', ticketList);
        }
      });
    }
    if (this.resourceService.resourceId$.getValue()) {
      this.resourceId = this.resourceService.resourceId$.getValue();
    }
    this.currentBookingType = this.resourceService.resourceTemplateData$.getValue().bookingType;
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
  }

  openAddModal() {
    this.dialog.open(_add_edit_ticket_add_edit_ticket_component__WEBPACK_IMPORTED_MODULE_3__.AddEditTicketComponent, {
      width: '1500px',
      height: '750px',
      data: undefined
    });
  }
  openEditModal(ticket) {
    this.dialog.open(_add_edit_ticket_add_edit_ticket_component__WEBPACK_IMPORTED_MODULE_3__.AddEditTicketComponent, {
      width: '1500px',
      height: '750px',
      data: {
        ticket: ticket
      }
    });
  }
  openDeleteModal(ticket, index) {
    this.dialog.open(_delete_ticket_delete_ticket_component__WEBPACK_IMPORTED_MODULE_5__.DeleteTicketComponent, {
      width: '720px',
      height: '400px',
      data: {
        ticket: ticket,
        index: index
      }
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
    this.routeSub?.unsubscribe();
  }
  /** Go to next step*/
  nextStep() {
    this.stepperService.nextStep(true);
  }
  /** Go to previous step*/
  prevStep() {
    this.stepperService.prevStep();
  }
  //for save resource
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.culturalBookingService.culturalRoom$.next(null);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  saveResource() {
    this.isSubmitLoading = true;
    this.roomsArray = this.roomService.roomList$.getValue();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      this.updateResource(formObject, combineForms);
      //added for policies check on menu
      // if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
      //     if ((this.timepickerService.changePolicies$.getValue().nonRefundable ||
      //             this.timepickerService.changePolicies$.getValue().modifiable ||
      //             (this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation &&
      //                 this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0)) &&
      //         (this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) ) {
      //         this.updateResource(formObject, combineForms);
      //     } else {
      //         this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
      //         this.isSubmitLoading$.next(false);
      //     }
      //     //if not menu, everything works like before
      // } else {
      //     this.updateResource(formObject, combineForms);
      // }
    }
  }

  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.resourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.resourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.resourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          // cultural booking
          if (this.currentBookingType === 'culturalBooking' && this.culturalBookingService.culturalRoom$.getValue()) {
            const modifiedCulturalRoom = this.culturalBookingService.culturalRoom$.getValue();
            this.$fileObservables.push(this.culturalBookingService.updateCulturalRoom(modifiedCulturalRoom.id, modifiedCulturalRoom));
          }
          //menu-booking
          if (this.currentBookingType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.currentBookingType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_21__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__.MatDialog
  }, {
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_4__.TicketsBookingService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_6__.ResourcesService
  }, {
    type: _shared_services_userData_service__WEBPACK_IMPORTED_MODULE_7__.UserDataService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_23__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_23__.Router
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_8__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_4__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_9__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_10__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_11__.BookingTimeslotsService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_12__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_13__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_14__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_15__.MenuService
  }, {
    type: _services_cultural_booking_service__WEBPACK_IMPORTED_MODULE_16__.CulturalBookingService
  }];
};
TicketBookingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_24__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_25__.Component)({
  selector: 'app-ticket-booking',
  template: _ticket_booking_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_ticket_booking_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], TicketBookingComponent);


/***/ }),

/***/ 9021:
/*!**************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-title-list/stepper-title-list.component.ts ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StepperTitleListComponent": () => (/* binding */ StepperTitleListComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _stepper_title_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stepper-title-list.component.html?ngResource */ 83544);
/* harmony import */ var _stepper_title_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stepper-title-list.component.scss?ngResource */ 82228);
/* harmony import */ var _stepper_title_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_stepper_title_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_services/stepper.service */ 9845);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_services/resources.service */ 39266);
/* harmony import */ var _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/_services/resources.service */ 3145);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 68951);








let StepperTitleListComponent = class StepperTitleListComponent {
  constructor(stepperService, resourceService, domainService) {
    this.stepperService = stepperService;
    this.resourceService = resourceService;
    this.domainService = domainService;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subject();
  }
  ngOnInit() {
    this.resourceService.getBookingType().subscribe({
      next: type => {
        this.bookingType = type;
        console.log('BOOKING TYPE', type);
      }
    });
    this.stepperService.getStepperStage().subscribe({
      next: stage => {
        this.stage = stage;
        // console.log('sTEPPER title STAGE', this.stage)
      }
    });
    // Listen To Step Changes
    this.stepperService.getStep().subscribe({
      next: step => this.selectedStep = step
    });
    // Listen To Title Steps Changes
    this.stepperService.getStepsTitle().subscribe({
      next: step => {
        if (this.stage === 'Configure/Edit' && this.bookingType !== 'culturalBooking') {
          this.stepTitleList = step.filter(stepId => stepId.id !== 3);
          console.log('din stepper title', step);
        } else {
          this.stepTitleList = step;
        }
      }
    });
    // if(this.resourceService.resourceId$.getValue()){
    //     console.log('STEPPER ON EDIT', this.resourceService.resourceTemplateType$.getValue());
    //     this.getDomain(this.resourceService.resourceTemplateData$.getValue().domain);
    //     this.getCategory(this.resourceService.resourceTemplateData$.getValue().categoryId);
    //     this.getResourceType(this.resourceService.resourceTemplateData$.getValue().resourceTypeId);
    // }else{
    //
    // }
    this.resourceService.getTemplateType().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: template => {
        console.log('TEMPLATE STEPPER', template);
        this.getDomain(template?.domain);
        this.getCategory(template?.categoryId);
        this.getResourceType(template?.resourceTypeId);
      }
    });
  }
  getDomain(domainId) {
    this.domainService.getDomainById(domainId).subscribe({
      next: domain => {
        // console.log('dom', domain);
        this.domain = domain?.nameEn;
      }
    });
  }
  getCategory(categoryId) {
    this.domainService.getResourceCategoryById(categoryId).subscribe({
      next: categ => {
        this.category = categ?.nameEn;
      }
    });
  }
  getResourceType(resType) {
    this.domainService.getResourceTypeById(resType).subscribe({
      next: resType => {
        this.resourceType = resType?.nameEn;
      }
    });
  }
  goToStep(stepValue) {
    this.stepperService.stepperStage$.next('Add');
    this.stepperService.step$.next(stepValue);
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_2__.StepperService
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_4__.ResourcesService
  }];
};
StepperTitleListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
  selector: 'app-stepper-title-list',
  template: _stepper_title_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_stepper_title_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], StepperTitleListComponent);


/***/ }),

/***/ 71546:
/*!*********************************************************************************!*\
  !*** ./src/app/features/resources/pages/add-resource/add-resource.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddResourceComponent": () => (/* binding */ AddResourceComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_resource_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-resource.component.html?ngResource */ 49596);
/* harmony import */ var _add_resource_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-resource.component.scss?ngResource */ 97302);
/* harmony import */ var _add_resource_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_add_resource_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_services/resources.service */ 39266);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_services/stepper.service */ 9845);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_services/rental-booking.service */ 2933);
/* harmony import */ var _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../_services/tickets-booking.service */ 33224);
/* harmony import */ var _services_timepicker_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../_services/timepicker.service */ 23235);
/* harmony import */ var _services_product_list_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../_services/product-list.service */ 83590);
/* harmony import */ var _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../_services/booking-timeslots.service */ 2232);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var _services_menu_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../_services/menu.service */ 87491);
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! moment/moment */ 56908);
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_14__);




















let AddResourceComponent = class AddResourceComponent {
  constructor(resourceService, route, router, stepperService, roomService, ticketService, timepickerService, productService, timeslotService, userService, toastService, createResourceService, systemSettings, menuService) {
    this.resourceService = resourceService;
    this.route = route;
    this.router = router;
    this.stepperService = stepperService;
    this.roomService = roomService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.userService = userService;
    this.toastService = toastService;
    this.createResourceService = createResourceService;
    this.systemSettings = systemSettings;
    this.menuService = menuService;
    // Loader
    this.dataLoaded = false;
    this.form = this.resourceService.generalInformationForm$.getValue();
    /** Configure/Edit Stage  - START */
    this.formSections = [];
    /** Configure/Edit Stage  - END */
    this.templateForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({
      domain: new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required),
      categoryId: new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required),
      resourceTypeId: new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required)
    });
    this.$fileObservables = [];
    this.isSubmitLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_16__.BehaviorSubject(false);
    this.unsubscribe = [];
    const loadingSubscr = this.isSubmitLoading$.asObservable().subscribe(res => this.isSubmitLoading = res);
    this.unsubscribe.push(loadingSubscr);
  }
  ngOnInit() {
    this.timepickerService.setFreeEntry(false);
    this.checkIfProviderAccepted();
    this.getDomainId();
    this.providerData = this.createResourceService.providerData$.getValue();
    this.getTripsAndItinerariesIds();
    this.stepperService.getStep().subscribe({
      next: stepNumber => this.step = stepNumber
    });
    this.stepperService.getStepperStage().subscribe({
      next: stage => this.stepperStage = stage
    });
    this.resourceService.getResourceId().subscribe({
      next: id => this.resourceId = id
    });
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
    if (this.resourceService.resourceId$.getValue()) {
      this.currentResourceId = this.resourceService.resourceId$.getValue();
    }
    /*this.routeSub = this.router.events.subscribe((event) => {
        if (event instanceof NavigationStart) {
            // save your data
            console.log('AM PLECAT PA PA');
            this.clearFields();
        }
    });*/
    this.route.params.subscribe(params => {
      // Resource ID - I use this to check if you are on edit page
      this.resourceService.resourceId$.next(params.id);
      this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
      // this.clearFields();
      // Check if you are on edit page
      if (this.resourceId) {
        // Initiate stepper to Configure/Edit Mode
        this.stepperService.stepperStage$.next('Configure/Edit');
        this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
        console.log('STEP', this.stepperService.step$.getValue());
        console.log('res template data', this.resourceService.resourceTemplateData$.getValue());
        // Get the resource by ID
        this.resourceService.getResourceById(this.resourceId).subscribe({
          next: resourceData => {
            console.log('RESURSA PE EDIT DE LA BE', resourceData);
            this.resourceService.bookingType$.next(resourceData?.bookingType);
            console.log('BOOKING TYPE ADD', this.resourceService.bookingType$.getValue());
            this.resourceService.resourceTemplateData$.next({
              ...resourceData,
              bookingPolicies: resourceData?.bookingPolicies
            });
            console.log('RES IN TEMPLATE DATA', this.resourceService.resourceTemplateData$.getValue());
            this.resourceService.bookingPolicies$.next(resourceData?.bookingPolicies);
            this.resourceName = resourceData.title;
            console.log('menu id first', resourceData.menuId);
            if (resourceData) {
              // console.log('AM DATELE DE LA RESURSA');
              // Create Manual Inputs
              this.form.addControl('title', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.title, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required));
              this.form.addControl('description', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.description, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required));
              this.form.addControl('address', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.address, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required));
              this.form.addControl('country', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.country, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required));
              this.form.addControl('city', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.city, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required));
              this.form.addControl('sharedExperience', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.sharedExperience));
              this.form.addControl('forItinerary', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.forItinerary));
              this.form.addControl('startDate', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(moment_moment__WEBPACK_IMPORTED_MODULE_14__(resourceData.startDate).format('YYYY-MM-DDTHH:mm'), _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required));
              this.form.addControl('endDate', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(moment_moment__WEBPACK_IMPORTED_MODULE_14__(resourceData.endDate).format('YYYY-MM-DDTHH:mm'), _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required));
              this.form.addControl('latitude', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.geographicalCoordinates?.latitude));
              this.form.addControl('longitude', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.geographicalCoordinates?.longitude));
              // this.form.addControl('bookingPolicies', new FormControl({
              //     ...resourceData?.bookingPolicies,
              //     depositRequired: false
              // }));
            }

            this.resourceService.generalInformationForm$.next(this.form);
            this.templateForm.controls.categoryId.setValue(resourceData.categoryId);
            this.templateForm.controls.domain.setValue(resourceData.domain);
            this.templateForm.controls.resourceTypeId.setValue(resourceData.resourceTypeId);
            // req de get resource template
            this.resourceService.addTemplate(this.templateForm.value);
            this.resourceService.resourceData.next(resourceData);
            // console.log('resource data start', resourceData)
            this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
            this.resourceService.filesForm$.getValue().addControl('thumbnail', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(resourceData.featuredImage));
            // this.resourceService.filesForm$.getValue().addControl('images', new FormControl(resourceData.images));
            // this.resourceService.filesForm$.getValue().addControl('videos', new FormControl(resourceData.videos));
            // console.log('files form start', this.resourceService.filesForm$.getValue().controls);
            // Set Resource Type
            this.resourceType = resourceData?.bookingType;
            if (resourceData?.bookingType === 'rentalBooking') {
              this.resourceService.accommodationPolicy$.next(resourceData?.policy?.accommodationPolicy);
              // console.log('am policy', this.resourceService.accommodationPolicy$.getValue());
              // console.log('policy de la req', resourceData.policy);
            }

            this.timepickerService.timetableList$.next(resourceData.timetable);
            this.resourceService.getListResourceTemplateFiltered(0, -1, '', '', this.templateForm.value).subscribe({
              next: templateList => {
                // console.log('templateList', templateList.content[0]);
                // Start from the first tab
                // this.stepperService.step$.next(0);
                // Change Stepper Stage
                this.stepperService.stepperStage$.next('Configure/Edit');
                // Store template data in service
                // this.resourceService.resourceTemplateData$.next(templateList.content[0])
                this.currentTemplateId = templateList.content[0].id;
                this.resourceService.getAttributesFromTemplate(templateList.content[0].id).subscribe(data => {
                  // this.resourceService.attributesFromResourceTemplate$.next(data);
                  // this.formSections = data;
                  this.attributesFromTemplate = data;
                  this.searchAttributes(resourceData.attributes, data);
                  // console.log('FORM SECTIONS', this.formSections);
                  // this.resourceService.resourceTemplateData$.next(resourceData);
                  console.log('formSections', this.formSections);
                  // nu cred ca tre sa stea aici
                  this.resourceService.attributesFromResourceTemplate$.next(this.formSections);
                  this.createDynamicForm(this.formSections);
                  // Data Loaded
                  this.dataLoaded = true;
                });
              }
            });
          },
          error: error => console.log(error)
        });
      } else {
        this.stepperService.stepperStage$.next('Add');
        this.stepperService.step$.next(0);
        this.resourceService.attributesFromResourceTemplate$.next(undefined);
        // Get Selected Templated
        this.resourceService.resourceTemplateType$.subscribe({
          next: templateType => {
            console.log('resoursa noua', templateType);
            // Check if we have a Template Type selected
            if (templateType !== undefined) {
              this.resourceService.getListResourceTemplateFiltered(0, -1, '', '', templateType).subscribe({
                next: data => {
                  console.log('template resoursa noua', data);
                  console.log('SUNT PE TEMPLATE CHIAR DACA S A SCHIMBAT');
                  this.resourceType = data.content[0].bookingType;
                  this.resourceService.bookingType$.next(data.content[0]?.bookingType);
                  // Start from the first tab
                  this.stepperService.step$.next(0);
                  // Change Stepper Stage
                  this.stepperService.stepperStage$.next('Configure/Edit');
                  // Store template data in service
                  this.resourceService.resourceTemplateData$.next(data.content[0]);
                  // Get Template Attributes
                  this.resourceService.getAttributesFromTemplate(data.content[0].id).subscribe(data => {
                    console.log('GET ATTR FROM TEMPLATE', data);
                    // Store attributes data in service
                    this.resourceService.attributesFromResourceTemplate$.next(data);
                    // Data Loaded
                    this.dataLoaded = true;
                  });
                },
                error: error => console.log(error)
              });
            }
          },
          error: error => console.log(error)
        });
      }
    });
  }
  clearFields() {
    // this.stepperService.step$.next(undefined);
    this.stepperService.stepperStage$.next(undefined);
    this.resourceService.resourceId$.next(undefined);
    this.resourceService.resourceTemplateData$.next(undefined);
    this.resourceService.resourceTemplateType$.next(undefined);
    this.resourceService.attributesFromResourceTemplate$.next(undefined);
    this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({}));
    this.resourceService.facilitiesByCategory$.next([]);
    this.resourceService.resourceData.next({
      featuredImage: undefined,
      images: [],
      videos: []
    });
    this.resourceService.accommodationPolicy$.next(undefined);
    this.roomService.refreshRoomList$.next(false);
    this.roomService.roomList$.next([]);
    this.roomService.imagesArray$.next([]);
    this.resourceService.travelId$.next(undefined);
    this.resourceService.relatedResources$.next([]);
    this.resourceService.bookingType$.next(undefined);
    this.ticketService.updateArray$.next([]);
    this.ticketService.refreshUpdateArray$.next(false);
    this.ticketService.createArray$.next([]);
    this.ticketService.refreshCreateArray$.next(false);
    this.ticketService.ticketsList$.next([]);
    this.ticketService.refreshTicketList$.next(false);
    this.ticketService.deleteArray$.next([]);
    this.timepickerService.timepickerList$.next([]);
    this.timepickerService.timetableList$.next([]);
    this.timepickerService.timepickerId$.next(undefined);
    this.timepickerService.timePicker$.next(undefined);
    this.timepickerService.changePolicies$.next(undefined);
    this.timepickerService.bookingPolicies$.next(undefined);
    this.resourceService.externalUrl$.next(undefined);
    this.productService.productsList$.next([]);
    this.productService.refreshProductList$.next(false);
    this.productService.deleteProdList$.next([]);
    this.timeslotService.serviceList$.next([]);
    this.timeslotService.refreshServiceList$.next(false);
    this.createResourceService.providerData$.next(undefined);
    this.resourceService.setupListener$.next(undefined);
    this.resourceService.generalInfoListener$.next(undefined);
    this.resourceService.policyRentalListener$.next(undefined);
    this.resourceService.policyMenuListener$.next(undefined);
    this.resourceService.policyListener$.next(undefined);
    this.resourceService.settingsTripsItineraries$.next([]);
    this.resourceService.tripsItinerariesObject$.next({});
    this.menuService.refreshMenuList$.next(false);
    this.menuService.menuList$.next([]);
    this.menuService.menuId$.next(undefined);
  }
  getDomainId() {
    this.resourceService.getListOfDomains().subscribe({
      next: domainsList => {
        domainsList.forEach(domain => {
          if (domain.key === 'travel') {
            this.resourceService.travelId$.next(domain.id);
          } else if (domain.key === 'healthcare') {
            this.resourceService.medicalId$.next(domain.id);
          } else if (domain.key === 'education') {
            this.resourceService.educationId$.next(domain.id);
          }
        });
      }
    });
  }
  /** Reinitialize Add Resource*/
  exitResource() {
    // Reset Stepper
    this.stepperService.step$.next(0);
    this.clearFields();
    // Change stepper stage to Add
    this.stepperService.stepperStage$.next('Add');
  }
  getTripsAndItinerariesIds() {
    this.systemSettings.getSystemSetting().subscribe({
      next: settings => {
        // console.log('sett',settings);
        const tripsIds = {
          journeyThemeCategoryId: settings.journeyThemeCategoryId,
          typeOfDestinationCategoryId: settings.typeOfDestinationCategoryId,
          typeOfJourneyCategoryId: settings.typeOfJourneyCategoryId
        };
        this.resourceService.tripsItinerariesObject$.next(tripsIds);
        this.resourceService.addTripsId(settings.journeyThemeCategoryId);
        this.resourceService.addTripsId(settings.typeOfDestinationCategoryId);
        this.resourceService.addTripsId(settings.typeOfJourneyCategoryId);
      }
    });
  }
  searchAttributes(resourceAttributes, templateAttributes) {
    this.formSections = [];
    console.log('res', resourceAttributes);
    console.log('temp', templateAttributes);
    templateAttributes.forEach(templateTab => {
      console.log('test 1', templateTab);
      resourceAttributes.forEach(resourceTab => {
        console.log('intram?');
        //verify if you are in the same tab
        if (templateTab.tabName === resourceTab.tabName) {
          const array = [];
          templateTab.tabAttributes.forEach(templateAttribute => {
            if (resourceTab.tabAttributes?.length > 0) {
              resourceTab.tabAttributes.forEach(resourceAttribute => {
                //see if the attributes have the same id
                if (templateAttribute.id === resourceAttribute.attributeId) {
                  //if they have the same id and the attribute is not already in the array
                  const attributeIndex = array.findIndex(attr => attr.id === templateAttribute.id);
                  if (attributeIndex === -1) {
                    //push the attribute from template adding the value from resource
                    array.push({
                      ...templateAttribute,
                      attributeValue: resourceAttribute.attributeValue
                    });
                  }
                } else {
                  //if the attributes dont have the same id, see if you can find it in the resource
                  const find = resourceTab.tabAttributes.find(attr => attr.attributeId === templateAttribute.id);
                  const attributeIndex = array.findIndex(attr => attr.id === templateAttribute.id);
                  //if the attribute isnt on the resource and it isnt on the array
                  if (attributeIndex === -1 && !find) {
                    //push the attribute with no value
                    // console.log('template attr not found', templateAttribute)
                    array.push({
                      ...templateAttribute,
                      attributeValue: ''
                    });
                  }
                }
              });
            } else {
              console.log('suntem aici, n-avem atr');
              const attributeIndex = array.findIndex(attr => attr.id === templateAttribute.id);
              if (attributeIndex === -1) {
                //push the attribute with no value
                // console.log('template attr not found', templateAttribute)
                array.push({
                  ...templateAttribute,
                  attributeValue: ''
                });
              }
            }
          });
          this.formSections.push({
            tabName: templateTab.tabName,
            tabAttributes: array
          });
        }
      });
      //after combining the resource attributes with the template attributes, see if you have all the template tabs
      const findTab = this.formSections.find(section => templateTab.tabName === section.tabName);
      // console.log('find tab',findTab);
      //if not, add the tab with the name of the missing one and an empty array
      if (!findTab) {
        console.log('find tab?', templateTab);
        this.formSections.push({
          tabName: templateTab.tabName,
          tabAttributes: templateTab.tabAttributes
        });
      }
    });
  }
  /** Submit Form*/
  onSubmit() {
    // Mark all inputs as touched
    // this.form.markAllAsTouched()
    // Check if the form is INVALID
    // if (this.form.invalid) {
    //     return
    // }
    // // Empty array
    // const formData = [];
    //
    // // Sort form inputs by tabName
    // for (const control in this.form.controls) {
    //     this.formSections.forEach((section: any) => {
    //         section.tabAttributes.forEach(attribute => {
    //             if (attribute.name === control) {
    //                 formData.push({
    //                     tabName: section.tabName,
    //                     attributeName: control,
    //                     attributeId: attribute.id,
    //                     attributeValue: this.form.get(control).value,
    //                     attributeIconPath: attribute.icon.filePath
    //                 });
    //             }
    //         });
    //     });
    // }
    //
    // const attributes = formData.reduce((acc, item) => {
    //     const index = acc.findIndex(x => x.tabName === item.tabName);
    //     if (index !== -1) {
    //         acc[index].tabAttributes.push({
    //             attributeId: item.attributeId,
    //             attributeValue: item.attributeValue
    //         });
    //     } else {
    //         acc.push({
    //             tabName: item.tabName, tabAttributes: [{
    //                 attributeId: item.attributeId,
    //                 attributeValue: item.attributeValue
    //             }]
    //         });
    //     }
    //     return acc;
    // }, []);
    //
    // // Formatted Form Object
    // const formObject = {
    //     title: this.form.value.title,
    //     description: this.form.value.description,
    //     slug: this.resourceId ? '' : this.form.value.title,
    //     attributes: attributes
    // }
    //
    // // Check if you are on edit or create
    // if (this.resourceId) {
    //     this.resourceService.updateResource(this.resourceId, formObject).subscribe({
    //         next: (data) => console.log(data)
    //     })
    // } else {
    //     this.resourceService.addResource(formObject).subscribe({
    //         next: (data: any) => {
    //             console.log(data)
    //
    //             // TODO Delete Later - l-am facut pentru a putea ajunge pe pagina de edit
    //             this.resourceId = data.reason
    //
    //
    //             // TODO Uncomment when you are done here
    //             // Redirect to List Page
    //             // this.router.navigate(['/private/provider/resources/' + this.resourceId])
    //         },
    //         error: (error) => console.log(error)
    //     })
    // }
  }
  checkIfProviderAccepted() {
    this.userService.getCurrentUser().subscribe(currentUser => {
      if (currentUser.roles.includes('ROLE_PROVIDER') && currentUser.approvedStatus === null) {
        this.isProviderAccepted = false;
        this.router.navigate(['/private/provider/resources/my-list']);
        // this.toastService.showToast("Error", "Nu aveti permisiunea necesară pentru a adăuga resurse. Luați legătura cu administratorul.", 'error')
      } else {
        this.isProviderAccepted = false;
      }
    });
  }
  saveResource() {
    this.roomsArray = this.roomService.roomList$.getValue();
    this.seeWhere();
    const combineForms = new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({
      ...this.resourceService.generalInformationForm$.getValue().controls,
      ...this.resourceService.facilitiesForm$.getValue().controls,
      ...this.resourceService.filesForm$.getValue().controls
    });
    console.log('FILES FORM', this.resourceService.filesForm$.getValue());
    console.log('Form-uri combinate', combineForms.value);
    console.log('Atribute', this.resourceService.attributesFromResourceTemplate$.getValue());
    console.log('Form-uri combinate 2', this.resourceService.resourceTemplateData$.getValue());
    console.log('Form-uri combinate 3', this.resourceService.resourceTemplateType$.getValue());
    // Empty array
    const formData = [];
    // Sort form inputs by tabName
    for (const control in combineForms.controls) {
      this.resourceService.attributesFromResourceTemplate$.getValue().forEach(section => {
        section.tabAttributes.forEach(attribute => {
          if (attribute.name === control) {
            if (attribute.valueType === 'multiple-select') {
              console.log('ATTR SENT', attribute, combineForms.get(control).value);
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: Array.isArray(combineForms.get(control).value) ? combineForms.get(control).value.join() : combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            } else {
              formData.push({
                tabName: section.tabName,
                attributeName: control,
                attributeId: attribute.id,
                attributeValue: combineForms.get(control).value,
                attributeIconPath: attribute.icon.filePath
              });
            }
          }
        });
      });
    }
    console.log('FORM DATA', formData);
    const attributes = formData.reduce((acc, item) => {
      const index = acc.findIndex(x => x.tabName === item.tabName);
      if (index !== -1) {
        acc[index].tabAttributes.push({
          attributeId: item.attributeId,
          attributeValue: item.attributeValue
        });
      } else {
        acc.push({
          tabName: item.tabName,
          tabAttributes: [{
            attributeId: item.attributeId,
            attributeValue: item.attributeValue
          }]
        });
      }
      return acc;
    }, []);
    console.log('sa ne uitam aici', this.resourceService.resourceTemplateData$.getValue());
    // Formatted Form Object
    const formObject = {
      title: combineForms.value.title,
      description: combineForms.value.description,
      address: combineForms.value.address,
      country: combineForms.value.country,
      city: combineForms.value.city,
      slug: this.resourceService.resourceId$.getValue() ? '' : combineForms.value.title,
      featuredImage: combineForms.value.thumbnail,
      images: this.resourceService.resourceData.getValue().images,
      videos: this.resourceService.resourceData.getValue().videos !== null ? this.resourceService.resourceData.getValue().videos : [],
      geographicalCoordinates: {
        latitude: combineForms.value.latitude,
        longitude: combineForms.value.longitude
      },
      attributes: attributes,
      categoryId: this.resourceService.resourceTemplateType$.getValue().categoryId,
      domain: this.resourceService.resourceTemplateType$.getValue().domain,
      resourceTypeId: this.resourceService.resourceTemplateType$.getValue().resourceTypeId,
      bookingType: this.resourceService.resourceTemplateData$.getValue().bookingType,
      timetable: this.timepickerService.timetableList$.getValue().length > 0 ? this.timepickerService.timetableList$.getValue() : !this.resourceService.resourceTemplateData$.getValue().timetable ? [] : this.resourceService.resourceTemplateData$.getValue().timetable,
      policy: this.resourceService.accommodationPolicy$.getValue() ? Object.keys(this.resourceService.accommodationPolicy$.getValue()).length === 0 ? this.resourceService.resourceTemplateData$.getValue().policy : {
        accommodationPolicy: this.resourceService.accommodationPolicy$.getValue()
      } : this.resourceService.resourceTemplateData$.getValue().policy,
      externalUrl: this.resourceService.externalUrl$.getValue(),
      sharedExperience: combineForms.value.sharedExperience,
      forItinerary: combineForms.value.forItinerary
    };
    console.log('FORM OBJ', formObject);
    if (this.resourceService.resourceId$.getValue()) {
      //added for policies check on menu
      if (this.resourceType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
        if ((this.timepickerService.changePolicies$.getValue().nonRefundable || this.timepickerService.changePolicies$.getValue().modifiable || this.timepickerService.changePolicies$.getValue().freeCancellation.freeCancellation && this.timepickerService.changePolicies$.getValue().freeCancellation.deadlineDays > 0) && this.timepickerService.bookingPolicies$.getValue().depositRequired && this.timepickerService.bookingPolicies$.getValue().depositRequiredAmount > 0) {
          this.updateResource(formObject, combineForms);
        } else {
          this.toastService.showToast('Eroare', 'Nu ai completat politicile de modificare și rezervare!', 'error');
          this.isSubmitLoading$.next(false);
        }
        //if not menu, everything works like before
      } else {
        this.updateResource(formObject, combineForms);
      }
    }
  }
  updateResource(formObject, combineForms) {
    this.resourceService.updateResource(this.resourceService.resourceId$.getValue(), formObject).subscribe({
      next: data => {
        console.log(data);
        // console.log('IMAGINE', combineForms.value.thumbnail);
        // console.log('IMAGINE', this.resourceService.resourceData.getValue().featuredImage);
        // console.log('cond', combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage)
        if (combineForms.value.thumbnail && combineForms.value.thumbnail !== this.resourceService.resourceData.getValue().featuredImage) {
          const thumbnailData = new FormData();
          thumbnailData.append('file', combineForms.value.thumbnail);
          this.$fileObservables.push(this.resourceService.uploadResourceImage(this.resourceService.resourceId$.getValue(), thumbnailData));
        }
        if (combineForms.value.images?.length > 0) {
          const newImages = combineForms.value.images.filter(x => this.resourceService.resourceData.getValue().images.indexOf(x) === -1);
          console.log('Diferenta arrays', newImages);
          if (newImages.length > 0) {
            const imagesData = new FormData();
            newImages.forEach(galleryFile => {
              imagesData.append('files', galleryFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'image', imagesData));
          }
        }
        if (combineForms.value.videos?.length > 0) {
          const newVideos = combineForms.value.videos.filter(x => this.resourceService.resourceData.getValue().videos.indexOf(x) === -1);
          console.log('Diferenta arrays', newVideos);
          if (newVideos.length > 0) {
            const videosData = new FormData();
            newVideos.forEach(videoFile => {
              videosData.append('files', videoFile);
            });
            this.$fileObservables.push(this.resourceService.uploadDocAttachements(this.resourceService.resourceId$.getValue(), 'video', videosData));
          }
        }
        if (data.success) {
          // console.log('TICKETs');
          // console.log('CREATE ARRAY', this.ticketService.createArray$.getValue());
          // console.log('current res id', this.currentResourceId);
          // this.timepickerService.timetableList$.next([]);
          //ticket-booking
          // this.ticketService.ticketsList$.next([]);
          if (this.ticketService.createArray$.getValue().length > 0) {
            // Create new tickets
            this.$fileObservables.push(this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()));
            // this.ticketService.createTickets(this.currentResourceId, this.ticketService.createArray$.getValue()).subscribe({
            //     next: (tickets: { success: boolean, reason: string }) => {
            //         if (tickets.success) {
            //             // console.log('SE ADAUGA TICKETELE PUSE PE UPDATE', tickets);
            //             this.ticketService.createArray$.next([]);
            //             console.log(this.ticketService.createArray$.getValue());
            //         }
            //     }
            // })
          } else {
            console.log('n-am in create');
          }
          if (this.ticketService.updateArray$.getValue().length > 0) {
            console.log('am in update');
            //Update tickets
            const updateArray = this.ticketService.updateArray$.getValue();
            updateArray.forEach(ticket => {
              this.$fileObservables.push(this.ticketService.updateTicket(ticket.id, ticket));
              // this.ticketService.updateTicket(ticket.id, ticket).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             // console.log('SE FACE UPDATE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.updateArray$.next([]);
              //         }
              //     }
              // })
            });
          } else {
            console.log('n-am in update');
          }
          if (this.ticketService.deleteArray$.getValue().length > 0) {
            //Delete tickets
            const deleteArray = this.ticketService.deleteArray$.getValue();
            deleteArray.forEach(ticket => {
              // console.log('ticket de sters', ticket)
              this.$fileObservables.push(this.ticketService.deleteTicket(ticket.id));
              // this.ticketService.deleteTicket(ticket.id).subscribe({
              //     next: (tickets: { success: boolean, reason: string }) => {
              //         if (tickets.success) {
              //             console.log('SE FACE DELETE LA TICKETS PE UPDATE', tickets);
              //             this.ticketService.deleteArray$.next([]);
              //         }
              //     },
              //     error: err => {
              //         console.log(err);
              //     }
              //
              // })
            });
          }

          if (this.productService.productsList$.getValue().length > 0) {
            const prodArray = this.productService.productsList$.getValue();
            prodArray.forEach(product => {
              if (product.state === 'add') {
                this.productService.createProduct(this.currentResourceId, product).subscribe({
                  next: respAdd => {
                    if (respAdd) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (product.state === 'update') {
                this.productService.updateProduct(product.id, product).subscribe({
                  next: respUpdate => {
                    console.log('update prod', respUpdate);
                    if (respUpdate) {
                      const imagArray = this.productService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (product.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                          if (imageObj.imageFile !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('images', imageObj.imageFile);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.productService.uploadImageForProduct(product.id, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              },
                              error: error => {
                                if (error.error.reason === 'fileSizeTooBig') {
                                  this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                                } else if (error.error.reason === 'wrongExtension') {
                                  this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                                } else {
                                  this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                                }
                              }
                            });
                          }
                          this.productService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              }
            });
          }
          //product list
          if (this.productService.deleteProdList$.getValue().length > 0) {
            const deleteProdArray = this.productService.deleteProdList$.getValue();
            deleteProdArray.forEach(product => {
              this.productService.deleteProduct(product.id).subscribe({
                next: respAdd => {
                  if (respAdd) {
                    const imagArray = this.productService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (product.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + product.id + ' va avea astea', imageObj);
                        if (imageObj.imageFile !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('images', imageObj.imageFile);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                          this.productService.uploadImageForProduct(respAdd.reason, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            },
                            error: error => {
                              if (error.error.reason === 'fileSizeTooBig') {
                                this.toastService.showToast("Eroare", "Fisierul incărcat este prea mare! Încărcați o imagine mai mica de 2 MB!", "error");
                              } else if (error.error.reason === 'wrongExtension') {
                                this.toastService.showToast("Eroare", "Formatul fisierului nu este permis!", "error");
                              } else {
                                this.toastService.showToast("Eroare", "A aparut o problemă la încărcarea imaginii!", "error");
                              }
                            }
                          });
                        }
                        this.productService.imagesArray$.next([]);
                      }
                    });
                  }
                }
              });
            });
          }
          //service time slot
          if (this.timeslotService.serviceList$.getValue().length > 0) {
            const serviceArray = this.timeslotService.serviceList$.getValue();
            serviceArray.forEach(service => {
              if (service.state === 'add') {
                this.$fileObservables.push(this.timeslotService.createService(this.currentResourceId, service));
              } else if (service.state === 'update') {
                this.$fileObservables.push(this.timeslotService.updateServiceByServiceId(service.id, service));
              }
            });
          }
          if (this.timeslotService.deleteServiceList$.getValue().length > 0) {
            const deleteServArray = this.timeslotService.deleteServiceList$.getValue();
            deleteServArray.forEach(service => {
              this.$fileObservables.push(this.timeslotService.deleteService(service.id));
            });
          }
          //rental-booking
          if (this.roomsArray.length > 0) {
            this.roomsArray.forEach(room => {
              if (room.state === 'add') {
                this.roomService.createRoom(this.resourceService.resourceId$.getValue(), room).subscribe({
                  next: resp => {
                    // console.log('adaugare camera pe edit resursa', resp);
                    if (resp.success) {
                      const imagArray = this.roomService.imagesArray$.getValue();
                      console.log('array', imagArray);
                      imagArray.forEach(imageObj => {
                        if (room.id === imageObj.id) {
                          console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                          if (imageObj.featuredImage !== undefined) {
                            const thumbnailData = new FormData();
                            thumbnailData.append('file', imageObj.featuredImage);
                            console.log('thumb data', thumbnailData);
                            // this.$fileObservables.push( this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData));
                            this.roomService.uploadRoomThumbnail(resp.reason, thumbnailData).subscribe({
                              next: thumb => {
                                console.log('thumbnail uploadat', thumb);
                              }
                            });
                          }
                          if (imageObj.gallery.length > 0) {
                            const imagesData = new FormData();
                            imageObj.gallery.forEach(galleryFile => {
                              if (galleryFile.state === 'upload') {
                                imagesData.append('images', galleryFile.file);
                              }
                            });
                            // this.$fileObservables.push(this.roomService.uploadRoomGallery(resp.reason, imagesData));
                            this.roomService.uploadRoomGallery(resp.reason, imagesData).subscribe({
                              next: gallery => {
                                console.log('galerie uploadata', gallery);
                              }
                            });
                          }
                          this.roomService.imagesArray$.next([]);
                        }
                      });
                    }
                  }
                });
              } else if (room.state === 'update') {
                this.roomService.updateRoom(room.id, room).subscribe({
                  next: resp => {
                    // console.log('editare camera pe edit resursa', resp);
                    const imagArray = this.roomService.imagesArray$.getValue();
                    console.log('array', imagArray);
                    imagArray.forEach(imageObj => {
                      if (room.id === imageObj.id) {
                        console.log('imaginea cu id-ul ' + room.id + ' va avea astea', imageObj);
                        if (imageObj.featuredImage !== undefined) {
                          const thumbnailData = new FormData();
                          thumbnailData.append('file', imageObj.featuredImage);
                          console.log('thumb data', thumbnailData);
                          // this.$fileObservables.push(this.roomService.uploadRoomThumbnail(room.id, thumbnailData));
                          this.roomService.uploadRoomThumbnail(room.id, thumbnailData).subscribe({
                            next: thumb => {
                              console.log('thumbnail uploadat', thumb);
                            }
                          });
                        }
                        if (imageObj.gallery.length > 0) {
                          console.log('inainte de gall', imageObj.gallery);
                          const imagesData = new FormData();
                          imageObj.gallery.forEach(galleryFile => {
                            if (galleryFile.state === 'upload') {
                              imagesData.append('images', galleryFile.file);
                            }
                          });
                          // this.$fileObservables.push( this.roomService.uploadRoomGallery(room.id, imagesData));
                          this.roomService.uploadRoomGallery(room.id, imagesData).subscribe({
                            next: gallery => {
                              console.log('galerie uploadata', gallery);
                            }
                          });
                        }
                        this.roomService.imagesArray$.next([]);
                      }
                    });
                  }
                });
              }
            });
          }
          if (this.roomService.deleteArray$.getValue().length > 0) {
            const deleteRooms = this.roomService.deleteArray$.getValue();
            deleteRooms.forEach(room => {
              this.$fileObservables.push(this.roomService.deleteRoom(room.id));
              // this.roomService.deleteRoom(room.id).subscribe({
              //     next: (resp: { success: boolean, reason: string }) => {
              //         console.log('stergere camera', resp);
              //         if (resp.success) {
              //             this.roomService.deleteArray$.next([]);
              //         }
              //     }
              // })
            });
          }
          //menu-booking
          if (this.resourceType === 'menu' && this.timepickerService.timepickerId$.getValue()) {
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            const timePicker = {
              timetables: this.timepickerService.getFreeEntry() ? [] : this.timepickerService.timePicker$.getValue().timetables,
              changePolicies: this.timepickerService.changePolicies$.getValue(),
              bookingPolicies: this.timepickerService.bookingPolicies$.getValue(),
              ignoreAvailability: this.timepickerService.getFreeEntry()
            };
            console.log('TIMEPICKER', this.timepickerService.timePicker$.getValue());
            this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), timePicker));
            console.log('TIME PICKER ON', timePicker);
            //to check
            // if(this.timepickerService.timepickerId$.getValue()){
            //     this.$fileObservables.push(this.timepickerService.updateTimepicker(this.timepickerService.timepickerId$.getValue(), this.timepickerService.timePicker$.getValue()));
            //
            // }else{
            //     this.$fileObservables.push(this.timepickerService.createTimepicker(this.resourceId, this.timepickerService.timePicker$.getValue()));
            // }
          }
          //menu
          if (this.resourceType === 'menu') {
            console.log('menuList', this.menuService.menuList$.getValue());
            console.log('menu id', this.resourceService.resourceTemplateData$.getValue().menuId);
            console.log('menu id', this.menuService.menuId$.getValue());
            if (this.menuService.menuId$.getValue() && this.menuService.menuList$.getValue().length > 0) {
              this.$fileObservables.push(this.menuService.updateMenu(this.menuService.menuId$.getValue(), this.menuService.menuList$.getValue()));
            } else {
              if (this.menuService.menuList$.getValue().length > 0) {
                this.$fileObservables.push(this.menuService.createMenu(this.resourceId, this.menuService.menuList$.getValue()));
              }
            }
          }
        }
        if (this.$fileObservables.length > 0) {
          (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.forkJoin)(...this.$fileObservables).subscribe(forkRes => {
            this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
            setTimeout(() => {
              if (this.isProvider) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/provider/resources/my-list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isStaff) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/staff/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              } else if (this.isAdmin) {
                this.isSubmitLoading$.next(false);
                this.router.navigate(['/private/admin/resources/list'], {
                  state: {
                    submit: true
                  }
                });
              }
            }, 3000);
          });
        } else {
          this.toastService.showToast('succes', 'Resursa a fost actualizată cu succes', 'success');
          setTimeout(() => {
            if (this.isProvider) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/provider/resources/my-list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isStaff) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/staff/resources/list'], {
                state: {
                  submit: true
                }
              });
            } else if (this.isAdmin) {
              this.isSubmitLoading$.next(false);
              this.router.navigate(['/private/admin/resources/list'], {
                state: {
                  submit: true
                }
              });
            }
          }, 3000);
        }
      },
      error: error => {
        this.toastService.showToast('Eroare', 'A aparut o problema tehnica!', 'error');
        this.isSubmitLoading$.next(false);
        console.log(error);
      }
    });
  }
  seeWhere() {
    // console.log('STEP', this.stepperService.step$.getValue())
    // console.log('form', this.resourceService.generalInformationForm$.getValue())
    // console.log('attr temp', this.attributesFromTemplate);
    // console.log('MENUID', this.resourceService.resourceTemplateData$.getValue().menuId);
    if (this.stepperService.step$.getValue() === 2) {
      this.resourceService.setupListener$.next(true);
    }
    if (this.stepperService.step$.getValue() === 0) {
      this.resourceService.generalInfoListener$.next(true);
      console.log('il fac pe general info true');
    }
    if (this.stepperService.step$.getValue() === 3 && this.resourceType === 'rentalBooking') {
      this.resourceService.policyRentalListener$.next(true);
    }
    if (this.stepperService.step$.getValue() === 3 && this.resourceType === 'menu') {
      this.resourceService.policyMenuListener$.next(true);
    }
    if (this.stepperService.step$.getValue() === 3 && this.resourceType !== 'rentalBooking' && this.resourceType !== 'menu') {
      this.resourceService.policyListener$.next(true);
    }
  }
  createDynamicForm(formSection) {
    // Loop through from Sections
    // console.log('create trips', this.tripsAndItinAttributes)
    this.formSections = formSection.filter(item => item.tabName !== 'facilities');
    // console.log('create sections', this.formSections)
    for (const section of formSection) {
      // Loop through section attributes
      for (const inputField of section.tabAttributes) {
        if (this.form.contains(inputField.name)) {
          if (inputField.valueType === 'multiple-select') {
            let multipleValue = this.form.get(inputField.name).value;
            console.log('MULTIPLE SELECT', multipleValue, Array.isArray(multipleValue));
            if (Array.isArray(multipleValue)) {
              this.form.get(inputField.name).patchValue(multipleValue);
            } else {
              this.form.get(inputField.name).patchValue(multipleValue.split(','));
            }
            // this.form.get(inputField.name).patchValue(multipleValue.length > 0 ? multipleValue.split(',') : []);
          }
          // const findTripIndex = this.tripsAndItineraries.find(attr => attr === inputField.categoryId);
          // if (findTripIndex && section.tabName === 'general_info') {
          //     this.tripsAndItinAttributes.push(inputField);
          //     console.log('TRIPS LALA 1', this.tripsAndItinAttributes);
          //     const sectionsFiltered = section.tabAttributes.filter(attr => attr.id !== inputField.id);
          //     // console.log('filter',sectionsFiltered)
          //     this.formSections.map(sectionToChange => {
          //         if (sectionToChange.tabName === 'general_info') {
          //             return sectionToChange.tabAttributes = sectionsFiltered;
          //         }
          //     })
          //
          // }
        } else {
          if (inputField.valueType === 'toggle') {
            this.form.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(inputField.attributeValue ? inputField.attributeValue : 'false'));
          } else if (inputField.valueType === 'multiple-select') {
            console.log('MULTIPLE SELECT FIRST', inputField.attributeValue);
            this.form.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(inputField.attributeValue ? inputField.attributeValue.split(',') : []));
          }
          this.form.addControl(inputField.name, new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(inputField.attributeValue ? inputField.attributeValue : '', inputField.propertyRequired ? _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required : null));
          // const findTripIndex = this.tripsAndItineraries.find(attr => attr === inputField.categoryId);
          // if (findTripIndex && section.tabName === 'general_info') {
          //     this.tripsAndItinAttributes.push(inputField);
          //     console.log('TRIPS LALA 2', this.tripsAndItinAttributes);
          //     const sectionsFiltered = section.tabAttributes.filter(attr => attr.id !== inputField.id);
          //     // console.log('filter',sectionsFiltered)
          //     this.formSections.map(sectionToChange => {
          //         if (sectionToChange.tabName === 'general_info') {
          //             return sectionToChange.tabAttributes = sectionsFiltered;
          //         }
          //     })
          //
          // }
        }
      }
    }
    // // this.dataLoaded = true;
    // console.log('lalallaalal', this.formSections);
    // console.log('FORM', this.form.value);
    // console.log('trips ATRTR', this.tripsAndItinAttributes);
  }

  ngOnDestroy() {
    this.routeSub?.unsubscribe();
    this.clearFields();
  }
  static #_ = this.ctorParameters = () => [{
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_2__.ResourcesService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_18__.Router
  }, {
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_3__.StepperService
  }, {
    type: _services_rental_booking_service__WEBPACK_IMPORTED_MODULE_4__.RentalBookingService
  }, {
    type: _services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_5__.TicketsBookingService
  }, {
    type: _services_timepicker_service__WEBPACK_IMPORTED_MODULE_6__.TimepickerService
  }, {
    type: _services_product_list_service__WEBPACK_IMPORTED_MODULE_7__.ProductListService
  }, {
    type: _services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_8__.BookingTimeslotsService
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_12__.UserDataService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_10__.ToastService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_11__.CreateResourceService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_9__.SystemSettingsService
  }, {
    type: _services_menu_service__WEBPACK_IMPORTED_MODULE_13__.MenuService
  }];
};
AddResourceComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_19__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_20__.Component)({
  selector: 'app-add-resource',
  template: _add_resource_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_add_resource_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AddResourceComponent);


/***/ }),

/***/ 96409:
/*!*************************************************************************************!*\
  !*** ./src/app/features/resources/pages/resources-list/resources-list.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourcesListComponent": () => (/* binding */ ResourcesListComponent)
/* harmony export */ });
/* harmony import */ var _Users_ligia_bestinform_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _resources_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resources-list.component.html?ngResource */ 88011);
/* harmony import */ var _resources_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resources-list.component.scss?ngResource */ 67047);
/* harmony import */ var _resources_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_resources_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_material_legacy_paginator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/legacy-paginator */ 47101);
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/sort */ 92197);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 34534);
/* harmony import */ var src_app_shared_services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/resources.service */ 3145);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _services_resources_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../_services/resources.service */ 39266);
/* harmony import */ var _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/_services/toast.service */ 62941);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/_services/system-settings.service */ 42912);
/* harmony import */ var _services_stepper_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../_services/stepper.service */ 9845);
/* harmony import */ var _components_shared_experiences_list_shared_experiences_list_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/shared-experiences-list/shared-experiences-list.component */ 280);
/* harmony import */ var _components_provider_create_shared_experience_provider_create_shared_experience_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/provider-create-shared-experience/provider-create-shared-experience.component */ 35238);




















let ResourcesListComponent = class ResourcesListComponent {
  constructor(userService, resourcesService, cdr, route, router, modal, resourceService, toastService, systemService, stepperService, dialog) {
    this.userService = userService;
    this.resourcesService = resourcesService;
    this.cdr = cdr;
    this.route = route;
    this.router = router;
    this.modal = modal;
    this.resourceService = resourceService;
    this.toastService = toastService;
    this.systemService = systemService;
    this.stepperService = stepperService;
    this.dialog = dialog;
    this.isLoaded = false;
    this.countries = [];
    this.cities = [];
    //table
    this.resourcesList = [];
    this.displayedResourcesColumns = ['title', 'address', 'category', 'purchase', 'status', 'views', 'actions'];
    //pagination
    this.pageSizeArray = [10, 25, 100];
    this.pageSize = 10;
    this.sorting = 'lastUpdateDate';
    this.dir = 'desc';
    this.pageNumber = 0;
    //filter
    this.isAdvanced = false;
    this.categoriesList = [];
  }
  ngOnInit() {
    this.runAfterAsyncOperations();
    // this.getEventCategoryId();
    // this.getJobCategoryId();
    this.checkIfProviderAccepted();
    this.checkRole();
    // this.listChanged();
    this.getCountries();
    this.getListType();
    // this.dir='asc';
  }

  checkRole() {
    this.userService.getCurrentUser().subscribe({
      next: userData => {
        if (userData.roles.includes('ROLE_STAFF')) {
          this.isStaff = true;
        }
        if (userData.roles.includes('ROLE_PROVIDER')) {
          this.isProvider = true;
        }
        if (userData.roles.includes('ROLE_SUPER_ADMIN')) {
          this.isAdmin = true;
        }
      }
    });
  }
  // getEventCategoryId() {
  //     this.systemService.getSystemSetting().subscribe({
  //         next: (resp: SystemSetting) => {
  //             this.eventCategoryId = resp.eventCategoryId;
  //             console.log('RES SETTINGS', resp);
  //             console.log('id categorie event', this.eventCategoryId)
  //
  //         }
  //     })
  // }
  getEventCategoryId() {
    return new Promise((resolve, reject) => {
      this.systemService.getSystemSetting().subscribe({
        next: resp => {
          this.eventCategoryId = resp.eventCategoryId;
          console.log('RES SETTINGS', resp);
          console.log('id categorie event', this.eventCategoryId);
          resolve(); // Resolve the promise once the operation is complete
        },

        error: err => {
          reject(err); // Reject the promise if there's an error
        }
      });
    });
  }

  getJobCategoryId() {
    return new Promise((resolve, reject) => {
      this.resourcesService.getListOfDomains().subscribe({
        next: domains => {
          domains.forEach(domain => {
            if (domain.key === 'jobs') {
              this.resourcesService.listCategoryFiltered(0, 1, null, null, {
                domainId: domain.id
              }).subscribe({
                next: category => {
                  this.jobCategoryId = category.content[0].id;
                  resolve(); // Resolve the promise once the operation is complete
                },

                error: err => {
                  reject(err); // Reject the promise if there's an error
                }
              });
            }

            if (domain.key === 'jobs') {
              this.jobDomainId = domain.id;
            } else if (domain.key === 'travel') {
              this.travelDomainId = domain.id;
            } else if (domain.key === 'healthcare') {
              this.healthDomainId = domain.id;
            } else if (domain.key === ' culture') {
              this.cultureDomainId = domain.id;
            } else if (domain.key === 'education') {
              this.educationDomainId = domain.id;
            }
          });
        }
      });
    });
  }
  // getJobCategoryId(){
  //     this.resourcesService.getListOfDomains().subscribe({
  //         next:(domains:any)=>{
  //             domains.forEach(domain => {
  //                 if(domain.key === 'jobs'){
  //                     this.resourcesService.listCategoryFiltered(0, 1,null,null,{domainId: domain.id})
  //                         .subscribe({
  //                             next:(category:any)=>{
  //                                 this.jobCategoryId = category.content[0].id;
  //                             }
  //                         })
  //                 }
  //
  //                 if(domain.key === 'jobs'){
  //                     this.jobDomainId=domain.id;
  //                 }else if(domain.key === 'travel'){
  //                     this.travelDomainId=domain.id;
  //                 }else if(domain.key === 'healthcare'){
  //                     this.healthDomainId=domain.id;
  //                 }else if(domain.key === ' culture'){
  //                     this.cultureDomainId=domain.id;
  //                 }else if(domain.key === 'education'){
  //                     this.educationDomainId=domain.id;
  //                 }
  //             })
  //         }
  //     })
  // }
  runAfterAsyncOperations() {
    var _this = this;
    return (0,_Users_ligia_bestinform_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      try {
        yield _this.getEventCategoryId();
        yield _this.getJobCategoryId();
        // await this.getCurrentUser();
        // await this.getTripsAndItinerariesIds();
        //  async operations are complete, you can now call the next function
        _this.getListType();
      } catch (error) {
        console.error('Error occurred:', error);
      }
    })();
  }
  checkIfProviderAccepted() {
    this.userService.getCurrentUser().subscribe(currentUser => {
      if (currentUser.roles.includes('ROLE_PROVIDER') && currentUser.approvedStatus === null) {
        this.isProviderAccepted = false;
        // this.router.navigate(['/private/provider/resources/my-list']);
        // this.toastService.showToast("Error", "Nu aveti permisiunea necesară pentru a adăuga resurse. Luați legătura cu administratorul.", 'error')
      } else {
        this.isProviderAccepted = true;
      }
    });
  }
  listChanged() {
    this.resourcesService.listChangedObs.subscribe(data => {
      // If the response is true
      if (data) {
        // Get Documents List
        this.getResourcesList();
        // this.cdr.detectChanges();
        this.resourcesService.triggerListChanges(false);
      }
    });
  }
  getListType() {
    if (this.router.url.includes('my-list')) {
      this.userService.getCurrentUser().subscribe(userData => {
        this.providerId = userData.id;
        console.log('provider id my-list', userData.id);
        this.getResourcesList();
        this.backPath = '../../profile/view';
      });
    } else {
      this.route.queryParams.subscribe(params => {
        if (params === null) {
          console.log('PARAMETRU din cale', params.providerid);
          console.log('niciun parametru');
          this.providerId = null;
          this.getResourcesList();
          this.backPath = '../../manage-providers/view';
        } else {
          console.log('parametru provider');
          console.log('PARAMETRU din cale', params.providerid);
          this.providerId = params.providerid;
          this.getResourcesList();
          if (params.providerid) {
            this.backPath = '../../manage-providers/view/' + this.providerId;
          } else if (params.providerid === undefined) {
            this.backPath = '../../dashboard';
          }
        }
      });
    }
  }
  pageChanged(event) {
    this.pageNumber = event.pageIndex;
    this.pageSize = event.pageSize;
    this.getResourcesList();
  }
  editResource(resourceId) {
    this.router.navigate(['../../resources/edit/', resourceId], {
      relativeTo: this.route
    });
    this.stepperService.step$.next(0);
  }
  getResourcesList() {
    const objFilter = {
      userId: this.providerId,
      title: this.filterTitle !== '' ? this.filterTitle : null,
      domain: this.filterDomain !== '' ? this.filterDomain : null,
      categoryId: this.filterCategory !== '' ? this.filterCategory : null,
      country: this.filterCountry !== '' ? this.filterCountry : null,
      city: this.filterCity !== '' ? this.filterCity : null,
      sharedExperience: this.filterSharedExperiences !== null ? this.filterSharedExperiences : null,
      status: this.filterStatus !== null ? this.filterStatus : null,
      excludedCategories: this.filterCategory === undefined ? [this.eventCategoryId, this.jobCategoryId] : null
    };
    // console.log('obiect de filtrare', objFilter);
    this.resourcesService.listResourceFiltered(this.pageNumber, this.pageSize, this.sorting, this.dir, objFilter).subscribe(resourcesList => {
      this.dataSource = resourcesList.content;
      // console.log('RESURSELE MELE',this.dataSource);
      this.totalElements = resourcesList.totalElements;
      this.isLoaded = true;
    });
  }
  advancedClick() {
    this.isAdvanced = !this.isAdvanced;
  }
  callSubmitButton(event) {
    event.preventDefault();
    if (event.key === "Enter") this.applyFilter();
  }
  applyFilter(event) {
    if (event) {
      this.dir = event.direction;
      if (event.active === 'category') {
        this.sorting = 'categoryId';
      } else if (event.active === 'purchase') {
        this.sorting = 'totalBookingNumber';
      } else {
        this.sorting = event.active;
      }
    }
    this.paginator.firstPage();
    this.getResourcesList();
  }
  getCategories(event) {
    this.categoriesList = [];
    this.selectedDomain = event;
    this.resourcesService.getAllResourceCategoriesByResourceDomain(this.selectedDomain).subscribe(categories => {
      categories.forEach(element => {
        console.log(element.nameEn);
        console.log(element.id);
        const categoryObject = {
          id: element.id,
          name: element.nameEn
        };
        this.categoriesList.push(categoryObject);
      });
      // console.log('lista de categorii cu obiecte',this.categoriesList);
    });
  }

  clearfilterTitle() {
    this.filterTitle = undefined;
  }
  clearFields() {
    this.filterTitle = undefined;
    this.filterCountry = undefined;
    this.filterCity = undefined;
    this.filterDomain = undefined;
    this.filterCategory = undefined;
    this.filterSharedExperiences = undefined;
    this.filterStatus = undefined;
    this.filterStartDate = undefined;
    this.filterFinishDate = undefined;
    this.cities = [];
    this.cdr.detectChanges();
    this.getResourcesList();
  }
  //TEMPORAR
  deleteResource(resourceId) {
    this.resourcesService.deleteResource(resourceId).subscribe({
      next: resp => {
        console.log('sters cu succes', resp.success);
        if (resp.success) {
          this.closeModal();
          this.toastService.showToast('Success', 'Resursa a fost stearsa', "success");
          this.getListType();
          // this.modal.closeAll();
        }
      }
    });
  }

  openModal(modal, data) {
    this.modal.open(modal);
    this.statusInput = data;
  }
  closeModal() {
    this.modal.closeAll();
  }
  openSharedExperienceListModal(resourceId) {
    this.dialog.open(_components_shared_experiences_list_shared_experiences_list_component__WEBPACK_IMPORTED_MODULE_9__.SharedExperiencesListComponent, {
      width: '1000px',
      height: '750px',
      data: resourceId
    });
  }
  openSharedExperienceCreateModal(resourceId) {
    this.dialog.open(_components_provider_create_shared_experience_provider_create_shared_experience_component__WEBPACK_IMPORTED_MODULE_10__.ProviderCreateSharedExperienceComponent, {
      width: '1000px',
      height: '750px',
      data: resourceId
    });
  }
  changeStatus(resourceId, status) {
    console.log('change status', resourceId, status);
    this.resourceService.changeStatusForResource(resourceId, status).subscribe({
      next: resp => {
        if (resp.success) {
          this.toastService.showToast('Success', 'Statusul resursei a fost modificat!', 'success');
          this.getListType();
          this.modal.closeAll();
        }
      },
      error: err => {
        console.log(err);
        if (err.error.reason === 'invalidId') {
          this.toastService.showToast('Error', 'Această resursă nu mai există în baza de date!', "error");
        }
        if (err.error.reason === 'notLoggedIn' || err.error.reason === 'tokenExpired') {
          this.toastService.showToast('Error', 'Pentru a finaliza această acțiune trebuie să fii logat!', "error");
        }
      }
    });
  }
  archiveResource(resourceId) {
    this.resourceService.changeStatusForResource(resourceId, "archived").subscribe({
      next: resp => {
        if (resp.success) {
          this.toastService.showToast('Success', 'Resursa a fost arhivată!', 'success');
          this.getListType();
          this.modal.closeAll();
        }
      },
      error: err => {
        console.log(err);
        if (err.error.reason === 'invalidId') {
          this.toastService.showToast('Error', 'Această resursă nu mai există în baza de date!', "error");
        }
        if (err.error.reason === 'notLoggedIn' || err.error.reason === 'tokenExpired') {
          this.toastService.showToast('Error', 'Pentru a finaliza această acțiune trebuie să fii logat!', "error");
        }
      }
    });
  }
  getCountries() {
    this.resourceService.getAllCountries().subscribe({
      next: countries => {
        this.countries = countries;
      }
    });
  }
  getCities(event) {
    this.filterCity = "";
    const country = {
      country: event.value ? event.value : event
    };
    this.resourceService.getCityFilter(0, -1, null, null, country).subscribe({
      next: cities => {
        // console.log(cities);
        this.cities = cities.content;
      }
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_4__.UserDataService
  }, {
    type: src_app_shared_services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ChangeDetectorRef
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_12__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_12__.Router
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_13__.MatDialog
  }, {
    type: _services_resources_service__WEBPACK_IMPORTED_MODULE_5__.ResourcesService
  }, {
    type: _shared_services_toast_service__WEBPACK_IMPORTED_MODULE_6__.ToastService
  }, {
    type: _shared_services_system_settings_service__WEBPACK_IMPORTED_MODULE_7__.SystemSettingsService
  }, {
    type: _services_stepper_service__WEBPACK_IMPORTED_MODULE_8__.StepperService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_13__.MatDialog
  }];
  static #_2 = this.propDecorators = {
    paginator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewChild,
      args: [_angular_material_legacy_paginator__WEBPACK_IMPORTED_MODULE_14__.MatLegacyPaginator]
    }],
    sort: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewChild,
      args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_15__.MatSort, {
        static: true
      }]
    }]
  };
};
ResourcesListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_16__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_11__.Component)({
  selector: 'app-resources-list',
  template: _resources_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_1__,
  providers: [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_17__.NgbModal],
  styles: [(_resources_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default())]
})], ResourcesListComponent);


/***/ }),

/***/ 57633:
/*!****************************************************************!*\
  !*** ./src/app/features/resources/resources-routing.module.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourcesRoutingModule": () => (/* binding */ ResourcesRoutingModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _resources_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resources.component */ 86937);
/* harmony import */ var _pages_add_resource_add_resource_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pages/add-resource/add-resource.component */ 71546);
/* harmony import */ var _pages_resources_list_resources_list_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pages/resources-list/resources-list.component */ 96409);
/* harmony import */ var _shared_services_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/_services/can-deactivate-guard.service */ 14103);







const resourceRoutes = [{
  path: '',
  component: _resources_component__WEBPACK_IMPORTED_MODULE_0__.ResourcesComponent,
  children: [{
    path: 'add',
    component: _pages_add_resource_add_resource_component__WEBPACK_IMPORTED_MODULE_1__.AddResourceComponent,
    canDeactivate: [_shared_services_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_3__.CanDeactivateGuard]
  }, {
    path: 'edit/:id',
    component: _pages_add_resource_add_resource_component__WEBPACK_IMPORTED_MODULE_1__.AddResourceComponent,
    canDeactivate: [_shared_services_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_3__.CanDeactivateGuard]
  }, {
    path: 'list',
    component: _pages_resources_list_resources_list_component__WEBPACK_IMPORTED_MODULE_2__.ResourcesListComponent
  }, {
    path: 'list?providerid=:providerid',
    component: _pages_resources_list_resources_list_component__WEBPACK_IMPORTED_MODULE_2__.ResourcesListComponent
  }, {
    path: 'my-list',
    component: _pages_resources_list_resources_list_component__WEBPACK_IMPORTED_MODULE_2__.ResourcesListComponent
  }, {
    path: '',
    redirectTo: 'list',
    pathMatch: 'full'
  }]
}];
let ResourcesRoutingModule = class ResourcesRoutingModule {};
ResourcesRoutingModule = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgModule)({
  imports: [_angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule.forChild(resourceRoutes)],
  exports: [_angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule],
  providers: [_shared_services_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_3__.CanDeactivateGuard]
})], ResourcesRoutingModule);


/***/ }),

/***/ 86937:
/*!***********************************************************!*\
  !*** ./src/app/features/resources/resources.component.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourcesComponent": () => (/* binding */ ResourcesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _resources_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resources.component.html?ngResource */ 24814);
/* harmony import */ var _resources_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resources.component.scss?ngResource */ 15018);
/* harmony import */ var _resources_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_resources_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);




let ResourcesComponent = class ResourcesComponent {
  constructor() {}
  ngOnInit() {}
  static #_ = this.ctorParameters = () => [];
};
ResourcesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
  selector: 'app-resources',
  template: _resources_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_resources_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ResourcesComponent);


/***/ }),

/***/ 26022:
/*!********************************************************!*\
  !*** ./src/app/features/resources/resources.module.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourcesModule": () => (/* binding */ ResourcesModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var _resources_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resources-routing.module */ 57633);
/* harmony import */ var _pages_add_resource_add_resource_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pages/add-resource/add-resource.component */ 71546);
/* harmony import */ var _resources_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resources.component */ 86937);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _components_resource_radio_option_resource_radio_option_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/resource-radio-option/resource-radio-option.component */ 47884);
/* harmony import */ var _components_stepper_title_list_stepper_title_list_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/stepper-title-list/stepper-title-list.component */ 9021);
/* harmony import */ var _pipes_orderBy_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_pipes/orderBy.pipe */ 36072);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared/shared.module */ 44466);
/* harmony import */ var _pages_resources_list_resources_list_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pages/resources-list/resources-list.component */ 96409);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_rental_booking_rental_booking_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/rental-booking/rental-booking.component */ 35664);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_rental_booking_add_edit_room_modal_add_edit_room_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/rental-booking/add-edit-room-modal/add-edit-room-modal.component */ 3154);
/* harmony import */ var _standalone_components_dashboard_header_dashboard_header_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../standalone-components/dashboard-header/dashboard-header.component */ 54021);
/* harmony import */ var _components_stepper_content_add_mode_add_new_template_add_new_template_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/stepper-content/add-mode/add-new-template/add-new-template.component */ 75522);
/* harmony import */ var _components_stepper_content_configurate_edit_general_informations_general_informations_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/general-informations/general-informations.component */ 61144);
/* harmony import */ var _components_stepper_content_configurate_edit_facilities_facilities_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/facilities/facilities.component */ 37547);
/* harmony import */ var _components_stepper_content_configurate_edit_policy_policy_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/policy/policy.component */ 1721);
/* harmony import */ var _components_stepper_content_configurate_edit_payment_payment_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/payment/payment.component */ 1523);
/* harmony import */ var _components_stepper_content_configurate_edit_gallery_gallery_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/gallery/gallery.component */ 22646);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_rental_booking_delete_room_modal_delete_room_modal_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/rental-booking/delete-room-modal/delete-room-modal.component */ 53577);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_no_booking_no_booking_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/no-booking/no-booking.component */ 19187);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_ticket_booking_ticket_booking_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/ticket-booking/ticket-booking.component */ 75285);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_service_booking_time_slots_service_booking_time_slots_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/service-booking-time-slots/service-booking-time-slots.component */ 79249);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_products_list_products_list_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/products-list/products-list.component */ 66295);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_external_url_external_url_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/external-url/external-url.component */ 59410);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_apply_job_apply_job_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/apply-job/apply-job.component */ 25457);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_cultural_booking_cultural_booking_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/cultural-booking/cultural-booking.component */ 65733);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_car_booking_car_booking_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/car-booking/car-booking.component */ 16190);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_menu_menu_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/menu/menu.component */ 72936);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_ticket_booking_add_edit_ticket_add_edit_ticket_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/ticket-booking/add-edit-ticket/add-edit-ticket.component */ 88692);
/* harmony import */ var _standalone_components_ticket_card_ticket_card_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../standalone-components/ticket-card/ticket-card.component */ 55600);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_ticket_booking_delete_ticket_delete_ticket_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/ticket-booking/delete-ticket/delete-ticket.component */ 65214);
/* harmony import */ var _components_stepper_content_configurate_edit_policy_policy_rental_booking_policy_rental_booking_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/policy/policy-rental-booking/policy-rental-booking.component */ 44934);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_products_list_add_edit_product_add_edit_product_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/products-list/add-edit-product/add-edit-product.component */ 60791);
/* harmony import */ var _standalone_components_product_preview_product_preview_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../standalone-components/product-preview/product-preview.component */ 71104);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_products_list_delete_product_modal_delete_product_modal_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/products-list/delete-product-modal/delete-product-modal.component */ 44655);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_service_booking_time_slots_add_edit_service_add_edit_service_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/service-booking-time-slots/add-edit-service/add-edit-service.component */ 12840);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_service_booking_time_slots_delete_modal_service_delete_modal_service_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/service-booking-time-slots/delete-modal-service/delete-modal-service.component */ 79922);
/* harmony import */ var _standalone_components_service_timeslot_preview_service_timeslot_preview_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../../standalone-components/service-timeslot-preview/service-timeslot-preview.component */ 85032);
/* harmony import */ var _components_stepper_content_configurate_edit_policy_no_policy_no_policy_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/policy/no-policy/no-policy.component */ 8119);
/* harmony import */ var _components_stepper_content_configurate_edit_policy_restaurant_policy_restaurant_policy_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/policy/restaurant-policy/restaurant-policy.component */ 34572);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_menu_add_edit_category_add_edit_category_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/menu/add-edit-category/add-edit-category.component */ 32473);
/* harmony import */ var _components_stepper_content_configurate_edit_setup_menu_delete_menu_category_delete_menu_category_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/setup/menu/delete-menu-category/delete-menu-category.component */ 97216);
/* harmony import */ var _angular_material_components_datetime_picker__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! @angular-material-components/datetime-picker */ 20820);
/* harmony import */ var _standalone_components_seats_viewer_seats_viewer_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../../standalone-components/seats-viewer/seats-viewer.component */ 43209);
/* harmony import */ var _components_stepper_content_configurate_edit_policy_policy_cultural_booking_policy_cultural_booking_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/policy/policy-cultural-booking/policy-cultural-booking.component */ 11029);
/* harmony import */ var _components_stepper_content_configurate_edit_related_resource_cultural_related_res_cultural_related_res_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./components/stepper-content/configurate-edit/related-resource/cultural-related-res/cultural-related-res.component */ 52514);
/* harmony import */ var _components_shared_experiences_list_shared_experiences_list_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/shared-experiences-list/shared-experiences-list.component */ 280);
/* harmony import */ var _angular_material_legacy_table__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! @angular/material/legacy-table */ 96538);
/* harmony import */ var _components_provider_create_shared_experience_provider_create_shared_experience_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./components/provider-create-shared-experience/provider-create-shared-experience.component */ 35238);
/* harmony import */ var _components_provider_lobby_provider_lobby_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/provider-lobby/provider-lobby.component */ 31117);
/* harmony import */ var _standalone_components_display_user_display_user_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../../standalone-components/display-user/display-user.component */ 4177);
/* harmony import */ var _standalone_components_shared_experiences_info_shared_experiences_info_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../../standalone-components/shared-experiences-info/shared-experiences-info.component */ 75925);
























































let ResourcesModule = class ResourcesModule {};
ResourcesModule = (0,tslib__WEBPACK_IMPORTED_MODULE_49__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_50__.NgModule)({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_51__.CommonModule, _resources_routing_module__WEBPACK_IMPORTED_MODULE_0__.ResourcesRoutingModule, _angular_router__WEBPACK_IMPORTED_MODULE_52__.RouterModule, _angular_forms__WEBPACK_IMPORTED_MODULE_53__.ReactiveFormsModule, _shared_shared_module__WEBPACK_IMPORTED_MODULE_6__.SharedModule, _angular_forms__WEBPACK_IMPORTED_MODULE_53__.FormsModule, _standalone_components_dashboard_header_dashboard_header_component__WEBPACK_IMPORTED_MODULE_10__.DashboardHeaderComponent, _standalone_components_ticket_card_ticket_card_component__WEBPACK_IMPORTED_MODULE_28__.TicketCardComponent, _standalone_components_product_preview_product_preview_component__WEBPACK_IMPORTED_MODULE_32__.ProductPreviewComponent, _standalone_components_service_timeslot_preview_service_timeslot_preview_component__WEBPACK_IMPORTED_MODULE_36__.ServiceTimeslotPreviewComponent, _angular_material_components_datetime_picker__WEBPACK_IMPORTED_MODULE_54__.NgxMatTimepickerModule, _angular_material_components_datetime_picker__WEBPACK_IMPORTED_MODULE_54__.NgxMatDatetimePickerModule, _standalone_components_seats_viewer_seats_viewer_component__WEBPACK_IMPORTED_MODULE_41__.SeatsViewerComponent, _angular_material_legacy_table__WEBPACK_IMPORTED_MODULE_55__.MatLegacyTableModule, _standalone_components_display_user_display_user_component__WEBPACK_IMPORTED_MODULE_47__.DisplayUserComponent, _standalone_components_shared_experiences_info_shared_experiences_info_component__WEBPACK_IMPORTED_MODULE_48__.SharedExperiencesInfoComponent],
  exports: [_components_stepper_content_configurate_edit_setup_service_booking_time_slots_service_booking_time_slots_component__WEBPACK_IMPORTED_MODULE_20__.ServiceBookingTimeSlotsComponent, _pipes_orderBy_pipe__WEBPACK_IMPORTED_MODULE_5__.OrderByPipe],
  declarations: [_pages_add_resource_add_resource_component__WEBPACK_IMPORTED_MODULE_1__.AddResourceComponent, _resources_component__WEBPACK_IMPORTED_MODULE_2__.ResourcesComponent, _components_resource_radio_option_resource_radio_option_component__WEBPACK_IMPORTED_MODULE_3__.ResourceRadioOptionComponent, _components_stepper_title_list_stepper_title_list_component__WEBPACK_IMPORTED_MODULE_4__.StepperTitleListComponent, _pipes_orderBy_pipe__WEBPACK_IMPORTED_MODULE_5__.OrderByPipe, _pages_resources_list_resources_list_component__WEBPACK_IMPORTED_MODULE_7__.ResourcesListComponent, _components_stepper_content_configurate_edit_setup_rental_booking_rental_booking_component__WEBPACK_IMPORTED_MODULE_8__.RentalBookingComponent, _components_stepper_content_configurate_edit_setup_rental_booking_add_edit_room_modal_add_edit_room_modal_component__WEBPACK_IMPORTED_MODULE_9__.AddEditRoomModalComponent, _components_stepper_content_add_mode_add_new_template_add_new_template_component__WEBPACK_IMPORTED_MODULE_11__.AddNewTemplateComponent, _components_stepper_content_configurate_edit_general_informations_general_informations_component__WEBPACK_IMPORTED_MODULE_12__.GeneralInformationsComponent, _components_stepper_content_configurate_edit_facilities_facilities_component__WEBPACK_IMPORTED_MODULE_13__.FacilitiesComponent, _components_stepper_content_configurate_edit_policy_policy_component__WEBPACK_IMPORTED_MODULE_14__.PolicyComponent, _components_stepper_content_configurate_edit_payment_payment_component__WEBPACK_IMPORTED_MODULE_15__.PaymentComponent, _components_stepper_content_configurate_edit_gallery_gallery_component__WEBPACK_IMPORTED_MODULE_16__.GalleryComponent, _components_stepper_content_configurate_edit_setup_rental_booking_delete_room_modal_delete_room_modal_component__WEBPACK_IMPORTED_MODULE_17__.DeleteRoomModalComponent, _components_stepper_content_configurate_edit_setup_no_booking_no_booking_component__WEBPACK_IMPORTED_MODULE_18__.NoBookingComponent, _components_stepper_content_configurate_edit_setup_ticket_booking_ticket_booking_component__WEBPACK_IMPORTED_MODULE_19__.TicketBookingComponent, _components_stepper_content_configurate_edit_setup_service_booking_time_slots_service_booking_time_slots_component__WEBPACK_IMPORTED_MODULE_20__.ServiceBookingTimeSlotsComponent, _components_stepper_content_configurate_edit_setup_products_list_products_list_component__WEBPACK_IMPORTED_MODULE_21__.ProductsListComponent, _components_stepper_content_configurate_edit_setup_external_url_external_url_component__WEBPACK_IMPORTED_MODULE_22__.ExternalUrlComponent, _components_stepper_content_configurate_edit_setup_apply_job_apply_job_component__WEBPACK_IMPORTED_MODULE_23__.ApplyJobComponent, _components_stepper_content_configurate_edit_setup_cultural_booking_cultural_booking_component__WEBPACK_IMPORTED_MODULE_24__.CulturalBookingComponent, _components_stepper_content_configurate_edit_setup_car_booking_car_booking_component__WEBPACK_IMPORTED_MODULE_25__.CarBookingComponent, _components_stepper_content_configurate_edit_setup_menu_menu_component__WEBPACK_IMPORTED_MODULE_26__.MenuComponent, _components_stepper_content_configurate_edit_setup_ticket_booking_add_edit_ticket_add_edit_ticket_component__WEBPACK_IMPORTED_MODULE_27__.AddEditTicketComponent, _components_stepper_content_configurate_edit_setup_ticket_booking_delete_ticket_delete_ticket_component__WEBPACK_IMPORTED_MODULE_29__.DeleteTicketComponent, _components_stepper_content_configurate_edit_policy_policy_rental_booking_policy_rental_booking_component__WEBPACK_IMPORTED_MODULE_30__.PolicyRentalBookingComponent, _components_stepper_content_configurate_edit_setup_products_list_add_edit_product_add_edit_product_component__WEBPACK_IMPORTED_MODULE_31__.AddEditProductComponent, _components_stepper_content_configurate_edit_setup_products_list_delete_product_modal_delete_product_modal_component__WEBPACK_IMPORTED_MODULE_33__.DeleteProductModalComponent, _components_stepper_content_configurate_edit_setup_service_booking_time_slots_add_edit_service_add_edit_service_component__WEBPACK_IMPORTED_MODULE_34__.AddEditServiceComponent, _components_stepper_content_configurate_edit_setup_service_booking_time_slots_delete_modal_service_delete_modal_service_component__WEBPACK_IMPORTED_MODULE_35__.DeleteModalServiceComponent, _components_stepper_content_configurate_edit_policy_no_policy_no_policy_component__WEBPACK_IMPORTED_MODULE_37__.NoPolicyComponent, _components_stepper_content_configurate_edit_policy_restaurant_policy_restaurant_policy_component__WEBPACK_IMPORTED_MODULE_38__.RestaurantPolicyComponent, _components_stepper_content_configurate_edit_setup_menu_add_edit_category_add_edit_category_component__WEBPACK_IMPORTED_MODULE_39__.AddEditCategoryComponent, _components_stepper_content_configurate_edit_setup_menu_delete_menu_category_delete_menu_category_component__WEBPACK_IMPORTED_MODULE_40__.DeleteMenuCategoryComponent, _components_stepper_content_configurate_edit_policy_policy_cultural_booking_policy_cultural_booking_component__WEBPACK_IMPORTED_MODULE_42__.PolicyCulturalBookingComponent, _components_stepper_content_configurate_edit_related_resource_cultural_related_res_cultural_related_res_component__WEBPACK_IMPORTED_MODULE_43__.CulturalRelatedResComponent, _components_shared_experiences_list_shared_experiences_list_component__WEBPACK_IMPORTED_MODULE_44__.SharedExperiencesListComponent, _components_provider_create_shared_experience_provider_create_shared_experience_component__WEBPACK_IMPORTED_MODULE_45__.ProviderCreateSharedExperienceComponent, _components_provider_lobby_provider_lobby_component__WEBPACK_IMPORTED_MODULE_46__.ProviderLobbyComponent]
})], ResourcesModule);


/***/ }),

/***/ 14103:
/*!******************************************************************!*\
  !*** ./src/app/shared/_services/can-deactivate-guard.service.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CanDeactivateGuard": () => (/* binding */ CanDeactivateGuard),
/* harmony export */   "CanDeactivateState": () => (/* binding */ CanDeactivateState)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _features_resources_services_resources_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../features/resources/_services/resources.service */ 39266);
/* harmony import */ var _features_resources_services_stepper_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../features/resources/_services/stepper.service */ 9845);
/* harmony import */ var _features_resources_services_rental_booking_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../features/resources/_services/rental-booking.service */ 2933);
/* harmony import */ var _features_resources_services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../features/resources/_services/tickets-booking.service */ 33224);
/* harmony import */ var _features_resources_services_timepicker_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../features/resources/_services/timepicker.service */ 23235);
/* harmony import */ var _features_resources_services_product_list_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../features/resources/_services/product-list.service */ 83590);
/* harmony import */ var _features_resources_services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../features/resources/_services/booking-timeslots.service */ 2232);
/* harmony import */ var _createResource_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./createResource.service */ 92821);
/* harmony import */ var _features_resources_services_menu_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../features/resources/_services/menu.service */ 87491);













const CanDeactivateState = {
  defendAgainstBrowserBackButton: false
};
let CanDeactivateGuard = class CanDeactivateGuard {
  constructor(resourceService, route, router, stepperService, rentalService, ticketService, timepickerService, productService, timeslotService, createResourceService, menuService) {
    this.resourceService = resourceService;
    this.route = route;
    this.router = router;
    this.stepperService = stepperService;
    this.rentalService = rentalService;
    this.ticketService = ticketService;
    this.timepickerService = timepickerService;
    this.productService = productService;
    this.timeslotService = timeslotService;
    this.createResourceService = createResourceService;
    this.menuService = menuService;
  }
  canDeactivate(component, route, state) {
    let url = state.url;
    console.log('Url: ' + url);
    const navigation = this.router.getCurrentNavigation();
    console.log('route', navigation.extras);
    if (navigation.extras.state) {
      return;
    } else {
      if (confirm("Esti sigur ca vrei sa parasesti pagina?")) {
        console.log("DEACTIVATE - yes");
        this.stepperService.step$.next(undefined);
        this.stepperService.stepperStage$.next(undefined);
        this.resourceService.resourceId$.next(undefined);
        this.resourceService.resourceTemplateData$.next(undefined);
        this.resourceService.resourceTemplateType$.next(undefined);
        this.resourceService.attributesFromResourceTemplate$.next(undefined);
        this.resourceService.generalInformationForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormGroup({}));
        this.resourceService.facilitiesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormGroup({}));
        this.resourceService.filesForm$.next(new _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormGroup({}));
        this.resourceService.facilitiesByCategory$.next([]);
        this.resourceService.resourceData.next({
          featuredImage: undefined,
          images: [],
          videos: []
        });
        this.resourceService.accommodationPolicy$.next(undefined);
        this.rentalService.refreshRoomList$.next(false);
        this.rentalService.roomList$.next([]);
        this.rentalService.imagesArray$.next([]);
        this.resourceService.travelId$.next(undefined);
        this.resourceService.relatedResources$.next([]);
        this.resourceService.bookingType$.next(undefined);
        this.ticketService.updateArray$.next([]);
        this.ticketService.refreshUpdateArray$.next(false);
        this.ticketService.createArray$.next([]);
        this.ticketService.refreshCreateArray$.next(false);
        this.ticketService.ticketsList$.next([]);
        this.ticketService.refreshTicketList$.next(false);
        this.ticketService.deleteArray$.next([]);
        this.timepickerService.timepickerList$.next([]);
        this.timepickerService.timetableList$.next([]);
        this.timepickerService.timepickerId$.next(undefined);
        this.timepickerService.timePicker$.next(undefined);
        this.timepickerService.changePolicies$.next(undefined);
        this.timepickerService.bookingPolicies$.next(undefined);
        this.resourceService.externalUrl$.next(undefined);
        this.productService.productsList$.next([]);
        this.productService.refreshProductList$.next(false);
        this.productService.deleteProdList$.next([]);
        this.timeslotService.serviceList$.next([]);
        this.timeslotService.refreshServiceList$.next(false);
        this.createResourceService.providerData$.next(undefined);
        this.resourceService.setupListener$.next(undefined);
        this.resourceService.generalInfoListener$.next(undefined);
        this.resourceService.policyRentalListener$.next(undefined);
        this.resourceService.policyMenuListener$.next(undefined);
        this.resourceService.policyListener$.next(undefined);
        this.resourceService.settingsTripsItineraries$.next([]);
        this.resourceService.tripsItinerariesObject$.next({});
        this.menuService.refreshMenuList$.next(false);
        this.menuService.menuList$.next([]);
        this.menuService.menuId$.next(undefined);
        return true;
      } else {
        console.log("DEACTIVATE - no");
        history.pushState(null, '', '');
        return false;
      }
    }
    // return component.canDeactivate ? component.canDeactivate() : true;
  }
  static #_ = this.ctorParameters = () => [{
    type: _features_resources_services_resources_service__WEBPACK_IMPORTED_MODULE_0__.ResourcesService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_10__.Router
  }, {
    type: _features_resources_services_stepper_service__WEBPACK_IMPORTED_MODULE_1__.StepperService
  }, {
    type: _features_resources_services_rental_booking_service__WEBPACK_IMPORTED_MODULE_2__.RentalBookingService
  }, {
    type: _features_resources_services_tickets_booking_service__WEBPACK_IMPORTED_MODULE_3__.TicketsBookingService
  }, {
    type: _features_resources_services_timepicker_service__WEBPACK_IMPORTED_MODULE_4__.TimepickerService
  }, {
    type: _features_resources_services_product_list_service__WEBPACK_IMPORTED_MODULE_5__.ProductListService
  }, {
    type: _features_resources_services_booking_timeslots_service__WEBPACK_IMPORTED_MODULE_6__.BookingTimeslotsService
  }, {
    type: _createResource_service__WEBPACK_IMPORTED_MODULE_7__.CreateResourceService
  }, {
    type: _features_resources_services_menu_service__WEBPACK_IMPORTED_MODULE_8__.MenuService
  }];
};
CanDeactivateGuard = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_12__.Injectable)()], CanDeactivateGuard);


/***/ }),

/***/ 92821:
/*!************************************************************!*\
  !*** ./src/app/shared/_services/createResource.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateResourceService": () => (/* binding */ CreateResourceService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let CreateResourceService = class CreateResourceService {
  constructor(http) {
    this.http = http;
    // refreshTicketList$ = new BehaviorSubject(false)
    this.providerData$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(undefined);
  }
  /** Listeners */
  // refreshTicketListData() {
  //     return this.refreshTicketList$.asObservable();
  // }
  providerData() {
    return this.providerData$.asObservable();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
CreateResourceService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], CreateResourceService);


/***/ }),

/***/ 71104:
/*!************************************************************************************!*\
  !*** ./src/app/standalone-components/product-preview/product-preview.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProductPreviewComponent": () => (/* binding */ ProductPreviewComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _product_preview_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./product-preview.component.html?ngResource */ 51496);
/* harmony import */ var _product_preview_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./product-preview.component.scss?ngResource */ 57011);
/* harmony import */ var _product_preview_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_product_preview_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 94666);





let ProductPreviewComponent = class ProductPreviewComponent {
  constructor() {
    this.defaultPath = 'https://s3-alpha-sig.figma.com/img/fc00/a652/fab9f5b40a9abaf5adeb9165f64e62e5?Expires=1682899200&Signature=eaGhDHW485Fgt9XFy6rzKUvILB-oqQ18Q1qcazv8cEcuwPmjqAs0cygdYtWsjAE-ycXQqRR2pmXH~VB9HmLz6VDoxXHAlXSQtOjwfsb0DlxLP~9l0bggTwh2unAZXXcZ~S21ta~--8t3AlATWi~ZNpRmwjvFQ4LZhhhx0ueMlOD0PEfFTL3~r4VzL2KOJPaoX7lfIO8F~yeIAIrA1aE-4TU4DpTHP0e4pf8HSWRmvzFJ5sJUsVOh7qM1GBEUYvQHq7Qdj7rEimXKHaWHKcCA2skJfyCy~3JNOu6YMxk3zNglxL0GYsScn7Ialv1452lV2Y1KSfNl7AhCnF-Qw1vfAw__&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4';
  }
  ngOnInit() {
    console.log(this.productData.images);
    if (this.productData.images?.length > 0) {
      this.filePath = this.productData.images[0].filePath;
      console.log('imgs', this.productData.images);
    } else {
      this.filePath = null;
    }
  }
  static #_ = this.propDecorators = {
    productData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    list: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }]
  };
};
ProductPreviewComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  selector: 'app-product-preview',
  standalone: true,
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule],
  template: _product_preview_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_product_preview_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ProductPreviewComponent);


/***/ }),

/***/ 85032:
/*!******************************************************************************************************!*\
  !*** ./src/app/standalone-components/service-timeslot-preview/service-timeslot-preview.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ServiceTimeslotPreviewComponent": () => (/* binding */ ServiceTimeslotPreviewComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _service_timeslot_preview_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./service-timeslot-preview.component.html?ngResource */ 31819);
/* harmony import */ var _service_timeslot_preview_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./service-timeslot-preview.component.scss?ngResource */ 99245);
/* harmony import */ var _service_timeslot_preview_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_service_timeslot_preview_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 94666);





let ServiceTimeslotPreviewComponent = class ServiceTimeslotPreviewComponent {
  static #_ = this.propDecorators = {
    serviceData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    list: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }]
  };
};
ServiceTimeslotPreviewComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  selector: 'app-service-timeslot-preview',
  standalone: true,
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule],
  template: _service_timeslot_preview_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_service_timeslot_preview_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ServiceTimeslotPreviewComponent);


/***/ }),

/***/ 55600:
/*!****************************************************************************!*\
  !*** ./src/app/standalone-components/ticket-card/ticket-card.component.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TicketCardComponent": () => (/* binding */ TicketCardComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _ticket_card_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticket-card.component.html?ngResource */ 45231);
/* harmony import */ var _ticket_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ticket-card.component.scss?ngResource */ 57274);
/* harmony import */ var _ticket_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ticket_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 94666);





let TicketCardComponent = class TicketCardComponent {
  ngOnInit() {}
  static #_ = this.propDecorators = {
    ticketData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    list: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }]
  };
};
TicketCardComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  selector: 'app-ticket-card',
  standalone: true,
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule],
  template: _ticket_card_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_ticket_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], TicketCardComponent);


/***/ }),

/***/ 95569:
/*!*********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/provider-create-shared-experience/provider-create-shared-experience.component.scss?ngResource ***!
  \*********************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.dialog-container .content-body .subtitle {\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 0;\n}\n.dialog-container .content-body .choose-activity {\n  gap: 8px;\n}\n.dialog-container .content-body .choose-activity .activity {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 16px;\n  line-height: 20px;\n  background-color: #24398A;\n  color: #FFFFFF;\n  border-radius: 100px;\n  width: -moz-fit-content;\n  width: fit-content;\n  border: 1px solid #24398A;\n}\n.dialog-container .content-body .choose-activity .selected-btn {\n  color: #24398A;\n  background-color: #FFFFFF;\n}\n.dialog-container .content-body .timeslots-container .mat-radio-group {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n.dialog-container .content-body .timeslots-container .mat-radio-group .time-slot {\n  max-width: 335px;\n  border: 1px solid rgba(36, 57, 138, 0.16) !important;\n  border-radius: 20px;\n  padding: 8px 12px;\n}\n.dialog-container .content-body .timeslots-container .mat-radio-group .time-slot .mat-radio-button {\n  width: 100%;\n}\n.dialog-container .content-body :host ::ng-deep .timeslots-container .mat-radio-label {\n  justify-content: space-between;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/provider-create-shared-experience/provider-create-shared-experience.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAZI;EACE,eAAA;EACA,gBAAA;EACA,gBAAA;AAeN;AAZI;EACE,QAAA;AAcN;AAZM;EACE,eAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iBAAA;EACA,iBAAA;EACA,yBDpBQ;ECqBR,cDba;ECcb,oBAAA;EACA,uBAAA;EAAA,kBAAA;EACA,yBAAA;AAcR;AAXM;EACE,cD5BQ;EC6BR,yBDrBa;ACkCrB;AAPI;EACE,aAAA;EACA,sBAAA;EACA,SAAA;AASN;AAPM;EACE,gBAAA;EACA,oDAAA;EACA,mBAAA;EACA,iBAAA;AASR;AAPQ;EACE,WAAA;AASV;AAJI;EACE,8BAAA;AAMN","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n\n.dialog-container{\n\n  .content-body{\n    .subtitle{\n      font-size: 16px;\n      font-weight: 600;\n      margin-bottom: 0;\n    }\n\n    .choose-activity {\n      gap: 8px;\n\n      .activity {\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 16px;\n        line-height: 20px;\n        background-color: $primary-color;\n        color: $background-primary;\n        border-radius: 100px;\n        width: fit-content;\n        border: 1px solid $primary-color;\n      }\n\n      .selected-btn{\n        color: $primary-color;\n        background-color: $background-primary;\n      }\n\n    }\n\n\n    .timeslots-container .mat-radio-group {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      .time-slot {\n        max-width: 335px;\n        border: 1px solid rgba($primary-color, 0.16) !important;\n        border-radius: 20px;\n        padding: 8px 12px;\n\n        .mat-radio-button {\n          width: 100%;\n        }\n      }\n    }\n\n    :host ::ng-deep .timeslots-container .mat-radio-label {\n      justify-content: space-between;\n    }\n  }\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 7782:
/*!*******************************************************************************************************!*\
  !*** ./src/app/features/resources/components/provider-lobby/provider-lobby.component.scss?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\nh1 {\n  text-align: center;\n}\n\n.chat-button {\n  padding: 6px 24px;\n  background: radial-gradient(100% 787.93% at 0% 100%, rgba(0, 178, 255, 0.48) 0%, rgba(0, 178, 255, 0) 100%), #24398A;\n  border-radius: 8px;\n  color: var(--primary-background);\n  border: none;\n}\n\n.lobby-host p {\n  color: #24398A;\n  margin-bottom: 10px;\n}\n\n.lobby-guest .creator {\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n.lobby-guest p {\n  color: #24398A;\n  margin-bottom: 10px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/provider-lobby/provider-lobby.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAdA;EACE,kBAAA;AAiBF;;AAbA;EACE,iBAAA;EACA,oHAAA;EACA,kBAAA;EACA,gCAAA;EACA,YAAA;AAgBF;;AAZE;EACE,cDjBY;ECkBZ,mBAAA;AAeJ;;AAVE;EACE,yCAAA;EACA,kBAAA;EACA,YAAA;EACA,mBAAA;AAaJ;AAVE;EACE,cD/BY;ECgCZ,mBAAA;AAYJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"src/app/theme/styles/components/_colors.scss\";\n\n\nh1 {\n  text-align: center;\n}\n\n\n.chat-button {\n  padding: 6px 24px;\n  background: radial-gradient(100% 787.93% at 0% 100%, rgba(0, 178, 255, 0.48) 0%, rgba(0, 178, 255, 0) 100%), #24398A;\n  border-radius: 8px;\n  color: var(--primary-background);\n  border: none;\n}\n\n.lobby-host {\n  p {\n    color: $primary-color;\n    margin-bottom: 10px;\n  }\n}\n\n.lobby-guest {\n  .creator {\n    border: 1px solid rgba($primary-color, 0.16);\n    border-radius: 8px;\n    padding: 8px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    color: $primary-color;\n    margin-bottom: 10px;\n  }\n\n}\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 27151:
/*!*********************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/resource-radio-option/resource-radio-option.component.scss?ngResource ***!
  \*********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".form-option {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  border: solid 2px rgba(36, 57, 138, 0.24);\n  border-radius: 8px;\n  padding: 25px;\n  text-align: center;\n  width: 280px;\n  height: 324px;\n  transition: ease-out 0.3s;\n}\n.form-option.option-selected {\n  border: solid 2px #24398A;\n}\n.form-option .radio-img {\n  width: 114px;\n  height: 114px;\n  margin-top: 25px;\n  margin-bottom: 75px;\n}\n.form-option .radio-title {\n  font-size: 21px;\n  font-weight: 700;\n}\n.form-option input[type=radio] {\n  /* Add if not using autoprefixer */\n  appearance: none;\n  /* For iOS < 15 to remove gradient background */\n  background-color: #fff;\n  /* Not removed via appearance */\n  margin: 0;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/resource-radio-option/resource-radio-option.component.scss"],"names":[],"mappings":"AAAA;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,sBAAA;EACA,yCAAA;EACA,kBAAA;EACA,aAAA;EACA,kBAAA;EACA,YAAA;EACA,aAAA;EACA,yBAAA;AACF;AAEE;EACE,yBAAA;AAAJ;AAIE;EACE,YAAA;EACA,aAAA;EACA,gBAAA;EACA,mBAAA;AAFJ;AAKE;EACE,eAAA;EACA,gBAAA;AAHJ;AAME;EACE,kCAAA;EAEA,gBAAA;EACA,+CAAA;EACA,sBAAA;EACA,+BAAA;EACA,SAAA;AAJJ","sourcesContent":[".form-option {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  border: solid 2px rgba(36, 57, 138, 0.24);\n  border-radius: 8px;\n  padding: 25px;\n  text-align: center;\n  width: 280px;\n  height: 324px;\n  transition: ease-out 0.3s;\n\n\n  &.option-selected {\n    border: solid 2px #24398A;\n  }\n\n\n  .radio-img {\n    width: 114px;\n    height: 114px;\n    margin-top: 25px;\n    margin-bottom: 75px;\n  }\n\n  .radio-title {\n    font-size: 21px;\n    font-weight: 700;\n  }\n\n  input[type=\"radio\"] {\n    /* Add if not using autoprefixer */\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: #fff;\n    /* Not removed via appearance */\n    margin: 0;\n\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 63971:
/*!*************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/shared-experiences-list/shared-experiences-list.component.scss?ngResource ***!
  \*************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.dialog-container {\n  background-color: #edf0fa;\n  height: 100%;\n  padding: 36px 48px;\n}\n.dialog-container .container-header {\n  background: linear-gradient(180deg, rgba(255, 255, 255, 0) 49.49%, rgba(36, 57, 138, 0.08) 100%), #FFFFFF;\n  padding: 12px;\n  border-radius: 8px 8px 0px 0px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/shared-experiences-list/shared-experiences-list.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACE,yBDOqB;ECNrB,YAAA;EACA,kBAAA;AAkBF;AAhBE;EACE,yGAAA;EACA,aAAA;EACA,8BAAA;AAkBJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n\n.dialog-container {\n  background-color: $background-secondary;\n  height: 100%;\n  padding: 36px 48px;\n\n  .container-header{\n    background: linear-gradient(180deg, rgba(255, 255, 255, 0) 49.49%, rgba(36, 57, 138, 0.08) 100%), #FFFFFF;\n    padding: 12px;\n    border-radius: 8px 8px 0px 0px;\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 39750:
/*!************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/add-mode/add-new-template/add-new-template.component.scss?ngResource ***!
  \************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "nav {\n  --bs-breadcrumb-divider: \"/\";\n  --bs-breadcrumb-font-size:18px;\n  --bs-breadcrumb-color: #24398A;\n}\nnav a {\n  color: #24398A;\n  font-size: 18px;\n  cursor: pointer;\n}\n\n.page-title {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 42px;\n}\n.page-title h1 {\n  color: #24398A;\n  font-size: 32px;\n  margin: 0;\n}\n\n.stepper-card-title {\n  background-color: white;\n  padding: 24px 72px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n.stepper-card-title h2 {\n  margin: 0;\n  color: #24398A;\n  font-size: 24px;\n  font-weight: 700;\n}\n\n.stepper-card-content {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 21px;\n  background-color: white;\n  padding: 32px 24px;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/add-mode/add-new-template/add-new-template.component.scss"],"names":[],"mappings":"AAAA;EACE,4BAAA;EACA,8BAAA;EACA,8BAAA;AACF;AACG;EACC,cAAA;EACA,eAAA;EACC,eAAA;AACL;;AAGA;EACE,aAAA;EACA,eAAA;EACA,mBAAA;EACA,8BAAA;EACA,mBAAA;AAAF;AAEE;EACE,cAAA;EACA,eAAA;EACA,SAAA;AAAJ;;AAIA;EACE,uBAAA;EACA,kBAAA;EACA,wDAAA;AADF;AAGE;EACE,SAAA;EACA,cAAA;EACA,eAAA;EACA,gBAAA;AADJ;;AAKA;EACE,aAAA;EACA,eAAA;EACA,mBAAA;EACA,uBAAA;EACA,SAAA;EAEA,uBAAA;EACA,kBAAA;AAHF","sourcesContent":["nav{\n  --bs-breadcrumb-divider: '/';\n  --bs-breadcrumb-font-size:18px;\n  --bs-breadcrumb-color: #24398A;\n\n   a{\n    color: #24398A;\n    font-size: 18px;\n     cursor: pointer;\n  }\n}\n\n.page-title {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 42px;\n\n  h1 {\n    color: #24398A;\n    font-size: 32px;\n    margin: 0;\n  }\n}\n\n.stepper-card-title {\n  background-color: white;\n  padding: 24px 72px;\n  border-bottom: solid #24398A29 1px;\n\n  h2 {\n    margin: 0;\n    color: #24398A;\n    font-size: 24px;\n    font-weight: 700;\n  }\n}\n\n.stepper-card-content {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 21px;\n\n  background-color: white;\n  padding: 32px 24px;\n}\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 41218:
/*!********************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/facilities/facilities.component.scss?ngResource ***!
  \********************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#facilities .section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#facilities .section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#facilities .section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#facilities .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#facilities .facility-category-name {\n  font-size: 24px;\n  color: #231F20;\n  font-weight: 700;\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/facilities/facilities.component.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;AACE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AACJ;;AAOE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAJJ;AAMI;EACE,eAAA;EACA,cAAA;AAJN;AAOI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AALN;AASE;EACE,mBAAA;EACA,4FAAA;AAPJ;AAWE;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AATJ;;AAcA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAXF;AAaE;EACE,aAAA;EACA,uBAAA;AAXJ","sourcesContent":[".save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n\n#facilities {\n\n  //margin-bottom: 50px;\n\n  .section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  // Facility Section\n  .facility-category-name {\n    font-size: 24px;\n    color: #231F20;\n    font-weight: 700;\n  }\n\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 39348:
/*!**************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/gallery/gallery.component.scss?ngResource ***!
  \**************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n:root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n.section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n.section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n\n.section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}\n\n.image-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: 2px solid rgba(36, 57, 138, 0.08);\n  border-radius: 8px;\n  overflow: hidden;\n}\n.image-container .no-image {\n  width: 100%;\n  min-height: inherit;\n  height: 120px;\n  background: rgba(36, 57, 138, 0.04);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #24398A;\n  cursor: pointer;\n  gap: 0.75rem;\n}\n.image-container .no-image:before {\n  content: \"\\f03e\";\n  font-family: \"Font Awesome 5 Free\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 2.25rem;\n}\n.image-container .no-image:after {\n  font-size: 1rem;\n  content: attr(translatedContent);\n}\n.image-container .btn-thumbnail, .image-container .btn-gallery {\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(36, 57, 138, 0.16);\n  border-radius: 100%;\n  border: none;\n}\n.image-container .btn-thumbnail i, .image-container .btn-gallery i {\n  color: var(--primary-background);\n  font-weight: 900;\n  font-size: 16px;\n}\n.image-container .btn-thumbnail {\n  position: absolute;\n  top: 2.125rem;\n  right: 2.125rem;\n}\n.image-container .btn-gallery {\n  position: absolute;\n  top: 0.875rem;\n  right: 0.875rem;\n}\n.image-container .gallery-img {\n  height: 120px !important;\n  width: 100%;\n  object-fit: cover;\n}\n.image-container .video {\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n}\n.image-container .featured-image {\n  width: 100%;\n  height: 400px !important;\n  object-fit: cover;\n}\n\n#gallery .image-container img.img-fluid {\n  object-fit: cover;\n  height: 100%;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/gallery/gallery.component.scss","webpack://./src/app/theme/styles/components/_colors.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;AAAE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AAEJ;;ACOA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ADJF;;ACOA;EACE,6BAAA;EACA,+BAAA;ADJF;;ACgCA;EACI,oCAAA;AD7BJ;;ACgCA;EACQ,kCAAA;AD7BR;;AAfA;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAkBF;AAhBE;EACE,eAAA;EACA,cAAA;AAkBJ;AAfE;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAiBJ;;AAbA;EACE,mBAAA;EACA,4FAAA;AAgBF;;AAZA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAeF;AAbE;EACE,aAAA;EACA,uBAAA;AAeJ;;AAJA;EACE,kBAAA;EACA,WAAA;EAEA,YAAA;EACA,yCAAA;EACA,kBAAA;EACA,gBAAA;AAMF;AAJE;EACE,WAAA;EACA,mBAAA;EACA,aAAA;EACA,mCAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,cC1EY;ED2EZ,eAAA;EACA,YAAA;AAMJ;AAJI;EACE,gBAAA;EACA,kCAAA;EACA,kBAAA;EACA,gBAAA;EACA,kBAAA;AAMN;AAHI;EACE,eAAA;EACA,gCAAA;AAKN;AACE;EACE,WAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,mCAAA;EACA,mBAAA;EACA,YAAA;AACJ;AACI;EACE,gCAAA;EACA,gBAAA;EACA,eAAA;AACN;AAGE;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AADJ;AAIE;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AAFJ;AAIE;EACE,wBAAA;EACA,WAAA;EACA,iBAAA;AAFJ;AAKE;EACE,YAAA;EACA,WAAA;EACA,iBAAA;AAHJ;AAME;EACE,WAAA;EACA,wBAAA;EACA,iBAAA;AAJJ;;AAQA;EACE,iBAAA;EACA,YAAA;AALF","sourcesContent":[".save-btn{\n  margin-top: -90px;\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n\n@import \"/src/app/theme/styles/components/colors\";\n\n.section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n  i {\n    font-size: 32px;\n    color: #24398A;\n  }\n\n  h2 {\n    font-size: 24px;\n    font-weight: 700;\n    color: #24398A;\n    margin-left: 10px;\n    margin-bottom: 0;\n  }\n}\n\n.section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}\n//.single-image{\n//  height: 120px;\n//  max-height: 120px;\n//  object-fit: cover;\n//  width: 100%;\n//}\n\n.image-container {\n  position: relative;\n  width: 100%;\n  //min-height: 7.5rem;\n  height:100%;\n  border: 2px solid rgba($primary-color, 0.08);\n  border-radius: 8px;\n  overflow: hidden;\n\n  & .no-image {\n    width: 100%;\n    min-height: inherit;\n    height: 120px;\n    background: rgba($primary-color, 0.04);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: $primary-color;\n    cursor: pointer;\n    gap: 0.75rem;\n\n    &:before {\n      content: '\\f03e';\n      font-family: 'Font Awesome 5 Free';\n      font-style: normal;\n      font-weight: 400;\n      font-size: 2.25rem;\n    }\n\n    &:after {\n      font-size: 1rem;\n      content: attr(translatedContent);\n    }\n  }\n\n\n\n  .btn-thumbnail, .btn-gallery {\n    width: 2rem;\n    height: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba($primary-color, 0.16);\n    border-radius: 100%;\n    border: none;\n\n    i {\n      color: var(--primary-background);\n      font-weight: 900;\n      font-size: 16px;\n    }\n  }\n\n  .btn-thumbnail {\n    position: absolute;\n    top: 2.125rem;\n    right: 2.125rem;\n  }\n\n  .btn-gallery {\n    position: absolute;\n    top: 0.875rem;\n    right: 0.875rem;\n  }\n  .gallery-img{\n    height: 120px!important;\n    width: 100%;\n    object-fit: cover;\n  }\n\n  .video{\n    height:100%;\n    width: 100%;\n    object-fit: cover;\n  }\n\n  .featured-image{\n    width: 100%;\n    height: 400px!important;\n    object-fit: cover;\n  }\n}\n\n#gallery .image-container img.img-fluid {\n  object-fit: cover;\n  height: 100%;\n}\n","// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 59891:
/*!****************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/general-informations/general-informations.component.scss?ngResource ***!
  \****************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#general-info .section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#general-info .section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#general-info .section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#general-info .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#general-info .facility-category-name {\n  font-size: 24px;\n  color: #231F20;\n  font-weight: 700;\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/general-informations/general-informations.component.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;AACE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AACJ;;AAOE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAJJ;AAMI;EACE,eAAA;EACA,cAAA;AAJN;AAOI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AALN;AASE;EACE,mBAAA;EACA,4FAAA;AAPJ;AAWE;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AATJ;;AAcA;EACE,aAAA;EACA,mBAAA;EACA,oBAAA;EACA,iBAAA;EACA,kBAAA;AAXF;AAaE;EACE,aAAA;EACA,uBAAA;AAXJ","sourcesContent":[".save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n//Add && Edit Layout\n#general-info {\n\n  //margin-bottom: 50px;\n\n  .section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  // Facility Section\n  .facility-category-name {\n    font-size: 24px;\n    color: #231F20;\n    font-weight: 700;\n  }\n\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 667:
/*!**************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/payment/payment.component.scss?ngResource ***!
  \**************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n#payment .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#payment .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#payment .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#payment .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#payment .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#payment .section-content .first-card, #payment .section-content .second-card, #payment .section-content .third-card {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  padding: 48px;\n  margin-bottom: 24px;\n}\n#payment .section-content .first-card .info-text {\n  color: #24398A;\n}\n#payment .section-content .first-card .pair .icon-class {\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  color: #24398A;\n  font-size: 40px;\n  width: 128px;\n  min-width: 128px;\n  height: 128px;\n}\n#payment .section-content .first-card .pair .icon-text {\n  color: #24398A;\n  font-size: 12px;\n}\n#payment .section-content .second-card .percent {\n  color: #FFCC29;\n  font-size: 48px;\n  font-weight: 700;\n  line-height: 50px;\n}\n#payment .section-content .second-card p {\n  color: #24398A;\n}\n#payment .section-content .third-card p {\n  color: #24398A;\n  font-weight: 300;\n}\n#payment .section-content .third-card .icon-container {\n  width: 128px;\n  min-width: 128px;\n  height: 128px;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  font-size: 40px;\n  font-weight: 900;\n  color: #24398A;\n}\n#payment .section-content .tab-content {\n  padding: 24px;\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/payment/payment.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAbE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAgBJ;AAdI;EACE,eAAA;EACA,cAAA;AAgBN;AAbI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAeN;AAXE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAaJ;AAVE;EACE,mBAAA;EACA,4FAAA;AAYJ;AAVI;EACE,2CAAA;EACA,yCAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;AAYN;AAPM;EACE,cD7CQ;ACsDhB;AALQ;EACE,yCAAA;EACA,mBAAA;EACA,cDpDM;ECqDN,eAAA;EACA,YAAA;EACA,gBAAA;EACA,aAAA;AAOV;AAFQ;EACE,cD9DM;EC+DN,eAAA;AAIV;AAGM;EACE,cDrEU;ECsEV,eAAA;EACA,gBAAA;EACA,iBAAA;AADR;AAGM;EACE,cD7EQ;AC4EhB;AAMM;EACE,cDnFQ;ECoFR,gBAAA;AAJR;AAMM;EACE,YAAA;EACA,gBAAA;EACA,aAAA;EAEA,yCAAA;EACA,mBAAA;EAEA,eAAA;EACA,gBAAA;EACA,cDhGQ;AC0FhB;AAUI;EACE,aAAA;AARN;;AAcA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAXF;AAaE;EACE,aAAA;EACA,uBAAA;AAXJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n\n#payment {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n\n    .first-card, .second-card, .third-card{\n      background-color: var(--primary-background);\n      border: 1px solid rgba($primary-color, 0.16);\n      border-radius: 8px;\n      padding: 48px;\n      margin-bottom: 24px;\n    }\n\n    .first-card{\n\n      .info-text{\n        color:$primary-color;\n      }\n\n      .pair{\n        .icon-class{\n          border: 1px solid rgba($primary-color, 0.16);\n          border-radius: 90px;\n          color: $primary-color;\n          font-size: 40px;\n          width: 128px;\n          min-width: 128px;\n          height: 128px;\n        }\n\n\n\n        .icon-text{\n          color:$primary-color;\n          font-size: 12px\n        }\n      }\n\n    }\n\n    .second-card{\n      .percent{\n        color:$secondary-color;\n        font-size:48px;\n        font-weight: 700;\n        line-height: 50px;\n      }\n      p{\n        color: $primary-color;\n      }\n    }\n\n    .third-card{\n      p{\n        color: $primary-color;\n        font-weight: 300;\n      }\n      .icon-container{\n        width: 128px;\n        min-width: 128px;\n        height: 128px;\n\n        border: 1px solid rgba($primary-color, 0.16);\n        border-radius: 90px;\n\n        font-size: 40px;\n        font-weight: 900;\n        color: $primary-color;\n      }\n    }\n\n    .tab-content {\n      padding: 24px;\n    }\n  }\n}\n\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 98760:
/*!*************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/no-policy/no-policy.component.scss?ngResource ***!
  \*************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#policy .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#policy .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#policy .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#policy .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#policy .section-content {\n  padding: 46px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#policy .section-content .tab-content {\n  padding: 24px;\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/policy/no-policy/no-policy.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAhBA;EACE,iBAAA;AAmBF;AAjBE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AAmBJ;;AAbE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAgBJ;AAdI;EACE,eAAA;EACA,cAAA;AAgBN;AAbI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAeN;AAXE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAaJ;AAVE;EACE,aAAA;EACA,4FAAA;AAYJ;AAVI;EACE,aAAA;AAYN;;AAPA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAUF;AARE;EACE,aAAA;EACA,uBAAA;AAUJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n.save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba($paragraph, 48%);\n    background: rgba($primary-color, 0%) !important;\n    color: rgba($paragraph, 48%);\n  }\n}\n\n#policy {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n\n    .tab-content{\n      padding: 24px;\n    }\n  }\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 91630:
/*!*****************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy-cultural-booking/policy-cultural-booking.component.scss?ngResource ***!
  \*****************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#policy-cultural-booking .section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#policy-cultural-booking .section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#policy-cultural-booking .section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#policy-cultural-booking .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#policy-cultural-booking .facility-category-name {\n  font-size: 24px;\n  color: #231F20;\n  font-weight: 700;\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy-cultural-booking/policy-cultural-booking.component.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;AACE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AACJ;;AAOE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAJJ;AAMI;EACE,eAAA;EACA,cAAA;AAJN;AAOI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AALN;AASE;EACE,mBAAA;EACA,4FAAA;AAPJ;AAWE;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AATJ;;AAcA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAXF;AAaE;EACE,aAAA;EACA,uBAAA;AAXJ","sourcesContent":[".save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n//Add && Edit Layout\n#policy-cultural-booking {\n\n  //margin-bottom: 50px;\n\n  .section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  // Facility Section\n  .facility-category-name {\n    font-size: 24px;\n    color: #231F20;\n    font-weight: 700;\n  }\n\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 17718:
/*!*************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy-rental-booking/policy-rental-booking.component.scss?ngResource ***!
  \*************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#policy-rental-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#policy-rental-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#policy-rental-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#policy-rental-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#policy-rental-booking .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#policy-rental-booking .section-content p {\n  font-weight: 700;\n}\n#policy-rental-booking .section-content .check-io {\n  background-color: var(--primary-background);\n  border-radius: 8px;\n  padding: 24px;\n}\n#policy-rental-booking .section-content .check-io .group {\n  border: none;\n  gap: 5px;\n}\n#policy-rental-booking .section-content .check-io .group .mat-button-toggle.btn-tog {\n  width: 35%;\n  height: 50px;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n}\n#policy-rental-booking .section-content .check-io .group .mat-button-toggle.btn-tog:hover {\n  border-radius: 90px;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n}\n#policy-rental-booking .section-content .check-io .group .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  background-color: #24398A;\n  color: var(--primary-background);\n  border-radius: 90px;\n}\n#policy-rental-booking .section-content mat-form-field {\n  width: 20%;\n  margin-left: 10px;\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy-rental-booking/policy-rental-booking.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAhBA;EACE,iBAAA;AAmBF;AAjBE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AAmBJ;;AAbE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAgBJ;AAdI;EACE,eAAA;EACA,cAAA;AAgBN;AAbI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAeN;AAXE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAaJ;AAVE;EACE,mBAAA;EACA,4FAAA;AAYJ;AAXI;EACE,gBAAA;AAaN;AAVI;EACE,2CAAA;EACA,kBAAA;EACA,aAAA;AAYN;AAVM;EACE,YAAA;EACA,QAAA;AAYR;AAVQ;EACE,UAAA;EACA,YAAA;EAEA,yCAAA;EACA,mBAAA;AAWV;AATU;EACE,mBAAA;EACA,yCAAA;AAWZ;AAPQ;EACE,yBDrEM;ECsEN,gCAAA;EACA,mBAAA;AASV;AAJI;EACE,UAAA;EACA,iBAAA;AAMN;;AADA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAIF;AAFE;EACE,aAAA;EACA,uBAAA;AAIJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n.save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba($paragraph, 48%);\n    background: rgba($primary-color, 0%) !important;\n    color: rgba($paragraph, 48%);\n  }\n}\n\n#policy-rental-booking {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n    p{\n      font-weight: 700;\n    }\n\n    .check-io {\n      background-color: var(--primary-background);\n      border-radius: 8px;\n      padding: 24px;\n\n      .group {\n        border: none;\n        gap: 5px;\n\n        .mat-button-toggle.btn-tog {\n          width:35%;\n          height: 50px;\n          //background-color: var(--primary-background);\n          border: 1px solid rgba($primary-color, 0.16);\n          border-radius: 90px;\n\n          &:hover {\n            border-radius: 90px;\n            border: 1px solid rgba($primary-color, 0.16);\n          }\n        }\n\n        .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n          background-color: $primary-color;\n          color: var(--primary-background);\n          border-radius: 90px;}\n      }\n    }\n\n\n    mat-form-field{\n      width: 20%;\n      margin-left: 10px;\n    }\n  }\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 24942:
/*!************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy.component.scss?ngResource ***!
  \************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy.component.scss"],"names":[],"mappings":"AAAA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AACF;AACE;EACE,aAAA;EACA,uBAAA;AACJ","sourcesContent":[".stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 52948:
/*!*****************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/restaurant-policy/restaurant-policy.component.scss?ngResource ***!
  \*****************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#policy .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#policy .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#policy .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#policy .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#policy .section-content {\n  padding: 46px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#policy .section-content .tab-content {\n  padding: 24px;\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/policy/restaurant-policy/restaurant-policy.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAhBA;EACE,iBAAA;AAmBF;AAjBE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AAmBJ;;AAbE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAgBJ;AAdI;EACE,eAAA;EACA,cAAA;AAgBN;AAbI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAeN;AAXE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAaJ;AAVE;EACE,aAAA;EACA,4FAAA;AAYJ;AAVI;EACE,aAAA;AAYN;;AAPA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAUF;AARE;EACE,aAAA;EACA,uBAAA;AAUJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n.save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n\n#policy {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n\n    .tab-content{\n      padding: 24px;\n    }\n  }\n}\n\n.stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n\n  .next-step {\n    display: flex;\n    justify-content: center;\n  }\n\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 3147:
/*!*********************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/related-resource/cultural-related-res/cultural-related-res.component.scss?ngResource ***!
  \*********************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#rental-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#rental-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#rental-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#rental-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#rental-booking .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#rental-booking .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#rental-booking .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#rental-booking .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#rental-booking .list-content .add-room-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#rental-booking #room-list {\n  max-height: 900px;\n  overflow-y: auto;\n}\n#rental-booking #room-list .room-container {\n  border-radius: 8px;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n}\n#rental-booking #room-list .room-container .room-header {\n  background-color: #24398A;\n  padding: 8px 12px;\n  border-radius: 8px 0 0 0;\n}\n#rental-booking #room-list .room-container .room-header h4 {\n  color: white;\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n#rental-booking #room-list .room-container .room-body {\n  padding: 8px 12px;\n}\n#rental-booking #room-list .room-container .room-body .section-title {\n  font-weight: 700;\n  color: black;\n  font-size: 14px;\n  margin-bottom: 0;\n}\n#rental-booking #room-list .room-container .room-body .section-title span {\n  font-weight: 400;\n}\n#rental-booking #room-list .room-container .room-body .bed-type {\n  display: flex;\n  align-items: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  padding: 15px 0 15px 20px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type i {\n  color: #24398A;\n  font-size: 27px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type span {\n  font-weight: 700;\n  font-size: 12px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price, #rental-booking #room-list .room-container .room-body .weekend-price {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 12px 24px;\n  border: 1px solid #24398A;\n  border-radius: 8px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price h5, #rental-booking #room-list .room-container .room-body .weekend-price h5 {\n  font-weight: 700;\n  font-size: 16px;\n  color: black;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price, #rental-booking #room-list .room-container .room-body .weekend-price .price {\n  font-weight: 700;\n  font-size: 48px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price-per-night, #rental-booking #room-list .room-container .room-body .weekend-price .price-per-night {\n  font-weight: 700;\n  font-size: 16px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .delete-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n  border-radius: 0 8px 0 0;\n  border: 0;\n  color: white;\n  width: 40px;\n  height: 45px;\n}\n#rental-booking #room-list .room-container .delete-room-btn i {\n  font-size: 20px;\n}\n#rental-booking #room-list .room-container .edit-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  border-radius: 0 0 8px 0;\n  border: 0;\n  height: 50px;\n  color: white;\n}\n#rental-booking #room-list .room-container .edit-room-btn i {\n  font-size: 15px;\n}\n#rental-booking .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#rental-booking .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/related-resource/cultural-related-res/cultural-related-res.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACE,iBAAA;AAkBF;AAhBE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AAkBJ;;AAZE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAeJ;AAbI;EACE,eAAA;EACA,cAAA;AAeN;AAZI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAcN;AAVE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAYJ;AATE;EACE,mBAAA;EACA,4FAAA;AAWJ;AARE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AAUJ;AARI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AAUN;AANE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AAQJ;AALI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AAON;AAFE;EACE,iBAAA;EACA,gBAAA;AAIJ;AAFI;EACE,kBAAA;EACA,yCAAA;AAIN;AAFM;EACE,yBAAA;EACA,iBAAA;EACA,wBAAA;AAIR;AAFQ;EACE,YAAA;EACA,SAAA;EACA,eAAA;EACA,gBAAA;AAIV;AAAM;EACE,iBAAA;AAER;AAAQ;EACE,gBAAA;EACA,YAAA;EACA,eAAA;EACA,gBAAA;AAEV;AAAU;EACE,gBAAA;AAEZ;AAEQ;EACE,aAAA;EACA,mBAAA;EACA,yCAAA;EACA,mBAAA;EACA,yBAAA;AAAV;AAEU;EACE,cAAA;EACA,eAAA;AAAZ;AAGU;EACE,gBAAA;EACA,eAAA;AADZ;AAKQ;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AAHV;AAKU;EACE,gBAAA;EACA,eAAA;EACA,YAAA;AAHZ;AAMU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAJZ;AAOU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AALZ;AAUM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iIAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AARR;AAUQ;EACE,eAAA;AARV;AAYM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iKAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,YAAA;AAVR;AAYQ;EAEE,eAAA;AAXV;AAkBE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAhBJ;AAkBI;EACE,aAAA;EACA,uBAAA;AAhBN","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n\n.save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba($paragraph, 48%);\n    background: rgba($primary-color, 0%) !important;\n    color: rgba($paragraph, 48%);\n  }\n}\n\n#rental-booking {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n\n    .add-room-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n\n  #room-list {\n    max-height: 900px;\n    overflow-y: auto;\n\n    .room-container {\n      border-radius: 8px;\n      box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n\n      .room-header {\n        background-color: #24398A;\n        padding: 8px 12px;\n        border-radius: 8px 0 0 0;\n\n        h4 {\n          color: white;\n          margin: 0;\n          font-size: 24px;\n          font-weight: 700;\n        }\n      }\n\n      .room-body {\n        padding: 8px 12px;\n\n        .section-title {\n          font-weight: 700;\n          color: black;\n          font-size: 14px;\n          margin-bottom: 0;\n\n          span {\n            font-weight: 400;\n          }\n        }\n\n        .bed-type {\n          display: flex;\n          align-items: center;\n          border: 1px solid rgba(36, 57, 138, 0.16);\n          border-radius: 90px;\n          padding: 15px 0 15px 20px;\n\n          i {\n            color: #24398A;\n            font-size: 27px;\n          }\n\n          span {\n            font-weight: 700;\n            font-size: 12px;\n          }\n        }\n\n        .regular-price, .weekend-price {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          padding: 12px 24px;\n          border: 1px solid #24398A;\n          border-radius: 8px;\n\n          h5 {\n            font-weight: 700;\n            font-size: 16px;\n            color: black;\n          }\n\n          .price {\n            font-weight: 700;\n            font-size: 48px;\n            color: #24398A;\n          }\n\n          .price-per-night {\n            font-weight: 700;\n            font-size: 16px;\n            color: #24398A;\n          }\n        }\n      }\n\n      .delete-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n        border-radius: 0 8px 0 0;\n        border: 0;\n        color: white;\n        width: 40px;\n        height: 45px;\n\n        i {\n          font-size: 20px;\n        }\n      }\n\n      .edit-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        border-radius: 0 0 8px 0;\n        border: 0;\n        height: 50px;\n        color: white;\n\n        i {\n\n          font-size: 15px;\n        }\n      }\n    }\n  }\n\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n}\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 75899:
/*!************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/apply-job/apply-job.component.scss?ngResource ***!
  \************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "#rental-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#rental-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#rental-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#rental-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#rental-booking .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#rental-booking .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#rental-booking .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#rental-booking .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#rental-booking .list-content .add-room-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#rental-booking #room-list {\n  max-height: 900px;\n  overflow-y: auto;\n}\n#rental-booking #room-list .room-container {\n  border-radius: 8px;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n}\n#rental-booking #room-list .room-container .room-header {\n  background-color: #24398A;\n  padding: 8px 12px;\n  border-radius: 8px 0 0 0;\n}\n#rental-booking #room-list .room-container .room-header h4 {\n  color: white;\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n#rental-booking #room-list .room-container .room-body {\n  padding: 8px 12px;\n}\n#rental-booking #room-list .room-container .room-body .section-title {\n  font-weight: 700;\n  color: black;\n  font-size: 14px;\n  margin-bottom: 0;\n}\n#rental-booking #room-list .room-container .room-body .section-title span {\n  font-weight: 400;\n}\n#rental-booking #room-list .room-container .room-body .bed-type {\n  display: flex;\n  align-items: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  padding: 15px 0 15px 20px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type i {\n  color: #24398A;\n  font-size: 27px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type span {\n  font-weight: 700;\n  font-size: 12px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price, #rental-booking #room-list .room-container .room-body .weekend-price {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 12px 24px;\n  border: 1px solid #24398A;\n  border-radius: 8px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price h5, #rental-booking #room-list .room-container .room-body .weekend-price h5 {\n  font-weight: 700;\n  font-size: 16px;\n  color: black;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price, #rental-booking #room-list .room-container .room-body .weekend-price .price {\n  font-weight: 700;\n  font-size: 48px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price-per-night, #rental-booking #room-list .room-container .room-body .weekend-price .price-per-night {\n  font-weight: 700;\n  font-size: 16px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .delete-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n  border-radius: 0 8px 0 0;\n  border: 0;\n  color: white;\n  width: 40px;\n  height: 45px;\n}\n#rental-booking #room-list .room-container .delete-room-btn i {\n  font-size: 20px;\n}\n#rental-booking #room-list .room-container .edit-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  border-radius: 0 0 8px 0;\n  border: 0;\n  height: 50px;\n  color: white;\n}\n#rental-booking #room-list .room-container .edit-room-btn i {\n  font-size: 15px;\n}\n#rental-booking .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#rental-booking .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/apply-job/apply-job.component.scss"],"names":[],"mappings":"AAEE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AADJ;AAGI;EACE,eAAA;EACA,cAAA;AADN;AAII;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAFN;AAME;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAJJ;AAOE;EACE,mBAAA;EACA,4FAAA;AALJ;AAQE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AANJ;AAQI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AANN;AAUE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AARJ;AAWI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AATN;AAcE;EACE,iBAAA;EACA,gBAAA;AAZJ;AAcI;EACE,kBAAA;EACA,yCAAA;AAZN;AAcM;EACE,yBAAA;EACA,iBAAA;EACA,wBAAA;AAZR;AAcQ;EACE,YAAA;EACA,SAAA;EACA,eAAA;EACA,gBAAA;AAZV;AAgBM;EACE,iBAAA;AAdR;AAgBQ;EACE,gBAAA;EACA,YAAA;EACA,eAAA;EACA,gBAAA;AAdV;AAgBU;EACE,gBAAA;AAdZ;AAkBQ;EACE,aAAA;EACA,mBAAA;EACA,yCAAA;EACA,mBAAA;EACA,yBAAA;AAhBV;AAkBU;EACE,cAAA;EACA,eAAA;AAhBZ;AAmBU;EACE,gBAAA;EACA,eAAA;AAjBZ;AAqBQ;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AAnBV;AAqBU;EACE,gBAAA;EACA,eAAA;EACA,YAAA;AAnBZ;AAsBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AApBZ;AAuBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AArBZ;AA0BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iIAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAxBR;AA0BQ;EACE,eAAA;AAxBV;AA4BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iKAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,YAAA;AA1BR;AA4BQ;EAEE,eAAA;AA3BV;AAkCE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAhCJ;AAkCI;EACE,aAAA;EACA,uBAAA;AAhCN","sourcesContent":["#rental-booking {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n\n    .add-room-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n\n  #room-list {\n    max-height: 900px;\n    overflow-y: auto;\n\n    .room-container {\n      border-radius: 8px;\n      box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n\n      .room-header {\n        background-color: #24398A;\n        padding: 8px 12px;\n        border-radius: 8px 0 0 0;\n\n        h4 {\n          color: white;\n          margin: 0;\n          font-size: 24px;\n          font-weight: 700;\n        }\n      }\n\n      .room-body {\n        padding: 8px 12px;\n\n        .section-title {\n          font-weight: 700;\n          color: black;\n          font-size: 14px;\n          margin-bottom: 0;\n\n          span {\n            font-weight: 400;\n          }\n        }\n\n        .bed-type {\n          display: flex;\n          align-items: center;\n          border: 1px solid rgba(36, 57, 138, 0.16);\n          border-radius: 90px;\n          padding: 15px 0 15px 20px;\n\n          i {\n            color: #24398A;\n            font-size: 27px;\n          }\n\n          span {\n            font-weight: 700;\n            font-size: 12px;\n          }\n        }\n\n        .regular-price, .weekend-price {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          padding: 12px 24px;\n          border: 1px solid #24398A;\n          border-radius: 8px;\n\n          h5 {\n            font-weight: 700;\n            font-size: 16px;\n            color: black;\n          }\n\n          .price {\n            font-weight: 700;\n            font-size: 48px;\n            color: #24398A;\n          }\n\n          .price-per-night {\n            font-weight: 700;\n            font-size: 16px;\n            color: #24398A;\n          }\n        }\n      }\n\n      .delete-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n        border-radius: 0 8px 0 0;\n        border: 0;\n        color: white;\n        width: 40px;\n        height: 45px;\n\n        i {\n          font-size: 20px;\n        }\n      }\n\n      .edit-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        border-radius: 0 0 8px 0;\n        border: 0;\n        height: 50px;\n        color: white;\n\n        i {\n\n          font-size: 15px;\n        }\n      }\n    }\n  }\n\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n}\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 24605:
/*!****************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/car-booking/car-booking.component.scss?ngResource ***!
  \****************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 6575:
/*!**************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/cultural-booking/cultural-booking.component.scss?ngResource ***!
  \**************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n\n#rental-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#rental-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#rental-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#rental-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#rental-booking .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#rental-booking .section-content .panel {\n  overflow: auto;\n  height: 100%;\n}\n#rental-booking .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#rental-booking .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#rental-booking .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#rental-booking .list-content .add-room-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#rental-booking #room-list {\n  max-height: 900px;\n  overflow-y: auto;\n}\n#rental-booking #room-list .room-container {\n  border-radius: 8px;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n}\n#rental-booking #room-list .room-container .room-header {\n  background-color: #24398A;\n  padding: 8px 12px;\n  border-radius: 8px 0 0 0;\n}\n#rental-booking #room-list .room-container .room-header h4 {\n  color: white;\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n#rental-booking #room-list .room-container .room-body {\n  padding: 8px 12px;\n}\n#rental-booking #room-list .room-container .room-body .section-title {\n  font-weight: 700;\n  color: black;\n  font-size: 14px;\n  margin-bottom: 0;\n}\n#rental-booking #room-list .room-container .room-body .section-title span {\n  font-weight: 400;\n}\n#rental-booking #room-list .room-container .room-body .bed-type {\n  display: flex;\n  align-items: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  padding: 15px 0 15px 20px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type i {\n  color: #24398A;\n  font-size: 27px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type span {\n  font-weight: 700;\n  font-size: 12px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price, #rental-booking #room-list .room-container .room-body .weekend-price {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 12px 24px;\n  border: 1px solid #24398A;\n  border-radius: 8px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price h5, #rental-booking #room-list .room-container .room-body .weekend-price h5 {\n  font-weight: 700;\n  font-size: 16px;\n  color: black;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price, #rental-booking #room-list .room-container .room-body .weekend-price .price {\n  font-weight: 700;\n  font-size: 48px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price-per-night, #rental-booking #room-list .room-container .room-body .weekend-price .price-per-night {\n  font-weight: 700;\n  font-size: 16px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .delete-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n  border-radius: 0 8px 0 0;\n  border: 0;\n  color: white;\n  width: 40px;\n  height: 45px;\n}\n#rental-booking #room-list .room-container .delete-room-btn i {\n  font-size: 20px;\n}\n#rental-booking #room-list .room-container .edit-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  border-radius: 0 0 8px 0;\n  border: 0;\n  height: 50px;\n  color: white;\n}\n#rental-booking #room-list .room-container .edit-room-btn i {\n  font-size: 15px;\n}\n#rental-booking .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#rental-booking .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/cultural-booking/cultural-booking.component.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;;AAIE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AADJ;AAGI;EACE,eAAA;EACA,cAAA;AADN;AAII;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAFN;AAME;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAJJ;AAOE;EACE,mBAAA;EACA,4FAAA;AALJ;AAOI;EACE,cAAA;EACA,YAAA;AALN;AASE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AAPJ;AASI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AAPN;AAWE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AATJ;AAYI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AAVN;AAeE;EACE,iBAAA;EACA,gBAAA;AAbJ;AAeI;EACE,kBAAA;EACA,yCAAA;AAbN;AAeM;EACE,yBAAA;EACA,iBAAA;EACA,wBAAA;AAbR;AAeQ;EACE,YAAA;EACA,SAAA;EACA,eAAA;EACA,gBAAA;AAbV;AAiBM;EACE,iBAAA;AAfR;AAiBQ;EACE,gBAAA;EACA,YAAA;EACA,eAAA;EACA,gBAAA;AAfV;AAiBU;EACE,gBAAA;AAfZ;AAmBQ;EACE,aAAA;EACA,mBAAA;EACA,yCAAA;EACA,mBAAA;EACA,yBAAA;AAjBV;AAmBU;EACE,cAAA;EACA,eAAA;AAjBZ;AAoBU;EACE,gBAAA;EACA,eAAA;AAlBZ;AAsBQ;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AApBV;AAsBU;EACE,gBAAA;EACA,eAAA;EACA,YAAA;AApBZ;AAuBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AArBZ;AAwBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAtBZ;AA2BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iIAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAzBR;AA2BQ;EACE,eAAA;AAzBV;AA6BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iKAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,YAAA;AA3BR;AA6BQ;EAEE,eAAA;AA5BV;AAmCE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAjCJ;AAmCI;EACE,aAAA;EACA,uBAAA;AAjCN","sourcesContent":[".save-btn{\n  margin-top: -90px;\n}\n\n#rental-booking {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n\n    .panel{\n      overflow: auto;\n      height: 100%;\n    }\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n\n    .add-room-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n\n  #room-list {\n    max-height: 900px;\n    overflow-y: auto;\n\n    .room-container {\n      border-radius: 8px;\n      box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n\n      .room-header {\n        background-color: #24398A;\n        padding: 8px 12px;\n        border-radius: 8px 0 0 0;\n\n        h4 {\n          color: white;\n          margin: 0;\n          font-size: 24px;\n          font-weight: 700;\n        }\n      }\n\n      .room-body {\n        padding: 8px 12px;\n\n        .section-title {\n          font-weight: 700;\n          color: black;\n          font-size: 14px;\n          margin-bottom: 0;\n\n          span {\n            font-weight: 400;\n          }\n        }\n\n        .bed-type {\n          display: flex;\n          align-items: center;\n          border: 1px solid rgba(36, 57, 138, 0.16);\n          border-radius: 90px;\n          padding: 15px 0 15px 20px;\n\n          i {\n            color: #24398A;\n            font-size: 27px;\n          }\n\n          span {\n            font-weight: 700;\n            font-size: 12px;\n          }\n        }\n\n        .regular-price, .weekend-price {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          padding: 12px 24px;\n          border: 1px solid #24398A;\n          border-radius: 8px;\n\n          h5 {\n            font-weight: 700;\n            font-size: 16px;\n            color: black;\n          }\n\n          .price {\n            font-weight: 700;\n            font-size: 48px;\n            color: #24398A;\n          }\n\n          .price-per-night {\n            font-weight: 700;\n            font-size: 16px;\n            color: #24398A;\n          }\n        }\n      }\n\n      .delete-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n        border-radius: 0 8px 0 0;\n        border: 0;\n        color: white;\n        width: 40px;\n        height: 45px;\n\n        i {\n          font-size: 20px;\n        }\n      }\n\n      .edit-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        border-radius: 0 0 8px 0;\n        border: 0;\n        height: 50px;\n        color: white;\n\n        i {\n\n          font-size: 15px;\n        }\n      }\n    }\n  }\n\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n}\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 18584:
/*!******************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/external-url/external-url.component.scss?ngResource ***!
  \******************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#rental-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#rental-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#rental-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#rental-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#rental-booking .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#rental-booking .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#rental-booking .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#rental-booking .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#rental-booking .list-content .add-room-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#rental-booking #room-list {\n  max-height: 900px;\n  overflow-y: auto;\n}\n#rental-booking #room-list .room-container {\n  border-radius: 8px;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n}\n#rental-booking #room-list .room-container .room-header {\n  background-color: #24398A;\n  padding: 8px 12px;\n  border-radius: 8px 0 0 0;\n}\n#rental-booking #room-list .room-container .room-header h4 {\n  color: white;\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n#rental-booking #room-list .room-container .room-body {\n  padding: 8px 12px;\n}\n#rental-booking #room-list .room-container .room-body .section-title {\n  font-weight: 700;\n  color: black;\n  font-size: 14px;\n  margin-bottom: 0;\n}\n#rental-booking #room-list .room-container .room-body .section-title span {\n  font-weight: 400;\n}\n#rental-booking #room-list .room-container .room-body .bed-type {\n  display: flex;\n  align-items: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  padding: 15px 0 15px 20px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type i {\n  color: #24398A;\n  font-size: 27px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type span {\n  font-weight: 700;\n  font-size: 12px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price, #rental-booking #room-list .room-container .room-body .weekend-price {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 12px 24px;\n  border: 1px solid #24398A;\n  border-radius: 8px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price h5, #rental-booking #room-list .room-container .room-body .weekend-price h5 {\n  font-weight: 700;\n  font-size: 16px;\n  color: black;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price, #rental-booking #room-list .room-container .room-body .weekend-price .price {\n  font-weight: 700;\n  font-size: 48px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price-per-night, #rental-booking #room-list .room-container .room-body .weekend-price .price-per-night {\n  font-weight: 700;\n  font-size: 16px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .delete-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n  border-radius: 0 8px 0 0;\n  border: 0;\n  color: white;\n  width: 40px;\n  height: 45px;\n}\n#rental-booking #room-list .room-container .delete-room-btn i {\n  font-size: 20px;\n}\n#rental-booking #room-list .room-container .edit-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  border-radius: 0 0 8px 0;\n  border: 0;\n  height: 50px;\n  color: white;\n}\n#rental-booking #room-list .room-container .edit-room-btn i {\n  font-size: 15px;\n}\n#rental-booking .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#rental-booking .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/external-url/external-url.component.scss"],"names":[],"mappings":"AACA;EACE,iBAAA;AAAF;AAEE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AAAJ;;AAME;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAHJ;AAKI;EACE,eAAA;EACA,cAAA;AAHN;AAMI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAJN;AAQE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AANJ;AASE;EACE,mBAAA;EACA,4FAAA;AAPJ;AAUE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AARJ;AAUI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AARN;AAYE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AAVJ;AAaI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AAXN;AAgBE;EACE,iBAAA;EACA,gBAAA;AAdJ;AAgBI;EACE,kBAAA;EACA,yCAAA;AAdN;AAgBM;EACE,yBAAA;EACA,iBAAA;EACA,wBAAA;AAdR;AAgBQ;EACE,YAAA;EACA,SAAA;EACA,eAAA;EACA,gBAAA;AAdV;AAkBM;EACE,iBAAA;AAhBR;AAkBQ;EACE,gBAAA;EACA,YAAA;EACA,eAAA;EACA,gBAAA;AAhBV;AAkBU;EACE,gBAAA;AAhBZ;AAoBQ;EACE,aAAA;EACA,mBAAA;EACA,yCAAA;EACA,mBAAA;EACA,yBAAA;AAlBV;AAoBU;EACE,cAAA;EACA,eAAA;AAlBZ;AAqBU;EACE,gBAAA;EACA,eAAA;AAnBZ;AAuBQ;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AArBV;AAuBU;EACE,gBAAA;EACA,eAAA;EACA,YAAA;AArBZ;AAwBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAtBZ;AAyBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAvBZ;AA4BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iIAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AA1BR;AA4BQ;EACE,eAAA;AA1BV;AA8BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iKAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,YAAA;AA5BR;AA8BQ;EAEE,eAAA;AA7BV;AAoCE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAlCJ;AAoCI;EACE,aAAA;EACA,uBAAA;AAlCN","sourcesContent":["\n.save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n\n#rental-booking {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n\n    .add-room-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n\n  #room-list {\n    max-height: 900px;\n    overflow-y: auto;\n\n    .room-container {\n      border-radius: 8px;\n      box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n\n      .room-header {\n        background-color: #24398A;\n        padding: 8px 12px;\n        border-radius: 8px 0 0 0;\n\n        h4 {\n          color: white;\n          margin: 0;\n          font-size: 24px;\n          font-weight: 700;\n        }\n      }\n\n      .room-body {\n        padding: 8px 12px;\n\n        .section-title {\n          font-weight: 700;\n          color: black;\n          font-size: 14px;\n          margin-bottom: 0;\n\n          span {\n            font-weight: 400;\n          }\n        }\n\n        .bed-type {\n          display: flex;\n          align-items: center;\n          border: 1px solid rgba(36, 57, 138, 0.16);\n          border-radius: 90px;\n          padding: 15px 0 15px 20px;\n\n          i {\n            color: #24398A;\n            font-size: 27px;\n          }\n\n          span {\n            font-weight: 700;\n            font-size: 12px;\n          }\n        }\n\n        .regular-price, .weekend-price {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          padding: 12px 24px;\n          border: 1px solid #24398A;\n          border-radius: 8px;\n\n          h5 {\n            font-weight: 700;\n            font-size: 16px;\n            color: black;\n          }\n\n          .price {\n            font-weight: 700;\n            font-size: 48px;\n            color: #24398A;\n          }\n\n          .price-per-night {\n            font-weight: 700;\n            font-size: 16px;\n            color: #24398A;\n          }\n        }\n      }\n\n      .delete-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n        border-radius: 0 8px 0 0;\n        border: 0;\n        color: white;\n        width: 40px;\n        height: 45px;\n\n        i {\n          font-size: 20px;\n        }\n      }\n\n      .edit-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        border-radius: 0 0 8px 0;\n        border: 0;\n        height: 50px;\n        color: white;\n\n        i {\n\n          font-size: 15px;\n        }\n      }\n    }\n  }\n\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n}\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 44785:
/*!*********************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/add-edit-category/add-edit-category.component.scss?ngResource ***!
  \*********************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 25px 100px;\n  background-color: #24398A;\n}\n.dialog-container .dialog-header h2 {\n  color: white;\n  font-size: 32px;\n  font-weight: 700;\n  margin: 0;\n}\n.dialog-container .dialog-header button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 45px;\n  height: 45px;\n  border: 2px solid white;\n  border-radius: 50%;\n  background: transparent;\n  color: white;\n}\n.dialog-container .dialog-content {\n  padding: 0 100px;\n  margin-top: 78px;\n  flex: 1;\n}\n.dialog-container .dialog-content .section-name {\n  font-size: 24px;\n  color: #24398A;\n  font-weight: 600;\n}\n.dialog-container .dialog-content .section-subtitle {\n  color: black;\n  font-weight: 700;\n  font-size: 20px;\n}\n.dialog-container .dialog-content .product-item {\n  border: 2px solid #24398A;\n  border-radius: 15px;\n  padding: 10px;\n  margin-bottom: 10px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n  border-bottom-left-radius: 8px;\n  border-top-left-radius: 8px;\n}\n.dialog-container .dialog-content .product-item .add-btn {\n  width: 100%;\n  border: 2px dotted rgba(36, 57, 138, 0.6);\n  border-radius: 8px;\n  background-color: rgba(36, 57, 138, 0.3);\n  color: rgba(36, 57, 138, 0.6);\n  height: 50px;\n  align-content: center;\n  margin-top: 10px;\n}\n.dialog-container .dialog-content .product-item .remove-btn {\n  top: -2px;\n  right: -30px;\n  background-color: #24398A;\n  border: 1px solid #24398A;\n  color: #fff;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 8px;\n  height: 50px;\n  width: 30px;\n}\n.dialog-container .dialog-content .product-item .scroll-window {\n  overflow-y: scroll;\n  overflow-x: hidden;\n  height: 450px;\n}\n.dialog-container .dialog-content .product-item .scroll-window .subcategory-item {\n  padding: 10px 32px;\n  margin-bottom: 10px;\n}\n.dialog-container .dialog-content .product-item .scroll-window .subcategory-item .item {\n  padding: 10px;\n  border-bottom-right-radius: 10px;\n  border-top-right-radius: 0;\n  border-bottom-left-radius: 10px;\n  border-top-left-radius: 10px;\n  background-color: rgba(36, 57, 138, 0.2);\n  border: 2px solid #24398A;\n  margin-bottom: 10px;\n}\n.dialog-container .dialog-content .add-remove-tickets {\n  border: 1px solid #24398A;\n  padding: 10px 15px;\n  width: 100%;\n  max-width: 130px;\n  border-radius: 70px;\n}\n.dialog-container .dialog-content .add-remove-tickets .add-remove-btn {\n  display: flex;\n  background: transparent;\n  border: none;\n  font-size: 12px;\n  color: #24398A;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  padding: 24px 100px;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid rgba(36, 57, 138, 0.16);\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/add-edit-category/add-edit-category.component.scss"],"names":[],"mappings":"AACA;EACE,YAAA;EACA,aAAA;EACA,sBAAA;AAAF;AAGE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,mBAAA;EACA,yBAAA;AADJ;AAGI;EACE,YAAA;EACA,eAAA;EACA,gBAAA;EACA,SAAA;AADN;AAII;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,WAAA;EACA,YAAA;EACA,uBAAA;EACA,kBAAA;EACA,uBAAA;EACA,YAAA;AAFN;AASE;EACE,gBAAA;EACA,gBAAA;EACA,OAAA;AAPJ;AASI;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AAPN;AASI;EACE,YAAA;EACA,gBAAA;EACA,eAAA;AAPN;AAUI;EACE,yBAAA;EACA,mBAAA;EACA,aAAA;EACA,mBAAA;EAGA,+BAAA;EACA,0BAAA;EACA,8BAAA;EACA,2BAAA;AAVN;AAYM;EACE,WAAA;EACA,yCAAA;EACA,kBAAA;EACA,wCAAA;EACA,6BAAA;EACA,YAAA;EACA,qBAAA;EACA,gBAAA;AAVR;AAcM;EACE,SAAA;EACA,YAAA;EACA,yBAAA;EACA,yBAAA;EACA,WAAA;EACA,+BAAA;EACA,4BAAA;EACA,YAAA;EACA,WAAA;AAZR;AAeM;EAEE,kBAAA;EACA,kBAAA;EACA,aAAA;AAdR;AAgBQ;EACE,kBAAA;EAaA,mBAAA;AA1BV;AAeU;EACE,aAAA;EACA,gCAAA;EACA,0BAAA;EACA,+BAAA;EACA,4BAAA;EACA,wCAAA;EACA,yBAAA;EACA,mBAAA;AAbZ;AAsBI;EACE,yBAAA;EACA,kBAAA;EACA,WAAA;EACA,gBAAA;EACA,mBAAA;AApBN;AAsBM;EACE,aAAA;EACA,uBAAA;EACA,YAAA;EACA,eAAA;EACA,cAAA;AApBR;AA2BE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,6CAAA;AAzBJ","sourcesContent":["\n.dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 25px 100px;\n    background-color: #24398A;\n\n    h2 {\n      color: white;\n      font-size: 32px;\n      font-weight: 700;\n      margin: 0;\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 45px;\n      height: 45px;\n      border: 2px solid white;\n      border-radius: 50%;\n      background: transparent;\n      color: white;\n\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    padding: 0 100px;\n    margin-top: 78px;\n    flex: 1;\n\n    .section-name {\n      font-size: 24px;\n      color: #24398A;\n      font-weight: 600;\n    }\n    .section-subtitle {\n      color: black;\n      font-weight: 700;\n      font-size: 20px;\n    }\n\n    .product-item{\n      border: 2px solid #24398A;\n      border-radius: 15px;\n      padding: 10px;\n      margin-bottom: 10px;\n\n\n      border-bottom-right-radius: 8px;\n      border-top-right-radius: 0;\n      border-bottom-left-radius: 8px;\n      border-top-left-radius: 8px;\n\n      .add-btn{\n        width: 100%;\n        border: 2px dotted rgba(#24398A, 0.6);\n        border-radius: 8px;\n        background-color: rgba(#24398A, 0.3);\n        color:  rgba(#24398A, 0.6);\n        height: 50px;\n        align-content: center;\n        margin-top: 10px;\n\n      }\n\n      .remove-btn{\n        top: -2px;\n        right: -30px;\n        background-color: #24398A;\n        border:1px solid #24398A;\n        color: #fff;\n        border-bottom-right-radius: 8px;\n        border-top-right-radius: 8px;\n        height: 50px;\n        width: 30px;\n      }\n\n      .scroll-window{\n\n        overflow-y: scroll;\n        overflow-x: hidden;\n        height: 450px;\n\n        .subcategory-item{\n          padding: 10px 32px;\n\n          .item{\n            padding: 10px;\n            border-bottom-right-radius: 10px;\n            border-top-right-radius: 0;\n            border-bottom-left-radius: 10px;\n            border-top-left-radius: 10px;\n            background-color: rgba(#24398A, 0.2);\n            border:2px solid #24398A;\n            margin-bottom: 10px;\n          }\n\n          margin-bottom: 10px;\n        }\n      }\n\n    }\n\n    .add-remove-tickets {\n      border: 1px solid #24398A;\n      padding: 10px 15px;\n      width: 100%;\n      max-width: 130px;\n      border-radius: 70px;\n\n      .add-remove-btn {\n        display: flex;\n        background: transparent;\n        border: none;\n        font-size: 12px;\n        color: #24398A;\n      }\n    }\n\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    padding: 24px 100px;\n    align-items: center;\n    justify-content: space-between;\n    border-top: 1px solid rgba(36, 57, 138, 0.16);\n  }\n\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 58138:
/*!***************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/delete-menu-category/delete-menu-category.component.scss?ngResource ***!
  \***************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header h2 {\n  color: #24398A;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 24px;\n}\n.dialog-container .dialog-header p {\n  font-weight: 400;\n  font-size: 16px;\n  color: #231F20;\n}\n.dialog-container .dialog-content {\n  border: 1px solid #24398A;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 48px;\n}\n.dialog-container .dialog-content .section-title {\n  font-weight: 700;\n  font-size: 14px;\n  color: #231F20;\n}\n.dialog-container .dialog-content .section-title span {\n  font-weight: 400;\n  font-size: 14px;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/delete-menu-category/delete-menu-category.component.scss"],"names":[],"mappings":"AAAA;EACE,kBAAA;EACA,YAAA;EACA,aAAA;EACA,sBAAA;AACF;AAII;EACE,cAAA;EACA,eAAA;EACA,gBAAA;EACA,mBAAA;AAFN;AAKI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAHN;AASE;EACE,yBAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;AAPJ;AASI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAPN;AASM;EACE,gBAAA;EACA,eAAA;AAPR;AAaE;EACE,aAAA;EACA,SAAA;EACA,mBAAA;AAXJ","sourcesContent":[".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n\n    h2 {\n      color: #24398A;\n      font-size: 24px;\n      font-weight: 600;\n      margin-bottom: 24px;\n    }\n\n    p {\n      font-weight: 400;\n      font-size: 16px;\n      color: #231F20;\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    border: 1px solid #24398A;\n    border-radius: 8px;\n    padding: 16px;\n    margin-bottom: 48px;\n\n    .section-title {\n      font-weight: 700;\n      font-size: 14px;\n      color: #231F20;\n\n      span {\n        font-weight: 400;\n        font-size: 14px;\n      }\n    }\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 73808:
/*!**************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/menu.component.scss?ngResource ***!
  \**************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#rental-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#rental-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#rental-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#rental-booking .tab-section-title .button-icon {\n  font-size: 14px;\n  color: #fff;\n}\n#rental-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#rental-booking .section-content {\n  padding: 46px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#rental-booking .section-content .tab-content {\n  padding: 24px;\n}\n#rental-booking .section-content .tab-content .add-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#rental-booking .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#rental-booking .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#rental-booking .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#rental-booking .list-content .add-room-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#rental-booking #room-list {\n  max-height: 900px;\n  overflow-y: auto;\n}\n#rental-booking #room-list .room-container {\n  border-radius: 8px;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n}\n#rental-booking #room-list .room-container .room-header {\n  background-color: #24398A;\n  padding: 8px 12px;\n  border-radius: 8px 0 0 0;\n}\n#rental-booking #room-list .room-container .room-header h4 {\n  color: white;\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n#rental-booking #room-list .room-container .room-body {\n  padding: 8px 12px;\n}\n#rental-booking #room-list .room-container .room-body .section-title {\n  font-weight: 700;\n  color: black;\n  font-size: 14px;\n  margin-bottom: 0;\n}\n#rental-booking #room-list .room-container .room-body .section-title span {\n  font-weight: 400;\n}\n#rental-booking #room-list .room-container .room-body .bed-type {\n  display: flex;\n  align-items: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  padding: 15px 0 15px 20px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type i {\n  color: #24398A;\n  font-size: 27px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type span {\n  font-weight: 700;\n  font-size: 12px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price, #rental-booking #room-list .room-container .room-body .weekend-price {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 12px 24px;\n  border: 1px solid #24398A;\n  border-radius: 8px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price h5, #rental-booking #room-list .room-container .room-body .weekend-price h5 {\n  font-weight: 700;\n  font-size: 16px;\n  color: black;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price, #rental-booking #room-list .room-container .room-body .weekend-price .price {\n  font-weight: 700;\n  font-size: 48px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price-per-night, #rental-booking #room-list .room-container .room-body .weekend-price .price-per-night {\n  font-weight: 700;\n  font-size: 16px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .delete-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n  border-radius: 0 8px 0 0;\n  border: 0;\n  color: white;\n  width: 40px;\n  height: 45px;\n}\n#rental-booking #room-list .room-container .delete-room-btn i {\n  font-size: 20px;\n}\n#rental-booking #room-list .room-container .edit-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  border-radius: 0 0 8px 0;\n  border: 0;\n  height: 50px;\n  color: white;\n}\n#rental-booking #room-list .room-container .edit-room-btn i {\n  font-size: 15px;\n}\n#rental-booking .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#rental-booking .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/menu.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAhBA;EACE,iBAAA;AAmBF;AAjBE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AAmBJ;;AAbE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAgBJ;AAdI;EACE,eAAA;EACA,cAAA;AAgBN;AAbI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAeN;AAZI;EACE,eAAA;EACA,WAAA;AAcN;AATE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAWJ;AARE;EACE,aAAA;EACA,4FAAA;AAUJ;AARI;EACE,aAAA;AAUN;AARM;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AAUR;AALE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AAOJ;AALI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AAON;AAHE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AAKJ;AAFI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AAIN;AACE;EACE,iBAAA;EACA,gBAAA;AACJ;AACI;EACE,kBAAA;EACA,yCAAA;AACN;AACM;EACE,yBAAA;EACA,iBAAA;EACA,wBAAA;AACR;AACQ;EACE,YAAA;EACA,SAAA;EACA,eAAA;EACA,gBAAA;AACV;AAGM;EACE,iBAAA;AADR;AAGQ;EACE,gBAAA;EACA,YAAA;EACA,eAAA;EACA,gBAAA;AADV;AAGU;EACE,gBAAA;AADZ;AAKQ;EACE,aAAA;EACA,mBAAA;EACA,yCAAA;EACA,mBAAA;EACA,yBAAA;AAHV;AAKU;EACE,cAAA;EACA,eAAA;AAHZ;AAMU;EACE,gBAAA;EACA,eAAA;AAJZ;AAQQ;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AANV;AAQU;EACE,gBAAA;EACA,eAAA;EACA,YAAA;AANZ;AASU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAPZ;AAUU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AARZ;AAaM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iIAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAXR;AAaQ;EACE,eAAA;AAXV;AAeM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iKAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,YAAA;AAbR;AAeQ;EAEE,eAAA;AAdV;AAqBE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAnBJ;AAqBI;EACE,aAAA;EACA,uBAAA;AAnBN","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n.save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n\n#rental-booking {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n\n    .button-icon{\n      font-size:14px;\n      color: #fff;\n\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n\n    .tab-content{\n      padding: 24px;\n\n      .add-btn {\n        border-radius: 8px;\n        border: 1px dotted rgba(36, 57, 138, 0.16);\n        background-color: transparent;\n        width: 100%;\n        padding: 15px 0;\n        color: rgba(36, 57, 138, 0.16);\n        font-weight: 600;\n        font-size: 16px;\n      }\n    }\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n\n    .add-room-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n\n  #room-list {\n    max-height: 900px;\n    overflow-y: auto;\n\n    .room-container {\n      border-radius: 8px;\n      box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n\n      .room-header {\n        background-color: #24398A;\n        padding: 8px 12px;\n        border-radius: 8px 0 0 0;\n\n        h4 {\n          color: white;\n          margin: 0;\n          font-size: 24px;\n          font-weight: 700;\n        }\n      }\n\n      .room-body {\n        padding: 8px 12px;\n\n        .section-title {\n          font-weight: 700;\n          color: black;\n          font-size: 14px;\n          margin-bottom: 0;\n\n          span {\n            font-weight: 400;\n          }\n        }\n\n        .bed-type {\n          display: flex;\n          align-items: center;\n          border: 1px solid rgba(36, 57, 138, 0.16);\n          border-radius: 90px;\n          padding: 15px 0 15px 20px;\n\n          i {\n            color: #24398A;\n            font-size: 27px;\n          }\n\n          span {\n            font-weight: 700;\n            font-size: 12px;\n          }\n        }\n\n        .regular-price, .weekend-price {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          padding: 12px 24px;\n          border: 1px solid #24398A;\n          border-radius: 8px;\n\n          h5 {\n            font-weight: 700;\n            font-size: 16px;\n            color: black;\n          }\n\n          .price {\n            font-weight: 700;\n            font-size: 48px;\n            color: #24398A;\n          }\n\n          .price-per-night {\n            font-weight: 700;\n            font-size: 16px;\n            color: #24398A;\n          }\n        }\n      }\n\n      .delete-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n        border-radius: 0 8px 0 0;\n        border: 0;\n        color: white;\n        width: 40px;\n        height: 45px;\n\n        i {\n          font-size: 20px;\n        }\n      }\n\n      .edit-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        border-radius: 0 0 8px 0;\n        border: 0;\n        height: 50px;\n        color: white;\n\n        i {\n\n          font-size: 15px;\n        }\n      }\n    }\n  }\n\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n\n}\n\n\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 94180:
/*!**************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/no-booking/no-booking.component.scss?ngResource ***!
  \**************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "#rental-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#rental-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#rental-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#rental-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#rental-booking .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#rental-booking .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#rental-booking .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#rental-booking .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#rental-booking .list-content .add-room-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#rental-booking #room-list {\n  max-height: 900px;\n  overflow-y: auto;\n}\n#rental-booking #room-list .room-container {\n  border-radius: 8px;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n}\n#rental-booking #room-list .room-container .room-header {\n  background-color: #24398A;\n  padding: 8px 12px;\n  border-radius: 8px 0 0 0;\n}\n#rental-booking #room-list .room-container .room-header h4 {\n  color: white;\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n#rental-booking #room-list .room-container .room-body {\n  padding: 8px 12px;\n}\n#rental-booking #room-list .room-container .room-body .section-title {\n  font-weight: 700;\n  color: black;\n  font-size: 14px;\n  margin-bottom: 0;\n}\n#rental-booking #room-list .room-container .room-body .section-title span {\n  font-weight: 400;\n}\n#rental-booking #room-list .room-container .room-body .bed-type {\n  display: flex;\n  align-items: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  padding: 15px 0 15px 20px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type i {\n  color: #24398A;\n  font-size: 27px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type span {\n  font-weight: 700;\n  font-size: 12px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price, #rental-booking #room-list .room-container .room-body .weekend-price {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 12px 24px;\n  border: 1px solid #24398A;\n  border-radius: 8px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price h5, #rental-booking #room-list .room-container .room-body .weekend-price h5 {\n  font-weight: 700;\n  font-size: 16px;\n  color: black;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price, #rental-booking #room-list .room-container .room-body .weekend-price .price {\n  font-weight: 700;\n  font-size: 48px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price-per-night, #rental-booking #room-list .room-container .room-body .weekend-price .price-per-night {\n  font-weight: 700;\n  font-size: 16px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .delete-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n  border-radius: 0 8px 0 0;\n  border: 0;\n  color: white;\n  width: 40px;\n  height: 45px;\n}\n#rental-booking #room-list .room-container .delete-room-btn i {\n  font-size: 20px;\n}\n#rental-booking #room-list .room-container .edit-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  border-radius: 0 0 8px 0;\n  border: 0;\n  height: 50px;\n  color: white;\n}\n#rental-booking #room-list .room-container .edit-room-btn i {\n  font-size: 15px;\n}\n#rental-booking .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#rental-booking .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/no-booking/no-booking.component.scss"],"names":[],"mappings":"AAEE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AADJ;AAGI;EACE,eAAA;EACA,cAAA;AADN;AAII;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAFN;AAME;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAJJ;AAOE;EACE,mBAAA;EACA,4FAAA;AALJ;AAQE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AANJ;AAQI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AANN;AAUE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AARJ;AAWI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AATN;AAcE;EACE,iBAAA;EACA,gBAAA;AAZJ;AAcI;EACE,kBAAA;EACA,yCAAA;AAZN;AAcM;EACE,yBAAA;EACA,iBAAA;EACA,wBAAA;AAZR;AAcQ;EACE,YAAA;EACA,SAAA;EACA,eAAA;EACA,gBAAA;AAZV;AAgBM;EACE,iBAAA;AAdR;AAgBQ;EACE,gBAAA;EACA,YAAA;EACA,eAAA;EACA,gBAAA;AAdV;AAgBU;EACE,gBAAA;AAdZ;AAkBQ;EACE,aAAA;EACA,mBAAA;EACA,yCAAA;EACA,mBAAA;EACA,yBAAA;AAhBV;AAkBU;EACE,cAAA;EACA,eAAA;AAhBZ;AAmBU;EACE,gBAAA;EACA,eAAA;AAjBZ;AAqBQ;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AAnBV;AAqBU;EACE,gBAAA;EACA,eAAA;EACA,YAAA;AAnBZ;AAsBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AApBZ;AAuBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AArBZ;AA0BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iIAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAxBR;AA0BQ;EACE,eAAA;AAxBV;AA4BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iKAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,YAAA;AA1BR;AA4BQ;EAEE,eAAA;AA3BV;AAkCE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAhCJ;AAkCI;EACE,aAAA;EACA,uBAAA;AAhCN","sourcesContent":["#rental-booking {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n\n    .add-room-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n\n  #room-list {\n    max-height: 900px;\n    overflow-y: auto;\n\n    .room-container {\n      border-radius: 8px;\n      box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n\n      .room-header {\n        background-color: #24398A;\n        padding: 8px 12px;\n        border-radius: 8px 0 0 0;\n\n        h4 {\n          color: white;\n          margin: 0;\n          font-size: 24px;\n          font-weight: 700;\n        }\n      }\n\n      .room-body {\n        padding: 8px 12px;\n\n        .section-title {\n          font-weight: 700;\n          color: black;\n          font-size: 14px;\n          margin-bottom: 0;\n\n          span {\n            font-weight: 400;\n          }\n        }\n\n        .bed-type {\n          display: flex;\n          align-items: center;\n          border: 1px solid rgba(36, 57, 138, 0.16);\n          border-radius: 90px;\n          padding: 15px 0 15px 20px;\n\n          i {\n            color: #24398A;\n            font-size: 27px;\n          }\n\n          span {\n            font-weight: 700;\n            font-size: 12px;\n          }\n        }\n\n        .regular-price, .weekend-price {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          padding: 12px 24px;\n          border: 1px solid #24398A;\n          border-radius: 8px;\n\n          h5 {\n            font-weight: 700;\n            font-size: 16px;\n            color: black;\n          }\n\n          .price {\n            font-weight: 700;\n            font-size: 48px;\n            color: #24398A;\n          }\n\n          .price-per-night {\n            font-weight: 700;\n            font-size: 16px;\n            color: #24398A;\n          }\n        }\n      }\n\n      .delete-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n        border-radius: 0 8px 0 0;\n        border: 0;\n        color: white;\n        width: 40px;\n        height: 45px;\n\n        i {\n          font-size: 20px;\n        }\n      }\n\n      .edit-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        border-radius: 0 0 8px 0;\n        border: 0;\n        height: 50px;\n        color: white;\n\n        i {\n\n          font-size: 15px;\n        }\n      }\n    }\n  }\n\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n}\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 12856:
/*!****************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/add-edit-product/add-edit-product.component.scss?ngResource ***!
  \****************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 25px 100px;\n  background-color: #24398A;\n}\n.dialog-container .dialog-header h2 {\n  color: white;\n  font-size: 32px;\n  font-weight: 700;\n  margin: 0;\n}\n.dialog-container .dialog-header button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 45px;\n  height: 45px;\n  border: 2px solid white;\n  border-radius: 50%;\n  background: transparent;\n  color: white;\n}\n.dialog-container .dialog-content {\n  padding: 0 100px;\n  margin-top: 78px;\n  flex: 1;\n}\n.dialog-container .dialog-content .section-name {\n  font-size: 24px;\n  color: #24398A;\n  font-weight: 600;\n}\n.dialog-container .dialog-content .limit-check {\n  height: 57px;\n}\n.dialog-container .dialog-content .section-subtitle {\n  color: black;\n  font-weight: 700;\n  font-size: 20px;\n}\n.dialog-container .dialog-content .add-remove-tickets {\n  border: 1px solid #24398A;\n  padding: 10px 15px;\n  width: 100%;\n  max-width: 130px;\n  border-radius: 70px;\n}\n.dialog-container .dialog-content .add-remove-tickets .add-remove-btn {\n  display: flex;\n  background: transparent;\n  border: none;\n  font-size: 12px;\n  color: #24398A;\n}\n.dialog-container .dialog-content #photo-upload .image-container {\n  position: relative;\n  width: 100%;\n  min-height: 7.5rem;\n  border: 2px solid rgba(36, 57, 138, 0.08);\n  border-radius: 8px;\n  overflow: hidden;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image {\n  width: 100%;\n  height: 120px;\n  min-height: inherit;\n  background: rgba(36, 57, 138, 0.04);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #24398A;\n  cursor: pointer;\n  gap: 0.75rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image:before {\n  content: \"\\f03e\";\n  font-family: \"Font Awesome 5 Free\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 2.25rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image:after {\n  font-size: 1rem;\n  content: attr(translatedContent);\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail, .dialog-container .dialog-content #photo-upload .image-container .btn-gallery {\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(36, 57, 138, 0.16);\n  border-radius: 100%;\n  border: none;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail i, .dialog-container .dialog-content #photo-upload .image-container .btn-gallery i {\n  color: var(--primary-background);\n  font-weight: 900;\n  font-size: 16px;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail {\n  position: absolute;\n  top: 2.125rem;\n  right: 2.125rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-gallery {\n  position: absolute;\n  top: 0.875rem;\n  right: 0.875rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .gallery-img {\n  height: 120px;\n  width: 100%;\n  object-fit: cover;\n}\n.dialog-container .dialog-content #photo-upload .photo-type-title {\n  font-size: 16px;\n  font-weight: 400;\n}\n.dialog-container .dialog-content #photo-upload .clear-btn {\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  border: none;\n  border-radius: 20px;\n  padding: 10px 12px;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(36, 57, 138, 0.16);\n  color: white;\n}\n.dialog-container .dialog-content #photo-upload .clear-btn:hover {\n  background-color: rgb(255, 0, 0);\n}\n.dialog-container .dialog-content #photo-upload .have-selected-photo {\n  position: relative;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  width: 100%;\n  height: 350px;\n}\n.dialog-container .dialog-content #photo-upload .have-selected-photo .prev-img {\n  width: 100%;\n  height: 350px;\n  border-radius: 8px;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected {\n  display: flex;\n  height: 350px;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  cursor: pointer;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container i {\n  font-size: 64px;\n  font-weight: 400;\n  color: rgba(36, 57, 138, 0.16);\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container span {\n  font-size: 24px;\n  font-weight: 600;\n  color: rgba(36, 57, 138, 0.16);\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 120px;\n  max-height: 120px;\n  border-radius: 8px;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  cursor: pointer;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container {\n  color: rgba(36, 57, 138, 0.16);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container i {\n  font-size: 36px;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container span {\n  font-size: 16px;\n}\n.dialog-container .dialog-content #photo-upload .selected-img-list {\n  height: 120px;\n  display: flex;\n  position: relative;\n}\n.dialog-container .dialog-content #photo-upload .no-attachment {\n  height: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #24398A;\n  border: 1px solid rgba(36, 57, 138, 0.08);\n  border-radius: 8px;\n  background-color: rgba(36, 57, 138, 0.04);\n  cursor: pointer;\n  gap: 0.75rem;\n  font-size: 1rem;\n}\n.dialog-container .dialog-content #photo-upload .no-attachment i {\n  font-size: 2rem;\n}\n.dialog-container .dialog-content #photo-upload .attachment-container {\n  height: 120px;\n  border: 1px solid rgba(36, 57, 138, 0.08);\n  border-radius: 8px;\n  background-color: rgba(36, 57, 138, 0.04);\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  padding: 24px 100px;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid rgba(36, 57, 138, 0.16);\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/add-edit-product/add-edit-product.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACE,YAAA;EACA,aAAA;EACA,sBAAA;AAkBF;AAfE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,mBAAA;EACA,yBAAA;AAiBJ;AAfI;EACE,YAAA;EACA,eAAA;EACA,gBAAA;EACA,SAAA;AAiBN;AAdI;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,WAAA;EACA,YAAA;EACA,uBAAA;EACA,kBAAA;EACA,uBAAA;EACA,YAAA;AAgBN;AATE;EACE,gBAAA;EACA,gBAAA;EACA,OAAA;AAWJ;AATI;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AAWN;AARI;EACE,YAAA;AAUN;AAPI;EACE,YAAA;EACA,gBAAA;EACA,eAAA;AASN;AANI;EACE,yBAAA;EACA,kBAAA;EACA,WAAA;EACA,gBAAA;EACA,mBAAA;AAQN;AANM;EACE,aAAA;EACA,uBAAA;EACA,YAAA;EACA,eAAA;EACA,cAAA;AAQR;AAFM;EACE,kBAAA;EACA,WAAA;EACA,kBAAA;EAEA,yCAAA;EACA,kBAAA;EACA,gBAAA;AAGR;AADQ;EACE,WAAA;EACA,aAAA;EACA,mBAAA;EACA,mCAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,cD9FM;EC+FN,eAAA;EACA,YAAA;AAGV;AADU;EACE,gBAAA;EACA,kCAAA;EACA,kBAAA;EACA,gBAAA;EACA,kBAAA;AAGZ;AAAU;EACE,eAAA;EACA,gCAAA;AAEZ;AAEQ;EACE,WAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,mCAAA;EACA,mBAAA;EACA,YAAA;AAAV;AAEU;EACE,gCAAA;EACA,gBAAA;EACA,eAAA;AAAZ;AAIQ;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AAFV;AAKQ;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AAHV;AAMQ;EACE,aAAA;EACA,WAAA;EACA,iBAAA;AAJV;AASM;EACE,eAAA;EACA,gBAAA;AAPR;AAUM;EACE,kBAAA;EACA,WAAA;EACA,SAAA;EACA,YAAA;EACA,mBAAA;EACA,kBAAA;EACA,SAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,yCAAA;EACA,YAAA;AARR;AAUQ;EACE,gCAAA;AARV;AAcM;EACE,kBAAA;EACA,yCAAA;EACA,kBAAA;EACA,WAAA;EACA,aAAA;AAZR;AAcQ;EACE,WAAA;EACA,aAAA;EACA,kBAAA;AAZV;AAgBM;EAEE,aAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,yCAAA;EACA,kBAAA;EACA,eAAA;AAfR;AAiBQ;EACE,aAAA;EACA,mBAAA;EACA,sBAAA;AAfV;AAiBU;EACE,eAAA;EACA,gBAAA;EACA,8BAAA;AAfZ;AAkBU;EACE,eAAA;EACA,gBAAA;EACA,8BAAA;AAhBZ;AAwBM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,aAAA;EACA,iBAAA;EACA,kBAAA;EACA,yCAAA;EACA,eAAA;AAtBR;AAwBQ;EACE,8BAAA;EACA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,uBAAA;AAtBV;AAwBU;EACE,eAAA;AAtBZ;AAyBU;EACE,eAAA;AAvBZ;AA4BM;EACE,aAAA;EACA,aAAA;EACA,kBAAA;AA1BR;AA6BM;EACE,aAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,cDnQQ;ECoQR,yCAAA;EACA,kBAAA;EACA,yCAAA;EACA,eAAA;EACA,YAAA;EACA,eAAA;AA3BR;AA6BQ;EACE,eAAA;AA3BV;AA+BM;EACE,aAAA;EACA,yCAAA;EACA,kBAAA;EACA,yCAAA;AA7BR;AAqCE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,6CAAA;AAnCJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n\n.dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 25px 100px;\n    background-color: #24398A;\n\n    h2 {\n      color: white;\n      font-size: 32px;\n      font-weight: 700;\n      margin: 0;\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 45px;\n      height: 45px;\n      border: 2px solid white;\n      border-radius: 50%;\n      background: transparent;\n      color: white;\n\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    padding: 0 100px;\n    margin-top: 78px;\n    flex: 1;\n\n    .section-name {\n      font-size: 24px;\n      color: #24398A;\n      font-weight: 600;\n    }\n\n    .limit-check {\n      height: 57px;\n    }\n\n    .section-subtitle {\n      color: black;\n      font-weight: 700;\n      font-size: 20px;\n    }\n\n    .add-remove-tickets {\n      border: 1px solid #24398A;\n      padding: 10px 15px;\n      width: 100%;\n      max-width: 130px;\n      border-radius: 70px;\n\n      .add-remove-btn {\n        display: flex;\n        background: transparent;\n        border: none;\n        font-size: 12px;\n        color: #24398A;\n      }\n    }\n\n    #photo-upload {\n\n      .image-container {\n        position: relative;\n        width: 100%;\n        min-height: 7.5rem;\n        //height: 120px;\n        border: 2px solid rgba($primary-color, 0.08);\n        border-radius: 8px;\n        overflow: hidden;\n\n        & .no-image {\n          width: 100%;\n          height: 120px;\n          min-height: inherit;\n          background: rgba($primary-color, 0.04);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          color: $primary-color;\n          cursor: pointer;\n          gap: 0.75rem;\n\n          &:before {\n            content: '\\f03e';\n            font-family: 'Font Awesome 5 Free';\n            font-style: normal;\n            font-weight: 400;\n            font-size: 2.25rem;\n          }\n\n          &:after {\n            font-size: 1rem;\n            content: attr(translatedContent);\n          }\n        }\n\n        .btn-thumbnail, .btn-gallery {\n          width: 2rem;\n          height: 2rem;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background: rgba($primary-color, 0.16);\n          border-radius: 100%;\n          border: none;\n\n          i {\n            color: var(--primary-background);\n            font-weight: 900;\n            font-size: 16px;\n          }\n        }\n\n        .btn-thumbnail {\n          position: absolute;\n          top: 2.125rem;\n          right: 2.125rem;\n        }\n\n        .btn-gallery {\n          position: absolute;\n          top: 0.875rem;\n          right: 0.875rem;\n        }\n\n        .gallery-img {\n          height: 120px;\n          width: 100%;\n          object-fit: cover;\n        }\n      }\n\n\n      .photo-type-title {\n        font-size: 16px;\n        font-weight: 400;\n      }\n\n      .clear-btn {\n        position: absolute;\n        right: 20px;\n        top: 20px;\n        border: none;\n        border-radius: 20px;\n        padding: 10px 12px;\n        margin: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(36, 57, 138, 0.16);\n        color: white;\n\n        &:hover {\n          background-color: rgba(255, 0, 0, 1);\n        }\n      }\n\n\n      // Thumbnail\n      .have-selected-photo {\n        position: relative;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        width: 100%;\n        height: 350px;\n\n        .prev-img {\n          width: 100%;\n          height: 350px;\n          border-radius: 8px;\n        }\n      }\n\n      .no-photo-selected {\n\n        display: flex;\n        height: 350px;\n        align-items: center;\n        justify-content: center;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        cursor: pointer;\n\n        .icons-container {\n          display: flex;\n          align-items: center;\n          flex-direction: column;\n\n          i {\n            font-size: 64px;\n            font-weight: 400;\n            color: rgba(36, 57, 138, 0.16);\n          }\n\n          span {\n            font-size: 24px;\n            font-weight: 600;\n            color: rgba(36, 57, 138, 0.16);\n          }\n        }\n\n\n      }\n\n      // Gallery\n      .select-gallery-images {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 120px;\n        max-height: 120px;\n        border-radius: 8px;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        cursor: pointer;\n\n        .icons-container {\n          color: rgba(36, 57, 138, 0.16);\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n\n          i {\n            font-size: 36px;\n          }\n\n          span {\n            font-size: 16px;\n          }\n        }\n      }\n\n      .selected-img-list {\n        height: 120px;\n        display: flex;\n        position: relative;\n      }\n\n      .no-attachment {\n        height: 120px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: $primary-color;\n        border: 1px solid rgba($primary-color, 0.08);\n        border-radius: 8px;\n        background-color: rgba($primary-color, 0.04);\n        cursor: pointer;\n        gap: 0.75rem;\n        font-size: 1rem;\n\n        i{\n          font-size: 2rem;\n        }\n      }\n\n      .attachment-container {\n        height: 120px;\n        border: 1px solid rgba($primary-color, 0.08);\n        border-radius: 8px;\n        background-color: rgba($primary-color, 0.04);\n\n      }\n    }\n\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    padding: 24px 100px;\n    align-items: center;\n    justify-content: space-between;\n    border-top: 1px solid rgba(36, 57, 138, 0.16);\n  }\n\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 95922:
/*!************************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/delete-product-modal/delete-product-modal.component.scss?ngResource ***!
  \************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header h2 {\n  color: #24398A;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 24px;\n}\n.dialog-container .dialog-header p {\n  font-weight: 400;\n  font-size: 16px;\n  color: #231F20;\n}\n.dialog-container .dialog-content {\n  border: 1px solid #24398A;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 48px;\n}\n.dialog-container .dialog-content .section-title {\n  font-weight: 700;\n  font-size: 14px;\n  color: #231F20;\n}\n.dialog-container .dialog-content .section-title span {\n  font-weight: 400;\n  font-size: 14px;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/delete-product-modal/delete-product-modal.component.scss"],"names":[],"mappings":"AAAA;EACE,kBAAA;EACA,YAAA;EACA,aAAA;EACA,sBAAA;AACF;AAII;EACE,cAAA;EACA,eAAA;EACA,gBAAA;EACA,mBAAA;AAFN;AAKI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAHN;AASE;EACE,yBAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;AAPJ;AASI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAPN;AASM;EACE,gBAAA;EACA,eAAA;AAPR;AAcE;EACE,aAAA;EACA,SAAA;EACA,mBAAA;AAZJ","sourcesContent":[".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n\n    h2 {\n      color: #24398A;\n      font-size: 24px;\n      font-weight: 600;\n      margin-bottom: 24px;\n    }\n\n    p {\n      font-weight: 400;\n      font-size: 16px;\n      color: #231F20;\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    border: 1px solid #24398A;\n    border-radius: 8px;\n    padding: 16px;\n    margin-bottom: 48px;\n\n    .section-title {\n      font-weight: 700;\n      font-size: 14px;\n      color: #231F20;\n\n      span {\n        font-weight: 400;\n        font-size: 14px;\n      }\n    }\n\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 58797:
/*!********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/products-list.component.scss?ngResource ***!
  \********************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#product-list .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#product-list .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#product-list .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#product-list .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#product-list .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#product-list .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#product-list .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#product-list .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#product-list .list-content .ticket-list {\n  width: 100%;\n}\n#product-list .list-content .ticket-list .btn-delete {\n  background-color: #24398A;\n  color: #FFFFFF;\n  border-top-right-radius: 8px;\n  border: none;\n  width: 40px;\n  height: 50px;\n}\n#product-list .list-content .ticket-list .btn-edit {\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  color: #FFFFFF;\n  border-bottom-right-radius: 8px;\n  border: none;\n  width: 40px;\n  height: 50px;\n}\n#product-list .list-content .add-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#product-list .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#product-list .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/products-list.component.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;AACE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AACJ;;AAIE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AADJ;AAGI;EACE,eAAA;EACA,cAAA;AADN;AAII;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAFN;AAME;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAJJ;AAOE;EACE,mBAAA;EACA,4FAAA;AALJ;AAQE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AANJ;AAQI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AANN;AAUE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AARJ;AAUI;EACE,WAAA;AARN;AASM;EACE,yBAAA;EACA,cAAA;EACA,4BAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAPR;AAUM;EACE,iKAAA;EACA,cAAA;EACA,+BAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AARR;AAaI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AAXN;AAeE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAbJ;AAeI;EACE,aAAA;EACA,uBAAA;AAbN","sourcesContent":[".save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n\n#product-list{\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n    .ticket-list{\n      width: 100%;\n      .btn-delete{\n        background-color:#24398A;\n        color: #FFFFFF;\n        border-top-right-radius: 8px;\n        border:none;\n        width: 40px;\n        height: 50px;\n      }\n\n      .btn-edit{\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        color: #FFFFFF;\n        border-bottom-right-radius: 8px;\n        border:none;\n        width: 40px;\n        height: 50px;\n      }\n    }\n\n\n    .add-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 7816:
/*!***********************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/add-edit-room-modal/add-edit-room-modal.component.scss?ngResource ***!
  \***********************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n::ng-deep .cdk-global-overlay-wrapper {\n  z-index: 1000 !important;\n}\n\n.dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 25px 100px;\n  background-color: #24398A;\n}\n.dialog-container .dialog-header h2 {\n  color: white;\n  font-size: 32px;\n  font-weight: 700;\n  margin: 0;\n}\n.dialog-container .dialog-header button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 45px;\n  height: 45px;\n  border: 2px solid white;\n  border-radius: 50%;\n  background: transparent;\n  color: white;\n}\n.dialog-container .dialog-content {\n  padding: 0 100px;\n  margin-top: 78px;\n  flex: 1;\n}\n.dialog-container .dialog-content .section-name {\n  font-size: 24px;\n  color: #24398A;\n  font-weight: 600;\n}\n.dialog-container .dialog-content .section-subtitle {\n  color: black;\n  font-weight: 700;\n  font-size: 20px;\n}\n.dialog-container .dialog-content .add-remove-rooms {\n  border: 1px solid #24398A;\n  padding: 10px 15px;\n  width: 100%;\n  max-width: 130px;\n  border-radius: 70px;\n}\n.dialog-container .dialog-content .add-remove-rooms .add-remove-btn {\n  display: flex;\n  background: transparent;\n  border: none;\n  font-size: 12px;\n  color: #24398A;\n}\n.dialog-container .dialog-content #beds-types .bed-icon {\n  font-size: 27px;\n  color: #24398A;\n}\n.dialog-container .dialog-content #beds-types .bed-new-name {\n  font-weight: 400;\n  font-size: 12px;\n  color: #24398A;\n}\n.dialog-container .dialog-content #prev-container .prev-header {\n  background-color: #24398A;\n  border-radius: 8px 8px 0 0;\n  padding: 12px 8px;\n}\n.dialog-container .dialog-content #prev-container .prev-header .prev-title {\n  color: white;\n  font-weight: 700;\n  font-size: 24px;\n  margin: 0;\n}\n.dialog-container .dialog-content #prev-container .prev-content {\n  border-radius: 0 0 8px 8px;\n  padding: 12px 8px;\n  box-shadow: 0 5px 5px 0 #efefef;\n}\n.dialog-container .dialog-content #prev-container .prev-content .prev-info .info-name {\n  font-weight: 700;\n  font-size: 20px;\n}\n.dialog-container .dialog-content #prev-container .prev-content .prev-info .info-value {\n  font-size: 20px;\n}\n.dialog-container .dialog-content #prev-container .prev-content .prev-info i {\n  font-size: 20px;\n  color: #24398A;\n}\n.dialog-container .dialog-content #prev-container .prev-content .prev-price {\n  border-radius: 8px;\n  border: 1px solid #24398A;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n}\n.dialog-container .dialog-content #prev-container .prev-content .prev-price .title-info {\n  font-size: 14px;\n  font-weight: 700;\n}\n.dialog-container .dialog-content #prev-container .prev-content .prev-price .price-info {\n  font-weight: 700;\n  color: #24398A;\n  font-size: 32px;\n}\n.dialog-container .dialog-content #prev-container .prev-content .prev-price .currency-per {\n  font-weight: 700;\n  color: #24398A;\n  font-size: 14px;\n}\n.dialog-container .dialog-content #applicable-politics .politics-category-name {\n  font-size: 16px;\n  font-weight: 700;\n  color: black;\n}\n.dialog-container .dialog-content #photo-upload .image-container {\n  position: relative;\n  width: 100%;\n  min-height: 7.5rem;\n  border: 2px solid rgba(36, 57, 138, 0.08);\n  border-radius: 8px;\n  overflow: hidden;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image {\n  width: 100%;\n  height: 120px;\n  min-height: inherit;\n  background: rgba(36, 57, 138, 0.04);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #24398A;\n  cursor: pointer;\n  gap: 0.75rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image:before {\n  content: \"\\f03e\";\n  font-family: \"Font Awesome 5 Free\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 2.25rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image:after {\n  font-size: 1rem;\n  content: attr(translatedContent);\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail, .dialog-container .dialog-content #photo-upload .image-container .btn-gallery {\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(36, 57, 138, 0.16);\n  border-radius: 100%;\n  border: none;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail i, .dialog-container .dialog-content #photo-upload .image-container .btn-gallery i {\n  color: var(--primary-background);\n  font-weight: 900;\n  font-size: 16px;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail {\n  position: absolute;\n  top: 2.125rem;\n  right: 2.125rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-gallery {\n  position: absolute;\n  top: 0.875rem;\n  right: 0.875rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .gallery-img {\n  height: 120px;\n  width: 100%;\n  object-fit: cover;\n}\n.dialog-container .dialog-content #photo-upload .photo-type-title {\n  font-size: 16px;\n  font-weight: 400;\n}\n.dialog-container .dialog-content #photo-upload .clear-btn {\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  border: none;\n  border-radius: 20px;\n  padding: 10px 12px;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(36, 57, 138, 0.16);\n  color: white;\n}\n.dialog-container .dialog-content #photo-upload .clear-btn:hover {\n  background-color: rgb(255, 0, 0);\n}\n.dialog-container .dialog-content #photo-upload .have-selected-photo {\n  position: relative;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  width: 100%;\n  height: 350px;\n}\n.dialog-container .dialog-content #photo-upload .have-selected-photo .prev-img {\n  width: 100%;\n  height: 350px;\n  border-radius: 8px;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected {\n  display: flex;\n  height: 350px;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  cursor: pointer;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container i {\n  font-size: 64px;\n  font-weight: 400;\n  color: rgba(36, 57, 138, 0.16);\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container span {\n  font-size: 24px;\n  font-weight: 600;\n  color: rgba(36, 57, 138, 0.16);\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 120px;\n  max-height: 120px;\n  border-radius: 8px;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  cursor: pointer;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container {\n  color: rgba(36, 57, 138, 0.16);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container i {\n  font-size: 36px;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container span {\n  font-size: 16px;\n}\n.dialog-container .dialog-content #photo-upload .selected-img-list {\n  height: 120px;\n  display: flex;\n  position: relative;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  padding: 24px 100px;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid rgba(36, 57, 138, 0.16);\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/add-edit-room-modal/add-edit-room-modal.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAdA;EACE,wBAAA;AAiBF;;AAdA;EACE,YAAA;EACA,aAAA;EACA,sBAAA;AAiBF;AAdE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,mBAAA;EACA,yBAAA;AAgBJ;AAdI;EACE,YAAA;EACA,eAAA;EACA,gBAAA;EACA,SAAA;AAgBN;AAbI;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,WAAA;EACA,YAAA;EACA,uBAAA;EACA,kBAAA;EACA,uBAAA;EACA,YAAA;AAeN;AARE;EACE,gBAAA;EACA,gBAAA;EACA,OAAA;AAUJ;AARI;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AAUN;AAPI;EACE,YAAA;EACA,gBAAA;EACA,eAAA;AASN;AANI;EACE,yBAAA;EACA,kBAAA;EACA,WAAA;EACA,gBAAA;EACA,mBAAA;AAQN;AANM;EACE,aAAA;EACA,uBAAA;EACA,YAAA;EACA,eAAA;EACA,cAAA;AAQR;AAFM;EACE,eAAA;EACA,cAAA;AAIR;AADM;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAGR;AAGM;EACE,yBAAA;EACA,0BAAA;EACA,iBAAA;AADR;AAGQ;EACE,YAAA;EACA,gBAAA;EACA,eAAA;EACA,SAAA;AADV;AAKM;EACE,0BAAA;EACA,iBAAA;EACA,+BAAA;AAHR;AAMU;EACE,gBAAA;EACA,eAAA;AAJZ;AAOU;EACE,eAAA;AALZ;AAQU;EACE,eAAA;EACA,cAAA;AANZ;AAUQ;EACE,kBAAA;EACA,yBAAA;EACA,aAAA;EACA,sBAAA;EACA,mBAAA;EACA,aAAA;AARV;AAUU;EACE,eAAA;EACA,gBAAA;AARZ;AAWU;EACE,gBAAA;EACA,cAAA;EACA,eAAA;AATZ;AAYU;EACE,gBAAA;EACA,cAAA;EACA,eAAA;AAVZ;AAkBM;EACE,eAAA;EACA,gBAAA;EACA,YAAA;AAhBR;AAsBM;EACE,kBAAA;EACA,WAAA;EACA,kBAAA;EAEA,yCAAA;EACA,kBAAA;EACA,gBAAA;AArBR;AAuBQ;EACE,WAAA;EACA,aAAA;EACA,mBAAA;EACA,mCAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,cDtLM;ECuLN,eAAA;EACA,YAAA;AArBV;AAuBU;EACE,gBAAA;EACA,kCAAA;EACA,kBAAA;EACA,gBAAA;EACA,kBAAA;AArBZ;AAwBU;EACE,eAAA;EACA,gCAAA;AAtBZ;AA0BQ;EACE,WAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,mCAAA;EACA,mBAAA;EACA,YAAA;AAxBV;AA0BU;EACE,gCAAA;EACA,gBAAA;EACA,eAAA;AAxBZ;AA4BQ;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AA1BV;AA6BQ;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AA3BV;AA8BQ;EACE,aAAA;EACA,WAAA;EACA,iBAAA;AA5BV;AAsCM;EACE,eAAA;EACA,gBAAA;AApCR;AAuCM;EACE,kBAAA;EACA,WAAA;EACA,SAAA;EACA,YAAA;EACA,mBAAA;EACA,kBAAA;EACA,SAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,yCAAA;EACA,YAAA;AArCR;AAuCQ;EACE,gCAAA;AArCV;AA2CM;EACE,kBAAA;EACA,yCAAA;EACA,kBAAA;EACA,WAAA;EACA,aAAA;AAzCR;AA2CQ;EACE,WAAA;EACA,aAAA;EACA,kBAAA;AAzCV;AA6CM;EAEE,aAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,yCAAA;EACA,kBAAA;EACA,eAAA;AA5CR;AA8CQ;EACE,aAAA;EACA,mBAAA;EACA,sBAAA;AA5CV;AA8CU;EACE,eAAA;EACA,gBAAA;EACA,8BAAA;AA5CZ;AA+CU;EACE,eAAA;EACA,gBAAA;EACA,8BAAA;AA7CZ;AAqDM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,aAAA;EACA,iBAAA;EACA,kBAAA;EACA,yCAAA;EACA,eAAA;AAnDR;AAqDQ;EACE,8BAAA;EACA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,uBAAA;AAnDV;AAqDU;EACE,eAAA;AAnDZ;AAsDU;EACE,eAAA;AApDZ;AAyDM;EACE,aAAA;EACA,aAAA;EACA,kBAAA;AAvDR;AA+DE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,6CAAA;AA7DJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n\n// TODO De gasit o alta varianta - fara asta optiunile selectului raman in spatele modalului\n::ng-deep .cdk-global-overlay-wrapper {\n  z-index: 1000 !important;\n}\n\n.dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 25px 100px;\n    background-color: #24398A;\n\n    h2 {\n      color: white;\n      font-size: 32px;\n      font-weight: 700;\n      margin: 0;\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 45px;\n      height: 45px;\n      border: 2px solid white;\n      border-radius: 50%;\n      background: transparent;\n      color: white;\n\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    padding: 0 100px;\n    margin-top: 78px;\n    flex: 1;\n\n    .section-name {\n      font-size: 24px;\n      color: #24398A;\n      font-weight: 600;\n    }\n\n    .section-subtitle {\n      color: black;\n      font-weight: 700;\n      font-size: 20px;\n    }\n\n    .add-remove-rooms {\n      border: 1px solid #24398A;\n      padding: 10px 15px;\n      width: 100%;\n      max-width: 130px;\n      border-radius: 70px;\n\n      .add-remove-btn {\n        display: flex;\n        background: transparent;\n        border: none;\n        font-size: 12px;\n        color: #24398A;\n      }\n    }\n\n    // Beds Type\n    #beds-types {\n      .bed-icon {\n        font-size: 27px;\n        color: #24398A;\n      }\n\n      .bed-new-name {\n        font-weight: 400;\n        font-size: 12px;\n        color: #24398A;\n      }\n    }\n\n    // Preview\n    #prev-container {\n      .prev-header {\n        background-color: #24398A;\n        border-radius: 8px 8px 0 0;\n        padding: 12px 8px;\n\n        .prev-title {\n          color: white;\n          font-weight: 700;\n          font-size: 24px;\n          margin: 0;\n        }\n      }\n\n      .prev-content {\n        border-radius: 0 0 8px 8px;\n        padding: 12px 8px;\n        box-shadow: 0 5px 5px 0 #efefef;\n\n        .prev-info {\n          .info-name {\n            font-weight: 700;\n            font-size: 20px;\n          }\n\n          .info-value {\n            font-size: 20px;\n          }\n\n          i {\n            font-size: 20px;\n            color: #24398A;\n          }\n        }\n\n        .prev-price {\n          border-radius: 8px;\n          border: 1px solid #24398A;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: 10px;\n\n          .title-info {\n            font-size: 14px;\n            font-weight: 700;\n          }\n\n          .price-info {\n            font-weight: 700;\n            color: #24398A;\n            font-size: 32px;\n          }\n\n          .currency-per {\n            font-weight: 700;\n            color: #24398A;\n            font-size: 14px;\n          }\n        }\n      }\n    }\n\n    // Applicable Politics\n    #applicable-politics {\n      .politics-category-name {\n        font-size: 16px;\n        font-weight: 700;\n        color: black;\n      }\n    }\n\n    #photo-upload {\n\n      .image-container {\n        position: relative;\n        width: 100%;\n        min-height: 7.5rem;\n        //height: 120px;\n        border: 2px solid rgba($primary-color, 0.08);\n        border-radius: 8px;\n        overflow: hidden;\n\n        & .no-image {\n          width: 100%;\n          height: 120px;\n          min-height: inherit;\n          background: rgba($primary-color, 0.04);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          color: $primary-color;\n          cursor: pointer;\n          gap: 0.75rem;\n\n          &:before {\n            content: '\\f03e';\n            font-family: 'Font Awesome 5 Free';\n            font-style: normal;\n            font-weight: 400;\n            font-size: 2.25rem;\n          }\n\n          &:after {\n            font-size: 1rem;\n            content: attr(translatedContent);\n          }\n        }\n\n        .btn-thumbnail, .btn-gallery {\n          width: 2rem;\n          height: 2rem;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background: rgba($primary-color, 0.16);\n          border-radius: 100%;\n          border: none;\n\n          i {\n            color: var(--primary-background);\n            font-weight: 900;\n            font-size: 16px;\n          }\n        }\n\n        .btn-thumbnail {\n          position: absolute;\n          top: 2.125rem;\n          right: 2.125rem;\n        }\n\n        .btn-gallery {\n          position: absolute;\n          top: 0.875rem;\n          right: 0.875rem;\n        }\n\n        .gallery-img{\n          height: 120px;\n          width: 100%;\n          object-fit: cover;\n        }\n      }\n\n\n\n\n\n\n\n      .photo-type-title {\n        font-size: 16px;\n        font-weight: 400;\n      }\n\n      .clear-btn {\n        position: absolute;\n        right: 20px;\n        top: 20px;\n        border: none;\n        border-radius: 20px;\n        padding: 10px 12px;\n        margin: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(36, 57, 138, 0.16);\n        color: white;\n\n        &:hover {\n          background-color: rgba(255, 0, 0, 1);\n        }\n      }\n\n\n      // Thumbnail\n      .have-selected-photo {\n        position: relative;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        width: 100%;\n        height: 350px;\n\n        .prev-img {\n          width: 100%;\n          height: 350px;\n          border-radius: 8px;\n        }\n      }\n\n      .no-photo-selected {\n\n        display: flex;\n        height: 350px;\n        align-items: center;\n        justify-content: center;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        cursor: pointer;\n\n        .icons-container {\n          display: flex;\n          align-items: center;\n          flex-direction: column;\n\n          i {\n            font-size: 64px;\n            font-weight: 400;\n            color: rgba(36, 57, 138, 0.16);\n          }\n\n          span {\n            font-size: 24px;\n            font-weight: 600;\n            color: rgba(36, 57, 138, 0.16);\n          }\n        }\n\n\n      }\n\n      // Gallery\n      .select-gallery-images {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 120px;\n        max-height: 120px;\n        border-radius: 8px;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        cursor: pointer;\n\n        .icons-container {\n          color: rgba(36, 57, 138, 0.16);\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n\n          i {\n            font-size: 36px;\n          }\n\n          span {\n            font-size: 16px;\n          }\n        }\n      }\n\n      .selected-img-list {\n        height: 120px;\n        display: flex;\n        position: relative;\n      }\n    }\n\n\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    padding: 24px 100px;\n    align-items: center;\n    justify-content: space-between;\n    border-top: 1px solid rgba(36, 57, 138, 0.16);\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 78218:
/*!*******************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/delete-room-modal/delete-room-modal.component.scss?ngResource ***!
  \*******************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header h2 {\n  color: #24398A;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 24px;\n}\n.dialog-container .dialog-header p {\n  font-weight: 400;\n  font-size: 16px;\n  color: #231F20;\n}\n.dialog-container .dialog-content {\n  border: 1px solid #24398A;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 48px;\n}\n.dialog-container .dialog-content .section-title {\n  font-weight: 700;\n  font-size: 14px;\n  color: #231F20;\n}\n.dialog-container .dialog-content .section-title span {\n  font-weight: 400;\n  font-size: 14px;\n}\n.dialog-container .dialog-content .bed-type {\n  display: flex;\n  align-items: center;\n  border: 2px solid rgba(36, 57, 138, 0.36);\n  border-radius: 90px;\n  padding: 15px 0 15px 20px;\n}\n.dialog-container .dialog-content .bed-type i {\n  color: #24398A;\n  font-size: 27px;\n}\n.dialog-container .dialog-content .bed-type span {\n  font-weight: 700;\n  font-size: 12px;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/delete-room-modal/delete-room-modal.component.scss"],"names":[],"mappings":"AAAA;EACE,kBAAA;EACA,YAAA;EACA,aAAA;EACA,sBAAA;AACF;AAII;EACE,cAAA;EACA,eAAA;EACA,gBAAA;EACA,mBAAA;AAFN;AAKI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAHN;AASE;EACE,yBAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;AAPJ;AASI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAPN;AASM;EACE,gBAAA;EACA,eAAA;AAPR;AAWI;EACE,aAAA;EACA,mBAAA;EACA,yCAAA;EACA,mBAAA;EACA,yBAAA;AATN;AAWM;EACE,cAAA;EACA,eAAA;AATR;AAYM;EACE,gBAAA;EACA,eAAA;AAVR;AAgBE;EACE,aAAA;EACA,SAAA;EACA,mBAAA;AAdJ","sourcesContent":[".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n\n    h2 {\n      color: #24398A;\n      font-size: 24px;\n      font-weight: 600;\n      margin-bottom: 24px;\n    }\n\n    p {\n      font-weight: 400;\n      font-size: 16px;\n      color: #231F20;\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    border: 1px solid #24398A;\n    border-radius: 8px;\n    padding: 16px;\n    margin-bottom: 48px;\n\n    .section-title {\n      font-weight: 700;\n      font-size: 14px;\n      color: #231F20;\n\n      span {\n        font-weight: 400;\n        font-size: 14px;\n      }\n    }\n\n    .bed-type {\n      display: flex;\n      align-items: center;\n      border: 2px solid rgba(36, 57, 138, 0.36);\n      border-radius: 90px;\n      padding: 15px 0 15px 20px;\n\n      i {\n        color: #24398A;\n        font-size: 27px;\n      }\n\n      span {\n        font-weight: 700;\n        font-size: 12px;\n      }\n    }\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 81814:
/*!**********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/rental-booking.component.scss?ngResource ***!
  \**********************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#rental-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#rental-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#rental-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#rental-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#rental-booking .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#rental-booking .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#rental-booking .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#rental-booking .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#rental-booking .list-content .add-room-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#rental-booking #room-list {\n  max-height: 900px;\n  overflow-y: auto;\n}\n#rental-booking #room-list .room-container {\n  border-radius: 8px;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n}\n#rental-booking #room-list .room-container .room-header {\n  background-color: #24398A;\n  padding: 8px 12px;\n  border-radius: 8px 0 0 0;\n}\n#rental-booking #room-list .room-container .room-header h4 {\n  color: white;\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n#rental-booking #room-list .room-container .room-body {\n  padding: 8px 12px;\n}\n#rental-booking #room-list .room-container .room-body .section-title {\n  font-weight: 700;\n  color: black;\n  font-size: 14px;\n  margin-bottom: 0;\n}\n#rental-booking #room-list .room-container .room-body .section-title span {\n  font-weight: 400;\n}\n#rental-booking #room-list .room-container .room-body .bed-type {\n  display: flex;\n  align-items: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 90px;\n  padding: 15px 0 15px 20px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type i {\n  color: #24398A;\n  font-size: 27px;\n}\n#rental-booking #room-list .room-container .room-body .bed-type span {\n  font-weight: 700;\n  font-size: 12px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price, #rental-booking #room-list .room-container .room-body .weekend-price {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 12px 24px;\n  border: 1px solid #24398A;\n  border-radius: 8px;\n}\n#rental-booking #room-list .room-container .room-body .regular-price h5, #rental-booking #room-list .room-container .room-body .weekend-price h5 {\n  font-weight: 700;\n  font-size: 16px;\n  color: black;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price, #rental-booking #room-list .room-container .room-body .weekend-price .price {\n  font-weight: 700;\n  font-size: 48px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .room-body .regular-price .price-per-night, #rental-booking #room-list .room-container .room-body .weekend-price .price-per-night {\n  font-weight: 700;\n  font-size: 16px;\n  color: #24398A;\n}\n#rental-booking #room-list .room-container .delete-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n  border-radius: 0 8px 0 0;\n  border: 0;\n  color: white;\n  width: 40px;\n  height: 45px;\n}\n#rental-booking #room-list .room-container .delete-room-btn i {\n  font-size: 20px;\n}\n#rental-booking #room-list .room-container .edit-room-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  border-radius: 0 0 8px 0;\n  border: 0;\n  height: 50px;\n  color: white;\n}\n#rental-booking #room-list .room-container .edit-room-btn i {\n  font-size: 15px;\n}\n#rental-booking .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#rental-booking .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/rental-booking.component.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;AACE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AACJ;;AAIE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AADJ;AAGI;EACE,eAAA;EACA,cAAA;AADN;AAII;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAFN;AAME;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAJJ;AAOE;EACE,mBAAA;EACA,4FAAA;AALJ;AAQE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AANJ;AAQI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AANN;AAUE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AARJ;AAWI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AATN;AAcE;EACE,iBAAA;EACA,gBAAA;AAZJ;AAcI;EACE,kBAAA;EACA,yCAAA;AAZN;AAcM;EACE,yBAAA;EACA,iBAAA;EACA,wBAAA;AAZR;AAcQ;EACE,YAAA;EACA,SAAA;EACA,eAAA;EACA,gBAAA;AAZV;AAgBM;EACE,iBAAA;AAdR;AAgBQ;EACE,gBAAA;EACA,YAAA;EACA,eAAA;EACA,gBAAA;AAdV;AAgBU;EACE,gBAAA;AAdZ;AAkBQ;EACE,aAAA;EACA,mBAAA;EACA,yCAAA;EACA,mBAAA;EACA,yBAAA;AAhBV;AAkBU;EACE,cAAA;EACA,eAAA;AAhBZ;AAmBU;EACE,gBAAA;EACA,eAAA;AAjBZ;AAqBQ;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AAnBV;AAqBU;EACE,gBAAA;EACA,eAAA;EACA,YAAA;AAnBZ;AAsBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AApBZ;AAuBU;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AArBZ;AA0BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iIAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAxBR;AA0BQ;EACE,eAAA;AAxBV;AA4BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iKAAA;EACA,wBAAA;EACA,SAAA;EACA,YAAA;EACA,YAAA;AA1BR;AA4BQ;EAEE,eAAA;AA3BV;AAkCE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAhCJ;AAkCI;EACE,aAAA;EACA,uBAAA;AAhCN","sourcesContent":[".save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n#rental-booking {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n\n    .add-room-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n\n  #room-list {\n    max-height: 900px;\n    overflow-y: auto;\n\n    .room-container {\n      border-radius: 8px;\n      box-shadow: 0 4px 4px rgba(0, 0, 0, 0.08);\n\n      .room-header {\n        background-color: #24398A;\n        padding: 8px 12px;\n        border-radius: 8px 0 0 0;\n\n        h4 {\n          color: white;\n          margin: 0;\n          font-size: 24px;\n          font-weight: 700;\n        }\n      }\n\n      .room-body {\n        padding: 8px 12px;\n\n        .section-title {\n          font-weight: 700;\n          color: black;\n          font-size: 14px;\n          margin-bottom: 0;\n\n          span {\n            font-weight: 400;\n          }\n        }\n\n        .bed-type {\n          display: flex;\n          align-items: center;\n          border: 1px solid rgba(36, 57, 138, 0.16);\n          border-radius: 90px;\n          padding: 15px 0 15px 20px;\n\n          i {\n            color: #24398A;\n            font-size: 27px;\n          }\n\n          span {\n            font-weight: 700;\n            font-size: 12px;\n          }\n        }\n\n        .regular-price, .weekend-price {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          padding: 12px 24px;\n          border: 1px solid #24398A;\n          border-radius: 8px;\n\n          h5 {\n            font-weight: 700;\n            font-size: 16px;\n            color: black;\n          }\n\n          .price {\n            font-weight: 700;\n            font-size: 48px;\n            color: #24398A;\n          }\n\n          .price-per-night {\n            font-weight: 700;\n            font-size: 16px;\n            color: #24398A;\n          }\n        }\n      }\n\n      .delete-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n        border-radius: 0 8px 0 0;\n        border: 0;\n        color: white;\n        width: 40px;\n        height: 45px;\n\n        i {\n          font-size: 20px;\n        }\n      }\n\n      .edit-room-btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        border-radius: 0 0 8px 0;\n        border: 0;\n        height: 50px;\n        color: white;\n\n        i {\n\n          font-size: 15px;\n        }\n      }\n    }\n  }\n\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n}\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 11012:
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/add-edit-service/add-edit-service.component.scss?ngResource ***!
  \*****************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 25px 100px;\n  background-color: #24398A;\n}\n.dialog-container .dialog-header h2 {\n  color: white;\n  font-size: 32px;\n  font-weight: 700;\n  margin: 0;\n}\n.dialog-container .dialog-header button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 45px;\n  height: 45px;\n  border: 2px solid white;\n  border-radius: 50%;\n  background: transparent;\n  color: white;\n}\n.dialog-container .dialog-content {\n  padding: 0 46px;\n  margin-top: 78px;\n  flex: 1;\n}\n.dialog-container .dialog-content .section-name {\n  font-size: 24px;\n  color: #24398A;\n  font-weight: 600;\n}\n.dialog-container .dialog-content .limit-check {\n  height: 57px;\n}\n.dialog-container .dialog-content .section-subtitle {\n  color: black;\n  font-weight: 700;\n  font-size: 20px;\n}\n.dialog-container .dialog-content .tab-content {\n  padding: 24px;\n}\n.dialog-container .dialog-content .tab-content .add-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n.dialog-container .dialog-content #photo-upload .image-container {\n  position: relative;\n  width: 100%;\n  min-height: 7.5rem;\n  border: 2px solid rgba(36, 57, 138, 0.08);\n  border-radius: 8px;\n  overflow: hidden;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image {\n  width: 100%;\n  height: 120px;\n  min-height: inherit;\n  background: rgba(36, 57, 138, 0.04);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #24398A;\n  cursor: pointer;\n  gap: 0.75rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image:before {\n  content: \"\\f03e\";\n  font-family: \"Font Awesome 5 Free\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 2.25rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .no-image:after {\n  font-size: 1rem;\n  content: attr(translatedContent);\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail, .dialog-container .dialog-content #photo-upload .image-container .btn-gallery {\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(36, 57, 138, 0.16);\n  border-radius: 100%;\n  border: none;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail i, .dialog-container .dialog-content #photo-upload .image-container .btn-gallery i {\n  color: var(--primary-background);\n  font-weight: 900;\n  font-size: 16px;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-thumbnail {\n  position: absolute;\n  top: 2.125rem;\n  right: 2.125rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .btn-gallery {\n  position: absolute;\n  top: 0.875rem;\n  right: 0.875rem;\n}\n.dialog-container .dialog-content #photo-upload .image-container .gallery-img {\n  height: 120px;\n  width: 100%;\n  object-fit: cover;\n}\n.dialog-container .dialog-content #photo-upload .photo-type-title {\n  font-size: 16px;\n  font-weight: 400;\n}\n.dialog-container .dialog-content #photo-upload .clear-btn {\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  border: none;\n  border-radius: 20px;\n  padding: 10px 12px;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(36, 57, 138, 0.16);\n  color: white;\n}\n.dialog-container .dialog-content #photo-upload .clear-btn:hover {\n  background-color: rgb(255, 0, 0);\n}\n.dialog-container .dialog-content #photo-upload .have-selected-photo {\n  position: relative;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  width: 100%;\n  height: 350px;\n}\n.dialog-container .dialog-content #photo-upload .have-selected-photo .prev-img {\n  width: 100%;\n  height: 350px;\n  border-radius: 8px;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected {\n  display: flex;\n  height: 350px;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  cursor: pointer;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container i {\n  font-size: 64px;\n  font-weight: 400;\n  color: rgba(36, 57, 138, 0.16);\n}\n.dialog-container .dialog-content #photo-upload .no-photo-selected .icons-container span {\n  font-size: 24px;\n  font-weight: 600;\n  color: rgba(36, 57, 138, 0.16);\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 120px;\n  max-height: 120px;\n  border-radius: 8px;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  cursor: pointer;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container {\n  color: rgba(36, 57, 138, 0.16);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container i {\n  font-size: 36px;\n}\n.dialog-container .dialog-content #photo-upload .select-gallery-images .icons-container span {\n  font-size: 16px;\n}\n.dialog-container .dialog-content #photo-upload .selected-img-list {\n  height: 120px;\n  display: flex;\n  position: relative;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  padding: 24px 100px;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid rgba(36, 57, 138, 0.16);\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/add-edit-service/add-edit-service.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAhBA;EACE,YAAA;EACA,aAAA;EACA,sBAAA;AAmBF;AAhBE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,mBAAA;EACA,yBAAA;AAkBJ;AAhBI;EACE,YAAA;EACA,eAAA;EACA,gBAAA;EACA,SAAA;AAkBN;AAfI;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,WAAA;EACA,YAAA;EACA,uBAAA;EACA,kBAAA;EACA,uBAAA;EACA,YAAA;AAiBN;AAVE;EACE,eAAA;EACA,gBAAA;EACA,OAAA;AAYJ;AAVI;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AAYN;AATI;EACE,YAAA;AAWN;AARI;EACE,YAAA;EACA,gBAAA;EACA,eAAA;AAUN;AAPI;EACE,aAAA;AASN;AAPM;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AASR;AAHM;EACE,kBAAA;EACA,WAAA;EACA,kBAAA;EAEA,yCAAA;EACA,kBAAA;EACA,gBAAA;AAIR;AAFQ;EACE,WAAA;EACA,aAAA;EACA,mBAAA;EACA,mCAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,cD5FM;EC6FN,eAAA;EACA,YAAA;AAIV;AAFU;EACE,gBAAA;EACA,kCAAA;EACA,kBAAA;EACA,gBAAA;EACA,kBAAA;AAIZ;AADU;EACE,eAAA;EACA,gCAAA;AAGZ;AACQ;EACE,WAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,mCAAA;EACA,mBAAA;EACA,YAAA;AACV;AACU;EACE,gCAAA;EACA,gBAAA;EACA,eAAA;AACZ;AAGQ;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AADV;AAIQ;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AAFV;AAKQ;EACE,aAAA;EACA,WAAA;EACA,iBAAA;AAHV;AAaM;EACE,eAAA;EACA,gBAAA;AAXR;AAcM;EACE,kBAAA;EACA,WAAA;EACA,SAAA;EACA,YAAA;EACA,mBAAA;EACA,kBAAA;EACA,SAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,yCAAA;EACA,YAAA;AAZR;AAcQ;EACE,gCAAA;AAZV;AAkBM;EACE,kBAAA;EACA,yCAAA;EACA,kBAAA;EACA,WAAA;EACA,aAAA;AAhBR;AAkBQ;EACE,WAAA;EACA,aAAA;EACA,kBAAA;AAhBV;AAoBM;EAEE,aAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,yCAAA;EACA,kBAAA;EACA,eAAA;AAnBR;AAqBQ;EACE,aAAA;EACA,mBAAA;EACA,sBAAA;AAnBV;AAqBU;EACE,eAAA;EACA,gBAAA;EACA,8BAAA;AAnBZ;AAsBU;EACE,eAAA;EACA,gBAAA;EACA,8BAAA;AApBZ;AA4BM;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,aAAA;EACA,iBAAA;EACA,kBAAA;EACA,yCAAA;EACA,eAAA;AA1BR;AA4BQ;EACE,8BAAA;EACA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,uBAAA;AA1BV;AA4BU;EACE,eAAA;AA1BZ;AA6BU;EACE,eAAA;AA3BZ;AAgCM;EACE,aAAA;EACA,aAAA;EACA,kBAAA;AA9BR;AAqCE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,6CAAA;AAnCJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n.dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 25px 100px;\n    background-color: #24398A;\n\n    h2 {\n      color: white;\n      font-size: 32px;\n      font-weight: 700;\n      margin: 0;\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 45px;\n      height: 45px;\n      border: 2px solid white;\n      border-radius: 50%;\n      background: transparent;\n      color: white;\n\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    padding: 0 46px;\n    margin-top: 78px;\n    flex: 1;\n\n    .section-name {\n      font-size: 24px;\n      color: #24398A;\n      font-weight: 600;\n    }\n\n    .limit-check{\n      height: 57px;\n    }\n\n    .section-subtitle {\n      color: black;\n      font-weight: 700;\n      font-size: 20px;\n    }\n\n    .tab-content{\n      padding: 24px;\n\n      .add-btn {\n        border-radius: 8px;\n        border: 1px dotted rgba(36, 57, 138, 0.16);\n        background-color: transparent;\n        width: 100%;\n        padding: 15px 0;\n        color: rgba(36, 57, 138, 0.16);\n        font-weight: 600;\n        font-size: 16px;\n      }\n    }\n\n    #photo-upload {\n\n      .image-container {\n        position: relative;\n        width: 100%;\n        min-height: 7.5rem;\n        //height: 120px;\n        border: 2px solid rgba($primary-color, 0.08);\n        border-radius: 8px;\n        overflow: hidden;\n\n        & .no-image {\n          width: 100%;\n          height: 120px;\n          min-height: inherit;\n          background: rgba($primary-color, 0.04);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          color: $primary-color;\n          cursor: pointer;\n          gap: 0.75rem;\n\n          &:before {\n            content: '\\f03e';\n            font-family: 'Font Awesome 5 Free';\n            font-style: normal;\n            font-weight: 400;\n            font-size: 2.25rem;\n          }\n\n          &:after {\n            font-size: 1rem;\n            content: attr(translatedContent);\n          }\n        }\n\n        .btn-thumbnail, .btn-gallery {\n          width: 2rem;\n          height: 2rem;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background: rgba($primary-color, 0.16);\n          border-radius: 100%;\n          border: none;\n\n          i {\n            color: var(--primary-background);\n            font-weight: 900;\n            font-size: 16px;\n          }\n        }\n\n        .btn-thumbnail {\n          position: absolute;\n          top: 2.125rem;\n          right: 2.125rem;\n        }\n\n        .btn-gallery {\n          position: absolute;\n          top: 0.875rem;\n          right: 0.875rem;\n        }\n\n        .gallery-img{\n          height: 120px;\n          width: 100%;\n          object-fit: cover;\n        }\n      }\n\n\n\n\n\n\n\n      .photo-type-title {\n        font-size: 16px;\n        font-weight: 400;\n      }\n\n      .clear-btn {\n        position: absolute;\n        right: 20px;\n        top: 20px;\n        border: none;\n        border-radius: 20px;\n        padding: 10px 12px;\n        margin: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(36, 57, 138, 0.16);\n        color: white;\n\n        &:hover {\n          background-color: rgba(255, 0, 0, 1);\n        }\n      }\n\n\n      // Thumbnail\n      .have-selected-photo {\n        position: relative;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        width: 100%;\n        height: 350px;\n\n        .prev-img {\n          width: 100%;\n          height: 350px;\n          border-radius: 8px;\n        }\n      }\n\n      .no-photo-selected {\n\n        display: flex;\n        height: 350px;\n        align-items: center;\n        justify-content: center;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        cursor: pointer;\n\n        .icons-container {\n          display: flex;\n          align-items: center;\n          flex-direction: column;\n\n          i {\n            font-size: 64px;\n            font-weight: 400;\n            color: rgba(36, 57, 138, 0.16);\n          }\n\n          span {\n            font-size: 24px;\n            font-weight: 600;\n            color: rgba(36, 57, 138, 0.16);\n          }\n        }\n\n\n      }\n\n      // Gallery\n      .select-gallery-images {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 120px;\n        max-height: 120px;\n        border-radius: 8px;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        cursor: pointer;\n\n        .icons-container {\n          color: rgba(36, 57, 138, 0.16);\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n\n          i {\n            font-size: 36px;\n          }\n\n          span {\n            font-size: 16px;\n          }\n        }\n      }\n\n      .selected-img-list {\n        height: 120px;\n        display: flex;\n        position: relative;\n      }\n    }\n\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    padding: 24px 100px;\n    align-items: center;\n    justify-content: space-between;\n    border-top: 1px solid rgba(36, 57, 138, 0.16);\n  }\n\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 13125:
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/delete-modal-service/delete-modal-service.component.scss?ngResource ***!
  \*************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header h2 {\n  color: #24398A;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 24px;\n}\n.dialog-container .dialog-header p {\n  font-weight: 400;\n  font-size: 16px;\n  color: #231F20;\n}\n.dialog-container .dialog-content {\n  border: 1px solid #24398A;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 48px;\n}\n.dialog-container .dialog-content .section-title {\n  font-weight: 700;\n  font-size: 14px;\n  color: #231F20;\n}\n.dialog-container .dialog-content .section-title span {\n  font-weight: 400;\n  font-size: 14px;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/delete-modal-service/delete-modal-service.component.scss"],"names":[],"mappings":"AAAA;EACE,kBAAA;EACA,YAAA;EACA,aAAA;EACA,sBAAA;AACF;AAII;EACE,cAAA;EACA,eAAA;EACA,gBAAA;EACA,mBAAA;AAFN;AAKI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAHN;AASE;EACE,yBAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;AAPJ;AASI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAPN;AASM;EACE,gBAAA;EACA,eAAA;AAPR;AAcE;EACE,aAAA;EACA,SAAA;EACA,mBAAA;AAZJ","sourcesContent":[".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n\n    h2 {\n      color: #24398A;\n      font-size: 24px;\n      font-weight: 600;\n      margin-bottom: 24px;\n    }\n\n    p {\n      font-weight: 400;\n      font-size: 16px;\n      color: #231F20;\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    border: 1px solid #24398A;\n    border-radius: 8px;\n    padding: 16px;\n    margin-bottom: 48px;\n\n    .section-title {\n      font-weight: 700;\n      font-size: 14px;\n      color: #231F20;\n\n      span {\n        font-weight: 400;\n        font-size: 14px;\n      }\n    }\n\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 92945:
/*!**********************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/service-booking-time-slots.component.scss?ngResource ***!
  \**********************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#booking-timeslots .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#booking-timeslots .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#booking-timeslots .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#booking-timeslots .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#booking-timeslots .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#booking-timeslots .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#booking-timeslots .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#booking-timeslots .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#booking-timeslots .list-content .ticket-list {\n  width: 100%;\n}\n#booking-timeslots .list-content .ticket-list .btn-delete {\n  background-color: #24398A;\n  color: #FFFFFF;\n  border-top-right-radius: 8px;\n  border: none;\n  width: 40px;\n  height: 50px;\n}\n#booking-timeslots .list-content .ticket-list .btn-edit {\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  color: #FFFFFF;\n  border-bottom-right-radius: 8px;\n  border: none;\n  width: 40px;\n  height: 50px;\n}\n#booking-timeslots .list-content .add-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#booking-timeslots .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#booking-timeslots .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/service-booking-time-slots.component.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;AACE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AACJ;;AAKE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAFJ;AAII;EACE,eAAA;EACA,cAAA;AAFN;AAKI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAHN;AAOE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AALJ;AAQE;EACE,mBAAA;EACA,4FAAA;AANJ;AASE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AAPJ;AASI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AAPN;AAYE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AAVJ;AAYI;EACE,WAAA;AAVN;AAWM;EACE,yBAAA;EACA,cAAA;EACA,4BAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AATR;AAYM;EACE,iKAAA;EACA,cAAA;EACA,+BAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAVR;AAeI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AAbN;AAiBE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAfJ;AAiBI;EACE,aAAA;EACA,uBAAA;AAfN","sourcesContent":[".save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n\n#booking-timeslots {\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n    .ticket-list{\n      width: 100%;\n      .btn-delete{\n        background-color:#24398A;\n        color: #FFFFFF;\n        border-top-right-radius: 8px;\n        border:none;\n        width: 40px;\n        height: 50px;\n      }\n\n      .btn-edit{\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        color: #FFFFFF;\n        border-bottom-right-radius: 8px;\n        border:none;\n        width: 40px;\n        height: 50px;\n      }\n    }\n\n\n    .add-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n}\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 3359:
/*!***************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/add-edit-ticket/add-edit-ticket.component.scss?ngResource ***!
  \***************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 25px 100px;\n  background-color: #24398A;\n}\n.dialog-container .dialog-header h2 {\n  color: white;\n  font-size: 32px;\n  font-weight: 700;\n  margin: 0;\n}\n.dialog-container .dialog-header button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 45px;\n  height: 45px;\n  border: 2px solid white;\n  border-radius: 50%;\n  background: transparent;\n  color: white;\n}\n.dialog-container .dialog-content {\n  padding: 0 100px;\n  margin-top: 78px;\n  flex: 1;\n}\n.dialog-container .dialog-content .section-name {\n  font-size: 24px;\n  color: #24398A;\n  font-weight: 600;\n}\n.dialog-container .dialog-content .limit-check {\n  height: 57px;\n}\n.dialog-container .dialog-content .section-subtitle {\n  color: black;\n  font-weight: 700;\n  font-size: 20px;\n}\n.dialog-container .dialog-content .add-remove-tickets {\n  border: 1px solid #24398A;\n  padding: 10px 15px;\n  width: 100%;\n  max-width: 130px;\n  border-radius: 70px;\n}\n.dialog-container .dialog-content .add-remove-tickets .add-remove-btn {\n  display: flex;\n  background: transparent;\n  border: none;\n  font-size: 12px;\n  color: #24398A;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  padding: 24px 100px;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid rgba(36, 57, 138, 0.16);\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/add-edit-ticket/add-edit-ticket.component.scss"],"names":[],"mappings":"AACA;EACE,YAAA;EACA,aAAA;EACA,sBAAA;AAAF;AAGE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,mBAAA;EACA,yBAAA;AADJ;AAGI;EACE,YAAA;EACA,eAAA;EACA,gBAAA;EACA,SAAA;AADN;AAII;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,WAAA;EACA,YAAA;EACA,uBAAA;EACA,kBAAA;EACA,uBAAA;EACA,YAAA;AAFN;AASE;EACE,gBAAA;EACA,gBAAA;EACA,OAAA;AAPJ;AASI;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AAPN;AAUI;EACE,YAAA;AARN;AAWI;EACE,YAAA;EACA,gBAAA;EACA,eAAA;AATN;AAYI;EACE,yBAAA;EACA,kBAAA;EACA,WAAA;EACA,gBAAA;EACA,mBAAA;AAVN;AAYM;EACE,aAAA;EACA,uBAAA;EACA,YAAA;EACA,eAAA;EACA,cAAA;AAVR;AAiBE;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,6CAAA;AAfJ","sourcesContent":["\n.dialog-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 25px 100px;\n    background-color: #24398A;\n\n    h2 {\n      color: white;\n      font-size: 32px;\n      font-weight: 700;\n      margin: 0;\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 45px;\n      height: 45px;\n      border: 2px solid white;\n      border-radius: 50%;\n      background: transparent;\n      color: white;\n\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    padding: 0 100px;\n    margin-top: 78px;\n    flex: 1;\n\n    .section-name {\n      font-size: 24px;\n      color: #24398A;\n      font-weight: 600;\n    }\n\n    .limit-check{\n      height: 57px;\n    }\n\n    .section-subtitle {\n      color: black;\n      font-weight: 700;\n      font-size: 20px;\n    }\n\n    .add-remove-tickets {\n      border: 1px solid #24398A;\n      padding: 10px 15px;\n      width: 100%;\n      max-width: 130px;\n      border-radius: 70px;\n\n      .add-remove-btn {\n        display: flex;\n        background: transparent;\n        border: none;\n        font-size: 12px;\n        color: #24398A;\n      }\n    }\n\n}\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    padding: 24px 100px;\n    align-items: center;\n    justify-content: space-between;\n    border-top: 1px solid rgba(36, 57, 138, 0.16);\n  }\n\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 14056:
/*!***********************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/delete-ticket/delete-ticket.component.scss?ngResource ***!
  \***********************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.dialog-container .dialog-header h2 {\n  color: #24398A;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 24px;\n}\n.dialog-container .dialog-header p {\n  font-weight: 400;\n  font-size: 16px;\n  color: #231F20;\n}\n.dialog-container .dialog-content {\n  border: 1px solid #24398A;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 48px;\n}\n.dialog-container .dialog-content .section-title {\n  font-weight: 700;\n  font-size: 14px;\n  color: #231F20;\n}\n.dialog-container .dialog-content .section-title span {\n  font-weight: 400;\n  font-size: 14px;\n}\n.dialog-container .dialog-footer {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/delete-ticket/delete-ticket.component.scss"],"names":[],"mappings":"AAAA;EACE,kBAAA;EACA,YAAA;EACA,aAAA;EACA,sBAAA;AACF;AAII;EACE,cAAA;EACA,eAAA;EACA,gBAAA;EACA,mBAAA;AAFN;AAKI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAHN;AASE;EACE,yBAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;AAPJ;AASI;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AAPN;AASM;EACE,gBAAA;EACA,eAAA;AAPR;AAcE;EACE,aAAA;EACA,SAAA;EACA,mBAAA;AAZJ","sourcesContent":[".dialog-container {\n  padding: 48px 52px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  // Header\n  .dialog-header {\n\n    h2 {\n      color: #24398A;\n      font-size: 24px;\n      font-weight: 600;\n      margin-bottom: 24px;\n    }\n\n    p {\n      font-weight: 400;\n      font-size: 16px;\n      color: #231F20;\n    }\n\n  }\n\n  // Content\n  .dialog-content {\n    border: 1px solid #24398A;\n    border-radius: 8px;\n    padding: 16px;\n    margin-bottom: 48px;\n\n    .section-title {\n      font-weight: 700;\n      font-size: 14px;\n      color: #231F20;\n\n      span {\n        font-weight: 400;\n        font-size: 14px;\n      }\n    }\n\n  }\n\n  // Footer\n  .dialog-footer {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 55411:
/*!**********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/ticket-booking.component.scss?ngResource ***!
  \**********************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".save-btn {\n  margin-top: -90px;\n}\n.save-btn button:disabled {\n  border: 2px solid rgba(35, 31, 32, 0.48);\n  background: rgba(36, 57, 138, 0) !important;\n  color: rgba(35, 31, 32, 0.48);\n}\n\n#ticket-booking .tab-section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n#ticket-booking .tab-section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n#ticket-booking .tab-section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n#ticket-booking .section-title {\n  font-weight: 600;\n  font-size: 24px;\n  color: #24398A;\n}\n#ticket-booking .section-content {\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n#ticket-booking .section-content .content-tickets {\n  padding: 46px 100px;\n}\n#ticket-booking .list-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(36, 57, 138, 0.1607843137);\n  padding: 10px 0;\n  border-radius: 8px 8px 0 0;\n}\n#ticket-booking .list-title .title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #24398A;\n  margin: 0;\n}\n#ticket-booking .list-content {\n  background-color: rgba(36, 57, 138, 0.08);\n  border-radius: 0 0 8px 8px;\n  padding: 20px;\n}\n#ticket-booking .list-content .ticket-list {\n  width: 100%;\n}\n#ticket-booking .list-content .ticket-list .btn-delete {\n  background-color: #24398A;\n  color: #FFFFFF;\n  border-top-right-radius: 8px;\n  border: none;\n  width: 40px;\n  height: 50px;\n}\n#ticket-booking .list-content .ticket-list .btn-edit {\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  color: #FFFFFF;\n  border-bottom-right-radius: 8px;\n  border: none;\n  width: 40px;\n  height: 50px;\n}\n#ticket-booking .list-content .add-btn {\n  border-radius: 8px;\n  border: 1px dotted rgba(36, 57, 138, 0.16);\n  background-color: transparent;\n  width: 100%;\n  padding: 15px 0;\n  color: rgba(36, 57, 138, 0.16);\n  font-weight: 600;\n  font-size: 16px;\n}\n#ticket-booking .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n#ticket-booking .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/ticket-booking.component.scss"],"names":[],"mappings":"AAAA;EACE,iBAAA;AACF;AACE;EACE,wCAAA;EACA,2CAAA;EACA,6BAAA;AACJ;;AAKE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAFJ;AAII;EACE,eAAA;EACA,cAAA;AAFN;AAKI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AAHN;AAOE;EACE,gBAAA;EACA,eAAA;EACA,cAAA;AALJ;AAQE;EAEE,4FAAA;AAPJ;AASI;EACE,mBAAA;AAPN;AAWE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,iDAAA;EACA,eAAA;EACA,0BAAA;AATJ;AAWI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,SAAA;AATN;AAaE;EACE,yCAAA;EACA,0BAAA;EACA,aAAA;AAXJ;AAaI;EACE,WAAA;AAXN;AAYM;EACE,yBAAA;EACA,cAAA;EACA,4BAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAVR;AAaM;EACE,iKAAA;EACA,cAAA;EACA,+BAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;AAXR;AAgBI;EACE,kBAAA;EACA,0CAAA;EACA,6BAAA;EACA,WAAA;EACA,eAAA;EACA,8BAAA;EACA,gBAAA;EACA,eAAA;AAdN;AAkBE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAhBJ;AAkBI;EACE,aAAA;EACA,uBAAA;AAhBN","sourcesContent":[".save-btn{\n  margin-top: -90px;\n\n  button:disabled{\n    border: 2px solid rgba(#231F20, 48%);\n    background: rgba(#24398A, 0%) !important;\n    color: rgba(#231F20, 48%);\n  }\n}\n\n#ticket-booking{\n\n  .tab-section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-title {\n    font-weight: 600;\n    font-size: 24px;\n    color: #24398A;\n  }\n\n  .section-content {\n    //padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n\n    .content-tickets{\n      padding: 46px 100px;\n    }\n  }\n\n  .list-title {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #24398A29;\n    padding: 10px 0;\n    border-radius: 8px 8px 0 0;\n\n    .title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #24398A;\n      margin: 0;\n    }\n  }\n\n  .list-content {\n    background-color: rgba(36, 57, 138, 0.08);\n    border-radius: 0 0 8px 8px;\n    padding: 20px;\n\n    .ticket-list{\n      width: 100%;\n      .btn-delete{\n        background-color:#24398A;\n        color: #FFFFFF;\n        border-top-right-radius: 8px;\n        border:none;\n        width: 40px;\n        height: 50px;\n      }\n\n      .btn-edit{\n        background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n        color: #FFFFFF;\n        border-bottom-right-radius: 8px;\n        border:none;\n        width: 40px;\n        height: 50px;\n      }\n    }\n\n\n    .add-btn {\n      border-radius: 8px;\n      border: 1px dotted rgba(36, 57, 138, 0.16);\n      background-color: transparent;\n      width: 100%;\n      padding: 15px 0;\n      color: rgba(36, 57, 138, 0.16);\n      font-weight: 600;\n      font-size: 16px;\n    }\n  }\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n  }\n\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 82228:
/*!***************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-title-list/stepper-title-list.component.scss?ngResource ***!
  \***************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".steps-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  margin-top: 15px;\n  margin-bottom: 27px;\n}\n.steps-container .step-content {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.steps-container .step-content .step-name {\n  font-size: 20px;\n  font-weight: 600;\n  color: rgba(36, 57, 138, 0.24);\n}\n.steps-container .step-content .step-completion {\n  background: rgba(36, 57, 138, 0.24);\n  width: 100%;\n  height: 13px;\n}\n.steps-container .step-content.selected .step-name {\n  color: #24398A;\n}\n.steps-container .step-content.selected .step-completion {\n  background: #24398A;\n}\n\nnav {\n  --bs-breadcrumb-divider: \"/\";\n  --bs-breadcrumb-font-size:18px;\n  --bs-breadcrumb-color: #24398A;\n}\nnav a {\n  color: #24398A;\n  font-size: 18px;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/components/stepper-title-list/stepper-title-list.component.scss"],"names":[],"mappings":"AAAA;EACE,aAAA;EACA,eAAA;EACA,mBAAA;EACA,8BAAA;EACA,SAAA;EACA,gBAAA;EACA,mBAAA;AACF;AAEE;EACE,YAAA;EACA,aAAA;EACA,sBAAA;EACA,mBAAA;AAAJ;AAEI;EACE,eAAA;EACA,gBAAA;EACA,8BAAA;AAAN;AAGI;EACE,mCAAA;EACA,WAAA;EACA,YAAA;AADN;AAKM;EACE,cAAA;AAHR;AAMM;EACE,mBAAA;AAJR;;AAWA;EACE,4BAAA;EACA,8BAAA;EACA,8BAAA;AARF;AAUE;EACE,cAAA;EACA,eAAA;AARJ","sourcesContent":[".steps-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  margin-top: 15px;\n  margin-bottom: 27px;\n\n\n  .step-content {\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .step-name {\n      font-size: 20px;\n      font-weight: 600;\n      color: rgba(36, 57, 138, 0.24);\n    }\n\n    .step-completion {\n      background: rgba(36, 57, 138, 0.24);\n      width: 100%;\n      height: 13px;\n    }\n\n    &.selected {\n      .step-name {\n        color: #24398A;\n      }\n\n      .step-completion {\n        background: #24398A;\n\n      }\n    }\n  }\n}\n\nnav{\n  --bs-breadcrumb-divider: '/';\n  --bs-breadcrumb-font-size:18px;\n  --bs-breadcrumb-color: #24398A;\n\n  a{\n    color: #24398A;\n    font-size: 18px;\n    //cursor: pointer;\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 97302:
/*!**********************************************************************************************!*\
  !*** ./src/app/features/resources/pages/add-resource/add-resource.component.scss?ngResource ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".page-title {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 42px;\n}\n.page-title h1 {\n  color: #24398A;\n  font-size: 32px;\n  margin: 0;\n}\n.page-title .btn-hidden {\n  background-color: transparent;\n  color: #edf0fa;\n}\n.page-title .btn-hidden:hover {\n  box-shadow: none;\n}\n\n.stepper-card-title {\n  background-color: white;\n  padding: 24px 72px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n.stepper-card-title h2 {\n  margin: 0;\n  color: #24398A;\n  font-size: 24px;\n  font-weight: 700;\n}\n\n.stepper-card-content {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 21px;\n  background-color: white;\n  padding: 32px 24px;\n}\n\n.configure-edit-layout {\n  margin-bottom: 50px;\n}\n.configure-edit-layout .section-title {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 16px 25px;\n  border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n}\n.configure-edit-layout .section-title i {\n  font-size: 32px;\n  color: #24398A;\n}\n.configure-edit-layout .section-title h2 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #24398A;\n  margin-left: 10px;\n  margin-bottom: 0;\n}\n.configure-edit-layout .section-content {\n  padding: 46px 100px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n}\n.configure-edit-layout .facility-category-name {\n  font-size: 24px;\n  color: #231F20;\n  font-weight: 700;\n}\n.configure-edit-layout .stepper-step-controller {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: white;\n  padding: 25px 40px;\n}\n.configure-edit-layout .stepper-step-controller .next-step {\n  display: flex;\n  justify-content: center;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/pages/add-resource/add-resource.component.scss"],"names":[],"mappings":"AACA;EACE,aAAA;EACA,eAAA;EACA,mBAAA;EACA,8BAAA;EACA,mBAAA;AAAF;AAEE;EACE,cAAA;EACA,eAAA;EACA,SAAA;AAAJ;AAGE;EACE,6BAAA;EACA,cAAA;AADJ;AAEI;EACE,gBAAA;AAAN;;AAKA;EACE,uBAAA;EACA,kBAAA;EACA,wDAAA;AAFF;AAIE;EACE,SAAA;EACA,cAAA;EACA,eAAA;EACA,gBAAA;AAFJ;;AAMA;EACE,aAAA;EACA,eAAA;EACA,mBAAA;EACA,uBAAA;EACA,SAAA;EAEA,uBAAA;EACA,kBAAA;AAJF;;AASA;EAEE,mBAAA;AAPF;AASE;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,wDAAA;AAPJ;AASI;EACE,eAAA;EACA,cAAA;AAPN;AAUI;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,iBAAA;EACA,gBAAA;AARN;AAYE;EACE,mBAAA;EACA,4FAAA;AAVJ;AAcE;EACE,eAAA;EACA,cAAA;EACA,gBAAA;AAZJ;AAeE;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,kBAAA;AAbJ;AAeI;EACE,aAAA;EACA,uBAAA;AAbN","sourcesContent":["\n.page-title {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 42px;\n\n  h1 {\n    color: #24398A;\n    font-size: 32px;\n    margin: 0;\n  }\n\n  .btn-hidden {\n    background-color: transparent;\n    color: #edf0fa;\n    &:hover{\n      box-shadow: none;\n    }\n  }\n}\n\n.stepper-card-title {\n  background-color: white;\n  padding: 24px 72px;\n  border-bottom: solid #24398A29 1px;\n\n  h2 {\n    margin: 0;\n    color: #24398A;\n    font-size: 24px;\n    font-weight: 700;\n  }\n}\n\n.stepper-card-content {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 21px;\n\n  background-color: white;\n  padding: 32px 24px;\n}\n\n\n//Add && Edit Layout\n.configure-edit-layout {\n\n  margin-bottom: 50px;\n\n  .section-title {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 16px 25px;\n    border-bottom: solid rgba(36, 57, 138, 0.1607843137) 1px;\n\n    i {\n      font-size: 32px;\n      color: #24398A;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 700;\n      color: #24398A;\n      margin-left: 10px;\n      margin-bottom: 0;\n    }\n  }\n\n  .section-content {\n    padding: 46px 100px;\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), #FFFFFF;\n  }\n\n  // Facility Section\n  .facility-category-name {\n    font-size: 24px;\n    color: #231F20;\n    font-weight: 700;\n  }\n\n  .stepper-step-controller {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: white;\n    padding: 25px 40px;\n\n    .next-step {\n      display: flex;\n      justify-content: center;\n    }\n\n  }\n\n}\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 67047:
/*!**************************************************************************************************!*\
  !*** ./src/app/features/resources/pages/resources-list/resources-list.component.scss?ngResource ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".shared {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.not-shared {\n  display: none;\n}", "",{"version":3,"sources":["webpack://./src/app/features/resources/pages/resources-list/resources-list.component.scss"],"names":[],"mappings":"AAAA;EACI,qBAAA;EACA,kBAAA;AACJ;;AACA;EACI,aAAA;AAEJ","sourcesContent":[".shared{\n    display: inline-block;\n    margin-right: 10px;\n}\n.not-shared{\n    display: none;\n}\n// .drop-down-panel.mat-select-panel{\n//     background: rgba(255, 0, 0, 0.5)!important;\n// }\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 15018:
/*!************************************************************************!*\
  !*** ./src/app/features/resources/resources.component.scss?ngResource ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 57011:
/*!*************************************************************************************************!*\
  !*** ./src/app/standalone-components/product-preview/product-preview.component.scss?ngResource ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.card-list {\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n  border: 1px solid #24398A;\n  background-color: #24398A;\n}\n.card-list .card-body {\n  background-color: var(--primary-background);\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n}\n\n.full-card {\n  border-radius: 8px;\n  background-color: transparent;\n  border: 1px solid #24398A;\n}\n\n.product-card {\n  margin-bottom: 10px;\n}\n.product-card .card-header {\n  background-color: #24398A;\n  height: 50px;\n}\n.product-card .card-header h4 {\n  color: #FFFFFF !important;\n  margin-bottom: 0 !important;\n}\n.product-card .card-body .product-image {\n  height: 130px;\n  max-height: 130px;\n  width: 208px;\n  max-width: 208px;\n  border-radius: 8px;\n}\n.product-card .card-body .product-image img {\n  border-radius: 8px;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  align-content: center;\n}\n.product-card .card-body .info {\n  padding-right: 16px;\n}\n.product-card .card-body .info p span {\n  font-weight: 700;\n}\n.product-card .card-body .info .price {\n  border: 1px solid #24398A;\n  border-radius: 8px;\n  width: 103px;\n  height: 113px;\n  color: #24398A;\n  font-weight: 700;\n  text-align: center;\n}\n.product-card .card-body .info .price .sum {\n  font-size: 48px;\n  line-height: 55px;\n}\n.product-card .card-body .info .price .details {\n  font-size: 16px;\n  line-height: 18px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/standalone-components/product-preview/product-preview.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACE,2BAAA;EACA,8BAAA;EACA,+BAAA;EACA,0BAAA;EAEA,yBAAA;EACA,yBDRc;ACyBhB;AAhBE;EACE,2CAAA;EACA,8BAAA;EACA,+BAAA;AAkBJ;;AAdA;EACE,kBAAA;EACA,6BAAA;EACA,yBAAA;AAiBF;;AAdA;EACE,mBAAA;AAiBF;AAfE;EACE,yBD1BY;EC2BZ,YAAA;AAiBJ;AAfI;EACE,yBAAA;EACA,2BAAA;AAiBN;AAZI;EACE,aAAA;EACA,iBAAA;EACA,YAAA;EACA,gBAAA;EACA,kBAAA;AAcN;AAZM;EACE,kBAAA;EACA,WAAA;EACA,YAAA;EACA,iBAAA;EACA,qBAAA;AAcR;AAXI;EACE,mBAAA;AAaN;AAXQ;EACE,gBAAA;AAaV;AATM;EACE,yBAAA;EACA,kBAAA;EACA,YAAA;EACA,aAAA;EACA,cDhEQ;ECiER,gBAAA;EACA,kBAAA;AAWR;AATQ;EACE,eAAA;EACA,iBAAA;AAWV;AARQ;EACE,eAAA;EACA,iBAAA;AAUV","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"src/app/theme/styles/components/_colors.scss\";\n\n.card-list{\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n\n  border: 1px solid $primary-color;\n  background-color: $primary-color;\n  .card-body{\n    background-color: var(--primary-background);\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n}\n\n.full-card{\n  border-radius: 8px;\n  background-color: transparent;\n  border: 1px solid $primary-color;\n}\n\n.product-card{\n  margin-bottom: 10px;\n\n  .card-header{\n    background-color: $primary-color;\n    height: 50px;\n\n    h4{\n      color: $background-primary!important;\n      margin-bottom: 0!important;\n    }\n  }\n\n  .card-body{\n    .product-image{\n      height: 130px;\n      max-height: 130px;\n      width: 208px;\n      max-width: 208px;\n      border-radius: 8px;\n\n      img{\n        border-radius: 8px;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        align-content: center;\n      }\n    }\n    .info{\n      padding-right: 16px ;\n      p{\n        span{\n          font-weight: 700;\n        }\n      }\n\n      .price{\n        border: 1px solid $primary-color;\n        border-radius: 8px;\n        width: 103px;\n        height: 113px;\n        color: $primary-color;\n        font-weight: 700;\n        text-align: center;\n\n        .sum{\n          font-size: 48px;\n          line-height: 55px ;\n        }\n\n        .details{\n          font-size: 16px;\n          line-height: 18px;\n        }\n      }\n    }\n\n\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 99245:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/standalone-components/service-timeslot-preview/service-timeslot-preview.component.scss?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.card-list {\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n  border: 1px solid #24398A;\n  background-color: #24398A;\n}\n.card-list .card-body {\n  background-color: var(--primary-background);\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n}\n\n.full-card {\n  border-radius: 8px;\n  background-color: transparent;\n  border: 1px solid #24398A;\n}\n\n.product-card {\n  margin-bottom: 10px;\n}\n.product-card .card-header {\n  background-color: #24398A;\n  height: 50px;\n}\n.product-card .card-header h4 {\n  color: #FFFFFF !important;\n  margin-bottom: 0 !important;\n}\n.product-card .card-body .info {\n  padding-right: 16px;\n}\n.product-card .card-body .info p span {\n  font-weight: 700;\n}\n.product-card .card-body .info .price {\n  border: 1px solid #24398A;\n  border-radius: 8px;\n  width: 133px;\n  height: 113px;\n  color: #24398A;\n  font-weight: 700;\n  text-align: center;\n}\n.product-card .card-body .info .price .sum {\n  font-size: 48px;\n  line-height: 55px;\n}\n.product-card .card-body .info .price .details {\n  font-size: 16px;\n  line-height: 18px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/standalone-components/service-timeslot-preview/service-timeslot-preview.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACE,2BAAA;EACA,8BAAA;EACA,+BAAA;EACA,0BAAA;EAEA,yBAAA;EACA,yBDRc;ACyBhB;AAhBE;EACE,2CAAA;EACA,8BAAA;EACA,+BAAA;AAkBJ;;AAdA;EACE,kBAAA;EACA,6BAAA;EACA,yBAAA;AAiBF;;AAdA;EACE,mBAAA;AAiBF;AAfE;EACE,yBD1BY;EC2BZ,YAAA;AAiBJ;AAfI;EACE,yBAAA;EACA,2BAAA;AAiBN;AAZI;EACE,mBAAA;AAcN;AAZQ;EACE,gBAAA;AAcV;AAVM;EACE,yBAAA;EACA,kBAAA;EACA,YAAA;EACA,aAAA;EACA,cDjDQ;ECkDR,gBAAA;EACA,kBAAA;AAYR;AAVQ;EACE,eAAA;EACA,iBAAA;AAYV;AATQ;EACE,eAAA;EACA,iBAAA;AAWV","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"src/app/theme/styles/components/_colors.scss\";\n\n.card-list{\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n\n  border: 1px solid $primary-color;\n  background-color: $primary-color;\n  .card-body{\n    background-color: var(--primary-background);\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n}\n\n.full-card{\n  border-radius: 8px;\n  background-color: transparent;\n  border: 1px solid $primary-color;\n}\n\n.product-card{\n  margin-bottom: 10px;\n\n  .card-header{\n    background-color: $primary-color;\n    height: 50px;\n\n    h4{\n      color: $background-primary!important;\n      margin-bottom: 0!important;\n    }\n  }\n\n  .card-body{\n    .info{\n      padding-right: 16px ;\n      p{\n        span{\n          font-weight: 700;\n        }\n      }\n\n      .price{\n        border: 1px solid $primary-color;\n        border-radius: 8px;\n        width: 133px;\n        height: 113px;\n        color: $primary-color;\n        font-weight: 700;\n        text-align: center;\n\n        .sum{\n          font-size: 48px;\n          line-height: 55px ;\n        }\n\n        .details{\n          font-size: 16px;\n          line-height: 18px;\n        }\n      }\n    }\n\n\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 57274:
/*!*****************************************************************************************!*\
  !*** ./src/app/standalone-components/ticket-card/ticket-card.component.scss?ngResource ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.card-list {\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n  border: 1px solid #24398A;\n  background-color: #24398A;\n}\n.card-list .card-body {\n  background-color: var(--primary-background);\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n}\n\n.full-card {\n  border-radius: 8px;\n  background-color: transparent;\n  border: 1px solid #24398A;\n}\n\n.ticket-card {\n  margin-bottom: 10px;\n}\n.ticket-card .card-header {\n  background-color: #24398A;\n  height: 50px;\n}\n.ticket-card .card-header h4 {\n  color: #FFFFFF !important;\n  margin-bottom: 0 !important;\n}\n.ticket-card .card-body .info {\n  padding-right: 16px;\n}\n.ticket-card .card-body .info p span {\n  font-weight: 700;\n}\n.ticket-card .card-body .price {\n  border: 1px solid #24398A;\n  border-radius: 8px;\n  width: 152px;\n  height: 113px;\n  color: #24398A;\n  font-weight: 700;\n  text-align: center;\n}\n.ticket-card .card-body .price .sum {\n  font-size: 48px;\n  line-height: 55px;\n}\n.ticket-card .card-body .price .details {\n  font-size: 16px;\n  line-height: 18px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/standalone-components/ticket-card/ticket-card.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACE,2BAAA;EACA,8BAAA;EACA,+BAAA;EACA,0BAAA;EAEA,yBAAA;EACA,yBDRc;ACyBhB;AAhBE;EACE,2CAAA;EACA,8BAAA;EACA,+BAAA;AAkBJ;;AAdA;EACE,kBAAA;EACA,6BAAA;EACA,yBAAA;AAiBF;;AAdA;EACE,mBAAA;AAiBF;AAfE;EACE,yBD1BY;EC2BZ,YAAA;AAiBJ;AAfI;EACE,yBAAA;EACA,2BAAA;AAiBN;AAZI;EACE,mBAAA;AAcN;AAZQ;EACE,gBAAA;AAcV;AATI;EACE,yBAAA;EACA,kBAAA;EACA,YAAA;EACA,aAAA;EACA,cDlDU;ECmDV,gBAAA;EACA,kBAAA;AAWN;AATM;EACE,eAAA;EACA,iBAAA;AAWR;AARM;EACE,eAAA;EACA,iBAAA;AAUR","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"src/app/theme/styles/components/_colors.scss\";\n\n.card-list{\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n\n  border: 1px solid $primary-color;\n  background-color: $primary-color;\n  .card-body{\n    background-color: var(--primary-background);\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n}\n\n.full-card{\n  border-radius: 8px;\n  background-color: transparent;\n  border: 1px solid $primary-color;\n}\n\n.ticket-card{\n  margin-bottom: 10px;\n\n  .card-header{\n    background-color: $primary-color;\n    height: 50px;\n\n    h4{\n      color: $background-primary!important;\n      margin-bottom: 0!important;\n    }\n  }\n\n  .card-body{\n    .info{\n      padding-right: 16px ;\n      p{\n        span{\n          font-weight: 700;\n        }\n      }\n    }\n\n    .price{\n      border: 1px solid $primary-color;\n      border-radius: 8px;\n      width: 152px;\n      height: 113px;\n      color: $primary-color;\n      font-weight: 700;\n      text-align: center;\n\n      .sum{\n        font-size: 48px;\n        line-height: 55px ;\n      }\n\n      .details{\n        font-size: 16px;\n        line-height: 18px;\n      }\n    }\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 73941:
/*!*********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/provider-create-shared-experience/provider-create-shared-experience.component.html?ngResource ***!
  \*********************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container d-flex flex-column justify-content-between h-100 p-4\">\n\n    <div class=\"dialog-header\">\n        <h2 class=\"text-center\">{{'SHARED-EXPERIENCES.CREATE' | translate}}</h2>\n    </div>\n\n    <div class=\"dialog-body\">\n        <div class=\"container\">\n            <div class=\"modal-content-time d-flex flex-column justify-content-between\">\n                <!--            <p *ngIf=\"showErrorMsg\" class=\"error-msg\">Alegeti categoria, ziua si ora pentru experienta-->\n                <!--                dumneavoastra!</p>-->\n\n                <div class=\"content-body\">\n                    <p class=\"subtitle\"><i class=\"fas fa-icons me-2\"></i>Selectati o categorie</p>\n                    <div class=\"choose-activity d-flex flex-wrap mb-3\">\n                        <div *ngFor=\"let activity of timeslotsArray\">\n                            <div>\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" hidden\n                                       id=\"flexRadioDefault-{{activity.id}}\">\n                                <label class=\"form-check-label activity\" for=\"flexRadioDefault-{{activity.id}}\"\n                                       (click)=\"bookingTimeslotChanged(activity.id)\"\n                                       [ngClass]=\"bookingTimeslotId === activity.id ? 'selected-btn' : ''\">\n                                    {{activity.name}}\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div *ngIf=\"bookingTimeslotId\">\n                        <p class=\"subtitle\"><i class=\"fas fa-calendar-alt me-2\"></i> Selectati data</p>\n\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Selectati data</mat-label>\n                            <input matInput [min]=\"today\" [matDatepicker]=\"picker\" [(ngModel)]=\"date\"\n                                   (ngModelChange)=\"dateChanged()\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                        </mat-form-field>\n\n                        <p><i class=\"fas fa-clock me-2\"></i> Selectati ora</p>\n                        <div *ngIf=\"chosenResourceTimeslots.length > 0\" class=\"timeslots-container mb-3\">\n                            <mat-radio-group\n                                    aria-label=\"Select a time slot\" color=\"primary\" [(ngModel)]=\"slotChosen\">\n                                <div *ngFor=\"let slot of chosenResourceTimeslots\" class=\"time-slot\">\n                                    <mat-radio-button [value]=\"slot\" [labelPosition]=\"'after'\">\n                                        {{ slot.startHour }} - {{slot.endHour}}\n                                    </mat-radio-button>\n                                </div>\n                            </mat-radio-group>\n                        </div>\n\n                        <div class=\"no-slots mb-3\" *ngIf=\"chosenResourceTimeslots.length === 0\">\n                            <p>Nu exista sloturi</p>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <form [formGroup]=\"sharedExperienceForm\" *ngIf=\"slotChosen\">\n                <p class=\"section-title\"><i class=\"me-2 fas fa-pen\"></i> Details</p>\n\n                <mat-form-field appearance=\"legacy\" class=\"w-100\">\n                    <mat-label>{{'SHARED-EXPERIENCES.EXPERIENCE-NAME' | translate}}</mat-label>\n                    <input matInput formControlName=\"name\"\n                           placeholder=\"{{'SHARED-EXPERIENCES.EXPERIENCE-NAME' | translate}}\" required>\n                    <mat-error\n                            *ngIf=\"sharedExperienceForm.controls.name.errors?.required\">{{'ERROR.REQUIRED' | translate}}\n                    </mat-error>\n                    <mat-error *ngIf=\"'whitespace'\">{{'ERROR.PASS-WHITESPACE' | translate}}\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"legacy\" class=\"w-100\">\n                    <mat-label>{{'USER.DESCRIPTION' | translate}}</mat-label>\n                    <textarea matInput formControlName=\"description\" rows=\"2\"\n                              placeholder=\"{{'USER.DESCRIPTION' | translate}}\"></textarea>\n                </mat-form-field>\n\n                <div class=\"row\">\n                    <div class=\"col-12 col-md-4\">\n                        <mat-checkbox color=\"primary\" formControlName=\"hasParticipantsLimit\">Are limita de participanti</mat-checkbox>\n                    </div>\n                    <div class=\"col-12 col-md-8\" *ngIf=\"sharedExperienceForm.get('hasParticipantsLimit').value\">\n                        <mat-form-field appearance=\"legacy\" class=\"w-100\">\n                            <mat-label>{{'SHARED-EXPERIENCES.MAX-GUESTS' | translate}}</mat-label>\n                            <input type=\"number\"\n                                   pattern=\"[0-9]*\"\n                                   inputmode=\"numeric\"\n                                   min=\"0\"\n                                   title=\"Non-negative integral number\"\n                                   placeholder=\"0\"\n                                   matInput formControlName=\"participantsMaxNumber\" #guestsNumber>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n\n\n    <div class=\"dialog-footer d-flex justify-content-between align-items-center\">\n        <button class=\"btn-long btn-color-outline\" (click)=\"close()\">Cancel</button>\n        <button class=\"btn-long btn-color-fill\" (click)=\"save()\">Confirm</button>\n    </div>\n</div>\n";

/***/ }),

/***/ 97747:
/*!*******************************************************************************************************!*\
  !*** ./src/app/features/resources/components/provider-lobby/provider-lobby.component.html?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container p-4\">\n    <div class=\"view-container\">\n        <h1 class=\"mb-4\">{{currentExperience?.name}}</h1>\n\n        <div class=\"container\">\n            <app-shared-experiences-info *ngIf=\"currentExperience\"\n                                         [experience]=\"currentExperience\"\n                                         [showMenu]=\"true\"\n            ></app-shared-experiences-info>\n\n            <div class=\"lobby\">\n                <div class=\"lobby-title d-flex justify-content-between align-items-center\">\n                    <h4>Lobby</h4>\n                    <button class=\"chat-button\"\n                            (click)=\"dialogRef.close()\"\n                            [routerLink]=\"'/client/dashboard/inbox/'+currentExperience?.conversationId\"><i\n                            class=\"fas fa-comments me-2\"></i>Chat\n                    </button>\n                </div>\n\n                <div class=\"lobby-host\">\n                    <div class=\"pending\" *ngIf=\"arrayPending?.length > 0\">\n                        <p> Pending Participants</p>\n                        <div class=\"pending-participants\" *ngFor=\"let pendingParticipant of arrayPending\">\n                            <app-display-user [userId]=\"pendingParticipant?.userId\" [isAdmin]=\"false\"\n                                              [showMenu]=\"true\" [menuType]=\"'pending'\"\n                                              [experienceId]=\"currentExperience?.id\"\n                                              (refreshPage)=\"getSharedExperience()\"></app-display-user>\n                        </div>\n                    </div>\n\n                    <div class=\"participants\" *ngIf=\"arrayParticipants?.length > 0\">\n                        <p>Event Participants</p>\n                        <div class=\"guests\" *ngFor=\"let participant of arrayParticipants\">\n                            <app-display-user [userId]=\"participant?.userId\" [isAdmin]=\"false\" [showMenu]=\"true\"\n                                              [menuType]=\"'participant'\"\n                                              [experienceId]=\"currentExperience?.id\"\n                                              (refreshPage)=\"getSharedExperience()\"></app-display-user>\n                        </div>\n                    </div>\n\n                </div>\n\n<!--                <div *ngIf=\"!isHost\" class=\"lobby-guest\">-->\n<!--                    <p class=\"mb-0\">Initiated by</p>-->\n<!--                    <div class=\"creator\">-->\n<!--                        <app-display-user *ngIf=\"currentExperience\" [userId]=\"currentExperience.userId\"-->\n<!--                                          [isAdmin]=\"!isHost\" [showMenu]=\"false\"></app-display-user>-->\n\n<!--                    </div>-->\n<!--                    <div class=\"participants\" *ngIf=\"arrayParticipants?.length > 0\">-->\n<!--                        <p>Event Participants</p>-->\n<!--                        <div class=\"guests\" *ngFor=\"let participant of arrayParticipants\">-->\n<!--                            <app-display-user [userId]=\"participant?.userId\" [isAdmin]=\"false\"-->\n<!--                                              [showMenu]=\"false\"></app-display-user>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                </div>-->\n\n            </div>\n\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 1884:
/*!*********************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/resource-radio-option/resource-radio-option.component.html?ngResource ***!
  \*********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<label class=\"form-option\" [ngClass]=\"radioInput.checked ? 'option-selected': ''\">\n\n    <!--Image-->\n    <img [src]=\"(iconPath === null || iconPath.length === 0 || iconPath === 'string') ? 'https://via.placeholder.com/113' : iconPath\"\n         class=\"radio-img\" alt=\"Icon\">\n\n    <!--Title-->\n    <h4 class=\"radio-title\">{{optionName}}</h4>\n\n    <!--Hidden Input-->\n    <input type=\"radio\" name=\"radio\" [value]=\"optionId\" [formControl]=\"initialValue\" #radioInput/>\n\n</label>\n";

/***/ }),

/***/ 49019:
/*!*************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/shared-experiences-list/shared-experiences-list.component.html?ngResource ***!
  \*************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n    <div class=\"container-header\">\n        <h4 class=\"header\">Shared Experiences List - {{currentResource?.title}}</h4>\n    </div>\n    <div class=\"container\">\n\n        <!--content-->\n        <div class=\"row tableContent\">\n            <!--Table start-->\n            <table mat-table matSort appMatTableResponsive [dataSource]=\"dataSource\"\n                   class=\"w-100\">\n\n\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> #</th>\n                    <td data-column-name=\"#\" mat-cell\n                        *matCellDef=\"let row; let i = index;\">  {{ (pageNumber) * pageSize + i + 1 }} </td>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n                    <td data-column-name=\"Name\" mat-cell\n                        *matCellDef=\"let row\"> {{row.name}} </td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"date\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n                    <td data-column-name=\"Date\" mat-cell\n                        *matCellDef=\"let row\">{{row.startDate}}</td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"time\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Time</th>\n                    <td data-column-name=\"Time\" mat-cell\n                        *matCellDef=\"let row\"> {{row.startHour}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"participants\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Participants</th>\n                    <td data-column-name=\"Participants\" mat-cell\n                        *matCellDef=\"let row\"> {{row.participants?.length}}</td>\n                </ng-container>\n\n                <!--                actions-->\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef class=\"actions-class\"> {{'FIELD.ACTIONS'|translate}}</th>\n                    <td mat-cell *matCellDef=\"let element; let i = index\" data-column-name=\"Acțiuni\">\n                        <div class=\" d-flex actions-container py-2\">\n\n                            <!--Change status button-->\n                            <button class=\"btn-round btn-no-outline\" matTooltip=\"View lobby\" (click)=\"openSharedExperienceLobbyModal(element.id);dialogRef.close()\">\n                                <i class=\"fas fa-eye\"></i>\n                            </button>\n\n\n                        </div>\n                    </td>\n\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n\n                    <td class=\"mat-cell\" colspan=\"4\">{{'PROVIDER.NO_DATA'|translate}}</td>\n                </tr>\n            </table>\n\n            <!--Pagination-->\n            <mat-paginator\n                    [pageSizeOptions]=\"pageSizeArray\"\n                    [length]=\"totalElements\"\n                    [pageSize]=\"pageSize\"\n                    (page)=\"pageChanged($event)\">\n            </mat-paginator>\n\n        </div>\n\n\n    </div>\n\n</div>\n";

/***/ }),

/***/ 65674:
/*!************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/add-mode/add-new-template/add-new-template.component.html?ngResource ***!
  \************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<!--Add Resource-->\n<nav aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\" *ngIf=\"step > 0\"><a (click)=\"goToStep(0)\">{{domain}}</a></li>\n        <li class=\"breadcrumb-item\" *ngIf=\"step > 1\"><a (click)=\"goToStep(1)\">{{category}}</a></li>\n        <li class=\"breadcrumb-item\" *ngIf=\"step > 2\"><a (click)=\"goToStep(2)\">{{resourceType}}</a></li>\n    </ol>\n</nav>\n<form [formGroup]=\"templateForm\">\n\n    <!--Page Title-->\n    <div class=\"page-title\">\n        <h1 *ngIf=\"!providerData\">Adaugă resursă</h1>\n        <h1 *ngIf=\"providerData\">{{'Adaugă resursă pentru '+ providerData?.companyName +' ('+providerData?.cui+')'}}</h1>\n        <button class=\"btn-long btn-color-outline\" (click)=\"checkIfFirstStep()\">\n            <i class=\"fas fa-arrow-left\"></i>\n            Înapoi\n        </button>\n    </div>\n\n    <!--Stepper Card Title-->\n    <div class=\"stepper-card-title\">\n        <h2>\n            Alege {{step === 0 ? 'domeniul' : (step === 1 ? 'categoria resursei' : step === 2 ? 'tipul resursei' : null)}}</h2>\n\n    </div>\n\n    <!--Stepper Content-->\n    <div class=\"stepper-card-content\" *ngIf=\"dataLoaded\">\n\n        <!--Radio Button-->\n        <app-resource-radio-option\n                *ngFor=\"let option of optionsList\"\n                [iconPath]=\"option.icon !== null ? option.icon.filePath : null\"\n                [optionName]=\"option.nameEn\"\n                [optionId]=\"option.id\"\n                [initialValue]=\"step === 0 ? templateForm.get('domain') : (step === 1 ? templateForm.get('categoryId') : step === 2 ? templateForm.get('resourceTypeId') : null)\"\n        />\n\n    </div>\n\n    <div class=\"d-flex justify-content-center my-6\">\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" (click)=\"nextStep(); dataForAddStage()\">\n                Urmatorul pas\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n</form>\n\n";

/***/ }),

/***/ 76432:
/*!********************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/facilities/facilities.component.html?ngResource ***!
  \********************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button *ngIf=\"resourceId\"\n            (click)=\"saveResource()\"\n            [disabled]=\"isSubmitLoading || !form.valid\"\n            matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<form [formGroup]=\"form\" id=\"facilities\">\n\n\n    <div class=\"section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Facilitati</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <div class=\"row\">\n            <!--            class=\"col-xl-3 col-lg-6 col-sm-6 col-12 mb-6\"-->\n            <div class=\"col-lg-6 col-12 mb-6\" *ngFor=\"let facility of facilitiesByCategory\">\n                <h5 class=\"facility-category-name\">{{facility.categoryName}}</h5>\n                <div class=\"row\">\n                    <div *ngFor=\"let inputForm  of facility.tabAttributes | orderBy : 'order'\"\n                         [className]=\"columnSize(inputForm.size)\">\n                        <app-dynamic-inputs [control]=\"form.get(inputForm.name)\"\n                                            [inputFormData]=\"inputForm\"/>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<!--Stepper Controller-->\n<div class=\"stepper-step-controller\">\n    <!--Prev Step-->\n    <div class=\"next-step\">\n        <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\" [disabled]=\"!form.valid\"\n                matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n        >\n            <i class=\"fas fa-arrow-left\"></i>\n            Înapoi\n        </button>\n    </div>\n    <!--Next Step-->\n    <div class=\"next-step\">\n        <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!form.valid\"\n                matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n        >\n            Urmatorul\n            <i class=\"fas fa-arrow-right\"></i>\n        </button>\n    </div>\n</div>\n";

/***/ }),

/***/ 74110:
/*!**************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/gallery/gallery.component.html?ngResource ***!
  \**************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button  *ngIf=\"resourceId\"\n             (click)=\"saveResource()\"\n             [disabled]=\"isSubmitLoading || !form.valid\"\n             matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n             class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"gallery\">\n    <div class=\"section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Galerie multimedia</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <!--    Featured Image-->\n        <h3>Imagine reprezentativa</h3>\n        <div class=\"image-container mb-5\">\n            <input type=\"file\"\n                   hidden\n                   accept=\"image/*\"\n                   #thumbnail\n                   id=\"thumbnailInput\"\n                   (change)=\"onThumbnailChange($event)\">\n            <div *ngIf=\"!thumbnailUrl?.filePath\" class=\"no-image\"\n                 attr.translatedContent=\"{{ 'GENERAL.INSERT_IMAGE' | translate}}\"\n                 (click)=\"thumbnail.click()\"></div>\n\n            <img *ngIf=\"thumbnailUrl?.filePath\" class=\"img-fluid featured-image\"\n                 [src]=\"thumbnailUrl.filePath\" alt=\"thumbnail\">\n            <button *ngIf=\"thumbnailUrl?.filePath\"\n                    (click)=\"removeThumbnail(); thumbnail.value=''\"\n                    type=\"button\"\n                    id=\"btnRemoveFeaturedImage\"\n                    class=\"btn-thumbnail\">\n                <i class=\"fas fa-times\"></i>\n            </button>\n        </div>\n\n        <!--    Image gallery-->\n        <div class=\"d-flex justify-content-between mb-2\">\n            <h3>Galerie foto</h3>\n            <div class=\"d-flex align-items-center\">\n                <input type=\"file\"\n                       accept=\"image/*\"\n                       multiple\n                       hidden\n                       #add_image\n                       id=\"galleryInput\"\n                       (change)=\"onImageChange($event, add_image)\">\n                <button class=\"btn-long btn-color-fill\" (click)=\"add_image.click()\"><i\n                        class=\"fas fa-image\"></i>{{ 'GENERAL.INSERT_IMAGE' | translate}}</button>\n\n            </div>\n        </div>\n        <div class=\"row gy-3 gallery-image mb-5\">\n            <div *ngFor=\"let image of galleryUrls; let i = index\" class=\"col-6 col-lg-2\">\n                <div class=\"image-container\">\n                    <img class=\"img-fluid gallery-img\"\n                         [src]=\"image.filePath\" alt=\"image-{{i}}\">\n                    <button (click)=\"removeImage(i)\"\n                            id=\"btnRemoveGalleryImage-{{i}}\"\n                            type=\"button\"\n                            class=\"btn-gallery\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <!--Video Gallery-->\n        <div class=\"d-flex justify-content-between mb-2\">\n            <h3>Galerie video</h3>\n            <div class=\"d-flex align-items-center\">\n                <input type=\"file\"\n                       accept=\"video/*\"\n                       multiple\n                       hidden\n                       #add_video\n                       id=\"videoGalleryInput\"\n                       (change)=\"onVideoChange($event, add_video)\">\n                <button class=\"btn-long btn-color-fill\" (click)=\"add_video.click()\"><i class=\"fas fa-video\"></i>Adauga un\n                    video aici\n                </button>\n\n            </div>\n        </div>\n        <div class=\"row gy-3 gallery-image mb-5\">\n            <div *ngFor=\"let video of videoUrls; let i = index\" class=\"col-6 col-lg-4\">\n                <div class=\"image-container\">\n                    <video class=\"video\" [src]=\"video.filePath\" controls></video>\n                    <button (click)=\"removeVideo(i)\"\n                            id=\"btnRemoveGalleryVideo-{{i}}\"\n                            type=\"button\"\n                            class=\"btn-gallery\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\" [disabled]=\"!form.valid\"              matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!form.valid\"              matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 57442:
/*!****************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/general-informations/general-informations.component.html?ngResource ***!
  \****************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button *ngIf=\"resourceId\"\n            (click)=\"saveResource()\"\n            [disabled]=\"isSubmitLoading || !form.valid\"\n            matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n\n<div [formGroup]=\"form\" id=\"general-info\">\n    <!--    *ngIf=\"dataLoaded\"-->\n    <!--Title-->\n    <div class=\"section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Informatii generale</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <div class=\"row\">\n\n            <div class=\"col-12\">\n                <app-dynamic-inputs [control]=\"form.get('title')\"\n                                    [inputFormData]=\"{name:'Nume locație', valueType:'text', valuePlaceholder:'Titlu'}\"/>\n            </div>\n\n            <div class=\"col-12\">\n                <app-dynamic-inputs [control]=\"form.get('description')\"\n                                    [inputFormData]=\"{name:'Descriere', valueType:'textarea', valuePlaceholder:'Descriere'}\"/>\n            </div>\n\n            <ng-container *ngIf=\"hasStartEndDates\">\n                <div class=\"col-12 col-lg-6\">\n                    <mat-form-field class=\"w-100\" appearance=\"outline\">\n                        <mat-label>Data de început</mat-label>\n                        <input matInput [min]=\"!resourceId ? currentDay : ''\" [ngxMatDatetimePicker]=\"startPicker\"\n                               placeholder=\"Choose a date\" formControlName=\"startDate\">\n                        <mat-datepicker-toggle matSuffix\n                                               [for]=\"startPicker\"></mat-datepicker-toggle>\n                        <ngx-mat-datetime-picker #startPicker [stepMinute]=\"15\">\n                        </ngx-mat-datetime-picker>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-12 col-lg-6\">\n                    <mat-form-field class=\"w-100\" appearance=\"outline\">\n                        <mat-label>Data de final</mat-label>\n                        <input matInput [min]=\"currentDay\" [ngxMatDatetimePicker]=\"endPicker\"\n                               placeholder=\"Choose a date\" formControlName=\"endDate\">\n                        <mat-datepicker-toggle matSuffix\n                                               [for]=\"endPicker\"></mat-datepicker-toggle>\n                        <ngx-mat-datetime-picker #endPicker [stepMinute]=\"15\">\n                        </ngx-mat-datetime-picker>\n                    </mat-form-field>\n                </div>\n            </ng-container>\n\n            <div *ngFor=\"let section of formSections\">\n                <div class=\"row\" *ngIf=\"section.tabName === 'general_info'\">\n                    <div *ngFor=\"let inputForm  of section.tabAttributes | orderBy : 'order'\"\n                         [className]=\"columnSize(inputForm.size)\"\n                         [ngClass]=\"!tripsAndItineraries.includes(inputForm.categoryId) ? '': 'd-none'\">\n                        <app-dynamic-inputs [control]=\"form.get(inputForm.name)\"\n                                            [inputFormData]=\"inputForm\"/>\n                    </div>\n\n                    <div class=\"col-6 py-4\" *ngIf=\"!hasForItinerary\">\n                        <app-dynamic-inputs [control]=\"form.get('forItinerary')\"\n                                            [inputFormData]=\"{name:'Folosit pentru itinerarii', valueType:'checkbox'}\"/>\n                    </div>\n\n                    <div *ngIf=\"form.get('forItinerary').value\">\n                        <div *ngFor=\"let category of tripsItinObj | keyvalue\" class=\"row\">\n                            <div [ngSwitch]=\"category.key\">\n                                <h5 *ngSwitchCase=\"'journeyThemeCategoryId'\">Journey Theme</h5>\n                                <h5 *ngSwitchCase=\"'typeOfDestinationCategoryId'\">Type Of Destination</h5>\n                                <h5 *ngSwitchCase=\"'typeOfJourneyCategoryId'\">Type of Journey</h5>\n                            </div>\n                            <div *ngFor=\"let inputForm  of section.tabAttributes | orderBy : 'categoryId'\"\n                                 [className]=\"columnSize(inputForm.size)\"\n                                 [ngClass]=\"category.value === inputForm.categoryId ? 'col-md-6': 'd-none'\">\n                                <app-dynamic-inputs [control]=\"form.get(inputForm.name)\"\n                                                    [inputFormData]=\"inputForm\"/>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n\n\n            <div class=\"col-6\" *ngIf=\"hasSharedExperience\">\n                <app-dynamic-inputs [control]=\"form.get('sharedExperience')\"\n                                    [inputFormData]=\"{name:'Shared experience', valueType:'checkbox'}\"/>\n            </div>\n\n        </div>\n    </div>\n\n\n    <!--Title-->\n    <div *ngIf=\"tripsAndItinAttributes.length > 0 && form.get('forItinerary').value\" class=\"section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Itineraries</h2>\n    </div>\n\n    <!--Content-->\n    <div *ngIf=\"tripsAndItinAttributes.length > 0 && form.get('forItinerary').value\" class=\"section-content\">\n        <div class=\"row\">\n\n\n            <h5 class=\"mb-2\">Journey Theme</h5>\n            <div *ngFor=\"let inputForm  of tripsAndItinAttributes\"\n                 [className]=\"inputForm.categoryId === tripsItinObj.journeyThemeCategoryId ? columnSize(inputForm.size) : 'd-none' \">\n\n                <app-dynamic-inputs *ngIf=\"inputForm.categoryId === tripsItinObj.journeyThemeCategoryId\"\n                                    [control]=\"form.get(inputForm.name)\"\n                                    [inputFormData]=\"inputForm\"/>\n            </div>\n\n            <h5 class=\"mb-2\">Type Of Journey</h5>\n\n            <div *ngFor=\"let inputForm  of tripsAndItinAttributes\"\n                 [className]=\"inputForm.categoryId === tripsItinObj.typeOfJourneyCategoryId ? columnSize(inputForm.size) : 'd-none' \">\n                <app-dynamic-inputs *ngIf=\"inputForm.categoryId === tripsItinObj.typeOfJourneyCategoryId\"\n                                    [control]=\"form.get(inputForm.name)\"\n                                    [inputFormData]=\"inputForm\"/>\n            </div>\n\n\n            <h5 class=\"mb-2\">Type Of Destination</h5>\n            <div *ngFor=\"let inputForm  of tripsAndItinAttributes;\"\n                 [className]=\"inputForm.categoryId === tripsItinObj.typeOfDestinationCategoryId ? columnSize(inputForm.size) : 'd-none' \">\n                <app-dynamic-inputs *ngIf=\"inputForm.categoryId === tripsItinObj.typeOfDestinationCategoryId\"\n                                    [control]=\"form.get(inputForm.name)\"\n                                    [inputFormData]=\"inputForm\"/>\n\n            </div>\n\n        </div>\n    </div>\n\n\n    <!--Title-->\n    <div class=\"section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>About</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <div class=\"row\">\n            <div *ngFor=\"let section of formSections\">\n                <div class=\"row\" *ngIf=\"section.tabName === 'about'\">\n                    <div *ngFor=\"let inputForm  of section.tabAttributes | orderBy : 'order'\"\n                         [className]=\"columnSize(inputForm.size)\">\n                        <app-dynamic-inputs [control]=\"form.get(inputForm.name)\"\n                                            [inputFormData]=\"inputForm\"/>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!--Title-->\n    <div class=\"section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Contact</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <div class=\"row\">\n            <div *ngFor=\"let section of formSections\">\n                <div class=\"row\" *ngIf=\"section.tabName === 'contact'\">\n\n                    <div *ngFor=\"let inputForm  of section.tabAttributes | orderBy : 'order'\"\n                         [className]=\"columnSize(inputForm.size)\">\n\n                        <app-dynamic-inputs [control]=\"form.get(inputForm.name)\"\n                                            [inputFormData]=\"inputForm\"/>\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!--Location-->\n    <section>\n        <div class=\"section-title\">\n            <i class=\"fas fa-info-circle\"></i>\n            <h2>Locatia</h2>\n        </div>\n\n        <div class=\"section-content\">\n            <div class=\"row\">\n\n                <div class=\"col-12\">\n                    <app-dynamic-inputs [control]=\"form.get('address')\"\n                                        [inputFormData]=\"{name:'Address', valueType:'text', valuePlaceholder:'Address'}\"></app-dynamic-inputs>\n                </div>\n                <!--                <div class=\"col-md-6\">-->\n                <!--                    <app-dynamic-inputs [control]=\"form.get('country')\"-->\n                <!--                                        [inputFormData]=\"{name:'Country', valueType:'text', valuePlaceholder:'Country'}\"></app-dynamic-inputs>-->\n                <!--                </div>-->\n                <div class=\"col-12 col-md-6\">\n                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                        <mat-label>Country</mat-label>\n                        <mat-select formControlName=\"country\" (selectionChange)=\"getCities($event)\">\n                            <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\n                                {{country}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                        <mat-label>City</mat-label>\n                        <mat-select formControlName=\"city\" (selectionChange)=\"getCoordinates($event)\">\n                            <mat-option *ngFor=\"let city of cities\" [value]=\"city.name\">\n                                {{city.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!--                <div class=\"col-md-6\">-->\n                <!--                    <app-dynamic-inputs [control]=\"form.get('city')\"-->\n                <!--                                        [inputFormData]=\"{name:'City', valueType:'text', valuePlaceholder:'City'}\"></app-dynamic-inputs>-->\n                <!--                </div>-->\n\n                <div class=\"col-md-6\">\n                    <app-dynamic-inputs [control]=\"form.get('latitude')\"\n                                        [inputFormData]=\"{name:'Latitudine', valueType:'coord', valuePlaceholder:'Latitude'}\"></app-dynamic-inputs>\n                </div>\n\n                <div class=\"col-md-6\">\n                    <app-dynamic-inputs [control]=\"form.get('longitude')\"\n                                        [inputFormData]=\"{name:'Longitudine', valueType:'coord', valuePlaceholder:'Longitude'}\"></app-dynamic-inputs>\n                </div>\n\n\n            </div>\n\n        </div>\n    </section>\n\n</div>\n\n\n<!--Stepper Controller-->\n<div class=\"stepper-step-controller\">\n    <!--Prev Step-->\n    <!--    <div class=\"next-step\">-->\n    <!--        <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">-->\n    <!--            <i class=\"fas fa-arrow-left\"></i>-->\n    <!--            Înapoi-->\n    <!--        </button>-->\n    <!--    </div>-->\n    <!--Next Step-->\n    <div class=\"next-step\">\n        <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!form.valid\"\n                matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n        >\n            Urmatorul\n            <i class=\"fas fa-arrow-right\"></i>\n        </button>\n    </div>\n</div>\n";

/***/ }),

/***/ 30994:
/*!**************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/payment/payment.component.html?ngResource ***!
  \**************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div id=\"payment\">\n\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Payment</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <!--        <p>Pentru acest tip de resursă nu avem Setup.</p>-->\n\n        <div class=\"row\">\n            <!--Title Section-->\n            <div class=\"col-12 mb-3\">\n                <div class=\"first-card w-100\">\n                    <h3 class=\"mb-0\">Permiteti oaspetilor sa plateasca online</h3>\n                    <p class=\"info-text\">Oaspetii pot sa plateasca folosind serviciile Bestinform.com, iata cum\n                        functioneaza:</p>\n\n                    <div class=\"row\">\n                        <div class=\"col-12 col-lg-4\">\n                            <div class=\"pair d-flex justify-content-between align-items-center\">\n                                <div class=\"icon-class d-flex justify-content-center align-items-center me-2\">\n                                    <i class=\"fas fa-calendar-check\"></i>\n                                </div>\n\n                                <div class=\"infos\">\n                                    <h5>Clientul face rezervarea</h5>\n                                    <p class=\"icon-text\">Un client Bestinform face o rezervare pentru proprietatea dvs,\n                                        folosind metoda de plata preferata</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-lg-4\">\n                            <div class=\"pair d-flex justify-content-between align-items-center\">\n                                <div class=\"icon-class d-flex justify-content-center align-items-center me-2\">\n                                    <i class=\"fas fa-money-bill-alt\"></i>\n                                </div>\n\n                                <div class=\"infos\">\n                                    <h5>Bestinform faciliteaza plata</h5>\n                                    <p class=\"icon-text\">Un client Bestinform face o rezervare pentru proprietatea dvs,\n                                        folosind metoda de plata preferata</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-lg-4\">\n                            <div class=\"pair d-flex justify-content-between align-items-center\">\n                                <div class=\"icon-class d-flex justify-content-center align-items-center me-2\">\n                                    <i class=\"fas fa-file-invoice-dollar\"></i>\n                                </div>\n\n                                <div class=\"infos\">\n                                    <h5>Sunteti platit</h5>\n                                    <p class=\"icon-text\">Un client Bestinform face o rezervare pentru proprietatea dvs,\n                                        folosind metoda de plata preferata</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"second-card w-100\">\n                    <div class=\"row\">\n                        <h3 class=\"mb-0\">Comisionul platilor</h3>\n\n                        <div class=\"col-12 col-lg-8\">\n                            <p>In fiecare luna vom efectua o plata catre dvs, din care vom extrage comisionul, pentru toate\n                                rezervarile completate in luna anterioara. Pentru evidentele dvs, in fiecare luna va\n                                trimitem o factura a istoricului acestei tranzactii.</p>\n                        </div>\n\n<!--                        <div class=\"col-6 col-lg-2\">-->\n<!--                            <p class=\"percent mb-0\">15%</p>-->\n<!--                            <p class=\"title mb-0\">Costul tranzactiei</p>-->\n<!--                        </div>-->\n<!--                        TO DO - De pus comisionul de la provider-->\n                        <div class=\"col-6 col-lg-2\">\n                            <p class=\"percent mb-0\">{{commission}}%</p>\n                            <p class=\"title mb-0\">Procentaj de comision</p>\n                        </div>\n\n<!--                        <div class=\"col-12 col-lg-6\">-->\n<!--                            <h3>Adresa destinatarului</h3>-->\n<!--                            <p>Adresa destinatarului este identica cu cea a proprietatii dvs?</p>-->\n<!--                            <div class=\"row\">-->\n<!--                                <div class=\"col-12 col-lg-6\">-->\n<!--                                    <button class=\"btn-long btn-color-fill w-100\">Da<i class=\"ms-2 fas fa-check\"></i></button>-->\n<!--                                </div>-->\n<!--                                <div class=\"col-12 col-lg-6\">-->\n<!--                                    <button class=\"btn-long btn-color-outline w-100\">Nu<i class=\"ms-2 fas fa-times\"></i></button>-->\n<!--                                </div>-->\n\n\n<!--                            </div>-->\n<!--                        </div>-->\n\n<!--                        <div class=\"col-12 col-lg-6\">-->\n<!--                            <h3>Nume</h3>-->\n<!--                            <p>Ce nume doriti sa apara pe factura (de ex. numele legal/al companiei)?</p>-->\n<!--                            <mat-form-field class=\"w-100\">-->\n<!--                                <mat-label>Nume</mat-label>-->\n<!--                                <input matInput placeholder=\"George Ciobanu\" value=\"George Ciobanu\">-->\n<!--                            </mat-form-field>-->\n<!--                        </div>-->\n                    </div>\n\n                </div>\n\n<!--                <div class=\"third-card w-100\">-->\n<!--                    <h3>Probabil ati terminat - doar cateva lucruri finale de luat in considerare</h3>-->\n<!--                    <p>In fiecare luna vom efectua o plata catre dvs, din care vom extrage comisionul, pentru toate rezervarile completate in luna anterioara. Pentru evidentele dvs, in fiecare luna va trimitem o factura a istoricului acestei tranzactii.</p>-->\n\n<!--                    <div class=\"d-flex justify-content-start\">-->\n<!--                        <div class=\"icon-container d-flex justify-content-center align-items-center me-2\">-->\n<!--                            <i class=\"fas fa-paperclip\"></i>-->\n<!--                        </div>-->\n<!--                        <div class=\"information\">-->\n<!--                            <h5 class=\"mb-0\">Ati semnat deja contractul de rezervari cu Bestinform</h5>-->\n<!--                            <p class=\"mb-0\">Atunci cand ati semnat contractul, v-am trimis si un e-mail de confirmare si o copie a contractului in format PDF.-->\n<!--                                Puteti descarca contractul apasand pe butonul de mai jos. </p>-->\n<!--                            <button class=\"btn-long btn-color-outline w-100\">Descarca <i class=\"fas fa-download\"></i></button>-->\n<!--                        </div>-->\n<!--                    </div>-->\n\n<!--                </div>-->\n            </div>\n        </div>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n<!--            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">-->\n<!--                Finalizare-->\n<!--                <i class=\"fas fa-arrow-right\"></i>-->\n<!--            </button>-->\n\n            <button (click)=\"nextStep()\"\n                     [disabled]=\"isSubmitLoading\"\n                     class=\"btn-long btn-color-fill\" type=\"button\">\n                <ng-container *ngIf=\"isSubmitLoading===false\">\n                    Finalizează\n                    <i class=\"fas fa-arrow-right\"></i>\n                </ng-container>\n                <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" clas=\"indicator-progress\">\n                        Finalizare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n                </ng-container>\n            </button>\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 99550:
/*!*************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/no-policy/no-policy.component.html?ngResource ***!
  \*************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button *ngIf=\"resourceId\"\n            (click)=\"saveResource()\"\n            [disabled]=\"isSubmitLoading || (showTimetable && !timetableForm.valid)\"\n            matTooltip=\"{{!showTimetable || (showTimetable && timetableForm.valid) ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"policy\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Politici</h2>\n    </div>\n\n    <div class=\"section-content\">\n        <div *ngIf=\"showTimetable\" class=\"row\">\n            <!--Title Section-->\n\n            <div class=\"col-12 mb-3\">\n                <h2 class=\"section-title\">Program de lucru</h2>\n            </div>\n            <form [formGroup]=\"timetableForm\">\n                <div formArrayName=\"timetable\" class=\"config-group p-0\">\n                    <mat-tab-group class=\"conf-tabs\" animationDuration=\"0ms\" mat-stretch-tabs=\"true\" dynamicHeight\n                                   [selectedIndex]=\"tabIndex\">\n                        <div *ngFor=\"let day of timetable().controls; let dayTabIndex=index\">\n                            <mat-tab [formGroupName]=\"dayTabIndex\" [label]=\"day.value.day | titlecase\">\n                                <div class=\"tab-content\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-6 col-lg-4\">\n                                            <div class=\"time-container w-100 d-flex justify-content-between align-items-center\">\n                                                <p class=\"label mb-0\">Ora de inceput:</p>\n                                                <ngx-mat-timepicker formControlName=\"startTime\" enableMeridian=\"true\">\n                                                </ngx-mat-timepicker>\n                                            </div>\n\n                                        </div>\n                                        <div class=\"col-12 col-md-6 col-lg-4\">\n                                            <div class=\"time-container w-100 d-flex justify-content-between align-items-center\">\n                                                <p class=\"label mb-0\">Ora de final:</p>\n                                                <ngx-mat-timepicker formControlName=\"endTime\" enableMeridian=\"true\">\n                                                </ngx-mat-timepicker>\n                                            </div>\n                                            <mat-error *ngIf=\"day.get('endTime').hasError('invalidTime')\">Ora de final\n                                                trebuie să fie mai mare decât ora de început.\n                                            </mat-error>\n                                        </div>\n\n                                        <div class=\"col-12 col-md-6 col-lg-4 d-flex align-items-center\">\n                                            <mat-checkbox color=\"primary\" formControlName=\"closed\" id=\"closed\">Inchis\n                                            </mat-checkbox>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-tab>\n                        </div>\n\n\n                    </mat-tab-group>\n                </div>\n            </form>\n        </div>\n        <div *ngIf=\"!showTimetable\" class=\"row\">\n            <p>Pentru această resursă nu există politici.</p>\n        </div>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\" [disabled]=\"!timetableForm.valid && showTimetable\"\n                    matTooltip=\"{{timetableForm.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!timetableForm.valid && showTimetable\"\n                    matTooltip=\"{{timetableForm.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 40363:
/*!*****************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy-cultural-booking/policy-cultural-booking.component.html?ngResource ***!
  \*****************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button *ngIf=\"resourceId\"\n            (click)=\"saveResource()\"\n            [disabled]=\"isSubmitLoading || !form.valid\"\n            matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div [formGroup]=\"form\" id=\"policy-cultural-booking\">\n    <!--    *ngIf=\"dataLoaded\"-->\n    <!--Title-->\n    <div class=\"section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Politici</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <div class=\"row\">\n\n            <div class=\"col-12\">\n                <!--Category Name-->\n                <h3 class=\"section-name\">Politici de rezervare</h3>\n                <mat-error *ngIf=\"form.get('bookingPolicies').hasError('requireCheckboxesToBeChecked') && form.get('bookingPolicies').touched\">\n                    You have to check one\n                </mat-error>\n\n                <!--Checkboxes-->\n                <div class=\"d-flex flex-column\" formGroupName=\"bookingPolicies\">\n                    <mat-checkbox formControlName=\"depositRequired\" (change)=\"bookingPolicyEdit($event.checked, 'depositRequired')\">Se cere depozit</mat-checkbox>\n                    <div class=\"row\" *ngIf=\"form.get('bookingPolicies').get('depositRequired').value\">\n                        <div class=\"col-12 col-lg-6\">\n                            <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                <mat-label>Depozit (%)</mat-label>\n                                <input matInput type=\"text\" formControlName=\"depositRequiredPercentage\" (ngModelChange)=\"checkDepositType('percentage')\">\n                                <mat-error *ngIf=\"form.get('bookingPolicies').get('depositRequiredPercentage').hasError('pattern')\">\n                                    Sunt acceptate doar numere cuprinse între 1 și 100.\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"col-12 col-lg-6\">\n                            <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                <mat-label>Depozit (EUR)</mat-label>\n                                <input matInput type=\"text\" formControlName=\"depositRequiredAmount\" (ngModelChange)=\"checkDepositType('amount')\">\n                                <mat-error *ngIf=\"form.get('bookingPolicies').get('depositRequiredAmount').hasError('pattern')\">\n                                    Sunt acceptate doar numere mai mari ca 0.\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <mat-checkbox formControlName=\"advanceFullPayment\" (change)=\"bookingPolicyEdit($event.checked, 'advanceFullPayment')\">Plata completa in avans</mat-checkbox>\n                    <mat-checkbox formControlName=\"advancePartialPayment\" (change)=\"bookingPolicyEdit($event.checked, 'advancePartialPayment')\">Plata partiala in avans</mat-checkbox>\n                    <mat-form-field appearance=\"standard\" class=\"w-100\" *ngIf=\"form.get('bookingPolicies').get('advancePartialPayment').value\">\n                        <mat-label>Avans (%)</mat-label>\n                        <input matInput type=\"text\" formControlName=\"advancePartialPaymentPercentage\">\n                        <mat-error *ngIf=\"form.get('bookingPolicies').get('advancePartialPaymentPercentage').hasError('pattern')\">\n                            Sunt acceptate doar numere cuprinse între 1 și 100.\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n\n\n<!--Stepper Controller-->\n<div class=\"stepper-step-controller\">\n    <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\" [disabled]=\"!form.valid\"\n                    matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n    <!--Next Step-->\n    <div class=\"next-step\">\n        <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!form.valid\"\n                matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n        >\n            Urmatorul\n            <i class=\"fas fa-arrow-right\"></i>\n        </button>\n    </div>\n</div>\n";

/***/ }),

/***/ 39710:
/*!*************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy-rental-booking/policy-rental-booking.component.html?ngResource ***!
  \*************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button *ngIf=\"resourceId\"\n            (click)=\"saveResource()\"\n            [disabled]=\"isSubmitLoading || !form.valid\"\n            matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"policy-rental-booking\">\n    <!--   <div class=\"tab-section-title\">\n           <i class=\"fas fa-info-circle\"></i>\n           <h2>Politici</h2>\n       </div>\n\n       <div class=\"section-content\">\n\n       </div>-->\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Check-in / Check-out</h2>\n    </div>\n\n    <div class=\"section-content\">\n\n        <form [formGroup]=\"form\">\n            <div class=\"row\">\n                <div class=\"col-12 col-lg-6\">\n                    <div class=\"check-io w-100\">\n                        <h3>Check-in</h3>\n                        <p class=\"mb-0\">de la:</p>\n                        <mat-button-toggle-group class=\"group w-75\" #groupCheckInF=\"matButtonToggleGroup\"\n                                                 color=\"primary\" formControlName=\"checkInStartHour\"\n                                                 (change)=\"valueChange('checkInStartHour')\">\n                            <!--                            (change)=\"setNull('checkInStartHourInput')\"-->\n                            <mat-button-toggle class=\"btn-tog\" value=\"12:00\">12:00</mat-button-toggle>\n                            <mat-button-toggle class=\"btn-tog\" value=\"13:00\">13:00</mat-button-toggle>\n                            <mat-button-toggle class=\"btn-tog\" value=\"14:00\">14:00</mat-button-toggle>\n                        </mat-button-toggle-group>\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Altul</mat-label>\n                            <input matInput type=\"time\" formControlName=\"checkInStartHour\"\n                                   (change)=\"valueChange('checkInStartHour')\">\n                            <!--                            (change)=\"setNull('checkInStartHour')\"-->\n                        </mat-form-field>\n                        <!--                        <p>{{groupCheckInF.value}}</p>-->\n\n                        <p class=\"mb-0\">pana la:</p>\n                        <mat-button-toggle-group class=\"group w-75\" #groupCheckInT=\"matButtonToggleGroup\"\n                                                 color=\"primary\" formControlName=\"checkInEndHour\"\n                                                 (change)=\"valueChange('checkInEndHour')\">\n                            <mat-button-toggle class=\"btn-tog\" value=\"12:00\">12:00</mat-button-toggle>\n                            <mat-button-toggle class=\"btn-tog\" value=\"13:00\">13:00</mat-button-toggle>\n                            <mat-button-toggle class=\"btn-tog\" value=\"14:00\">14:00</mat-button-toggle>\n                        </mat-button-toggle-group>\n\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Altul</mat-label>\n                            <input matInput type=\"time\" formControlName=\"checkInEndHour\"\n                                   (change)=\"valueChange('checkInEndHour')\">\n                        </mat-form-field>\n                        <!--                        <p>{{groupCheckInT.value}}</p>-->\n                    </div>\n\n                </div>\n\n                <div class=\"col-12 col-lg-6\">\n                    <div class=\"check-io w-100\">\n                        <h3>Check-out</h3>\n                        <p class=\"mb-0\">de la:</p>\n                        <mat-button-toggle-group class=\"group w-75\" #groupCheckOutF=\"matButtonToggleGroup\"\n                                                 color=\"primary\" formControlName=\"checkOutStartHour\"\n                                                 (change)=\"valueChange('checkOutStartHour')\">\n                            <mat-button-toggle class=\"btn-tog\" value=\"11:00\">11:00</mat-button-toggle>\n                            <mat-button-toggle class=\"btn-tog\" value=\"12:00\">12:00</mat-button-toggle>\n                            <mat-button-toggle class=\"btn-tog\" value=\"13:00\">13:00</mat-button-toggle>\n                        </mat-button-toggle-group>\n\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Altul</mat-label>\n                            <input matInput type=\"time\" formControlName=\"checkOutStartHour\"\n                                   (change)=\"valueChange('checkOutStartHour')\">\n                        </mat-form-field>\n                        <!--                        <p>{{groupCheckOutF.value}}</p>-->\n\n                        <p class=\"mb-0\">pana la:</p>\n                        <mat-button-toggle-group class=\"group w-75\" #groupCheckOutT=\"matButtonToggleGroup\"\n                                                 color=\"primary\" formControlName=\"checkOutEndHour\"\n                                                 (change)=\"valueChange('checkOutEndHour')\">\n                            <mat-button-toggle class=\"btn-tog\" value=\"11:00\">11:00</mat-button-toggle>\n                            <mat-button-toggle class=\"btn-tog\" value=\"12:00\">12:00</mat-button-toggle>\n                            <mat-button-toggle class=\"btn-tog\" value=\"13:00\">13:00</mat-button-toggle>\n                        </mat-button-toggle-group>\n\n\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Altul</mat-label>\n                            <input matInput type=\"time\" formControlName=\"checkOutEndHour\"\n                                   (change)=\"valueChange('checkOutEndHour')\">\n                        </mat-form-field>\n                        <!--                        <p>{{groupCheckOutT.value}}</p>-->\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\" [disabled]=\"!form.valid\"\n                    matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!form.valid\"\n                    matTooltip=\"{{form.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 97596:
/*!************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/policy.component.html?ngResource ***!
  \************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div id=\"policy\">\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 84664:
/*!*****************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/policy/restaurant-policy/restaurant-policy.component.html?ngResource ***!
  \*****************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button  *ngIf=\"resourceId\"\n             (click)=\"saveResource()\"\n             [disabled]=\"isSubmitLoading || !timetableForm.valid\"\n             matTooltip=\"{{timetableForm.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n             class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"policy\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Politici</h2>\n    </div>\n\n    <div class=\"section-content\">\n        <div class=\"row\">\n            <!--Title Section-->\n\n            <div class=\"col-12 mb-3\">\n                <h2 class=\"section-title\">Program de lucru</h2>\n            </div>\n            <form [formGroup]=\"timetableForm\">\n                <div formArrayName=\"timetable\" class=\"config-group p-0 mb-4\">\n                    <mat-tab-group class=\"conf-tabs\" animationDuration=\"0ms\" mat-stretch-tabs=\"true\" dynamicHeight\n                                   [selectedIndex]=\"tabIndex\">\n                        <div *ngFor=\"let day of timetable().controls; let dayTabIndex=index\">\n                            <mat-tab [formGroupName]=\"dayTabIndex\" [label]=\"day.value.day | titlecase\">\n                                <div class=\"tab-content\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-6 col-lg-4\">\n                                            <div class=\"time-container w-100 d-flex justify-content-between align-items-center\">\n                                                <p class=\"label mb-0\">Ora de inceput:</p>\n                                                <ngx-mat-timepicker formControlName=\"startTime\" enableMeridian=\"true\">\n                                                </ngx-mat-timepicker>\n                                            </div>\n\n                                        </div>\n                                        <div class=\"col-12 col-md-6 col-lg-4\">\n                                            <div class=\"time-container w-100 d-flex justify-content-between align-items-center\">\n                                                <p class=\"label mb-0\">Ora de final:</p>\n                                                <ngx-mat-timepicker formControlName=\"endTime\" enableMeridian=\"true\">\n                                                </ngx-mat-timepicker>\n                                            </div>\n                                            <mat-error *ngIf=\"day.get('endTime').hasError('invalidTime')\">Ora de final\n                                                trebuie să fie mai mare decât ora de început.\n                                            </mat-error>\n                                        </div>\n\n                                        <div class=\"col-12 col-md-6 col-lg-4 d-flex align-items-center\">\n                                            <mat-checkbox color=\"primary\" formControlName=\"closed\" id=\"closed\">Inchis\n                                            </mat-checkbox>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-tab>\n                        </div>\n                    </mat-tab-group>\n                </div>\n\n\n                <div class=\"col-12 mb-3\">\n                    <h2 class=\"section-title\">Politici</h2>\n                </div>\n                <div class=\"row mb-5\" id=\"applicable-politics\">\n                    <!--Left Side-->\n                    <div class=\"col-md-6 col-12\">\n                        <!--Category Name-->\n                        <h5 class=\"politics-category-name\">Politici de modificare</h5>\n                        <mat-error *ngIf=\"timetableForm.get('changePolicies').hasError('invalidPolicy') && (timetableForm.get('changePolicies').dirty || timetableForm.get('changePolicies').touched)\">\n                            Trebuie să alegi o variantă între \"Nerambursabil\" și \"Anulare Gratuită\".\n                        </mat-error>\n                        <!--Checkboxes-->\n                        <div formGroupName=\"changePolicies\" class=\"d-flex flex-column\">\n                            <mat-checkbox formControlName=\"nonRefundable\" (change)=\"changePolicyEdit($event, 'nonRefundable')\">Nerambursabil</mat-checkbox>\n                            <mat-checkbox formControlName=\"modifiable\">Se poate modifica</mat-checkbox>\n                            <div formGroupName=\"freeCancellation\">\n                                <mat-checkbox formControlName=\"freeCancellation\"  (change)=\"changePolicyEdit($event, 'freeCancellation')\">Anulare gratuită\n                                </mat-checkbox>\n                                <mat-form-field appearance=\"standard\" class=\"w-100\"   *ngIf=\"timetableForm.get('changePolicies').get('freeCancellation').get('freeCancellation').value\">\n                                    <mat-label>Timp limita (zile)</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"deadlineDays\">\n                                    <mat-error *ngIf=\"timetableForm.get('changePolicies').get('freeCancellation').get('deadlineDays').hasError('pattern')\">\n                                        Sunt acceptate doar numere mai mari decât 0.\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <!--Right Side-->\n                    <div class=\"col-md-6 col-12\">\n                        <!--Category Name-->\n                        <h5 class=\"politics-category-name\">Politici de rezervare</h5>\n                        <mat-error *ngIf=\"timetableForm.get('bookingPolicies').hasError('requireCheckboxesToBeChecked') && timetableForm.get('bookingPolicies').touched\">\n                            You have to check one\n                        </mat-error>\n                        <!--Checkboxes-->\n                        <div formGroupName=\"bookingPolicies\" class=\"d-flex flex-column\">\n                            <mat-checkbox formControlName=\"depositRequired\" (change)=\"depositCheck($event)\">Se cere\n                                depozit\n                            </mat-checkbox>\n                            <div class=\"row\" *ngIf=\"timetableForm.get('bookingPolicies').get('depositRequired').value\">\n                                <div class=\"col-12\">\n                                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                        <mat-label>Depozit (EUR)</mat-label>\n                                        <input matInput type=\"text\" formControlName=\"depositRequiredAmount\">\n                                        <mat-error *ngIf=\"timetableForm.get('bookingPolicies').get('depositRequiredAmount').hasError('pattern')\">\n                                            Sunt acceptate doar numere.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\" [disabled]=\"!timetableForm.valid\" matTooltip=\"{{timetableForm.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!timetableForm.valid\" matTooltip=\"{{timetableForm.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 55002:
/*!*********************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/related-resource/cultural-related-res/cultural-related-res.component.html?ngResource ***!
  \*********************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button  *ngIf=\"resourceId\"\n             (click)=\"saveResource()\"\n             [disabled]=\"isSubmitLoading\"\n             class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"rental-booking\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Resurse asociate</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <h5 class=\"panel-title mb-3\" *ngIf=\"resToBeAdded.length > 0\">\n            Resurse asociate: <span class=\"related-resource\"\n                                                  *ngFor=\"let res of resToBeAdded\">{{res?.title}}</span>\n        </h5>\n\n\n        <h5 class=\"panel-title mb-3\">\n            Alege din resursele urmatoare:\n        </h5>\n\n        <div class=\"container mb-3\">\n            <div class=\"row filteRow\">\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Cauta</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"filterTitleChoose\"\n                           (keydown.enter)=\"applyFilter()\">\n                    <i class=\"fas fa-times-circle clear-form\"\n                       *ngIf=\"filterTitleChoose\"\n                       (click)=\"filterTitleChoose = ''; applyFilter()\"\n                       id=\"btnEventClearSearchBar\"\n                       type=\"button\" matSuffix></i>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row tableContent\">\n                <!--Table start-->\n                <table mat-table matSort appMatTableResponsive [dataSource]=\"dataSourceChoose\"\n                       class=\"w-100\">\n\n                    <!-- Resource Name Column -->\n                    <ng-container matColumnDef=\"title\">\n                        <th mat-header-cell *matHeaderCellDef\n                            mat-sort-header> {{'RESOURCES.NAME' | translate}} </th>\n                        <td attr.attr.data-column-name=\"{{'RESOURCES.NAME' | translate}}\" mat-cell\n                            *matCellDef=\"let row\">\n                            <i class=\"fas fa-users shared\" *ngIf=\"row.sharedExperience\"></i>\n                            {{row.title}}\n                        </td>\n                    </ng-container>\n\n                    <!-- toress column -->\n                    <ng-container matColumnDef=\"address\">\n                        <th mat-header-cell *matHeaderCellDef\n                            mat-sort-header> {{'RESOURCES.LOCATION' | translate}} </th>\n                        <td attr.data-column-name=\"{{'RESOURCES.LOCATION' | translate}}\" mat-cell\n                            *matCellDef=\"let row\"> {{row.address}} {{row.city}} </td>\n                    </ng-container>\n\n                    <!--Category column-->\n                    <ng-container matColumnDef=\"category\">\n                        <th mat-header-cell *matHeaderCellDef\n                            mat-sort-header> {{'RESOURCES.CATEGORY' | translate}} </th>\n                        <td attr.data-column-name=\"{{'RESOURCES.CATEGORY' | translate}}\" mat-cell\n                            *matCellDef=\"let row\">{{row.resourceCategoryName}}</td>\n                    </ng-container>\n\n                    <!--Purchase column-->\n                    <ng-container matColumnDef=\"purchase\">\n                        <th mat-header-cell *matHeaderCellDef\n                            mat-sort-header> {{'RESOURCES.PURCHASE' | translate}} </th>\n                        <td attr.data-column-name=\"{{'RESOURCES.PURCHASE' | translate}}\" mat-cell\n                            *matCellDef=\"let row\"><span\n                                class=\"d-flex justify-content-end me-3\">{{row.totalBookingNumber}}</span>\n                        </td>\n                    </ng-container>\n\n                    <!--Status column-->\n                    <ng-container matColumnDef=\"status\">\n                        <th mat-header-cell *matHeaderCellDef\n                            mat-sort-header> {{'RESOURCES.STATUS' | translate}} </th>\n                        <td attr.data-column-name=\"{{'RESOURCES.STATUS' | translate}}\" mat-cell\n                            *matCellDef=\"let row\">\n                            <span class=\"custom-label\"\n                                  [ngClass]=\"{\n                            'label-pending' : row.status === 'pending_review',\n                            'label-active' : row.status === 'active',\n                            'label-inactive' : row.status === 'inactive'\n                        }\">\n                                <span [ngSwitch]=\"row.status\">\n                                   <span *ngSwitchCase=\"'pending_review'\">În așteptare</span>\n                                   <span *ngSwitchCase=\"'active'\">Activ</span>\n                                   <span *ngSwitchCase=\"'inactive'\">Inactiv</span>\n                                </span>\n                            </span>\n                        </td>\n                    </ng-container>\n\n                    <!-- Actions Column -->\n                    <ng-container matColumnDef=\"actions\">\n                        <th mat-header-cell *matHeaderCellDef\n                            class=\"actions-class\"> {{'RESOURCES.ACTIONS' | translate}}</th>\n                        <td mat-cell *matCellDef=\"let row; let i = index;\">\n                            <div class=\"d-flex actions-container\">\n\n                                <!--Add-->\n                                <button *ngIf=\"resToBeAdded[0]?.id !== row.id\"\n                                        [disabled]=\"resToBeAdded.length > 0 || row.id === resourceId\"\n                                        class=\"btn-round btn-no-outline\"\n                                        type=\"button\"\n                                        matTooltip=\"Adauga resursa\"\n                                        (click)=\"addToRelatedRes(row)\">\n                                    <i class=\"fas fa-plus\"></i>\n                                </button>\n\n                                <!--Remove related resource-->\n                                <button *ngIf=\"resToBeAdded[0]?.id === row.id\"\n                                        class=\"btn-round btn-no-outline\"\n                                        type=\"button\"\n                                        matTooltip=\"Elimina resursa\"\n                                        (click)=\"removeRelatedResource()\">\n                                    <i class=\"fas fa-trash\"></i>\n                                </button>\n                            </div>\n                        </td>\n                    </ng-container>\n\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedResourcesColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedResourcesColumns;\"></tr>\n\n                    <!-- Row shown when there is no matching data. -->\n                    <tr class=\"mat-row\" *matNoDataRow>\n\n                        <td class=\"mat-cell\" colspan=\"4\">{{'PROVIDER.NO_DATA'|translate}}</td>\n                    </tr>\n                </table>\n\n                <!--Pagination-->\n                <mat-paginator\n                        [pageSizeOptions]=\"pageSizeArray\"\n                        [length]=\"totalElements\"\n                        [pageSize]=\"pageSizeChoose\"\n                        (page)=\"pageChanged($event)\">\n                </mat-paginator>\n\n            </div>\n\n        </div>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 78147:
/*!************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/apply-job/apply-job.component.html?ngResource ***!
  \************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div id=\"rental-booking\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Property Setup</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <p>Pentru acest tip de resursă nu avem Setup.</p>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 16279:
/*!****************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/car-booking/car-booking.component.html?ngResource ***!
  \****************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div id=\"rental-booking\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Property Setup</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <p>Pentru acest tip de resursă nu avem Setup.</p>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 62370:
/*!**************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/cultural-booking/cultural-booking.component.html?ngResource ***!
  \**************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button  *ngIf=\"resourceId\"\n             (click)=\"saveResource()\"\n             [disabled]=\"isSubmitLoading\"\n             class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"rental-booking\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Property Setup</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <div class=\"row\">\n            <div *ngIf=\"!hasBookedWithReservation; else noLayoutModificationsAllowed\" class=\"col-12 col-lg-6\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Rows generation</mat-label>\n                    <mat-select [(ngModel)]=\"rowsGenerationType\">\n                        <mat-option value=\"numbers\">Numbers</mat-option>\n                        <mat-option value=\"letters\">Letters</mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <ng-container *ngFor=\"let zone of zones.controls; let firstZone = first; let zoneIndex = index\">\n                    <ng-container [formGroup]=\"zone\">\n                        <div class=\"d-flex flex-wrap justify-content-between\">\n                            <p class=\"w-100\">\n                                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                    <mat-label>Price (€)</mat-label>\n                                    <input formControlName=\"price\" type=\"number\" name=\"price\" matInput placeholder=\"0\">\n                                    <mat-error *ngIf=\"zone.controls.price.hasError('required')\">{{'ERROR.REQUIRED'|translate}}</mat-error>\n                                </mat-form-field>\n                            </p>\n\n                            <p>\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Rows</mat-label>\n                                    <input formControlName=\"rows\" type=\"number\" name=\"rows\" matInput placeholder=\"1\">\n                                    <mat-error *ngIf=\"zone.controls.rows.hasError('required')\">{{'ERROR.REQUIRED'|translate}}</mat-error>\n                                </mat-form-field>\n                            </p>\n\n                            <p>\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Columns</mat-label>\n                                    <input formControlName=\"columns\" type=\"number\" name=\"columns\" matInput placeholder=\"1\">\n                                    <mat-error *ngIf=\"zone.controls.columns.hasError('required')\">{{'ERROR.REQUIRED'|translate}}</mat-error>\n                                </mat-form-field>\n                            </p>\n\n                            <button *ngIf=\"!firstZone\" class=\"btn-round btn-color-fill\"\n                                    type=\"button\" (click)=\"removeZone(zoneIndex)\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                        </div>\n                    </ng-container>\n                </ng-container>\n\n                <button class=\"btn-auto btn-color-outline w-100\"\n                        type=\"button\" (click)=\"addZone()\">\n                    Add New Zone\n                </button>\n\n                <button class=\"btn-auto btn-color-fill w-100 mt-4\"\n                        type=\"button\" (click)=\"generateSeats()\">\n                    Generate Seats\n                </button>\n            </div>\n\n            <ng-template #noLayoutModificationsAllowed>\n                <div class=\"col-12 col-lg-6\">\n                    <h1>\n                        A client has bought a ticket and you cannot modify the room layout\n                    </h1>\n                </div>\n            </ng-template>\n\n            <div class=\"col-12 col-lg-6\">\n                <div class=\"panel\">\n                    <ng-container *ngIf=\"culturalRoomData; else hereWeGenerateTheRoom\">\n                        <app-seats-viewer [culturalRoom]=\"culturalRoomData\" [rowsGenerationType]=\"rowsGenerationType\"></app-seats-viewer>\n                    </ng-container>\n                </div>\n\n\n                <ng-template #hereWeGenerateTheRoom>\n                    <h3>\n                        Fill the fields to your left, to start generating the seats.\n                    </h3>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" [disabled]=\"!culturalRoomData\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 74270:
/*!******************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/external-url/external-url.component.html?ngResource ***!
  \******************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button *ngIf=\"resourceId\"\n            (click)=\"saveResource()\"\n            [disabled]=\"isSubmitLoading || !externalURL.valid\"\n            matTooltip=\"{{externalURL.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"rental-booking\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Property Setup</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <mat-form-field class=\"w-100\" appearance=\"legacy\">\n            <mat-label>External URL</mat-label>\n            <input matInput placeholder=\"External URL\" [formControl]=\"externalURL\">\n            <mat-error *ngIf=\"externalURL.hasError('required')\">\n                Acest camp este obligatoriu!\n            </mat-error>\n        </mat-form-field>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\" [disabled]=\"!externalURL.valid\"\n                    matTooltip=\"{{externalURL.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!externalURL.valid\"\n                    matTooltip=\"{{externalURL.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 61885:
/*!*********************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/add-edit-category/add-edit-category.component.html?ngResource ***!
  \*********************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Adăugare categorie</h2>\n        <button type=\"button\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n        </button>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n        <form [formGroup]=\"menu\">\n            <div class=\"row mb-5\">\n\n                <div class=\"col-12\">\n                    <div class=\"d-flex justify-content-between\">\n                        <mat-form-field class=\"w-50\" appearance=\"standard\">\n                            <mat-label>Denumirea categoriei</mat-label>\n                            <input matInput formControlName=\"categoryName\" placeholder=\"Denumirea categoriei\">\n                        </mat-form-field>\n\n                        <button class=\"btn-long btn-color-fill\" (click)=\"addSubcategory()\" type=\"button\"\n                                (keydown.enter)=\"onKeyDown($event)\" (keydown.space)=\"onKeyDown($event)\"\n                        ><i\n                                class=\"fas fa-plus me-2\"></i>Adauga subcategorie\n                        </button>\n                    </div>\n\n                    <div formArrayName=\"subCategories\">\n                        <div *ngFor=\"let subcategory of subCategories().controls ;let subcategoryIndex=index\">\n                            <div [formGroupName]=\"subcategoryIndex\">\n                                <div class=\"product-item position-relative\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12\">\n                                            <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                <mat-label>Denumirea subcategoriei</mat-label>\n                                                <input matInput placeholder=\"Denumirea subcategoriei\"\n                                                       formControlName=\"subCategoryName\">\n                                            </mat-form-field>\n                                        </div>\n\n                                        <div class=\"scroll-window\" formArrayName=\"subCategoryItems\">\n                                            <div *ngFor=\"let item of subCategoryItems(subcategoryIndex).controls; let itemIndex= index\">\n                                                <div [formGroupName]=\"itemIndex\">\n                                                    <div class=\"subcategory-item \">\n                                                        <div class=\"item position-relative\">\n                                                            <div class=\"row\">\n                                                                <div class=\"col-12\">\n                                                                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                                        <mat-label>Denumirea produsului</mat-label>\n                                                                        <input matInput\n                                                                               placeholder=\"Denumirea produsului\"\n                                                                               formControlName=\"name\">\n                                                                        <mat-error *ngIf=\"item.get('name').invalid\">Acest camp trebuie completat!</mat-error>\n                                                                    </mat-form-field>\n                                                                </div>\n\n\n                                                                <div class=\"col-12 col-md-6\">\n                                                                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                                        <mat-label>Pret [Euro]</mat-label>\n                                                                        <input matInput placeholder=\"Pretul produsului\"\n                                                                               type=\"text\"\n                                                                               formControlName=\"price\">\n                                                                        <mat-error *ngIf=\"item.get('price').invalid\">Valoarea introdusa trebuie sa fie un numar mai mare ca 0!</mat-error>\n                                                                    </mat-form-field>\n                                                                </div>\n\n                                                                <div class=\"col-12 col-md-6\">\n                                                                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                                        <mat-label>Greutate [grame]</mat-label>\n                                                                        <input matInput\n                                                                               placeholder=\"Greutatea produsului\"\n                                                                               type=\"text\"\n                                                                               formControlName=\"weight\">\n                                                                        <mat-error *ngIf=\"item.get('weight').invalid\">Valoarea introdusa trebuie sa fie un numar mai mare ca 0!</mat-error>\n                                                                    </mat-form-field>\n                                                                </div>\n\n\n                                                                <div class=\"col-12\">\n                                                                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                                        <mat-label>Ingrediente</mat-label>\n                                                                        <input matInput placeholder=\"Ingrediente\"\n                                                                               formControlName=\"ingredients\">\n                                                                    </mat-form-field>\n                                                                </div>\n\n                                                                <div class=\"col-12\">\n                                                                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                                        <mat-label>Alergeni</mat-label>\n                                                                        <input matInput placeholder=\"Alergeni\"\n                                                                               formControlName=\"allergens\">\n                                                                    </mat-form-field>\n                                                                </div>\n\n                                                                <div class=\"col-12\">\n                                                                    <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                                        <mat-label>Informatii nutritionale</mat-label>\n                                                                        <input matInput\n                                                                               placeholder=\"Informatii nutritionale\"\n                                                                               formControlName=\"nutritionalFacts\">\n                                                                    </mat-form-field>\n                                                                </div>\n\n                                                            </div>\n\n                                                            <button class=\"remove-btn position-absolute\"\n                                                                    (click)=\"removeItem(subcategoryIndex, itemIndex)\"\n                                                                    matTooltip=\"Sterge produs\"><i\n                                                                    class=\"fas fa-times\"></i></button>\n\n                                                        </div>\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-12\">\n                                            <button class=\"add-btn\" type=\"button\" (click)=\"addItem(subcategoryIndex)\"\n                                                    (keydown.enter)=\"onKeyDown($event)\" (keydown.space)=\"onKeyDown($event)\"\n                                                    matTooltip=\"Sterge subcategorie\"><i\n                                                    class=\"fas fa-plus me-2\"></i>Adauga produs\n                                            </button>\n                                        </div>\n\n                                    </div>\n                                    <button class=\"remove-btn position-absolute\"\n                                            (click)=\"removeSubcategory(subcategoryIndex)\" matTooltip=\"Sterge subcategorie\"><i class=\"fas fa-times\"></i>\n                                    </button>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </form>\n\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill\" (click)=\"confirm()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 53658:
/*!***************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/delete-menu-category/delete-menu-category.component.html?ngResource ***!
  \***************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Stergere Card</h2>\n        <p>Acțiunea de stergere card este permanentă și complet irevocabilă.</p>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n\n        <div class=\"row\">\n\n            <!--Name-->\n            <div class=\"col-12\">\n                <h5 class=\"section-title\">Denumirea: <span>{{categoryData?.category.categoryName}}</span></h5>\n            </div>\n\n            <!--Regular Price-->\n            <div class=\"col-12\">\n                <h5 class=\"section-title\">Produse: <span *ngFor=\"let item of categoryData?.category.categoryItems; let last = last\">{{last ? item.name : item.name +', '}}</span></h5>\n            </div>\n\n        </div>\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline w-100\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill w-100\" (click)=\"deleteCategory()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 59788:
/*!**************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/menu/menu.component.html?ngResource ***!
  \**************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button *ngIf=\"resourceId\"\n            (click)=\"saveResource()\"\n            [disabled]=\"isSubmitLoading || !menuForm.valid\"\n            matTooltip=\"{{menuForm.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"rental-booking\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Disponibilitate</h2>\n    </div>\n    <!--Content-->\n    <div class=\"section-content\">\n        <!--        <p>Pentru acest tip de resursă nu avem Setup.</p>-->\n\n        <div class=\"row mb-2\">\n            <mat-checkbox [(ngModel)]=\"hasFreeEntry\" (ngModelChange)=\"setFreeEntry()\">\n                Intrarea este la liber\n            </mat-checkbox>\n        </div>\n\n        <div *ngIf=\"!hasFreeEntry\" class=\"row\">\n\n            <form [formGroup]=\"menuForm\">\n                <mat-error *ngIf=\"menuForm.hasError('invalidInterval')\">Trebuie să adăugați cel puțin un interval orar!</mat-error>\n                <div formArrayName=\"timetables\" class=\"config-group p-0 mb-3\">\n                    <mat-tab-group class=\"conf-tabs\" animationDuration=\"0ms\" mat-stretch-tabs=\"true\" dynamicHeight\n                                   [selectedIndex]=\"tabIndex\">\n                        <div *ngFor=\"let day of timetables().controls; let dayTabIndex=index\">\n                            <mat-tab [formGroupName]=\"dayTabIndex\" [label]=\"day.value.day | titlecase\">\n                                <div class=\"tab-content\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-6\">\n                                            <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                <mat-label>Numar de locuri disponibile</mat-label>\n                                                <input matInput placeholder=\"Numar de locuri disponibile\" type=\"number\"\n                                                       formControlName=\"maximumPeople\"\n                                                       id=\"maximumPeople\">\n                                            </mat-form-field>\n                                        </div>\n\n                                        <div class=\"col-12 col-md-6\">\n                                            <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                                <mat-label>Durata medie de rezervare [minute]</mat-label>\n                                                <input matInput placeholder=\"Durata medie de rezervare\" type=\"number\"\n                                                       formControlName=\"tableMinutesNumber\"\n                                                       id=\"hoursNumber\">\n                                                <mat-error\n                                                        *ngIf=\"day.get('tableMinutesNumber').hasError('invalidTimeRange')\">\n                                                    Ora de final trebuie sa fie mai mare decat ora de inceput!\n                                                </mat-error>\n\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n\n\n                                    <div formArrayName=\"timetable\">\n                                        <div *ngFor=\"let timetabl of timetable(dayTabIndex).controls ;let timetableIndex=index\">\n                                            <div [formGroupName]=\"timetableIndex\">\n\n                                                <!--                                                OLD VERSION-->\n                                                <!--                                                <div class=\"row\">-->\n                                                <!--                                                    <div class=\"col-10 col-md-5\">-->\n                                                <!--                                                        <mat-form-field appearance=\"standard\" class=\"w-100\">-->\n                                                <!--                                                            <mat-label>Ora de inceput</mat-label>-->\n                                                <!--                                                            <input matInput placeholder=\"Ora de inceput\" type=\"time\"-->\n                                                <!--                                                                   formControlName=\"startHour\"-->\n                                                <!--                                                                   id=\"startTime\"-->\n                                                <!--                                                                   pattern=\"[0-9]{2}:[0-9]{2}\">-->\n                                                <!--                                                            <mat-error *ngIf=\"timetabl.get('startHour').hasError('invalidTimeRange')\">Intervalul de timp trebuie sa fie mai mare decat durata medie de rezervare! </mat-error>-->\n\n                                                <!--                                                        </mat-form-field>-->\n                                                <!--                                                    </div>-->\n\n                                                <!--                                                    <div class=\"col-10 col-md-5\">-->\n                                                <!--                                                        <mat-form-field appearance=\"standard\" class=\"w-100\">-->\n                                                <!--                                                            <mat-label>Ora de final</mat-label>-->\n                                                <!--                                                            <input matInput placeholder=\"Ora de final\" type=\"time\"-->\n                                                <!--                                                                   formControlName=\"endHour\"-->\n                                                <!--                                                                   id=\"endTime\"-->\n                                                <!--                                                                   pattern=\"[0-9]{2}:[0-9]{2}\">-->\n                                                <!--                                                            <mat-error *ngIf=\"timetabl.get('endHour').hasError('invalidTime')\">Ora de final trebuie sa fie mai mare decat ora de inceput!</mat-error>-->\n                                                <!--                                                            <mat-error *ngIf=\"timetabl.get('endHour').hasError('invalidTimeRange')\">Intervalul de timp trebuie sa fie mai mare decat durata medie de rezervare! </mat-error>-->\n\n\n                                                <!--                                                        </mat-form-field>-->\n                                                <!--&lt;!&ndash;                                                        <ngx-mat-timepicker formControlName=\"endHour\">&ndash;&gt;-->\n                                                <!--&lt;!&ndash;                                                        </ngx-mat-timepicker>&ndash;&gt;-->\n\n                                                <!--                                                    </div>-->\n\n\n                                                <!--                                                    <div class=\"col-2\">-->\n                                                <!--                                                        <div class=\"d-flex justify-content-center align-items-center h-100\">-->\n                                                <!--                                                            <button class=\"btn-round btn-color-outline me-2\"-->\n                                                <!--                                                                    type=\"button\"-->\n                                                <!--                                                                    (click)=\"removeSlot(dayTabIndex,timetableIndex)\"><i-->\n                                                <!--                                                                    class=\"fas fa-times\"></i></button>-->\n                                                <!--                                                        </div>-->\n                                                <!--                                                    </div>-->\n                                                <!--                                                    <div class=\"col-12\">-->\n                                                <!--                                                        <div *ngIf=\"timetabl.hasError('invalidTimeRange')\">EROARE</div>-->\n                                                <!--                                                    </div>-->\n                                                <!--                                                </div>-->\n\n                                                <!--                                                NEW VERSION-->\n                                                <div class=\"row\">\n                                                    <div class=\"col-10 col-lg-5\">\n                                                        <div class=\"time-container w-100 d-flex justify-content-between align-items-center\">\n                                                            <p class=\"label mb-0\">Ora de inceput:</p>\n                                                            <ngx-mat-timepicker formControlName=\"startHour\"\n                                                                                enableMeridian=\"true\">\n                                                            </ngx-mat-timepicker>\n                                                        </div>\n\n                                                    </div>\n                                                    <div class=\"col-10 col-lg-5\">\n                                                        <div class=\"time-container w-100 d-flex justify-content-between align-items-center\">\n                                                            <p class=\"label mb-0\">Ora de final:</p>\n                                                            <ngx-mat-timepicker formControlName=\"endHour\"\n                                                                                enableMeridian=\"true\">\n                                                            </ngx-mat-timepicker>\n                                                        </div>\n                                                        <mat-error\n                                                                *ngIf=\"timetabl.get('endHour').hasError('invalidTime')\">\n                                                            Ora de final trebuie sa fie mai mare decat ora de inceput!\n                                                        </mat-error>\n                                                        <mat-error\n                                                                *ngIf=\"timetabl.get('endHour').hasError('invalidTimeRange')\">\n                                                            Intervalul de timp trebuie sa fie mai mare decat durata\n                                                            medie de rezervare!\n                                                        </mat-error>\n                                                    </div>\n\n                                                    <div class=\"col-2\">\n                                                        <div class=\"d-flex justify-content-center align-items-center h-100\">\n                                                            <button class=\"btn-round btn-color-outline me-2\"\n                                                                    type=\"button\"\n                                                                    (click)=\"removeSlot(dayTabIndex,timetableIndex)\"><i\n                                                                    class=\"fas fa-times\"></i></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button class=\"add-btn\" (click)=\"addTimetable(dayTabIndex)\">Adaugă un interval\n                                            de timp <i class=\"fas fa-plus\"></i></button>\n                                    </div>\n\n\n                                </div>\n                            </mat-tab>\n\n                        </div>\n\n\n                    </mat-tab-group>\n\n                </div>\n            </form>\n        </div>\n\n    </div>\n\n\n    <div class=\"tab-section-title d-flex justify-content-between\">\n        <div class=\"d-flex align-items-center\">\n            <i class=\"fas fa-info-circle\"></i>\n            <h2>Meniu</h2>\n        </div>\n        <!--            <button class=\"btn-long btn-color-fill\" (click)=\"addCategory()\"><i class=\"fas fa-plus button-icon\"></i>Adauga categorie</button>-->\n        <button class=\"btn-long btn-color-fill\" (click)=\"openAddModal()\"><i class=\"fas fa-plus button-icon\"></i>Adauga\n            categorie\n        </button>\n    </div>\n\n    <div class=\"section-content\">\n        <div class=\"row\">\n\n            <div class=\"col-12\">\n\n                <!--List Title-->\n                <div class=\"list-title\">\n                    <h5 class=\"title\">Listare categorii</h5>\n                </div>\n\n                <div class=\"list-content\">\n                    <div *ngFor=\"let category of categList; let i=index\">\n                        <div class=\"row\">\n                            <div class=\"col-6 col-md-10\">\n                                <h3>{{category.categoryName}}</h3>\n                                <p>Subcategorii: <span\n                                        *ngFor=\"let subcategory of category.subCategories; let last= last; let i= index\">{{last ? subcategory.subCategoryName : subcategory.subCategoryName + ', '}}</span>\n                                </p>\n                            </div>\n                            <div class=\"col-6 col-md-2\">\n                                <div class=\"h-100 d-flex justify-content-end align-items-center\">\n                                    <button class=\"btn-round btn-color-outline me-2\" (click)=\"openEditModal(category)\">\n                                        <i class=\"fas fa-pen\"></i></button>\n                                    <button class=\"btn-round btn-color-outline\" (click)=\"openDeleteModal(category, i)\">\n                                        <i class=\"fas fa-times\"></i></button>\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </div>\n\n        </div>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\" [disabled]=\"!menuForm.valid\"\n                    matTooltip=\"{{menuForm.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\" [disabled]=\"!menuForm.valid\"\n                    matTooltip=\"{{menuForm.valid ? '' : 'Trebuie să completați toate câmpurile obligatorii!'}}\"\n            >\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 57212:
/*!**************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/no-booking/no-booking.component.html?ngResource ***!
  \**************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div id=\"rental-booking\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Property Setup</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <p>Pentru acest tip de resursă nu avem Setup.</p>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 18044:
/*!****************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/add-edit-product/add-edit-product.component.html?ngResource ***!
  \****************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Adăugare produs</h2>\n        <button type=\"button\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n        </button>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n        <form [formGroup]=\"productForm\">\n            <div class=\"row mb-5\">\n\n                <div class=\"col-12\">\n                    <!--                    <h3 class=\"section-name\">Tip bilet</h3>-->\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>Denumire</mat-label>\n                        <input matInput placeholder=\"Denumire\" formControlName=\"name\">\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>Descriere</mat-label>\n                        <input matInput placeholder=\"Descriere\" formControlName=\"description\">\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-2\">\n                    <h3 class=\"section-name\">Pret</h3>\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>EUR</mat-label>\n                        <input matInput placeholder=\"Pret\" type=\"number\" [min]=\"0\" formControlName=\"price\">\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-10\">\n                    <h3 class=\"section-name\">Preview</h3>\n\n                    <app-product-preview [productData]=\"productForm.value\"></app-product-preview>\n                </div>\n\n            </div>\n            <!--Upload Images-->\n            <div class=\"row mb-5\" id=\"photo-upload\">\n\n                <!--Section Name-->\n                <div class=\"col-12\">\n                    <h3 class=\"section-name\">Upload Files</h3>\n                </div>\n\n                <!--Image Type Section-->\n                <div class=\"col-12 mt-3\">\n                    <h5 class=\"photo-type-title\">Thumbnail</h5>\n                </div>\n\n\n                <!--Image Preview-->\n\n                <div class=\"image-container mb-5 p-0\">\n                    <input type=\"file\"\n                           hidden\n                           accept=\"image/*\"\n                           #thumbnail\n                           id=\"thumbnailInput\"\n                           (change)=\"onThumbnailChange($event)\">\n                    <div *ngIf=\"!thumbnail.value && !thumbnailUrl?.filePath\" class=\"no-image\"\n                         attr.translatedContent=\"{{ 'GENERAL.INSERT_IMAGE' | translate}}\"\n                         (click)=\"thumbnail.click()\"></div>\n\n                    <img *ngIf=\"thumbnail.value || thumbnailUrl?.filePath\" class=\"img-fluid w-100 object-fit-cover\"\n                         [src]=\"thumbnailUrl.filePath\" alt=\"thumbnail\">\n                    <button *ngIf=\"thumbnail.value || thumbnailUrl?.filePath\"\n                            (click)=\"removeThumbnail(); thumbnail.value=''\"\n                            type=\"button\"\n                            id=\"btnRemoveFeaturedImage\"\n                            class=\"btn-thumbnail\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n\n\n                <div class=\"attchement-section p-0\">\n                    <h3 class=\"section-name\">Attachment</h3>\n\n                    <div *ngIf=\"!attachmentUrl?.filePath\" class=\"no-attachment\"\n                         (click)=\"uploadAttachment.click()\"><i class=\"fas fa-upload\"></i>Upload attachment\n                    </div>\n                    <input type=\"file\"\n                           hidden\n                           accept=\"file/*\"\n                           #uploadAttachment\n                           id=\"uploadFile\"\n                           (change)=\"uploadAttachmentFile($event)\"\n                    >\n                </div>\n\n\n                <div class=\"attachment-container d-flex justify-content-between p-3 align-items-center\"\n                     *ngIf=\"attachmentUrl?.filePath\">\n                    <p class=\"mb-0\" *ngIf=\"attachmentUrl?.filePath !== ''\">{{attachmentUrl?.fileName}}</p>\n                    <button class=\"btn-round btn-no-outline btn-color-fill\" *ngIf=\"attachmentUrl?.filePath\"\n                            (click)=\"deleteAttachment()\"><i class=\"fas fa-trash\"></i>\n                    </button>\n                </div>\n\n\n                <!--                &lt;!&ndash;Image Type Section&ndash;&gt;-->\n                <!--                <div class=\"col-12 mt-3\">-->\n                <!--                    <h5 class=\"photo-type-title\">Gallery</h5>-->\n                <!--                </div>-->\n\n\n                <!--                &lt;!&ndash;Gallery Preview&ndash;&gt;-->\n                <!--                <div class=\"row gallery-container\">-->\n                <!--                    <div class=\"col-12 col-lg-6\">-->\n                <!--                        <div class=\"image-container\">-->\n                <!--                            <input type=\"file\"-->\n                <!--                                   accept=\"image/*\"-->\n                <!--                                   hidden-->\n                <!--                                   #add_image-->\n                <!--                                   id=\"galleryInput\"-->\n                <!--                                   multiple-->\n                <!--                                   (change)=\"onImageChange($event, add_image)\">-->\n                <!--                            <div class=\"no-image\"-->\n                <!--                                 attr.translatedContent=\"{{ 'GENERAL.INSERT_IMAGE' | translate}}\"-->\n                <!--                                 (click)=\"add_image.click()\"></div>-->\n                <!--                        </div>-->\n                <!--                    </div>-->\n\n                <!--                    <div *ngFor=\"let image of galleryUrls; let i = index\" class=\"col-6 col-lg-2\">-->\n                <!--                        <div class=\"image-container\">-->\n                <!--                            <img class=\"img-fluid gallery-img\"-->\n                <!--                                 [src]=\"image.filePath\" alt=\"image-{{i}}\">-->\n                <!--                            <button (click)=\"removeImage(i)\"-->\n                <!--                                    id=\"btnRemoveGalleryImage-{{i}}\"-->\n                <!--                                    type=\"button\"-->\n                <!--                                    class=\"btn-gallery\">-->\n                <!--                                <i class=\"fas fa-times\"></i>-->\n                <!--                            </button>-->\n                <!--                        </div>-->\n                <!--                    </div>-->\n                <!--                </div>-->\n            </div>\n        </form>\n\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill\" (click)=\"confirm()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 35144:
/*!************************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/delete-product-modal/delete-product-modal.component.html?ngResource ***!
  \************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Stergere Card</h2>\n        <p>Acțiunea de stergere card este permanentă și complet irevocabilă.</p>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n\n        <div class=\"row\">\n\n            <!--Name-->\n            <div class=\"col-12 col-md-6\">\n                <h5 class=\"section-title\">Numele: <span>{{currentProd.name}}</span></h5>\n            </div>\n\n            <!--Regular Price-->\n            <div class=\"col-md-6 col-12\">\n                <h5 class=\"section-title\">Pret: <span>{{currentProd.price}} EUR</span></h5>\n            </div>\n\n            <!--Description-->\n            <div class=\"col-12\">\n                <h5 class=\"section-title\">Descriere: <span>{{currentProd.description}}</span></h5>\n            </div>\n\n\n\n        </div>\n\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline w-100\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill w-100\" (click)=\"deleteProduct()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 55164:
/*!********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/products-list/products-list.component.html?ngResource ***!
  \********************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button  *ngIf=\"resourceId\"\n             (click)=\"saveResource()\"\n             [disabled]=\"isSubmitLoading\"\n             class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"product-list\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Property Setup</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n<!--        <p>Pentru acest tip de resursă nu avem Setup.</p>-->\n        <div class=\"row\">\n            <!--Title Section-->\n            <div class=\"col-12 mb-3\">\n                <h2 class=\"section-title\">Produse</h2>\n            </div>\n\n            <div class=\"col-12\">\n\n                <!--List Title-->\n                <div class=\"list-title\">\n                    <h5 class=\"title\">Listare produse</h5>\n                </div>\n\n                <!--List Content-->\n                <div class=\"list-content\">\n\n                    <div class=\"ticket-list\" *ngFor=\"let product of productList; let i= index;\">\n                        <div class=\"ticket d-flex justify-content-center\">\n                            <!--                            <app-ticket-card class=\"w-100\" [name]=\"ticket.name\" [description]=\"ticket.description\" [regularPrice]=\"ticket.regularPrice\" [weekendPrice]=\"ticket.weekendPrice\"></app-ticket-card>-->\n                           <app-product-preview class=\"w-100\" [productData]=\"product\" [list]=\"true\"></app-product-preview>\n                            <div class=\"actions d-flex flex-column align-items-start\">\n                                <button class=\"btn-delete\" type=\"button\" (click)=\"openDeleteModal(product, i)\"><i class=\"fas fa-times\"></i></button>\n                                <button class=\"btn-edit\" type=\"button\" (click)=\"openEditModal(product)\"><i class=\"fas fa-pen\"></i></button>\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                    <!--Add Button-->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n\n                            <button class=\"add-btn\"  (click)=\"openAddModal()\">\n                                Adăugare\n                                <i class=\"fas fa-plus\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 81359:
/*!***********************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/add-edit-room-modal/add-edit-room-modal.component.html?ngResource ***!
  \***********************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Adăugare cameră</h2>\n        <button type=\"button\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n        </button>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n        <form [formGroup]=\"formRoom\">\n\n            <!--General Inputs-->\n            <div class=\"row mb-5\">\n\n                <!--Section Name-->\n                <div class=\"col-12\">\n                    <h3 class=\"section-name\">Cameră - General info</h3>\n                </div>\n\n\n                <!--Form Inputs-->\n                <div class=\"col-lg-3 col-md-4 col-12\">\n                    <app-dynamic-inputs [control]=\"formRoom.get('name')\"\n                                        [inputFormData]=\"{name:'Denumire tip cameră', valueType:'text', valuePlaceholder:'Nume camera'}\"/>\n                </div>\n\n                <div class=\"col-lg-9 col-md-8 col-12\">\n                    <app-dynamic-inputs [control]=\"formRoom.get('description')\"\n                                        [inputFormData]=\"{name:'Prezentare text cameră', valueType:'text', valuePlaceholder:'Scurta descriere'}\"/>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-12\">\n                    <app-dynamic-inputs [control]=\"formRoom.get('minimumStay')\"\n                                        [inputFormData]=\"{name:'Minimum stay (nights)', valueType:'number'}\"/>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-12\">\n                    <app-dynamic-inputs [control]=\"formRoom.get('roomSize')\"\n                                        [inputFormData]=\"{name:'How big is this apartment?', valueType:'number'}\"/>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-12\">\n                    <app-dynamic-inputs [control]=\"formRoom.get('bathrooms')\"\n                                        [inputFormData]=\"{name:'How many bathrooms are there?', valueType:'select',  valueOptions:selectOptions}\"/>\n                </div>\n                <div class=\"col-lg-3 col-md-4 col-12\">\n                    <app-dynamic-inputs [control]=\"formRoom.get('maximumAdultPeople')\"\n                                        [inputFormData]=\"{name:'How many adults can stay?', valueType:'select',  valueOptions:selectOptions}\"/>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-12\">\n                    <app-dynamic-inputs [control]=\"formRoom.get('maximumChildren')\"\n                                        [inputFormData]=\"{name:'How many children can stay?', valueType:'select',  valueOptions:selectOptions}\"/>\n                </div>\n\n\n                <!--Added Room Numbers-->\n                <div class=\"row my-4\" formArrayName=\"itemsForBooking\">\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n\n                        <!--Section SubTitle-->\n                        <h5 class=\"section-subtitle mb-0 me-4\">Numarul de camere (de acest tip)</h5>\n\n                        <!--Action Buttons & Room Added-->\n                        <div class=\"add-remove-rooms d-flex align-items-center justify-content-between\">\n                            <!--Remove Room-->\n                            <button class=\"add-remove-btn\" type=\"button\" (click)=\"removeRoom()\">\n                                <i class=\"fas fa-minus\"></i>\n                            </button>\n                            <!--Number of Rooms Added-->\n                            <span>{{formRoom.get('itemsForBooking').value.length}}</span>\n                            <!--Add Room-->\n                            <button class=\"add-remove-btn\" type=\"button\" (click)=\"addRoom()\">\n                                <i class=\"fas fa-plus\"></i>\n                            </button>\n                        </div>\n\n                        <p *ngIf=\"formRoom.controls.itemsForBooking.hasError('required') && formSubmitClicked\" class=\"mat-error mb-0 ms-4\">\n                            Minim o camera este necesara\n                        </p>\n\n                    </div>\n\n\n                    <!--Room Number-->\n                    <div class=\"col-md-3 col-12\"\n                         *ngFor=\"let room of formRoom.get('itemsForBooking').controls; let i = index\"\n                         [formGroupName]=\"i\">\n\n                        <app-dynamic-inputs [control]=\"room.get('itemNumber')\"\n                                            [inputFormData]=\"{name:'Nr. camerei', valueType:'text'}\"/>\n\n                    </div>\n\n\n                    <!--Section SubTitle-->\n                    <h5 class=\"section-subtitle my-4\">Bed / Beds</h5>\n\n\n                </div>\n\n                <!--Bet type-->\n                <div class=\"row\" formArrayName=\"bedType\" id=\"beds-types\">\n\n                    <div class=\"col-md-6 col-12\"\n                         *ngFor=\"let bedType of formRoom.get('bedType').controls; let index = index\"\n                    >\n\n                        <div class=\"d-flex align-items-center justify-content-between mb-4\">\n\n                            <div class=\"d-flex align-items-center\">\n                                <i class=\"bed-icon fas fa-bed me-4\"></i>\n                                <span class=\"bed-new-name\">{{bedType.value.type}}</span>\n                            </div>\n\n\n                            <div class=\"add-remove-rooms d-flex align-items-center justify-content-between\">\n                                <!--Remove Room-->\n                                <button class=\"add-remove-btn\" type=\"button\" (click)=\"removeBedType(index)\">\n                                    <i class=\"fas fa-minus\"></i>\n                                </button>\n                                <!--Number of Rooms Added-->\n                                <span>{{bedType.value.quantity}}</span>\n                                <!--Add Room-->\n                                <button class=\"add-remove-btn\" type=\"button\" (click)=\"addBedType(index)\">\n                                    <i class=\"fas fa-plus\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n\n                    </div>\n                </div>\n            </div>\n\n\n            <!--Price & Preview-->\n            <div class=\"row\">\n                <!--Price-->\n                <div class=\"col-md-3 col-12\">\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <h3 class=\"section-name\">Regular price</h3>\n                            <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                <mat-label>EUR/noapte</mat-label>\n                                <input matInput placeholder=\"EUR/noapte\"\n                                       type=\"text\"\n                                       [formControl]=\"formRoom.get('price').get('regularPrice')\">\n                                <mat-error *ngIf=\"formRoom.get('price').get('regularPrice').invalid\">Valoarea introdusa trebuie sa fie un numar mai mare ca 0 de maxim 6 cifre!</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-12\">\n                            <h3 class=\"section-name\">Weekend price</h3>\n                            <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                <mat-label>EUR/noapte</mat-label>\n                                <input matInput placeholder=\"EUR/noapte\"\n                                       type=\"text\"\n                                       [formControl]=\"formRoom.get('price').get('weekendPrice')\">\n                                <mat-error *ngIf=\"formRoom.get('price').get('weekendPrice').invalid\">Valoarea introdusa trebuie sa fie un numar mai mare ca 0 de maxim 6 cifre!</mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n\n                <!--Preview-->\n                <div class=\"col-md-9 col-12\">\n                    <h3 class=\"section-name\">Preview</h3>\n                    <div id=\"prev-container\">\n                        <div class=\"prev-header\">\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                    <h3 class=\"prev-title\">Double</h3>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"prev-content\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-8 col-md-6 col-12\">\n                                    <div class=\"d-flex justify-content-between h-100 align-items-center\">\n                                        <div class=\"prev-info\">\n                                            <span class=\"info-name\">Nr.mp:</span>\n                                            <span class=\"info-value\">{{formRoom.get('roomSize').value}}</span>\n                                        </div>\n                                        <div class=\"prev-info\">\n                                            <span class=\"info-name\">Locuri adulti:</span>\n                                            <span class=\"info-value mx-1\">{{formRoom.get('maximumAdultPeople').value}}\n                                                x</span>\n                                            <i class=\"fas fa-user\"></i>\n                                        </div>\n                                        <div class=\"prev-info\">\n                                            <span class=\"info-name\">Locuri copii:</span>\n                                            <span class=\"info-value mx-1\">{{formRoom.get('maximumChildren').value}}\n                                                x</span>\n                                            <i class=\"fas fa-user\"></i>\n                                        </div>\n                                        <div class=\"prev-info\">\n                                            <span class=\"info-name\">Numar bai:</span>\n                                            <span class=\"info-value mx-1\">{{formRoom.get('bathrooms').value}}x</span>\n                                            <i class=\"fas fa-shower\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-4 col-md-6 col-12\">\n                                    <div class=\"row\">\n                                        <div class=\"col-6\">\n                                            <div class=\"prev-price\">\n                                                <span class=\"title-info\">Pret normal</span>\n                                                <span class=\"price-info\">{{formRoom.get('price').get('regularPrice').value}}</span>\n                                                <span class=\"currency-per\">EUR/Noapte</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-6\">\n                                            <div class=\"prev-price\">\n                                                <span class=\"title-info\">Pret weekend</span>\n                                                <span class=\"price-info\">{{formRoom.get('price').get('weekendPrice').value}}</span>\n                                                <span class=\"currency-per\">EUR/Noapte</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!--Benefits-->\n            <div class=\"row mb-5\" id=\"benefits\" formArrayName=\"benefits\">\n                <!--Section Name-->\n                <div class=\"col-12\">\n                    <h3 class=\"section-name\">Facilities</h3>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-6 col-sm-6 col-12 mb-6\"\n                     *ngFor=\"let facility of activeFacilitiesByCategory\">\n                    <h5 class=\"facility-category-name\">{{facility.categoryZone}}</h5>\n                    <div class=\"row\">\n                        <div *ngFor=\"let inputForm of facility.tabAttributes | orderBy : 'order'\">\n                            <app-dynamic-inputs [control]=\"formRoom.get(inputForm.name)\"\n                                                [inputFormData]=\"inputForm\"/>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n\n            <!--Applicable Politics-->\n            <div class=\"row mb-5\" id=\"applicable-politics\">\n\n                <div class=\"col-12\">\n                    <h3 class=\"section-name\">Politici aplicabile</h3>\n                </div>\n\n                <!--Left Side-->\n                <div class=\"col-md-6 col-12\">\n                    <!--Category Name-->\n                    <h5 class=\"politics-category-name\">Politici de modificare</h5>\n                    <mat-error *ngIf=\"formRoom.get('changePolicies').hasError('invalidPolicy') && (formRoom.get('changePolicies').dirty || formRoom.get('changePolicies').touched)\">\n                        Trebuie să alegi o variantă între \"Nerambursabil\" și \"Anulare Gratuită\".\n                    </mat-error>\n                    <!--Checkboxes-->\n                    <div class=\"d-flex flex-column\">\n                        <mat-checkbox [formControl]=\"formRoom.get('changePolicies').get('nonRefundable')\"\n                                      (change)=\"changePolicyEdit($event, 'nonRefundable')\">\n                            Nerambursabil\n                        </mat-checkbox>\n                        <mat-checkbox [formControl]=\"formRoom.get('changePolicies').get('modifiable')\">Se poate\n                            modifica\n                        </mat-checkbox>\n                        <mat-checkbox\n                                [formControl]=\"formRoom.get('changePolicies').get('freeCancellation').get('freeCancellation')\"\n                                (change)=\"changePolicyEdit($event, 'freeCancellation')\">Anulare gratuită\n                        </mat-checkbox>\n                        <mat-form-field appearance=\"standard\" class=\"w-100\"   *ngIf=\"formRoom.get('changePolicies').get('freeCancellation').get('freeCancellation').value\">\n                            <mat-label>Timp limita (zile)</mat-label>\n                            <input matInput type=\"text\" [formControl]=\"formRoom.get('changePolicies').get('freeCancellation').get('deadlineDays')\">\n                            <mat-error *ngIf=\"formRoom.get('changePolicies').get('freeCancellation').get('deadlineDays').hasError('pattern')\">\n                                Sunt acceptate doar numere mai mari decât 0.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n\n                <!--Right Side-->\n                <div class=\"col-md-6 col-12\">\n                    <!--Category Name-->\n                    <h5 class=\"politics-category-name\">Politici de rezervare</h5>\n                    <mat-error *ngIf=\"formRoom.get('bookingPolicies').hasError('requireCheckboxesToBeChecked') && formRoom.get('bookingPolicies').touched\">\n                        You have to check one\n                    </mat-error>\n\n                    <!--Checkboxes-->\n                    <div class=\"d-flex flex-column\">\n                        <mat-checkbox [formControl]=\"formRoom.get('bookingPolicies').get('depositRequired')\"\n                                      (change)=\"bookingPolicyEdit($event.checked, 'depositRequired')\">Se cere depozit\n                        </mat-checkbox>\n\n                        <div class=\"row\" *ngIf=\"formRoom.get('bookingPolicies').get('depositRequired').value\">\n                            <div class=\"col-12 col-lg-6\">\n                                <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                    <mat-label>Depozit (%)</mat-label>\n                                    <input matInput type=\"text\" [max]=\"100\" [formControl]=\"formRoom.get('bookingPolicies').get('depositRequiredPercentage')\"\n                                           (ngModelChange)=\"checkDepositType('percentage')\">\n                                    <mat-error *ngIf=\"formRoom.get('bookingPolicies').get('depositRequiredPercentage').hasError('pattern')\">\n                                        Sunt acceptate doar numere cuprinse între 1 și 100.\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-12 col-lg-6\">\n                                <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                    <mat-label>Depozit (EUR)</mat-label>\n                                    <input matInput type=\"text\" [formControl]=\"formRoom.get('bookingPolicies').get('depositRequiredAmount')\"\n                                           (ngModelChange)=\"checkDepositType('amount')\">\n                                    <mat-error *ngIf=\"formRoom.get('bookingPolicies').get('depositRequiredAmount').hasError('pattern')\">\n                                        Sunt acceptate doar numere mai mari ca 0.\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                        </div>\n                        <mat-checkbox [formControl]=\"formRoom.get('bookingPolicies').get('advanceFullPayment')\"\n                                      (change)=\"bookingPolicyEdit($event.checked, 'advanceFullPayment')\">Plata completa in avans\n                        </mat-checkbox>\n                        <mat-checkbox [formControl]=\"formRoom.get('bookingPolicies').get('advancePartialPayment')\"\n                                      (change)=\"bookingPolicyEdit($event.checked, 'advancePartialPayment')\">Plata partiala in avans\n                        </mat-checkbox>\n                        <div class=\"row\" *ngIf=\"formRoom.get('bookingPolicies').get('advancePartialPayment').value\">\n                            <div class=\"col-12 col-lg-6\">\n                                <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                    <mat-label>Avans (%)</mat-label>\n                                    <input matInput type=\"text\" [formControl]=\"formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage')\" >\n                                    <mat-error *ngIf=\"formRoom.get('bookingPolicies').get('advancePartialPaymentPercentage').hasError('pattern')\">\n                                        Sunt acceptate doar numere cuprinse între 1 și 100.\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!--Upload Images-->\n            <div class=\"row mb-5\" id=\"photo-upload\">\n\n                <!--Section Name-->\n                <div class=\"col-12\">\n                    <h3 class=\"section-name\">Upload Images</h3>\n                </div>\n\n                <!--Image Type Section-->\n                <div class=\"col-12 mt-3\">\n                    <h5 class=\"photo-type-title\">Thumbnail</h5>\n                </div>\n\n\n                <!--Image Preview-->\n\n                <div class=\"image-container mb-5 p-0\">\n                    <input type=\"file\"\n                           hidden\n                           accept=\"image/*\"\n                           #thumbnail\n                           id=\"thumbnailInput\"\n                           (change)=\"onThumbnailChange($event)\">\n                    <div *ngIf=\"!thumbnail.value && !thumbnailUrl?.filePath\" class=\"no-image\"\n                         attr.translatedContent=\"{{ 'GENERAL.INSERT_IMAGE' | translate}}\"\n                         (click)=\"thumbnail.click()\"></div>\n\n                    <img *ngIf=\"thumbnail.value || thumbnailUrl?.filePath\" class=\"img-fluid w-100 object-fit-cover\"\n                         [src]=\"thumbnailUrl.filePath\" alt=\"thumbnail\">\n                    <button *ngIf=\"thumbnail.value || thumbnailUrl?.filePath\"\n                            (click)=\"removeThumbnail(); thumbnail.value=''\"\n                            type=\"button\"\n                            id=\"btnRemoveFeaturedImage\"\n                            class=\"btn-thumbnail\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n\n                <!--Image Type Section-->\n                <div class=\"col-12 mt-3\">\n                    <h5 class=\"photo-type-title\">Gallery</h5>\n                </div>\n\n\n                <!--Gallery Preview-->\n                <div class=\"row gallery-container\">\n                    <div class=\"col-12 col-lg-6\">\n                        <div class=\"image-container\">\n                            <input type=\"file\"\n                                   accept=\"image/*\"\n                                   hidden\n                                   #add_image\n                                   id=\"galleryInput\"\n                                   multiple\n                                   (change)=\"onImageChange($event, add_image)\">\n                            <div class=\"no-image\"\n                                 attr.translatedContent=\"{{ 'GENERAL.INSERT_IMAGE' | translate}}\"\n                                 (click)=\"add_image.click()\"></div>\n                        </div>\n                    </div>\n\n                    <div *ngFor=\"let image of galleryUrls; let i = index\" class=\"col-6 col-lg-2\">\n                        <div class=\"image-container\">\n                            <img class=\"img-fluid gallery-img\"\n                                 [src]=\"image.filePath\" alt=\"image-{{i}}\">\n                            <button (click)=\"removeImage(i)\"\n                                    id=\"btnRemoveGalleryImage-{{i}}\"\n                                    type=\"button\"\n                                    class=\"btn-gallery\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </form>\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill\" (click)=\"submitRoom()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 79853:
/*!*******************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/delete-room-modal/delete-room-modal.component.html?ngResource ***!
  \*******************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Stergere Card</h2>\n        <p>Acțiunea de stergere card este permanentă și complet irevocabilă.</p>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n\n        <div class=\"row\">\n\n            <!--Name-->\n            <div class=\"col-md-4 col-12\">\n                <h5 class=\"section-title\">Numele: <span>{{room.roomData.name}}</span></h5>\n            </div>\n\n            <!--Regular Price-->\n            <div class=\"col-md-4 col-12\">\n                <h5 class=\"section-title\">Regular price: <span>{{room.roomData.price.regularPrice}} EUR/Noapte</span></h5>\n            </div>\n\n            <!--Weekend Price-->\n            <div class=\"col-md-4 col-12\">\n                <h5 class=\"section-title\">Weekend price: <span>{{room.roomData.price.weekendPrice}} EUR/Noapte</span></h5>\n            </div>\n\n            <!--Bathdatas-->\n            <div class=\"col-md-4 col-12\">\n                <h5 class=\"section-title\">Numar bai: <span>{{room.roomData.bathrooms}}</span></h5>\n            </div>\n\n            <!--Adults-->\n            <div class=\"col-md-4 col-12\">\n                <h5 class=\"section-title\">Locuri adulti: <span>{{room.roomData.maximumAdultPeople}}</span></h5>\n            </div>\n\n            <!--Children-->\n            <div class=\"col-md-4 col-12\">\n                <h5 class=\"section-title\">Locuri copii: <span>{{room.roomData.maximumChildren}}</span></h5>\n            </div>\n\n        </div>\n\n\n        <!--Description-->\n        <div class=\"col-12 mt-2\">\n            <h5 class=\"section-title mb-2\">Descriere:</h5>\n            <p class=\"m-0\">{{room.roomData.description}}</p>\n        </div>\n\n        <!--Beds Type-->\n        <div class=\"col-12 mt-2\">\n            <h5 class=\"section-title mb-2\">Paturi:</h5>\n            <div class=\"row\">\n                <div class=\"col-md-4 col-12 mb-2\" *ngFor=\"let bed of room.roomData.bedType\">\n                    <div class=\"bed-type\">\n                        <i class=\"bed-icon fas fa-bed me-2\"></i>\n                        <span>{{bed.type}}: {{bed.quantity}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!--Benefits-->\n        <div class=\"col-12 mt-2\">\n            <h5 class=\"section-title mb-2\">Beneficii:</h5>\n            <div class=\"d-flex flex-row flex-wrap\">\n                <div *ngFor=\"let benefit of room.roomData.benefits\" class=\"me-2 mb-2\">\n                    <app-bf-chips *ngIf=\"benefit.attributeValue === 'true'\"  [name]=\"benefit.name\" [icon]=\"benefit.icon\"/>\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline w-100\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill w-100\" (click)=\"deleteRoom()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 16607:
/*!**********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/rental-booking/rental-booking.component.html?ngResource ***!
  \**********************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button  *ngIf=\"resourceId\"\n             (click)=\"saveResource()\"\n             [disabled]=\"isSubmitLoading\"\n             class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" clas=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"rental-booking\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Property Setup</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <div class=\"row\">\n            <!--Title Section-->\n            <div class=\"col-12 mb-3\">\n                <h2 class=\"section-title\">Tip spații de cazare disponibile</h2>\n            </div>\n\n            <div class=\"col-12\">\n\n                <!--List Title-->\n                <div class=\"list-title\">\n                    <h5 class=\"title\">Listare camere</h5>\n                </div>\n\n                <!--List Content-->\n                <div class=\"list-content\" *ngIf=\"dataLoaded\">\n\n                    <!--Room List-->\n                    <div *ngIf=\"roomList.length > 0\" id=\"room-list\">\n                        <div class=\"room-container d-flex flex-row mb-4\" *ngFor=\"let room of roomList\">\n\n                            <!--Room Content-->\n                            <div class=\"flex-grow-1\">\n                                <div class=\"room-header\">\n                                    <h4>{{room.itemsForBooking.length}} x {{room.name}}</h4>\n                                </div>\n                                <div class=\"room-body\">\n                                    <div class=\"row\">\n                                        <!--Room Details-->\n                                        <div class=\"col-md-9 col-12 mt-2\">\n                                            <div class=\"row\">\n\n                                                <!--Name-->\n                                                <div class=\"col-lg-3 col-md-6 col-12 mb-2\">\n                                                    <h5 class=\"section-title\">Denumire tip cameră: <span>{{room.name}}</span></h5>\n                                                </div>\n\n                                                <!--Adults-->\n                                                <div class=\"col-lg-3 col-md-6 col-12 mb-2\">\n                                                    <h5 class=\"section-title\">Locuri adulti:\n                                                        <span>{{room.maximumAdultPeople}}</span></h5>\n                                                </div>\n\n                                                <!--Children-->\n                                                <div class=\"col-lg-3 col-md-6 col-12 mb-2\">\n                                                    <h5 class=\"section-title\">Locuri copii:\n                                                        <span>{{room.maximumChildren}}</span></h5>\n                                                </div>\n\n                                                <!--Bathrooms-->\n                                                <div class=\"col-lg-3 col-md-6 col-12 mb-2\">\n                                                    <h5 class=\"section-title\">Numar bai: <span>{{room.bathrooms}}</span>\n                                                    </h5>\n                                                </div>\n\n                                                <!--Description-->\n                                                <div class=\"col-12 mt-2\">\n                                                    <h5 class=\"section-title mb-2\">Descriere:</h5>\n                                                    <p class=\"m-0\">{{room.description}}</p>\n                                                </div>\n\n                                                <!--Beds Type-->\n                                                <div class=\"col-12 mt-2\">\n                                                    <h5 class=\"section-title mb-2\">Paturi:</h5>\n                                                    <div class=\"row\">\n                                                        <div\n                                                             *ngFor=\"let bed of room.bedType\"\n                                                             [className]=\"bed.quantity > 0 ? 'col-md-6 col-12 mb-2' : 'd-none'\">\n                                                            <div class=\"bed-type\" *ngIf=\"bed.quantity > 0\">\n                                                                <i class=\"bed-icon fas fa-bed me-2\"></i>\n                                                                <span>{{bed.type}}: {{bed.quantity}}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--Benefits-->\n                                                <div class=\"col-12 mt-2\">\n                                                    <h5 class=\"section-title mb-2\">Beneficii:</h5>\n                                                    <div class=\"d-flex flex-row flex-wrap\">\n                                                        <div *ngFor=\"let benefit of room.benefits\" class=\"me-2 mb-2\">\n                                                            <app-bf-chips *ngIf=\"benefit.attributeValue === 'true'\"  [name]=\"benefit.name\" [icon]=\"benefit.icon\"/>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <!--Price-->\n                                        <div class=\"col-md-3 col-12\">\n                                            <div class=\"room-price mt-2\">\n                                                <div class=\"regular-price mb-2\">\n                                                    <h5>Regular price</h5>\n                                                    <span class=\"price\">{{room.price.regularPrice}}</span>\n                                                    <span class=\"price-per-night\">EUR/Noapte</span>\n                                                </div>\n                                                <div class=\"weekend-price\">\n                                                    <h5>Weekend price</h5>\n                                                    <span class=\"price\">{{room.price.weekendPrice}}</span>\n                                                    <span class=\"price-per-night\">EUR/Noapte</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!--Actions Button-->\n                            <div class=\"d-flex flex-column\">\n                                <button class=\"delete-room-btn\" type=\"button\" (click)=\"openDeleteModal(room.id)\">\n                                    <i class=\"fa fa-times\"></i>\n                                </button>\n                                <button class=\"edit-room-btn\" type=\"button\" (click)=\"openEditModal(room.id)\">\n                                    <i class=\"fa fa-pen\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <!--Add Room-->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <button class=\"add-room-btn\" (click)=\"openAddModal()\">\n                                Adăugare\n                                <i class=\"fas fa-plus\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 18819:
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/add-edit-service/add-edit-service.component.html?ngResource ***!
  \*****************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>{{isEditMode ? 'Editare produs' : 'Adăugare produs'}}</h2>\n        <button type=\"button\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n        </button>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n        <form [formGroup]=\"serviceForm\">\n            <div class=\"row mb-5\">\n\n                <div class=\"col-12\">\n                    <h3 class=\"section-name\">Informații generale</h3>\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>Denumire</mat-label>\n                        <input matInput placeholder=\"Denumire\" formControlName=\"name\">\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>Descriere</mat-label>\n                        <input matInput placeholder=\"Descriere\" formControlName=\"description\">\n                    </mat-form-field>\n\n                    <h3 class=\"section-name\">Disponibilitate</h3>\n\n                    <div formArrayName=\"slotItems\" class=\"config-group p-0 mb-3\">\n                        <mat-tab-group class=\"conf-tabs\" animationDuration=\"0ms\" mat-stretch-tabs=\"true\" dynamicHeight\n                                       [selectedIndex]=\"tabIndex\">\n                            <div *ngFor=\"let day of slotItems.controls; let dayTabIndex=index\">\n                                <mat-tab [formGroupName]=\"dayTabIndex\" [label]=\"day.value.day | titlecase\">\n                                    <div class=\"tab-content\">\n                                        <div formArrayName=\"slots\">\n                                            <div *ngFor=\"let slot of slots(dayTabIndex).controls ;let slotIndex=index\">\n                                                <div [formGroupName]=\"slotIndex\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-10 col-lg-5\">\n                                                            <div class=\"time-container w-100 d-flex justify-content-between align-items-center\">\n                                                                <p class=\"label mb-0\">Ora de inceput:</p>\n                                                                <ngx-mat-timepicker formControlName=\"startHour\"\n                                                                                    enableMeridian=\"true\">\n                                                                </ngx-mat-timepicker>\n                                                            </div>\n\n                                                        </div>\n                                                        <div class=\"col-10 col-lg-5\">\n                                                            <div class=\"time-container w-100 d-flex justify-content-between align-items-center\">\n                                                                <p class=\"label mb-0\">Ora de final:</p>\n                                                                <ngx-mat-timepicker formControlName=\"endHour\"\n                                                                                    enableMeridian=\"true\">\n                                                                </ngx-mat-timepicker>\n                                                            </div>\n                                                            <mat-error\n                                                                    *ngIf=\"slot.get('endHour').hasError('invalidTime')\">\n                                                                Ora de final trebuie sa fie mai mare decat ora de inceput!\n                                                            </mat-error>\n                                                        </div>\n\n                                                        <div class=\"col-2\">\n                                                            <div class=\"d-flex justify-content-center align-items-center h-100\">\n                                                                <button class=\"btn-round btn-color-outline me-2\" type=\"button\" (click)=\"removeSlot(dayTabIndex,slotIndex)\"><i class=\"fas fa-times\"></i></button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <button class=\"add-btn\" (click)=\"addSlot(dayTabIndex)\">Adaugă un interval de timp <i class=\"fas fa-plus\"></i> </button>\n                                        </div>\n                                    </div>\n                                </mat-tab>\n                            </div>\n\n\n                        </mat-tab-group>\n                    </div>\n\n                    <div class=\"row mb-4\">\n                        <div class=\"col-md-6 col-12\">\n                            <!--Category Name-->\n                            <h3 class=\"section-name\">Politici de rezervare</h3>\n\n                            <mat-error *ngIf=\"serviceForm.get('bookingPolicies').hasError('requireCheckboxesToBeChecked') && serviceForm.get('bookingPolicies').touched\">\n                                You have to check one\n                            </mat-error>\n\n                            <!--Checkboxes-->\n                            <div class=\"d-flex flex-column\" formGroupName=\"bookingPolicies\">\n                                <mat-checkbox formControlName=\"depositRequired\" (change)=\"bookingPolicyEdit($event.checked, 'depositRequired')\">Se cere\n                                    depozit\n                                </mat-checkbox>\n\n                                <div class=\"row\" *ngIf=\"serviceForm.get('bookingPolicies').get('depositRequired').value\">\n                                    <div class=\"col-12 col-lg-6\">\n                                        <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                            <mat-label>Depozit (%)</mat-label>\n                                            <input matInput type=\"text\" formControlName=\"depositRequiredPercentage\" (ngModelChange)=\"checkDepositType('percentage')\">\n                                            <mat-error *ngIf=\"serviceForm.get('bookingPolicies').get('depositRequiredPercentage').hasError('pattern')\">\n                                                Sunt acceptate doar numere mai mari ca 0.\n                                            </mat-error>\n                                        </mat-form-field>\n\n                                    </div>\n                                    <div class=\"col-12 col-lg-6\">\n                                        <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                            <mat-label>Depozit (EUR)</mat-label>\n                                            <input matInput type=\"text\" formControlName=\"depositRequiredAmount\" (ngModelChange)=\"checkDepositType('amount')\">\n                                            <mat-error *ngIf=\"serviceForm.get('bookingPolicies').get('depositRequiredAmount').hasError('pattern')\">\n                                                Sunt acceptate doar numere.\n                                            </mat-error>\n                                        </mat-form-field>\n\n                                    </div>\n\n                                </div>\n\n\n                                <mat-checkbox formControlName=\"advanceFullPayment\" (change)=\"bookingPolicyEdit($event.checked, 'advanceFullPayment')\">Plata completa in avans</mat-checkbox>\n                                <mat-checkbox formControlName=\"advancePartialPayment\" (change)=\"bookingPolicyEdit($event.checked, 'advancePartialPayment')\">Plata partiala in avans</mat-checkbox>\n                                <mat-form-field appearance=\"standard\" class=\"w-100\" *ngIf=\"serviceForm.get('bookingPolicies').get('advancePartialPayment').value\">\n                                    <mat-label>Avans (%)</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"advancePartialPaymentPercentage\">\n                                    <mat-error *ngIf=\"serviceForm.get('bookingPolicies').get('advancePartialPaymentPercentage').hasError('pattern')\">\n                                        Sunt acceptate doar numere cuprinse între 1 și 100.\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-2\">\n                    <h3 class=\"section-name\">Pret</h3>\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>EUR</mat-label>\n                        <input matInput placeholder=\"Pret\" type=\"number\" [min]=\"0\" formControlName=\"price\">\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-10\">\n                    <h3 class=\"section-name\">Preview</h3>\n\n                    <app-service-timeslot-preview [serviceData]=\"serviceForm.value\"></app-service-timeslot-preview>\n                </div>\n\n            </div>\n\n        </form>\n\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill\" (click)=\"confirm()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 7365:
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/delete-modal-service/delete-modal-service.component.html?ngResource ***!
  \*************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Stergere Card</h2>\n        <p>Acțiunea de stergere card este permanentă și complet irevocabilă.</p>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n\n        <div class=\"row\">\n\n            <!--Name-->\n            <div class=\"col-12 col-md-6\">\n                <h5 class=\"section-title\">Numele: <span>{{currentService.name}}</span></h5>\n            </div>\n\n            <!--Regular Price-->\n            <div class=\"col-md-6 col-12\">\n                <h5 class=\"section-title\">Pret: <span>{{currentService.price}} EUR</span></h5>\n            </div>\n\n            <!--Description-->\n            <div class=\"col-12\">\n                <h5 class=\"section-title\">Descriere: <span>{{currentService.description}}</span></h5>\n            </div>\n\n\n\n        </div>\n\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline w-100\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill w-100\" (click)=\"deleteService()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n";

/***/ }),

/***/ 50493:
/*!**********************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/service-booking-time-slots/service-booking-time-slots.component.html?ngResource ***!
  \**********************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button  *ngIf=\"resourceId\"\n             (click)=\"saveResource()\"\n             [disabled]=\"isSubmitLoading\"\n             class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"booking-timeslots\">\n\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Property Setup</h2>\n    </div>\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <!--        <p>Pentru acest tip de resursă nu avem Setup.</p>-->\n        <div class=\"row\">\n            <!--Title Section-->\n            <div class=\"col-12 mb-3\">\n                <h2 class=\"section-title\">Servicii</h2>\n            </div>\n\n            <div class=\"col-12\">\n\n                <!--List Title-->\n                <div class=\"list-title\">\n                    <h5 class=\"title\">Listare servicii</h5>\n                </div>\n\n                <!--List Content-->\n                <div class=\"list-content\">\n\n                    <div class=\"ticket-list\" *ngFor=\"let service of serviceList; let i= index;\">\n                        <div class=\"ticket d-flex justify-content-center\">\n                            <app-service-timeslot-preview class=\"w-100\" [serviceData]=\"service\" [list]=\"true\"></app-service-timeslot-preview>\n                            <div class=\"actions d-flex flex-column align-items-start\">\n                                <button class=\"btn-delete\" type=\"button\" (click)=\"openDeleteModal(service, i)\"><i class=\"fas fa-times\"></i></button>\n                                <button class=\"btn-edit\" type=\"button\" (click)=\"openEditModal(service)\"><i class=\"fas fa-pen\"></i></button>\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                    <!--Add Button-->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n\n                            <button class=\"add-btn\"  (click)=\"openAddModal()\">\n                                Adăugare\n                                <i class=\"fas fa-plus\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <!--Stepper Controller-->\n    <div class=\"stepper-step-controller\">\n        <!--Prev Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Înapoi\n            </button>\n        </div>\n        <!--Next Step-->\n        <div class=\"next-step\">\n            <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                Urmatorul\n                <i class=\"fas fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n\n\n</div>\n";

/***/ }),

/***/ 50308:
/*!***************************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/add-edit-ticket/add-edit-ticket.component.html?ngResource ***!
  \***************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Adăugare bilet</h2>\n        <button type=\"button\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n        </button>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n        <form [formGroup]=\"ticketForm\">\n            <div class=\"row mb-5\">\n\n                <div class=\"col-12\">\n                    <h3 class=\"section-name\">Tip bilet</h3>\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>Denumire</mat-label>\n                        <input matInput placeholder=\"Denumire\" formControlName=\"name\">\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>Descriere</mat-label>\n                        <input matInput placeholder=\"Descriere\" formControlName=\"description\">\n                    </mat-form-field>\n\n                    <h3 class=\"section-name\">Informatii bilet</h3>\n\n                    <div class=\"tickets-limit row\">\n                        <div class=\"col-12 col-md-6\">\n                            <div class=\"limit-check d-flex align-items-center\">\n                                <mat-checkbox formControlName=\"limit\" color=\"primary\" (change)=\"limitChecking($event)\">Nr. tickete disponibile</mat-checkbox>\n                            </div>\n                        </div>\n\n                        <div class=\"col-12 col-md-6\" *ngIf=\"displayLimit\">\n                            <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                                <mat-label>Nr. tickete disponibile</mat-label>\n                                <input matInput type=\"text\" placeholder=\"Nr. tickete disponibile\" formControlName=\"ticketsLimit\" >\n                            </mat-form-field>\n                        </div>\n\n                        <mat-checkbox [ngClass]=\"displaySeats ? 'mb-0' : 'mb-4'\" formControlName=\"hasSeat\" color=\"primary\" (change)=\"seatChecking($event)\">Exista locuri pe scaun</mat-checkbox>\n\n\n                    </div>\n\n                    <!--Seats-->\n                    <div class=\"row my-4\" formArrayName=\"ticketsForBooking\" *ngIf=\"displaySeats\">\n                        <div class=\"d-flex flex-row align-items-center mb-4\">\n\n                            <!--Section SubTitle-->\n                            <h5 class=\"section-subtitle mb-0 me-4\">Locuri pe scaun</h5>\n\n                            <!--Action Buttons & Room Added-->\n                            <div class=\"add-remove-tickets d-flex align-items-center justify-content-between\">\n                                <!--Remove Room-->\n                                <button class=\"add-remove-btn\" type=\"button\" (click)=\"removeTicket()\">\n                                    <i class=\"fas fa-minus\"></i>\n                                </button>\n                                <!--Number of Rooms Added-->\n                                <span>{{ticketForm.get('ticketsForBooking').value.length}}</span>\n                                <!--Add Room-->\n                                <button class=\"add-remove-btn\" type=\"button\" (click)=\"addTicket()\">\n                                    <i class=\"fas fa-plus\"></i>\n                                </button>\n                            </div>\n\n                        </div>\n\n                        <div class=\"row mb-4\"\n                             *ngFor=\"let ticket of ticketForm.get('ticketsForBooking').controls; let i = index\"\n                             [formGroupName]=\"i\">\n\n                            <div class=\"col-12 col-md-6\">\n                                <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                                    <mat-label>Numar loc</mat-label>\n                                    <input matInput placeholder=\"Numar loc\" formControlName=\"seatNumber\">\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-12 col-md-6\">\n                                <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                                    <mat-label>Numar tichet</mat-label>\n                                    <input matInput placeholder=\"Numar tichet\" formControlName=\"ticketNumber\">\n                                </mat-form-field>\n                            </div>\n\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-4\">\n                        <div class=\"col-md-6 col-12\">\n                            <!--Category Name-->\n                            <h3 class=\"section-name\">Politici de rezervare</h3>\n                            <mat-error *ngIf=\"ticketForm.get('bookingPolicies').hasError('requireCheckboxesToBeChecked') && ticketForm.get('bookingPolicies').touched\">\n                                You have to check one\n                            </mat-error>\n\n                            <!--Checkboxes-->\n                            <div class=\"d-flex flex-column\" formGroupName=\"bookingPolicies\">\n                                <mat-checkbox formControlName=\"depositRequired\" (change)=\"bookingPolicyEdit($event.checked, 'depositRequired')\">Se cere depozit</mat-checkbox>\n                                <div class=\"row\" *ngIf=\"ticketForm.get('bookingPolicies').get('depositRequired').value\">\n                                    <div class=\"col-12 col-lg-6\">\n                                        <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                            <mat-label>Depozit (%)</mat-label>\n                                            <input matInput type=\"text\" formControlName=\"depositRequiredPercentage\" (ngModelChange)=\"checkDepositType('percentage')\">\n                                            <mat-error *ngIf=\"ticketForm.get('bookingPolicies').get('depositRequiredPercentage').hasError('pattern')\">\n                                                Sunt acceptate doar numere cuprinse între 1 și 100.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n\n                                    <div class=\"col-12 col-lg-6\">\n                                        <mat-form-field appearance=\"standard\" class=\"w-100\">\n                                            <mat-label>Depozit (EUR)</mat-label>\n                                            <input matInput type=\"text\" formControlName=\"depositRequiredAmount\" (ngModelChange)=\"checkDepositType('amount')\">\n                                            <mat-error *ngIf=\"ticketForm.get('bookingPolicies').get('depositRequiredAmount').hasError('pattern')\">\n                                                Sunt acceptate doar numere mai mari ca 0.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n\n                                </div>\n\n                                <mat-checkbox formControlName=\"advanceFullPayment\" (change)=\"bookingPolicyEdit($event.checked, 'advanceFullPayment')\">Plata completa in avans</mat-checkbox>\n                                <mat-checkbox formControlName=\"advancePartialPayment\" (change)=\"bookingPolicyEdit($event.checked, 'advancePartialPayment')\">Plata partiala in avans</mat-checkbox>\n                                <mat-form-field appearance=\"standard\" class=\"w-100\" *ngIf=\"ticketForm.get('bookingPolicies').get('advancePartialPayment').value\">\n                                    <mat-label>Avans (%)</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"advancePartialPaymentPercentage\">\n                                    <mat-error *ngIf=\"ticketForm.get('bookingPolicies').get('advancePartialPaymentPercentage').hasError('pattern')\">\n                                        Sunt acceptate doar numere cuprinse între 1 și 100.\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class=\"col-2\">\n                    <h3 class=\"section-name\">Pret obisnuit</h3>\n\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>EUR/persoana</mat-label>\n                        <input matInput placeholder=\"Pret obisnuit\" type=\"text\" formControlName=\"regularPrice\">\n                        <mat-error *ngIf=\"ticketForm.get('regularPrice').hasError('required')\">Acest camp trebuie completat!</mat-error>\n                        <mat-error *ngIf=\"!ticketForm.get('regularPrice').hasError('required') && ticketForm.get('regularPrice').invalid\">Acest camp trebuie sa contina un numar!</mat-error>\n                    </mat-form-field>\n\n                    <h3 class=\"section-name\">Pret pentru weekend</h3>\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>EUR/persoana</mat-label>\n                        <input matInput placeholder=\"Pret pentru weekend\" type=\"text\" formControlName=\"weekendPrice\">\n                        <mat-error *ngIf=\"ticketForm.get('weekendPrice').hasError('required')\">Acest camp trebuie completat!</mat-error>\n                        <mat-error *ngIf=\"!ticketForm.get('weekendPrice').hasError('required') && ticketForm.get('weekendPrice').invalid\">Acest camp trebuie sa contina un numar!</mat-error>\n\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-10\">\n                    <h3 class=\"section-name\">Preview</h3>\n\n                    <app-ticket-card [ticketData]=\"ticketForm.value\"></app-ticket-card>\n                </div>\n\n            </div>\n        </form>\n\n\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill\" (click)=\"confirm()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 31537:
/*!***********************************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/delete-ticket/delete-ticket.component.html?ngResource ***!
  \***********************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dialog-container\">\n\n    <!--Header-->\n    <div class=\"dialog-header\">\n        <h2>Stergere Card</h2>\n        <p>Acțiunea de stergere card este permanentă și complet irevocabilă.</p>\n    </div>\n\n    <!--Body-->\n    <mat-dialog-content class=\"dialog-content\">\n\n\n        <div class=\"row\">\n\n            <!--Name-->\n            <div class=\"col-12\">\n                <h5 class=\"section-title\">Numele: <span>{{currentTicket.name}}</span></h5>\n            </div>\n\n            <!--Regular Price-->\n            <div class=\"col-md-6 col-12\">\n                <h5 class=\"section-title\">Regular price: <span>{{currentTicket.regularPrice}} EUR/Noapte</span></h5>\n            </div>\n\n            <!--Weekend Price-->\n            <div class=\"col-md-6 col-12\">\n                <h5 class=\"section-title\">Weekend price: <span>{{currentTicket.weekendPrice}} EUR/Noapte</span></h5>\n            </div>\n\n            <!--Tickets limit-->\n            <div class=\"col-md-6 col-12\" *ngIf=\"currentTicket.limit\">\n                <h5 class=\"section-title\">Nr. tickete disponibile: <span>{{currentTicket.ticketsLimit}}</span></h5>\n            </div>\n\n            <!--Seats-->\n            <div class=\"col-md-6 col-12\" *ngIf=\"currentTicket.hasSeat\">\n                <h5 class=\"section-title\">Locuri adulti: <span>{{currentTicket.ticketsForBooking?.length}}</span></h5>\n            </div>\n\n        </div>\n\n\n    </mat-dialog-content>\n\n    <!--Footer-->\n    <mat-dialog-actions class=\"dialog-footer\">\n        <!--Cancel Button-->\n        <button class=\"btn-long btn-color-outline w-100\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n            Anulează\n        </button>\n\n        <!--Confirm Button-->\n        <button class=\"btn-long btn-color-fill w-100\" (click)=\"deleteTicket()\">\n            Confirmă\n            <i class=\"fas fa-check\"></i>\n        </button>\n    </mat-dialog-actions>\n\n</div>\n\n";

/***/ }),

/***/ 43285:
/*!**********************************************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-content/configurate-edit/setup/ticket-booking/ticket-booking.component.html?ngResource ***!
  \**********************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"save-btn d-flex justify-content-end align-items-center mb-3\" *ngIf=\"resourceId\">\n    <button  *ngIf=\"resourceId\"\n             (click)=\"saveResource()\"\n             [disabled]=\"isSubmitLoading\"\n             class=\"btn-long btn-color-fill\" type=\"button\">\n        <ng-container *ngIf=\"isSubmitLoading===false\">\n            <i class=\"fas fa-save\"></i>\n            Salvează\n        </ng-container>\n        <ng-container *ngIf=\"isSubmitLoading === true\">\n                      <span [style.display]=\"'block'\" class=\"indicator-progress\">\n                        Salvare...{{ \" \" }}\n                          <span\n                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                          ></span>\n                      </span>\n        </ng-container>\n    </button>\n</div>\n\n<div id=\"ticket-booking\">\n    <div class=\"tab-section-title\">\n        <i class=\"fas fa-info-circle\"></i>\n        <h2>Setup</h2>\n    </div>\n\n\n    <!--Content-->\n    <div class=\"section-content\">\n        <div class=\"row content-tickets\">\n            <!--Title Section-->\n            <div class=\"col-12 mb-3\">\n                <h2 class=\"section-title\">Tipuri de bilete</h2>\n            </div>\n\n            <div class=\"col-12\">\n\n                <!--List Title-->\n                <div class=\"list-title\">\n                    <h5 class=\"title\">Listare bilete</h5>\n                </div>\n\n                <!--List Content-->\n                <div class=\"list-content\">\n\n                    <div class=\"ticket-list\" *ngFor=\"let ticket of ticketList; let i= index;\">\n                        <div class=\"ticket d-flex justify-content-center\">\n<!--                            <app-ticket-card class=\"w-100\" [name]=\"ticket.name\" [description]=\"ticket.description\" [regularPrice]=\"ticket.regularPrice\" [weekendPrice]=\"ticket.weekendPrice\"></app-ticket-card>-->\n                           <app-ticket-card class=\"w-100\" [ticketData]=\"ticket\" [list]=\"true\"></app-ticket-card>\n                            <div class=\"actions d-flex flex-column align-items-start\">\n                                <button class=\"btn-delete\" type=\"button\" (click)=\"openDeleteModal(ticket, i)\"><i class=\"fas fa-times\"></i></button>\n                                <button class=\"btn-edit\" type=\"button\" (click)=\"openEditModal(ticket)\"><i class=\"fas fa-pen\"></i></button>\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                    <div class=\"ticket-list\" *ngFor=\"let ticket of updateList; let i= index;\">\n                        <div class=\"ticket d-flex justify-content-center\">\n                            <!--                            <app-ticket-card class=\"w-100\" [name]=\"ticket.name\" [description]=\"ticket.description\" [regularPrice]=\"ticket.regularPrice\" [weekendPrice]=\"ticket.weekendPrice\"></app-ticket-card>-->\n                            <app-ticket-card class=\"w-100\" [ticketData]=\"ticket\" [list]=\"true\"></app-ticket-card>\n                            <div class=\"actions d-flex flex-column align-items-start\">\n                                <button class=\"btn-delete\" type=\"button\" (click)=\"openDeleteModal(ticket, i)\"><i class=\"fas fa-times\"></i></button>\n                                <button class=\"btn-edit\" type=\"button\" (click)=\"openEditModal(ticket)\"><i class=\"fas fa-pen\"></i></button>\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                    <div class=\"ticket-list\" *ngFor=\"let ticket of createList; let i= index;\">\n                        <div class=\"ticket d-flex justify-content-center\">\n                            <app-ticket-card class=\"w-100\" [ticketData]=\"ticket\" [list]=\"true\"></app-ticket-card>\n                            <div class=\"actions d-flex flex-column align-items-start\">\n                                <button class=\"btn-delete\" type=\"button\" (click)=\"openDeleteModal(ticket, i)\"><i class=\"fas fa-times\"></i></button>\n                                <button class=\"btn-edit\" type=\"button\" (click)=\"openEditModal(ticket)\"><i class=\"fas fa-pen\"></i></button>\n                            </div>\n                        </div>\n\n\n                    </div>\n\n\n                    <!--Add Button-->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <button class=\"add-btn\" (click)=\"openAddModal()\">\n                                Adăugare\n                                <i class=\"fas fa-plus\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!--Stepper Controller-->\n        <div class=\"stepper-step-controller\">\n            <!--Prev Step-->\n            <div class=\"next-step\">\n                <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"prevStep()\">\n                    <i class=\"fas fa-arrow-left\"></i>\n                    Înapoi\n                </button>\n            </div>\n            <!--Next Step-->\n            <div class=\"next-step\">\n                <button class=\"btn-long btn-color-fill\" type=\"button\" (click)=\"nextStep()\">\n                    Urmatorul\n                    <i class=\"fas fa-arrow-right\"></i>\n                </button>\n            </div>\n        </div>\n\n    </div>\n</div>";

/***/ }),

/***/ 83544:
/*!***************************************************************************************************************!*\
  !*** ./src/app/features/resources/components/stepper-title-list/stepper-title-list.component.html?ngResource ***!
  \***************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"steps-container\">\n    <div class=\"step-content\" *ngFor=\"let step of stepTitleList\" [ngClass]=\"selectedStep === step.id ? 'selected': ''\">\n        <span class=\"step-name\">{{step.stepName}}</span>\n        <span class=\"step-completion\"></span>\n    </div>\n</div>\n\n<!--Add Resource-->\n<nav *ngIf=\"stage === 'Configure/Edit'\" aria-label=\"breadcrumb\">\n<!--    <ol class=\"breadcrumb\">-->\n<!--        <li class=\"breadcrumb-item\" ><a (click)=\"goToStep(0)\">{{domain}}</a></li>-->\n<!--        <li class=\"breadcrumb-item\" ><a (click)=\"goToStep(1)\">{{category}}</a></li>-->\n<!--        <li class=\"breadcrumb-item\" ><a (click)=\"goToStep(2)\">{{resourceType}}</a></li>-->\n<!--    </ol>-->\n    <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\" ><a >{{domain}}</a></li>\n        <li class=\"breadcrumb-item\" ><a >{{category}}</a></li>\n        <li class=\"breadcrumb-item\" ><a >{{resourceType}}</a></li>\n    </ol>\n</nav>\n\n";

/***/ }),

/***/ 49596:
/*!**********************************************************************************************!*\
  !*** ./src/app/features/resources/pages/add-resource/add-resource.component.html?ngResource ***!
  \**********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<!-- <div *ngIf=\"isProviderAccepted===false\">\n    <p>Nu aveti permisiiunea să adăugți resurse. Luați legătura cu providerul</p>\n</div> -->\n<!-- <div *ngIf=\"isProviderAccepted===true\"> -->\n<!--Steps-->\n<app-stepper-title-list *ngIf=\"(stepperStage === 'Configure/Edit' && dataLoaded) || stepperStage=== 'Add'\"/>\n\n\n<div [ngSwitch]=\"stepperStage\">\n\n    <!--Add Resource-->\n    <app-add-new-template *ngSwitchCase=\"'Add'\"/>\n\n\n    <!--Add/Edit Details-->\n    <div class=\"configure-edit-layout\" *ngSwitchCase=\"'Configure/Edit'\">\n\n        <!--Page Title-->\n        <div class=\"page-title\">\n            <h1 *ngIf=\"!providerData\">\n                {{!resourceId ? 'Adaugă resursă' : 'Editează resursa - ' + resourceName}}\n            </h1>\n            <h1 *ngIf=\"providerData\">{{'Adaugă resursă pentru ' + providerData?.companyName + ' (' + providerData?.cui + ')'}}</h1>\n\n\n            <button *ngIf=\"!resourceId\" class=\"btn-long btn-color-outline\" (click)=\"exitResource()\">\n                <i class=\"fas fa-arrow-left\"></i>\n                Anulare\n            </button>\n            <button *ngIf=\"resourceId\" class=\"btn-long btn-hidden\" [disabled]=\"true\">\n            </button>\n\n\n            <!--            <button  *ngIf=\"resourceId\"-->\n            <!--                    (click)=\"saveResource()\"-->\n            <!--                    [disabled]=\"isSubmitLoading\"-->\n            <!--                    class=\"btn-long btn-color-fill\" type=\"button\">-->\n            <!--                <ng-container *ngIf=\"isSubmitLoading===false\">-->\n            <!--                    <i class=\"fas fa-save\"></i>-->\n            <!--                    Salvează-->\n            <!--                </ng-container>-->\n            <!--                <ng-container *ngIf=\"isSubmitLoading === true\">-->\n            <!--                      <span [style.display]=\"'block'\" class=\"indicator-progress\">-->\n            <!--                        Salvare...{{ \" \" }}-->\n            <!--                          <span-->\n            <!--                                  class=\"spinner-border spinner-border-sm align-middle ms-2\"-->\n            <!--                          ></span>-->\n            <!--                      </span>-->\n            <!--                </ng-container>-->\n            <!--            </button>-->\n\n            <!--            <button *ngIf=\"resourceId\" class=\"btn-long btn-color-fill\" (click)=\"seeWhere()\">BUTON PT STEP</button>-->\n\n        </div>\n\n        <div [ngSwitch]=\"step\" *ngIf=\"dataLoaded\">\n\n            <!--Generals Information -- STEP -->\n            <div *ngSwitchCase=\"0\">\n                <app-general-informations/>\n            </div>\n\n            <!--Facility -- STEP -->\n            <div *ngSwitchCase=\"1\">\n                <app-facilities/>\n            </div>\n\n            <!--Setup -- STEP -->\n            <div *ngSwitchCase=\"2\">\n                <div [ngSwitch]=\"resourceType\">\n                    <div *ngSwitchCase=\"'rentalBooking'\">\n                        <app-rental-booking/>\n                    </div>\n                    <div *ngSwitchCase=\"'noBooking'\">\n                        <app-no-booking/>\n                    </div>\n                    <div *ngSwitchCase=\"'ticketBooking'\">\n                        <app-ticket-booking/>\n                    </div>\n                    <div *ngSwitchCase=\"'serviceBookingTimeSlots'\">\n                        <app-service-booking-time-slots/>\n                    </div>\n                    <div *ngSwitchCase=\"'productsList'\">\n                        <app-products-list/>\n                    </div>\n                    <div *ngSwitchCase=\"'carBooking'\">\n                        <app-car-booking/>\n                    </div>\n                    <div *ngSwitchCase=\"'culturalBooking'\">\n                        <app-cultural-booking/>\n                    </div>\n                    <div *ngSwitchCase=\"'menu'\">\n                        <app-menu/>\n                    </div>\n                    <div *ngSwitchCase=\"'externalUrl'\">\n                        <app-external-url/>\n                    </div>\n                    <div *ngSwitchCase=\"'applyToJob'\">\n                        <app-apply-job/>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngSwitchCase=\"3\">\n                <app-cultural-related-res/>\n            </div>\n\n            <!--Policy -- STEP -->\n            <div *ngSwitchCase=\"4\">\n                <div [ngSwitch]=\"resourceType\">\n                    <!--                    <app-policy/>-->\n                    <div *ngSwitchCase=\"'rentalBooking'\">\n                        <app-policy-rental-booking/>\n                    </div>\n                    <div *ngSwitchCase=\"'noBooking'\">\n                        <app-no-policy/>\n                    </div>\n                    <div *ngSwitchCase=\"'ticketBooking'\">\n                        <app-no-policy/>\n                    </div>\n                    <div *ngSwitchCase=\"'serviceBookingTimeSlots'\">\n                        <app-no-policy/>\n                    </div>\n                    <div *ngSwitchCase=\"'productsList'\">\n                        <app-no-policy/>\n                    </div>\n                    <div *ngSwitchCase=\"'carBooking'\">\n                        <app-no-policy/>\n                    </div>\n                    <div *ngSwitchCase=\"'culturalBooking'\">\n                        <app-policy-cultural-booking/>\n                    </div>\n                    <div *ngSwitchCase=\"'menu'\">\n                        <app-restaurant-policy/>\n                    </div>\n                    <div *ngSwitchCase=\"'externalUrl'\">\n                        <app-no-policy/>\n                    </div>\n                    <div *ngSwitchCase=\"'applyToJob'\">\n                        <app-apply-job/>\n                    </div>\n                </div>\n            </div>\n\n\n            <!--Gallery -- STEP -->\n            <div *ngSwitchCase=\"5\">\n                <app-gallery/>\n            </div>\n\n            <!--Payment -- STEP -->\n            <div *ngSwitchCase=\"6\">\n                <app-payment/>\n            </div>\n        </div>\n\n    </div>\n</div>\n<!-- </div> -->\n\n\n";

/***/ }),

/***/ 88011:
/*!**************************************************************************************************!*\
  !*** ./src/app/features/resources/pages/resources-list/resources-list.component.html?ngResource ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"row\">\n    <app-dashboard-header *ngIf=\"isProviderAccepted === false || isAdmin || isStaff\"\n                          pageTitleOne=\"{{ 'RESOURCE.LIST' | translate}}\"\n                          [buttonBackRoute]=\"backPath\">\n    </app-dashboard-header>\n\n    <app-dashboard-header\n            *ngIf=\"isProviderAccepted === true && isProvider\"\n            pageTitleOne=\"{{ 'RESOURCE.LIST' | translate}}\"\n            [buttonBackRoute]=\"backPath\"\n            [buttonAddRoute]=\"'../../resources/add'\">\n    </app-dashboard-header>\n</div>\n<div class=\"container\" *ngIf=\"isLoaded\">\n\n\n    <!--content-->\n    <div class=\"row filterRow\" (keyup.enter)=\"callSubmitButton($event)\">\n        <div class=\"col-12 col-lg-7\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>{{'FIELD.TITLE' | translate}}</mat-label>\n                        <input matInput [(ngModel)]=filterTitle placeholder=\"Ex. expozitie\" #inputTitle (keydown.enter)=\"getResourcesList()\">\n                        <mat-icon matSuffix (click)=\"clearfilterTitle()\">highlight_off</mat-icon>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-4\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>{{'FIELD.COUNTRY' | translate}}</mat-label>\n                        <mat-select [(ngModel)]=\"filterCountry\" #inputCountry (selectionChange)=\"getCities($event)\">\n                            <mat-option *ngFor=\"let country of countries\" [value]=\"country\">{{country}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-4\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>{{'FIELD.CITY' | translate}}</mat-label>\n                        <mat-select [(ngModel)]=\"filterCity\" #inputCity>\n                            <mat-option *ngFor=\"let city of cities\" [value]=\"city.name\">{{city.name}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"col-12 col-lg-5 d-flex align-items-center justify-content-end gap-2\">\n            <button type=\"button\" class=\"btn-round btn-color-outline\" id=\"clearFilterBtn\" (click)=\"clearFields()\" matTooltip=\"{{'RESOURCE.RESET-FILTERS' | translate}}\"><i\n                    class=\"fas fa-sync\"></i></button>\n            <button type=\"button\" class=\"btn-long btn-color-outline\" id=\"advancedFilterBtn\" (click)=\"advancedClick()\"><i\n                    [ngClass]=\"isAdvanced ? 'fas fa-arrow-up' : 'fas fa-arrow-down'\"></i>{{'BTN.ADVANCED-FILTER' | translate}}\n            </button>\n            <button type=\"button\" id=\"id-resources-filter\" class=\"btn-long btn-color-fill\" (click)=\"applyFilter()\">{{'BTN.FILTER' | translate}}\n                <i class=\"fas fa-filter\"></i></button>\n        </div>\n\n        <!--Advanced fliter-->\n        <div [ngClass]=\"{'d-none': !isAdvanced}\">\n            <div class=\"advanced-filter-first row\">\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Domeniu</mat-label>\n                        <mat-select disableOptionCentering  panelClass=\"drop-down-panel\" [(ngModel)]=filterDomain\n                                    (ngModelChange)=\"getCategories($event)\">\n                            <!-- <mat-option value=\"63bfcca765dc3f3863af755c\">Travel & Entertainment</mat-option>\n                            <mat-option value=\"63bfda2765dc3f3863af755f\">Healthcare</mat-option>\n                            <mat-option value=\"63bfda7e65dc3f3863af7560\">Culture&Art</mat-option>\n                            <mat-option value=\"63bfda9365dc3f3863af7561\">Education</mat-option> -->\n                            <!-- <mat-option value=\"63bfdaaa65dc3f3863af7562\">Jobs&Market</mat-option> -->\n                            <mat-option [value]=\"travelDomainId\">Travel & Entertainment</mat-option>\n                            <mat-option [value]=\"healthDomainId\">Healthcare</mat-option>\n                            <mat-option [value]=\"cultureDomainId\">Culture&Art</mat-option>\n                            <mat-option [value]=\"educationDomainId\">Education</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Categorii</mat-label>\n                        <mat-select [(ngModel)]=filterCategory>\n                            <mat-option *ngFor=\"let categories of categoriesList\" [value]=\"categories.id\">\n                                {{categories.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Shared Experiences</mat-label>\n                        <mat-select [(ngModel)]=filterSharedExperiences>\n                            <mat-option [value]=\"true\">Yes</mat-option>\n                            <mat-option [value]=\"false\">No</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Status</mat-label>\n                        <mat-select [(ngModel)]=filterStatus>\n                            <mat-option [value]=\"'pending_review'\">În așteptare</mat-option>\n                            <mat-option [value]=\"'active'\">Active</mat-option>\n                            <mat-option [value]=\"'inactive'\">Inactive</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n    <div class=\"row tableContent\">\n        <!--Table start-->\n        <table mat-table matSort appMatTableResponsive [dataSource]=\"dataSource\" (matSortChange)=\"applyFilter($event)\"\n               class=\"w-100\">\n\n            <!-- Resource Name Column -->\n            <ng-container matColumnDef=\"title\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'RESOURCES.NAME' | translate}} </th>\n                <td attr.attr.data-column-name=\"{{'RESOURCES.NAME' | translate}}\" mat-cell *matCellDef=\"let row\"\n                    [routerLink]=\"'../../reservations/list'\"\n                    [queryParams]=\"{resourceid: row.id}\">\n                    <!-- <a [routerLink]=\"'../../reservations/list'\"\n                    [queryParams]=\"{resourceId: row.id}\"> -->\n                    <i class=\"fas fa-users\" [ngClass]=\"{\n                        'shared' : row.sharedExperience === true,\n                        'not-shared' : row.sharedExperience === false\n                    }\"></i>{{row.title}}\n                    <!-- </a> -->\n                </td>\n\n            </ng-container>\n\n            <!-- Address column -->\n            <ng-container matColumnDef=\"address\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'RESOURCES.LOCATION' | translate}} </th>\n                <td attr.data-column-name=\"{{'RESOURCES.LOCATION' | translate}}\" mat-cell\n                    *matCellDef=\"let row\"> {{row.address}} {{row.city}} </td>\n            </ng-container>\n\n            <!--Category column-->\n            <ng-container matColumnDef=\"category\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'RESOURCES.CATEGORY' | translate}} </th>\n                <td attr.data-column-name=\"{{'RESOURCES.CATEGORY' | translate}}\" mat-cell\n                    *matCellDef=\"let row\">{{row.resourceCategoryName}}</td>\n            </ng-container>\n\n            <!--Purchase column-->\n            <ng-container matColumnDef=\"purchase\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'RESOURCES.PURCHASE' | translate}} </th>\n                <td attr.data-column-name=\"{{'RESOURCES.PURCHASE' | translate}}\" mat-cell *matCellDef=\"let row\"><span\n                        class=\"d-flex justify-content-end me-3\">{{row.totalBookingNumber}}</span></td>\n            </ng-container>\n\n            <!--Status column-->\n            <ng-container matColumnDef=\"status\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'RESOURCES.STATUS' | translate}} </th>\n                <td attr.data-column-name=\"{{'RESOURCES.STATUS' | translate}}\" mat-cell *matCellDef=\"let row\">\n                            <span class=\"custom-label\"\n                                  [ngClass]=\"{\n                            'label-pending' : row.status === 'pending_review',\n                            'label-active' : row.status === 'active',\n                            'label-inactive' : row.status === 'inactive',\n                            'label-archived' : row.status === 'archived'\n                        }\">\n                                <span [ngSwitch]=\"row.status\">\n                                   <span *ngSwitchCase=\"'pending_review'\">În așteptare</span>\n                                   <span *ngSwitchCase=\"'active'\">Activ</span>\n                                   <span *ngSwitchCase=\"'inactive'\">Inactiv</span>\n                                   <span *ngSwitchCase=\"'archived'\">Arhivat</span>\n                                </span>\n                            </span>\n                </td>\n            </ng-container>\n\n            <!--Views column-->\n            <ng-container matColumnDef=\"views\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Vizualizari </th>\n                <td attr.data-column-name=\"Vizualizari\" mat-cell *matCellDef=\"let row\"><span\n                        class=\"d-flex justify-content-end me-3\">{{row.views}}</span></td>\n            </ng-container>\n\n\n            <!-- Actions Column -->\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef class=\"actions-class\"> {{'RESOURCES.ACTIONS' | translate}}</th>\n                <td mat-cell *matCellDef=\"let row; let i = index;\">\n                    <div class=\"d-flex actions-container\">\n                        <!--Edit-->\n                        <button class=\"btn-round btn-no-outline\"\n                                (click)=\"editResource(row.id)\"\n                                matTooltip=\"Editeaza\">\n                            <i class=\"fas fa-pen\"></i>\n                        </button>\n\n                        <!--Reservation-->\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Rezervari\"\n                                [routerLink]=\"'../../reservations/list'\"\n                                [queryParams]=\"{resourceid: row.id}\">\n                            <i class=\"fas fa-list\"></i>\n                        </button>\n                        <!--Status-->\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Schimbă status\"\n                                (click)=\"openModal(changeStatusModal, row.status)\">\n                            <i class=\"fas fa-toggle-on\"></i>\n                        </button>\n                        <!--Archive-->\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Arhiveaza\"\n                                (click)=\"openModal(archiveResourceModal)\">\n                            <i class=\"fas fa-archive\"></i>\n                        </button>\n\n                        <!--                        Create shared experience-->\n                        <button class=\"btn-round btn-no-outline\" *ngIf=\"row.bookingType === 'serviceBookingTimeSlots' && row.sharedExperience\"\n                                matTooltip=\"Create Shared Experience\"\n                        (click)=\"openSharedExperienceCreateModal(row.id)\">\n                            <i class=\"fas fa-user-friends\"></i>\n                        </button>\n                        <!--                        Create shared experience-->\n                        <button class=\"btn-round btn-no-outline\" *ngIf=\"row.bookingType === 'serviceBookingTimeSlots' && row.sharedExperience\"\n                                (click)=\"openSharedExperienceListModal(row.id)\"\n                                matTooltip=\"Shared Experiences List\">\n                            <i class=\"fab fa-slideshare\"></i>\n                        </button>\n\n\n                        <!--Delete-->\n                        <button class=\"btn-round btn-no-outline\" *ngIf=\"(isProvider===false) || (isStaff===false)\"\n                                matTooltip=\"Sterge\"\n                                (click)=\"openModal(deleteResourceModal)\">\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </button>\n                    </div>\n\n\n\n                    <!--Modal Delete Resource-->\n                    <ng-template #deleteResourceModal let-c=\"close\" let-d=\"dismiss\">\n                        <div class=\"modal-card card\">\n                            <div class=\"card-header border-0\">\n                                <h3 class=\"m-0\">\n                                    Ștergere resursă\n                                </h3>\n                            </div>\n\n                            <div class=\"card-body\">\n                                <p>{{ 'TEMPLATES.DELETE-WARNING' | translate}}</p>\n\n                                <div class=\"card-event card\">\n                                    <div class=\"card-body d-flex justify-content-center align-items-start flex-column\">\n                                        <h3>#{{ (i + 1) + pageSize * (pageNumber) }} {{row.title}}</h3>\n                                        <!--                                        <p class=\"m-0\">{{userData?.firstName+' '+userData?.lastName}}</p>-->\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"card-footer border-0\">\n                                <div class=\"row\">\n                                    <div class=\"col-12 col-sm-6\">\n                                        <button class=\"btn-auto btn-color-outline w-100\"\n                                                id=\"btnModalEventDismissDelete-{{i}}\"\n                                                (click)=\"closeModal()\">\n                                            <i class=\"fas fa-times\"></i>\n                                            {{ 'BTN.CANCEL' | translate}}\n                                        </button>\n                                    </div>\n\n                                    <div class=\"col-12 col-sm-6\">\n                                        <button class=\"btn-auto btn-color-fill w-100\"\n                                                id=\"btnModalTemplateConfirmDelete-{{i}}\"\n                                                (click)=\"deleteResource(row.id)\">\n                                            <i class=\"fas fa-check\"></i>\n                                            {{ 'BTN.CONFIRM' | translate}}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-template>\n\n                    <!--                    Modal Archive Resource-->\n                    <ng-template #archiveResourceModal let-c=\"close\" let-d=\"dismiss\">\n                        <div class=\"modal-card card\">\n                            <div class=\"card-header border-0\">\n                                <h3 class=\"m-0\">\n                                    Arhivare resursă\n                                </h3>\n                            </div>\n\n                            <div class=\"card-body\">\n                                <p>Acțiunea de ascundere resursă nu este permanentă și complet irevocabilă.</p>\n\n                                <div class=\"card-event card\">\n                                    <div class=\"card-body d-flex justify-content-between align-items-center flex-row\">\n                                        <h3 class=\"mb-0\">#{{ (i + 1) + pageSize * (pageNumber) }} {{row.title}}</h3>\n                                        <!--                                        <p class=\"m-0\">{{userData?.firstName+' '+userData?.lastName}}</p>-->\n                                        <span class=\"custom-label\"\n                                              [ngClass]=\"{\n                            'label-pending' : row.status === 'pending_review',\n                            'label-active' : row.status === 'active',\n                            'label-inactive' : row.status === 'inactive',\n                            'label-archived' : row.status === 'archived'\n                        }\"><span [ngSwitch]=\"row.status\">\n                                   <span *ngSwitchCase=\"'pending_review'\">În așteptare</span>\n                                   <span *ngSwitchCase=\"'active'\">Activ</span>\n                                   <span *ngSwitchCase=\"'inactive'\">Inactiv</span>\n                                   <span *ngSwitchCase=\"'archived'\">Arhivat</span>\n                                </span></span>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"card-footer border-0\">\n                                <div class=\"row\">\n                                    <div class=\"col-12 col-sm-6\">\n                                        <button class=\"btn-auto btn-color-outline w-100\"\n                                                id=\"btnModalEventDismissDelete-{{i}}\"\n                                                (click)=\"closeModal()\">\n                                            <i class=\"fas fa-times\"></i>\n                                            {{ 'BTN.CANCEL' | translate}}\n                                        </button>\n                                    </div>\n\n                                    <div class=\"col-12 col-sm-6\">\n                                        <button class=\"btn-auto btn-color-fill w-100\"\n                                                id=\"btnModalTemplateConfirmDelete-{{i}}\"\n                                                (click)=\"archiveResource(row.id)\">\n                                            <i class=\"fas fa-check\"></i>\n                                            {{ 'BTN.CONFIRM' | translate}}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-template>\n\n\n                    <!--Modal Change Status Resource-->\n                    <ng-template #changeStatusModal let-c=\"close\" let-d=\"dismiss\">\n                        <div class=\"modal-card card\">\n                            <div class=\"card-header border-0\">\n                                <h3 class=\"m-0\">\n                                    Schimbă statusul resursei\n                                </h3>\n                            </div>\n\n                            <div class=\"card-body\">\n                                <p>{{ 'TEMPLATES.DELETE-WARNING' | translate}}</p>\n\n                                <div class=\"card-event card\">\n                                    <div class=\"card-body d-flex justify-content-center align-items-start flex-column\">\n                                        <h3>#{{ (i + 1) + pageSize * (pageNumber) }} {{row.title}}</h3>\n                                        <!--                                        <p class=\"m-0\">{{userData?.firstName+' '+userData?.lastName}}</p>-->\n                                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                            <mat-label>Schimbă status</mat-label>\n                                            <mat-select [(ngModel)]=\"statusInput\">\n                                                <mat-option *ngIf=\"isAdmin || isStaff\" value=\"active\">Active\n                                                </mat-option>\n                                                <mat-option value=\"pending_review\">Pending review</mat-option>\n                                                <mat-option value=\"inactive\">Inactive</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"card-footer border-0\">\n                                <div class=\"row\">\n                                    <div class=\"col-12 col-sm-6\">\n                                        <button class=\"btn-auto btn-color-outline w-100\"\n                                                id=\"btnModalEventDismissDelete-{{i}}\"\n                                                (click)=\"closeModal()\">\n                                            <i class=\"fas fa-times\"></i>\n                                            {{ 'BTN.CANCEL' | translate}}\n                                        </button>\n                                    </div>\n\n                                    <div class=\"col-12 col-sm-6\">\n                                        <button class=\"btn-auto btn-color-fill w-100\"\n                                                id=\"btnModalTemplateConfirmDelete-{{i}}\"\n                                                (click)=\"changeStatus(row.id, statusInput )\">\n                                            <i class=\"fas fa-check\"></i>\n                                            {{ 'BTN.CONFIRM' | translate}}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-template>\n\n                </td>\n            </ng-container>\n\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedResourcesColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedResourcesColumns;\"></tr>\n\n            <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n\n                <td class=\"mat-cell\" colspan=\"4\">{{'PROVIDER.NO_DATA'|translate}}</td>\n            </tr>\n        </table>\n\n        <!--Pagination-->\n        <mat-paginator\n                [pageSizeOptions]=\"pageSizeArray\"\n                [length]=\"totalElements\"\n                [pageSize]=\"pageSize\"\n                (page)=\"pageChanged($event)\">\n        </mat-paginator>\n\n    </div>\n\n\n</div><!--container-fluid general-box-->\n";

/***/ }),

/***/ 24814:
/*!************************************************************************!*\
  !*** ./src/app/features/resources/resources.component.html?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n";

/***/ }),

/***/ 51496:
/*!*************************************************************************************************!*\
  !*** ./src/app/standalone-components/product-preview/product-preview.component.html?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"card product-card\" class=\"{{list ? 'card-list' : 'full-card'}}\">\n    <div class=\"card-header\">\n        <h4>{{productData?.name}}</h4>\n    </div>\n    <div class=\"card-body d-flex justify-content-between\">\n        <div class=\"product-image\">\n            <img [src]=\"filePath ? filePath : defaultPath\" alt=\"{{productData?.name}}\">\n        </div>\n        <div class=\"info w-100 d-flex flex-row justify-content-between p-3\">\n            <div class=\"left-side d-flex flex-column justify-content-start\">\n                <p class=\"mb-0\"><span><i class=\"fas fa-bookmark me-2\"></i>Denumire: </span> {{productData?.name}}</p>\n                <p class=\"mb-0\"><span>Descriere: </span> {{productData?.description}}</p>\n            </div>\n\n            <div class=\"price px-2 d-flex flex-column align-items-center justify-content-center\">\n                <p class=\"sum mb-0\">{{productData?.price}}</p>\n                <p class=\"details mb-0\">EUR</p>\n            </div>\n\n        </div>\n\n\n    </div>\n</div>";

/***/ }),

/***/ 31819:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/standalone-components/service-timeslot-preview/service-timeslot-preview.component.html?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"card product-card\" class=\"{{list ? 'card-list' : 'full-card'}}\">\n    <div class=\"card-header\">\n        <h4>{{serviceData?.name}}</h4>\n    </div>\n    <div class=\"card-body d-flex justify-content-between\">\n        <div class=\"info w-100 d-flex flex-row justify-content-between p-3\">\n            <div class=\"left-side d-flex flex-column justify-content-start\">\n                <p class=\"mb-0\"><span>Denumire: </span> {{serviceData?.name}}</p>\n                <p class=\"mb-0\"><span>Descriere: </span> {{serviceData?.description}}</p>\n            </div>\n\n            <div class=\"price px-2 d-flex flex-column align-items-center justify-content-center\">\n                <p class=\"sum mb-0\">{{serviceData?.price}}</p>\n                <p class=\"details mb-0\">EUR</p>\n            </div>\n\n        </div>\n\n\n    </div>\n</div>";

/***/ }),

/***/ 45231:
/*!*****************************************************************************************!*\
  !*** ./src/app/standalone-components/ticket-card/ticket-card.component.html?ngResource ***!
  \*****************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"card ticket-card\" class=\"{{list ? 'card-list' : 'full-card'}}\">\n    <div class=\"card-header\">\n        <h4>{{ticketData?.name}}</h4>\n    </div>\n    <div class=\"card-body d-flex justify-content-between\">\n        <div class=\"info\">\n            <p class=\"mb-0\"><span>Denumire: </span> {{ticketData?.name}}</p>\n            <p class=\"mb-0\"><span>Descriere: </span> {{ticketData?.description}}</p>\n            <p *ngIf=\"ticketData?.limit\" class=\"mb-0\"><span>Nr. tickete disponibile: </span> {{ticketData?.ticketsLimit}}</p>\n            <p *ngIf=\"ticketData?.hasSeat\" class=\"mb-0\"><span>Numar de bilete: </span> {{ticketData?.ticketsForBooking.length}}</p>\n        </div>\n        <div class=\"d-flex justify-content-between flex-row gap-2\">\n            <div class=\"price px-2 d-flex flex-column align-items-center justify-content-center mb-2\">\n                <p class=\"details mb-0\">Pret obisnuit</p>\n                <p class=\"sum mb-0\">{{ticketData?.regularPrice}}</p>\n                <p class=\"details mb-0\">EUR/Persoana</p>\n            </div>\n\n            <div class=\"price px-2 d-flex flex-column align-items-center justify-content-center\">\n                <p class=\"details mb-0\">Pret pentru weekend</p>\n                <p class=\"sum mb-0\">{{ticketData?.weekendPrice}}</p>\n                <p class=\"details mb-0\">EUR/Persoana</p>\n            </div>\n        </div>\n\n    </div>\n</div>";

/***/ })

}]);
//# sourceMappingURL=default-src_app_features_resources_resources_module_ts.js.map