{"version":3,"file":"default-node_modules_angular_material_fesm2020_chips_mjs.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2020/chips.mjs"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Output, ContentChild, ViewChild, QueryList, ContentChildren, forwardRef, Self, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, mixinErrorState, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass _MatChipActionBase {\n}\nconst _MatChipActionMixinBase = mixinTabIndex(_MatChipActionBase, -1);\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction extends _MatChipActionMixinBase {\n    /** Whether the action is disabled. */\n    get disabled() {\n        return this._disabled || this._parentChip.disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determine the value of the disabled attribute for this chip action.\n     */\n    _getDisabledAttribute() {\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n        // string to indicate that disabled attribute should be included.\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n    }\n    /**\n     * Determine the value of the tabindex attribute for this chip action.\n     */\n    _getTabindex() {\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\n            ? null\n            : this.tabIndex.toString();\n    }\n    constructor(_elementRef, _parentChip) {\n        super();\n        this._elementRef = _elementRef;\n        this._parentChip = _parentChip;\n        /** Whether the action is interactive. */\n        this.isInteractive = true;\n        /** Whether this is the primary action in the chip. */\n        this._isPrimary = true;\n        this._disabled = false;\n        /**\n         * Private API to allow focusing this chip when it is disabled.\n         */\n        this._allowFocusWhenDisabled = false;\n        if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n            _elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this.disabled &&\n            this.isInteractive &&\n            this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n}\nMatChipAction.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipAction, deps: [{ token: i0.ElementRef }, { token: MAT_CHIP }], target: i0.ɵɵFactoryTarget.Directive });\nMatChipAction.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipAction, selector: \"[matChipAction]\", inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", isInteractive: \"isInteractive\", _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipAction]',\n                    inputs: ['disabled', 'tabIndex'],\n                    host: {\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n                        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n                        '[attr.tabindex]': '_getTabindex()',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '(click)': '_handleClick($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_CHIP]\n                }] }]; }, propDecorators: { isInteractive: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], _allowFocusWhenDisabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatChipAvatar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipAvatar, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\n                    host: {\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'img',\n                    },\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\n                }]\n        }] });\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n    constructor() {\n        super(...arguments);\n        /**\n         * MDC considers all trailing actions as a remove icon,\n         * but we support non-interactive trailing icons.\n         */\n        this.isInteractive = false;\n        this._isPrimary = false;\n    }\n}\nMatChipTrailingIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatChipTrailingIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipTrailingIcon, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                    host: {\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'aria-hidden': 'true',\n                    },\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\n                }]\n        }] });\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n    constructor() {\n        super(...arguments);\n        this._isPrimary = false;\n    }\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n}\nMatChipRemove.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatChipRemove.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipRemove, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipRemove, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipRemove]',\n                    host: {\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet uid = 0;\n/**\n * Boilerplate for applying mixins to MatChip.\n * @docs-private\n */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})), 'primary'), -1);\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip extends _MatChipMixinBase {\n    _hasFocus() {\n        return this._hasFocusInternal;\n    }\n    /**\n     * The value of the chip. Defaults to the content inside\n     * the `mat-mdc-chip-action-label` element.\n     */\n    get value() {\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n    }\n    set value(value) {\n        this._value = value;\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() {\n        return this._removable;\n    }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * Colors the chip for emphasis as if it were selected.\n     */\n    get highlighted() {\n        return this._highlighted;\n    }\n    set highlighted(value) {\n        this._highlighted = coerceBooleanProperty(value);\n    }\n    constructor(_changeDetectorRef, elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        this._globalRippleOptions = _globalRippleOptions;\n        /** Whether the ripple is centered on the chip. */\n        this._isRippleCentered = false;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blurred. */\n        this._onBlur = new Subject();\n        /** Role for the root of the chip. */\n        this.role = null;\n        /** Whether the chip has focus. */\n        this._hasFocusInternal = false;\n        /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n        this.id = `mat-mdc-chip-${uid++}`;\n        // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n        // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n        // datepicker's use case.\n        /** ARIA label for the content of the chip. */\n        this.ariaLabel = null;\n        // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n        // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n        // datepicker's use case.\n        /** ARIA description for the content of the chip. */\n        this.ariaDescription = null;\n        /** Id of a span that contains this chip's aria description. */\n        this._ariaDescriptionId = `${this.id}-aria-description`;\n        this._removable = true;\n        this._highlighted = false;\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** The unstyled chip selector for this component. */\n        this.basicChipAttrName = 'mat-basic-chip';\n        const element = elementRef.nativeElement;\n        this._document = _document;\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this._isBasicChip =\n            element.hasAttribute(this.basicChipAttrName) ||\n                element.tagName.toLowerCase() === this.basicChipAttrName;\n        if (tabIndex != null) {\n            this.tabIndex = parseInt(tabIndex) ?? this.defaultTabIndex;\n        }\n        this._monitorFocus();\n    }\n    ngAfterViewInit() {\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n        if (this._pendingFocus) {\n            this._pendingFocus = false;\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this.destroyed.emit({ chip: this });\n        this.destroyed.complete();\n    }\n    /**\n     * Allows for programmatic removal of the chip.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Whether or not the ripple should be disabled. */\n    _isRippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._animationsDisabled ||\n            this._isBasicChip ||\n            !!this._globalRippleOptions?.disabled);\n    }\n    /** Returns whether the chip has a trailing icon. */\n    _hasTrailingIcon() {\n        return !!(this.trailingIcon || this.removeIcon);\n    }\n    /** Handles keyboard events on the chip. */\n    _handleKeydown(event) {\n        if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n            event.preventDefault();\n            this.remove();\n        }\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this.disabled) {\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\n            // Queue the method to be called again on init.\n            if (this.primaryAction) {\n                this.primaryAction.focus();\n            }\n            else {\n                this._pendingFocus = true;\n            }\n        }\n    }\n    /** Gets the action that contains a specific target node. */\n    _getSourceAction(target) {\n        return this._getActions().find(action => {\n            const element = action._elementRef.nativeElement;\n            return element === target || element.contains(target);\n        });\n    }\n    /** Gets all of the actions within the chip. */\n    _getActions() {\n        const result = [];\n        if (this.primaryAction) {\n            result.push(this.primaryAction);\n        }\n        if (this.removeIcon) {\n            result.push(this.removeIcon);\n        }\n        if (this.trailingIcon) {\n            result.push(this.trailingIcon);\n        }\n        return result;\n    }\n    /** Handles interactions with the primary action of the chip. */\n    _handlePrimaryActionInteraction() {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Starts the focus monitoring process on the chip. */\n    _monitorFocus() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const hasFocus = origin !== null;\n            if (hasFocus !== this._hasFocusInternal) {\n                this._hasFocusInternal = hasFocus;\n                if (hasFocus) {\n                    this._onFocus.next({ chip: this });\n                }\n                else {\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n                    // that moves focus not the next item. To work around the issue, we defer marking the chip\n                    // as not focused until the next time the zone stabilizes.\n                    this._ngZone.onStable\n                        .pipe(take(1))\n                        .subscribe(() => this._ngZone.run(() => this._onBlur.next({ chip: this })));\n                }\n            }\n        });\n    }\n}\nMatChip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChip, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChip.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChip, selector: \"mat-basic-chip, mat-chip\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaDescription: [\"aria-description\", \"ariaDescription\"], value: \"value\", removable: \"removable\", highlighted: \"highlighted\" }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.tabindex\": \"role ? tabIndex : null\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }, { propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], usesInheritance: true, ngImport: i0, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChip, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip, mat-chip', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], exportAs: 'matChip', host: {\n                        'class': 'mat-mdc-chip',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[id]': 'id',\n                        '[attr.role]': 'role',\n                        '[attr.tabindex]': 'role ? tabIndex : null',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; }, propDecorators: { role: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaDescription: [{\n                type: Input,\n                args: ['aria-description']\n            }], value: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], highlighted: [{\n                type: Input\n            }], removed: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], leadingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_AVATAR]\n            }], trailingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_TRAILING_ICON]\n            }], removeIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_REMOVE]\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], primaryAction: [{\n                type: ViewChild,\n                args: [MatChipAction]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n    constructor() {\n        super(...arguments);\n        /** Whether the chip list is selectable. */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        this._selectable = true;\n        this._selected = false;\n        /** The unstyled chip selector for this component. */\n        this.basicChipAttrName = 'mat-basic-chip-option';\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n    }\n    /**\n     * Whether or not the chip is selectable.\n     *\n     * When a chip is not selectable, changes to its selected state are always\n     * ignored. By default an option chip is selectable, and it becomes\n     * non-selectable if its parent chip list is not selectable.\n     */\n    get selectable() {\n        return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the chip is selected. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._setSelectedState(coerceBooleanProperty(value), false, true);\n    }\n    /**\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n     * interaction patterns.\n     *\n     * From [WAI ARIA Listbox authoring practices guide](\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n     *  set to true. All options that are selectable but not selected have either aria-selected or\n     *  aria-checked set to false.\"\n     *\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n     * VoiceOver reading every option as \"selected\" (#25736).\n     */\n    get ariaSelected() {\n        return this.selectable ? this.selected.toString() : null;\n    }\n    ngOnInit() {\n        this.role = 'presentation';\n    }\n    /** Selects the chip. */\n    select() {\n        this._setSelectedState(true, false, true);\n    }\n    /** Deselects the chip. */\n    deselect() {\n        this._setSelectedState(false, false, true);\n    }\n    /** Selects this chip and emits userInputSelection event */\n    selectViaInteraction() {\n        this._setSelectedState(true, true, true);\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._setSelectedState(!this.selected, isUserInput, true);\n        return this.selected;\n    }\n    _handlePrimaryActionInteraction() {\n        if (this.selectable && !this.disabled) {\n            this.toggleSelected(true);\n        }\n    }\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\n        if (isSelected !== this.selected) {\n            this._selected = isSelected;\n            if (emitEvent) {\n                this.selectionChange.emit({\n                    source: this,\n                    isUserInput,\n                    selected: this.selected,\n                });\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChipOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatChipOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipOption, selector: \"mat-basic-chip-option, mat-chip-option\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selectable: \"selectable\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option mdc-evolution-chip mdc-evolution-chip--filter mdc-evolution-chip--selectable mdc-evolution-chip--with-primary-graphic\" }, providers: [\n        { provide: MatChip, useExisting: MatChipOption },\n        { provide: MAT_CHIP, useExisting: MatChipOption },\n    ], usesInheritance: true, ngImport: i0, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\" focusable=\\\"false\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip-option, mat-chip-option', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-option mdc-evolution-chip mdc-evolution-chip--filter mdc-evolution-chip--selectable mdc-evolution-chip--with-primary-graphic',\n                        '[class.mat-mdc-chip-selected]': 'selected',\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--selected]': 'selected',\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n                        // starts and removes it once the animation is finished. We don't need to go through all\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\n                        // because they also have an exit animation that we don't care about.\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '[id]': 'id',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipOption },\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\" focusable=\\\"false\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], propDecorators: { selectable: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n    constructor(_elementRef, _document) {\n        this._elementRef = _elementRef;\n        this._document = _document;\n    }\n    initialize(initialValue) {\n        this.getNativeElement().focus();\n        this.setValue(initialValue);\n    }\n    getNativeElement() {\n        return this._elementRef.nativeElement;\n    }\n    setValue(value) {\n        this.getNativeElement().textContent = value;\n        this._moveCursorToEndOfInput();\n    }\n    getValue() {\n        return this.getNativeElement().textContent || '';\n    }\n    _moveCursorToEndOfInput() {\n        const range = this._document.createRange();\n        range.selectNodeContents(this.getNativeElement());\n        range.collapse(false);\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\nMatChipEditInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipEditInput, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatChipEditInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipEditInput, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipEditInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'span[matChipEditInput]',\n                    host: {\n                        'class': 'mat-chip-edit-input',\n                        'role': 'textbox',\n                        'tabindex': '-1',\n                        'contenteditable': 'true',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n    constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n        super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\n        this.basicChipAttrName = 'mat-basic-chip-row';\n        /**\n         * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n         * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n         * while the editing action is being initialized.\n         */\n        this._editStartPending = false;\n        this.editable = false;\n        /** Emitted when the chip is edited. */\n        this.edited = new EventEmitter();\n        this._isEditing = false;\n        this.role = 'row';\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n            if (this._isEditing && !this._editStartPending) {\n                this._onEditFinish();\n            }\n        });\n    }\n    _hasTrailingIcon() {\n        // The trailing icon is hidden while editing.\n        return !this._isEditing && super._hasTrailingIcon();\n    }\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n    _mousedown(event) {\n        if (!this._isEditing) {\n            if (!this.disabled) {\n                this.focus();\n            }\n            event.preventDefault();\n        }\n    }\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER && !this.disabled) {\n            if (this._isEditing) {\n                event.preventDefault();\n                this._onEditFinish();\n            }\n            else if (this.editable) {\n                this._startEditing(event);\n            }\n        }\n        else if (this._isEditing) {\n            // Stop the event from reaching the chip set in order to avoid navigating.\n            event.stopPropagation();\n        }\n        else {\n            super._handleKeydown(event);\n        }\n    }\n    _doubleclick(event) {\n        if (!this.disabled && this.editable) {\n            this._startEditing(event);\n        }\n    }\n    _startEditing(event) {\n        if (!this.primaryAction ||\n            (this.removeIcon && this._getSourceAction(event.target) === this.removeIcon)) {\n            return;\n        }\n        // The value depends on the DOM so we need to extract it before we flip the flag.\n        const value = this.value;\n        this._isEditing = true;\n        this._editStartPending = true;\n        // Defer initializing the input so it has time to be added to the DOM.\n        setTimeout(() => {\n            this._getEditInput().initialize(value);\n            this._editStartPending = false;\n        });\n    }\n    _onEditFinish() {\n        this._isEditing = false;\n        this._editStartPending = false;\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\n        // return focus to the chip contents.\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\n            this._document.activeElement === this._document.body) {\n            this.primaryAction.focus();\n        }\n    }\n    /**\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\n     * two values is guaranteed to be defined.\n     */\n    _getEditInput() {\n        return this.contentEditInput || this.defaultEditInput;\n    }\n}\nMatChipRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipRow, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChipRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipRow, selector: \"mat-chip-row, mat-basic-chip-row\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"mousedown\": \"_mousedown($event)\", \"dblclick\": \"_doubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\n        { provide: MatChip, useExisting: MatChipRow },\n        { provide: MAT_CHIP, useExisting: MatChipRow },\n    ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n       [matRippleCentered]=\\\"_isRippleCentered\\\"\\n       [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n  <span\\n    matChipAction\\n    [attr.role]=\\\"editable ? 'button' : null\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n      <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"true\\\">\\n        <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                    select=\\\"[matChipEditInput]\\\"></ng-content>\\n        <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n      </ng-container>\\n\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipRow, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-row, mat-basic-chip-row', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\n                        '[class.mat-mdc-chip-editable]': 'editable',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[id]': 'id',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '(mousedown)': '_mousedown($event)',\n                        '(dblclick)': '_doubleclick($event)',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipRow },\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n       [matRippleCentered]=\\\"_isRippleCentered\\\"\\n       [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n  <span\\n    matChipAction\\n    [attr.role]=\\\"editable ? 'button' : null\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n      <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"true\\\">\\n        <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                    select=\\\"[matChipEditInput]\\\"></ng-content>\\n        <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n      </ng-container>\\n\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; }, propDecorators: { editable: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }], defaultEditInput: [{\n                type: ViewChild,\n                args: [MatChipEditInput]\n            }], contentEditInput: [{\n                type: ContentChild,\n                args: [MatChipEditInput]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Boilerplate for applying mixins to MatChipSet.\n * @docs-private\n */\nclass MatChipSetBase {\n    constructor(_elementRef) { }\n}\nconst _MatChipSetMixinBase = mixinTabIndex(MatChipSetBase);\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet extends _MatChipSetMixinBase {\n    /** Combined stream of all of the child chips' focus events. */\n    get chipFocusChanges() {\n        return this._getChipStream(chip => chip._onFocus);\n    }\n    /** Combined stream of all of the child chips' remove events. */\n    get chipDestroyedChanges() {\n        return this._getChipStream(chip => chip.destroyed);\n    }\n    /** Whether the chip set is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /** Whether the chip list contains chips or not. */\n    get empty() {\n        return this._chips.length === 0;\n    }\n    /** The ARIA role applied to the chip set. */\n    get role() {\n        if (this._explicitRole) {\n            return this._explicitRole;\n        }\n        return this.empty ? null : this._defaultRole;\n    }\n    set role(value) {\n        this._explicitRole = value;\n    }\n    /** Whether any of the chips inside of this chip-set has focus. */\n    get focused() {\n        return this._hasFocusedChip();\n    }\n    constructor(_elementRef, _changeDetectorRef, _dir) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        /** Index of the last destroyed chip that had focus. */\n        this._lastDestroyedFocusedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Role to use if it hasn't been overwritten by the user. */\n        this._defaultRole = 'presentation';\n        this._disabled = false;\n        this._explicitRole = null;\n        /** Flat list of all the actions contained within the chips. */\n        this._chipActions = new QueryList();\n    }\n    ngAfterViewInit() {\n        this._setUpFocusManagement();\n        this._trackChipSetChanges();\n        this._trackDestroyedFocusedChip();\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._chipActions.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this._chips && this._chips.some(chip => chip._hasFocus());\n    }\n    /** Syncs the chip-set's state with the individual chips. */\n    _syncChipsState() {\n        if (this._chips) {\n            this._chips.forEach(chip => {\n                chip.disabled = this._disabled;\n                chip._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n    focus() { }\n    /** Handles keyboard events on the chip set. */\n    _handleKeydown(event) {\n        if (this._originatesFromChip(event)) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this._chips.length;\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        const previousTabIndex = this.tabIndex;\n        if (this.tabIndex !== -1) {\n            this.tabIndex = -1;\n            Promise.resolve().then(() => {\n                this.tabIndex = previousTabIndex;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Gets a stream of events from all the chips within the set.\n     * The stream will automatically incorporate any newly-added chips.\n     */\n    _getChipStream(mappingFunction) {\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            // Null check the classList, because IE and Edge don't support it on all elements.\n            if (currentElement.classList && currentElement.classList.contains('mdc-evolution-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Sets up the chip set's focus management logic. */\n    _setUpFocusManagement() {\n        // Create a flat `QueryList` containing the actions of all of the chips.\n        // This allows us to navigate both within the chip and move to the next/previous\n        // one using the existing `ListKeyManager`.\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\n            const actions = [];\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n            this._chipActions.reset(actions);\n            this._chipActions.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._chipActions)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\n            .withHomeAndEnd()\n            .skipPredicate(action => this._skipPredicate(action));\n        // Keep the manager active index in sync so that navigation picks\n        // up from the current chip if the user clicks into the list directly.\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\n            const action = chip._getSourceAction(document.activeElement);\n            if (action) {\n                this._keyManager.updateActiveItem(action);\n            }\n        });\n        this._dir?.change\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive and disabled actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n        // chips.\n        return !action.isInteractive || action.disabled;\n    }\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n    _trackChipSetChanges() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => this._syncChipsState());\n            }\n            this._redirectDestroyedChipFocus();\n        });\n    }\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\n    _trackDestroyedFocusedChip() {\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n            const chipArray = this._chips.toArray();\n            const chipIndex = chipArray.indexOf(event.chip);\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\n            // chip. We only save the index here, rather than move the focus immediately, because we want\n            // to wait until the chip is removed from the chip list before focusing the next one. This\n            // allows us to keep focus on the same index if the chip gets swapped out.\n            if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n                this._lastDestroyedFocusedChipIndex = chipIndex;\n            }\n        });\n    }\n    /**\n     * Finds the next appropriate chip to move focus to,\n     * if the currently-focused chip is destroyed.\n     */\n    _redirectDestroyedChipFocus() {\n        if (this._lastDestroyedFocusedChipIndex == null) {\n            return;\n        }\n        if (this._chips.length) {\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n            const chipToFocus = this._chips.toArray()[newIndex];\n            if (chipToFocus.disabled) {\n                // If we're down to one disabled chip, move focus back to the set.\n                if (this._chips.length === 1) {\n                    this.focus();\n                }\n                else {\n                    this._keyManager.setPreviousItemActive();\n                }\n            }\n            else {\n                chipToFocus.focus();\n            }\n        }\n        else {\n            this.focus();\n        }\n        this._lastDestroyedFocusedChipIndex = null;\n    }\n}\nMatChipSet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipSet, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChipSet.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipSet, selector: \"mat-chip-set\", inputs: { disabled: \"disabled\", role: \"role\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipSet, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-set', template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n                        '(keydown)': '_handleKeydown($event)',\n                        '[attr.role]': 'role',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChip, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n    constructor(\n    /** Chip listbox that emitted the event. */\n    source, \n    /** Value of the chip listbox when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatChipListbox),\n    multi: true,\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n    constructor() {\n        super(...arguments);\n        /**\n         * Function when touched. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        /**\n         * Function when changed. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onChange = () => { };\n        // TODO: MDC uses `grid` here\n        this._defaultRole = 'listbox';\n        this._multiple = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * A function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         */\n        this.compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        /** Event emitted when the selected chip listbox value has been changed by the user. */\n        this.change = new EventEmitter();\n    }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncListboxProperties();\n    }\n    /** The array of selected chips inside the chip listbox. */\n    get selected() {\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n        return this.multiple ? selectedChips : selectedChips[0];\n    }\n    /**\n     * Whether or not this chip listbox is selectable.\n     *\n     * When a chip listbox is not selectable, the selected states for all\n     * the chips inside the chip listbox are always ignored.\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        this._syncListboxProperties();\n    }\n    /** Whether this chip listbox is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return this._getChipStream(chip => chip.selectionChange);\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** The value of the listbox, which is the combined value of the selected chips. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    ngAfterContentInit() {\n        if (this._pendingInitialValue !== undefined) {\n            Promise.resolve().then(() => {\n                this._setSelectionByValue(this._pendingInitialValue, false);\n                this._pendingInitialValue = undefined;\n            });\n        }\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            // Update listbox selectable/multiple properties on chips\n            this._syncListboxProperties();\n        });\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (!this.multiple) {\n                this._chips.forEach(chip => {\n                    if (chip !== event.source) {\n                        chip._setSelectedState(false, false, false);\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /**\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n     * are no selected chips.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        const firstSelectedChip = this._getFirstSelectedChip();\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\n            firstSelectedChip.focus();\n        }\n        else if (this._chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        if (this._chips) {\n            this._setSelectionByValue(value, false);\n        }\n        else if (value != null) {\n            this._pendingInitialValue = value;\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Selects all chips with value. */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n        }\n        else {\n            this._selectValue(value, isUserInput);\n        }\n    }\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n    _blur() {\n        if (!this.disabled) {\n            // Wait to see if focus moves to an individual chip.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    _keydown(event) {\n        if (event.keyCode === TAB) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Marks the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : undefined;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Deselects every chip in the listbox.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput) {\n        const correspondingChip = this._chips.find(chip => {\n            return chip.value != null && this.compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n        }\n        return correspondingChip;\n    }\n    /** Syncs the chip-listbox selection state with the individual chips. */\n    _syncListboxProperties() {\n        if (this._chips) {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._chips.forEach(chip => {\n                    chip._chipListMultiple = this.multiple;\n                    chip.chipListSelectable = this._selectable;\n                    chip._changeDetectorRef.markForCheck();\n                });\n            });\n        }\n    }\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n    _getFirstSelectedChip() {\n        if (Array.isArray(this.selected)) {\n            return this.selected.length ? this.selected[0] : undefined;\n        }\n        else {\n            return this.selected;\n        }\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n        // exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        return !action.isInteractive;\n    }\n}\nMatChipListbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatChipListbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipListbox, selector: \"mat-chip-listbox\", inputs: { tabIndex: \"tabIndex\", multiple: \"multiple\", ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: \"selectable\", compareWith: \"compareWith\", required: \"required\", value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"empty ? -1 : tabIndex\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipListbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-listbox', template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, inputs: ['tabIndex'], host: {\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': 'empty ? -1 : tabIndex',\n                        // TODO: replace this binding with use of AriaDescriber\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-required]': 'role ? required : null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-orientation]': 'ariaOrientation',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                        '(keydown)': '_keydown($event)',\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], propDecorators: { multiple: [{\n                type: Input\n            }], ariaOrientation: [{\n                type: Input,\n                args: ['aria-orientation']\n            }], selectable: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipOption, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n    constructor(\n    /** Chip grid that emitted the event. */\n    source, \n    /** Value of the chip grid when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Boilerplate for applying mixins to MatChipGrid.\n * @docs-private\n */\nclass MatChipGridBase extends MatChipSet {\n    constructor(elementRef, changeDetectorRef, dir, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /**\n     * Form control bound to the component.\n     * Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    ngControl) {\n        super(elementRef, changeDetectorRef, dir);\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n    }\n}\nconst _MatChipGridMixinBase = mixinErrorState(MatChipGridBase);\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends _MatChipGridMixinBase {\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput.id;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n    get focused() {\n        return this._chipInput.focused || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n        super(elementRef, changeDetectorRef, dir, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-grid';\n        this._defaultRole = 'grid';\n        /**\n         * List of element ids to propagate to the chipInput's aria-describedby attribute.\n         */\n        this._ariaDescribedbyIds = [];\n        /**\n         * Function when touched. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        /**\n         * Function when changed. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onChange = () => { };\n        this._value = [];\n        /** Emits when the chip grid value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Emits whenever the raw value of the chip-grid changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    ngAfterContentInit() {\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n        merge(this.chipFocusChanges, this._chips.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.stateChanges.next());\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.stateChanges.complete();\n    }\n    /** Associates an HTML input element with this chip grid. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this.disabled && !this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first chip in this chip grid, or the associated input when there\n     * are no eligible chips.\n     */\n    focus() {\n        if (this.disabled || this._chipInput.focused) {\n            return;\n        }\n        if (!this._chips.length || this._chips.first.disabled) {\n            // Delay until the next tick, because this can cause a \"changed after checked\"\n            // error if the input does something on focus (e.g. opens an autocomplete).\n            Promise.resolve().then(() => this._chipInput.focus());\n        }\n        else if (this._chips.length) {\n            this._keyManager.setFirstItemActive();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        // We must keep this up to date to handle the case where ids are set\n        // before the chip input is registered.\n        this._ariaDescribedbyIds = ids;\n        this._chipInput?.setDescribedByIds(ids);\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The user is responsible for creating the child chips, so we just store the value.\n        this._value = value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n    _blur() {\n        if (!this.disabled) {\n            // Check whether the focus moved to chip input.\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n            // to chip input, do nothing.\n            // Timeout is needed to wait for the focus() event trigger on chip input.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (!this._chipInput.focused) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Handles custom keyboard events. */\n    _handleKeydown(event) {\n        if (event.keyCode === TAB) {\n            if (this._chipInput.focused &&\n                hasModifierKey(event, 'shiftKey') &&\n                this._chips.length &&\n                !this._chips.last.disabled) {\n                event.preventDefault();\n                if (this._keyManager.activeItem) {\n                    this._keyManager.setActiveItem(this._keyManager.activeItem);\n                }\n                else {\n                    this._focusLastChip();\n                }\n            }\n            else {\n                // Use the super method here since it doesn't check for the input\n                // focused state. This allows focus to escape if there's only one\n                // disabled chip left in the list.\n                super._allowFocusEscape();\n            }\n        }\n        else if (!this._chipInput.focused) {\n            super._handleKeydown(event);\n        }\n        this.stateChanges.next();\n    }\n    _focusLastChip() {\n        if (this._chips.length) {\n            this._chips.last.focus();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n        this._value = valueToEmit;\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n}\nMatChipGrid.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipGrid, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i2$1.NgForm, optional: true }, { token: i2$1.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: i2$1.NgControl, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChipGrid.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipGrid, selector: \"mat-chip-grid\", inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", placeholder: \"placeholder\", required: \"required\", value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"_chips && _chips.length === 0 ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipGrid, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-grid', template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, inputs: ['tabIndex'], host: {\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': '_chips && _chips.length === 0 ? -1 : tabIndex',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i3.ErrorStateMatcher }, { type: i2$1.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipRow, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n    /** Register input for chip list */\n    set chipGrid(value) {\n        if (value) {\n            this._chipGrid = value;\n            this._chipGrid.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() {\n        return this._addOnBlur;\n    }\n    set addOnBlur(value) {\n        this._addOnBlur = coerceBooleanProperty(value);\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether the input is empty. */\n    get empty() {\n        return !this.inputElement.value;\n    }\n    constructor(_elementRef, _defaultOptions, formField) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n        this._disabled = false;\n        this.inputElement = this._elementRef.nativeElement;\n        if (formField) {\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\n        }\n    }\n    ngOnChanges() {\n        this._chipGrid.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.chipEnd.complete();\n    }\n    ngAfterContentInit() {\n        this._focusLastChipOnBackspace = this.empty;\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        if (event) {\n            // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n            // We focus the last chip on backspace only after the user has released the backspace button,\n            // And the input is empty (see behaviour in _keyup)\n            if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\n                this._chipGrid._focusLastChip();\n                event.preventDefault();\n                return;\n            }\n            else {\n                this._focusLastChipOnBackspace = false;\n            }\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keyup(event) {\n        // Allow user to move focus to chips next time he presses backspace\n        if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\n            this._focusLastChipOnBackspace = true;\n            event.preventDefault();\n        }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipGrid.focused) {\n            this._chipGrid._blur();\n        }\n        this._chipGrid.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._focusLastChipOnBackspace = this.empty;\n        this._chipGrid.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({\n                input: this.inputElement,\n                value: this.inputElement.value,\n                chipInput: this,\n            });\n            event?.preventDefault();\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipGrid.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus() {\n        this.inputElement.focus();\n    }\n    /** Clears the input */\n    clear() {\n        this.inputElement.value = '';\n        this._focusLastChipOnBackspace = true;\n    }\n    setDescribedByIds(ids) {\n        const element = this._elementRef.nativeElement;\n        // Set the value directly in the DOM since this binding\n        // is prone to \"changed after checked\" errors.\n        if (ids.length) {\n            element.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            element.removeAttribute('aria-describedby');\n        }\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipInput, deps: [{ token: i0.ElementRef }, { token: MAT_CHIPS_DEFAULT_OPTIONS }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatChipInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatChipInput, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"keyup\": \"_keyup($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled || null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matChipInputFor]',\n                    exportAs: 'matChipInput, matChipInputFor',\n                    host: {\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n                        // the MDC chips were landed initially with it.\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n                        '(keydown)': '_keydown($event)',\n                        '(keyup)': '_keyup($event)',\n                        '(blur)': '_blur()',\n                        '(focus)': '_focus()',\n                        '(input)': '_onInput()',\n                        '[id]': 'id',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.placeholder]': 'placeholder || null',\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_CHIPS_DEFAULT_OPTIONS]\n                }] }, { type: i1$2.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }]; }, propDecorators: { chipGrid: [{\n                type: Input,\n                args: ['matChipInputFor']\n            }], addOnBlur: [{\n                type: Input,\n                args: ['matChipInputAddOnBlur']\n            }], separatorKeyCodes: [{\n                type: Input,\n                args: ['matChipInputSeparatorKeyCodes']\n            }], chipEnd: [{\n                type: Output,\n                args: ['matChipInputTokenEnd']\n            }], placeholder: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChip,\n    MatChipAvatar,\n    MatChipEditInput,\n    MatChipGrid,\n    MatChipInput,\n    MatChipListbox,\n    MatChipOption,\n    MatChipRemove,\n    MatChipRow,\n    MatChipSet,\n    MatChipTrailingIcon,\n];\nclass MatChipsModule {\n}\nMatChipsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatChipsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipsModule, declarations: [MatChipAction, MatChip,\n        MatChipAvatar,\n        MatChipEditInput,\n        MatChipGrid,\n        MatChipInput,\n        MatChipListbox,\n        MatChipOption,\n        MatChipRemove,\n        MatChipRow,\n        MatChipSet,\n        MatChipTrailingIcon], imports: [MatCommonModule, CommonModule, MatRippleModule], exports: [MatCommonModule, MatChip,\n        MatChipAvatar,\n        MatChipEditInput,\n        MatChipGrid,\n        MatChipInput,\n        MatChipListbox,\n        MatChipOption,\n        MatChipRemove,\n        MatChipRow,\n        MatChipSet,\n        MatChipTrailingIcon] });\nMatChipsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipsModule, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: {\n                separatorKeyCodes: [ENTER],\n            },\n        },\n    ], imports: [MatCommonModule, CommonModule, MatRippleModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule, MatRippleModule],\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\n                    declarations: [MatChipAction, CHIP_DECLARATIONS],\n                    providers: [\n                        ErrorStateMatcher,\n                        {\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                            useValue: {\n                                separatorKeyCodes: [ENTER],\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n"],"names":["coerceBooleanProperty","ANIMATION_MODULE_TYPE","i0","InjectionToken","Directive","Inject","Input","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Attribute","Output","ContentChild","ViewChild","QueryList","ContentChildren","forwardRef","Self","NgModule","i2","DOCUMENT","CommonModule","i3","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","mixinErrorState","MatCommonModule","MatRippleModule","ErrorStateMatcher","i1","FocusKeyManager","Subject","merge","take","takeUntil","startWith","switchMap","ENTER","SPACE","BACKSPACE","DELETE","TAB","hasModifierKey","i1$1","i2$1","NG_VALUE_ACCESSOR","Validators","i1$2","MatFormFieldControl","MAT_FORM_FIELD","MAT_CHIPS_DEFAULT_OPTIONS","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","MAT_CHIP","_MatChipActionBase","_MatChipActionMixinBase","MatChipAction","disabled","_disabled","_parentChip","value","_getDisabledAttribute","_allowFocusWhenDisabled","_getTabindex","isInteractive","tabIndex","toString","constructor","_elementRef","_isPrimary","nativeElement","nodeName","setAttribute","focus","_handleClick","event","preventDefault","_handlePrimaryActionInteraction","_handleKeydown","keyCode","ɵfac","ElementRef","ɵdir","type","args","selector","inputs","host","undefined","decorators","MatChipAvatar","provide","useExisting","providers","MatChipTrailingIcon","arguments","MatChipRemove","stopPropagation","remove","uid","_MatChipMixinBase","MatChip","_hasFocus","_hasFocusInternal","_value","_textElement","textContent","trim","removable","_removable","highlighted","_highlighted","_changeDetectorRef","elementRef","_ngZone","_focusMonitor","_document","animationMode","_globalRippleOptions","_isRippleCentered","_onFocus","_onBlur","role","id","ariaLabel","ariaDescription","_ariaDescriptionId","removed","destroyed","basicChipAttrName","element","_animationsDisabled","_isBasicChip","hasAttribute","tagName","toLowerCase","parseInt","defaultTabIndex","_monitorFocus","ngAfterViewInit","querySelector","_pendingFocus","ngOnDestroy","stopMonitoring","emit","chip","complete","_isRippleDisabled","disableRipple","_hasTrailingIcon","trailingIcon","removeIcon","primaryAction","_getSourceAction","target","_getActions","find","action","contains","result","push","monitor","subscribe","origin","hasFocus","next","onStable","pipe","run","ChangeDetectorRef","NgZone","FocusMonitor","ɵcmp","NgIf","exportAs","encapsulation","None","changeDetection","OnPush","template","styles","leadingIcon","ripple","MatChipSelectionChange","source","selected","isUserInput","MatChipOption","chipListSelectable","_chipListMultiple","_selectable","_selected","selectionChange","selectable","markForCheck","_setSelectedState","ariaSelected","ngOnInit","select","deselect","selectViaInteraction","toggleSelected","isSelected","emitEvent","MatChipEditInput","initialize","initialValue","getNativeElement","setValue","_moveCursorToEndOfInput","getValue","range","createRange","selectNodeContents","collapse","sel","window","getSelection","removeAllRanges","addRange","MatChipRow","changeDetectorRef","ngZone","focusMonitor","globalRippleOptions","_editStartPending","editable","edited","_isEditing","_onEditFinish","_mousedown","_startEditing","_doubleclick","setTimeout","_getEditInput","activeElement","body","contentEditInput","defaultEditInput","NgSwitch","NgSwitchCase","MatChipSetBase","_MatChipSetMixinBase","MatChipSet","chipFocusChanges","_getChipStream","chipDestroyedChanges","_syncChipsState","empty","_chips","length","_explicitRole","_defaultRole","focused","_hasFocusedChip","_dir","_lastDestroyedFocusedChipIndex","_destroyed","_chipActions","_setUpFocusManagement","_trackChipSetChanges","_trackDestroyedFocusedChip","_keyManager","destroy","some","forEach","_originatesFromChip","onKeydown","_isValidIndex","index","_allowFocusEscape","previousTabIndex","Promise","resolve","then","mappingFunction","changes","map","currentElement","classList","parentElement","chips","actions","reset","notifyOnChanges","withVerticalOrientation","withHorizontalOrientation","withHomeAndEnd","skipPredicate","_skipPredicate","document","updateActiveItem","change","direction","_redirectDestroyedChipFocus","chipArray","toArray","chipIndex","indexOf","newIndex","Math","min","chipToFocus","setPreviousItemActive","Directionality","descendants","MatChipListboxChange","MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR","MatChipListbox","multi","_onTouched","_onChange","_multiple","ariaOrientation","compareWith","o1","o2","_required","multiple","_syncListboxProperties","selectedChips","filter","required","chipSelectionChanges","chipBlurChanges","writeValue","ngAfterContentInit","_pendingInitialValue","_setSelectionByValue","_blur","_propagateChanges","firstSelectedChip","_getFirstSelectedChip","setFirstItemActive","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_clearSelection","Array","isArray","currentValue","_selectValue","_markAsTouched","_keydown","valueToEmit","skip","correspondingChip","MatChipGridChange","MatChipGridBase","dir","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","stateChanges","_MatChipGridMixinBase","MatChipGrid","_chipInput","placeholder","_placeholder","control","hasValidator","shouldLabelFloat","parentForm","parentFormGroup","defaultErrorStateMatcher","controlType","_ariaDescribedbyIds","valueChange","valueAccessor","ngDevMode","Error","ngDoCheck","updateErrorState","registerInput","inputElement","setDescribedByIds","onContainerClick","first","ids","last","activeItem","setActiveItem","_focusLastChip","NgForm","FormGroupDirective","NgControl","errorStateMatcher","nextUniqueId","MatChipInput","chipGrid","_chipGrid","addOnBlur","_addOnBlur","_defaultOptions","formField","separatorKeyCodes","chipEnd","add","ngOnChanges","_focusLastChipOnBackspace","_emitChipEnd","_keyup","_focus","_isSeparatorKey","input","chipInput","_onInput","clear","join","removeAttribute","Set","has","MatFormField","CHIP_DECLARATIONS","MatChipsModule","ɵmod","ɵinj","useValue","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}