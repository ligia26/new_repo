{"version":3,"file":"default-src_app_shared__services_reservations_service_ts-src_app_standalone-components_all-no-f71d7e.js","mappings":"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","sources":["./src/app/shared/_services/messages-conversations.service.ts","./src/app/shared/_services/reservations.service.ts","./src/app/standalone-components/all-notifications/all-notifications.component.ts","./src/app/standalone-components/conversation/conversation.component.ts","./src/app/standalone-components/dashboard-header/dashboard-header.component.ts","./src/app/standalone-components/all-notifications/all-notifications.component.scss","./src/app/standalone-components/conversation/conversation.component.scss","./src/app/standalone-components/dashboard-header/dashboard-header.component.scss"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from \"@angular/common/http\";\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n  export class MessagesConversationsService {\n\n  // Functions For Changes Detection\n  private listChanged = new BehaviorSubject(false);\n  listChangedObs = this.listChanged.asObservable();\n\n  triggerListChanges(message: boolean) {\n\n    // Change the subject value\n    this.listChanged.next(message);\n  }\n\n    constructor(private http: HttpClient) { }\n\n  //CONVERSATIONS\n\n    //update conversation\n    updateConversation(conversationId : string, conversationObj: object){\n      return this.http.put(\"/bestinform/updateConversation?conversationId=\" + conversationId, conversationObj);\n    }\n\n    //remove user from conversation\n    removeUserFromConversation(conversationId :string, userId:string){\n      return this.http.post(\"/bestinform/removeUserFromConversation?conversationId=\" + conversationId + \"&userId=\" + userId, {});\n    }\n\n    //leave conversation\n    leaveConversation(conversationId:string){\n      return this.http.post(\"/bestinform/leaveConversation?conversationId=\" + conversationId, {});\n    }\n\n    //create new conversation\n    createConversation(category: string, name: string){\n      return this.http.post(\"/bestinform/createConversation?category=\" + category + '&name=' + name,[]);\n    }\n\n    //add user to conversation\n    addUserToConversation(conversationId: string, userId:string){\n      return this.http.post(\"/bestinform/addUserToConversation?conversationId=\" + conversationId + \"&userId=\" + userId,{});\n    }\n\n    //get conversation by Id\n    getConversationById(conversationId: string){\n      return this.http.get(\"/bestinform/getConversationById?conversationId=\" + conversationId );\n   }\n\n    //list conversation filter\n    listConversationFiltered(category: string, page: number, size: number, sort?: string, dir?: string) {\n    return this.http.post('/bestinform/listConversationFiltered?category='+ category + '&page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir,{} );\n  }\n\n    //list Bestinorm conversation filter\n    listBestinformConversationFiltered(page: number, size: number, sort?: string, dir?: string,  filters?: object) {\n      return this.http.post('/bestinform/listBestinformConversationFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters);\n    }\n\n    //MESSAGES\n\n      //send message\n      sendMessage(conversationId:string, messageObj?: object) {\n      return this.http.post('/bestinform/sendMessage?conversationId='+ conversationId, messageObj);\n    }\n\n    //list message filter\n    listMessageFiltered(conversationId:string, page: number, size: number, sort?: string, dir?: string,  filters?: object) {\n      return this.http.post('/bestinform/listMessageFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir + '&conversationId='+ conversationId , filters);\n    }\n\n    //get message by id\n    getMessageById(messageId:string){\n      return this.http.get('/bestinform/getMessageById?messageId='+ messageId);\n    }\n\n    //delete message\n    deleteMessage(messageId :string){\n      return this.http.delete(\"/bestinform/deleteMessage?messageId=\" + messageId);\n    }\n  }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Reservation} from \"../_models/reservation.model\";\nimport {Room} from \"../_models/room.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ReservationsService {\n\n    reservationId: string = null;\n\n    // Functions For Changes Detection\n    private listChanged = new BehaviorSubject(false);\n    listChangedObs = this.listChanged.asObservable();\n\n    // Trigger list changes\n    triggerListChanges(message: boolean) {\n        // Change the subject value\n        this.listChanged.next(message);\n    }\n\n    constructor(private http: HttpClient) {\n    }\n\n    setReservationId(reservationId: string) {\n        return this.reservationId = reservationId;\n    }\n\n    //list reservations\n    listReservationFiltered(page: number, size: number, sort?: string, dir?: string, filters?: object) {\n        return this.http.post('/bestinform/listReservationFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters);\n    }\n\n    //get reservation by id\n    getReservationById(reservationId) {\n        return this.http.get('/bestinform/getReservationById?reservationId=' + reservationId);\n    }\n\n    //change validity status\n    changeValidityStatus(status: string, reservationId: string) {\n        return this.http.put('/bestinform/changeValidityStatus?status=' + status + '&reservationId=' + reservationId, {});\n    }\n\n    //changeReservationStatus\n    changeReservationStatus(status: string, reservationId: string, canceledReason:any ) {\n        return this.http.put('/bestinform/changeReservationStatus?status=' + status + '&reservationId=' + reservationId ,canceledReason);\n    }\n\n    // createReservationTimeSlot\n    createReservationTimeSlot(resourceId: string, reservationObj: Array<object>) {\n        return this.http.post('/bestinform/createReservationTimeSlot?resourceId=' + resourceId, reservationObj);\n    }\n\n    // createReservationTimePicker\n    createReservationTimePicker(resourceId: string, reservationObj: object) {\n        return this.http.post('/bestinform/createReservationTimePicker?resourceId=' + resourceId, reservationObj);\n    }\n\n    // createReservationRentalBooking\n    createReservationRentalBooking(resourceId: string, reservationObj: Array<object>) {\n        return this.http.post('/bestinform/createReservationRentalBooking?resourceId=' + resourceId, reservationObj);\n    }\n\n    // createReservationProduct\n    createReservationProduct(resourceId: string, reservationObj: Array<object>) {\n        return this.http.post('/bestinform/createReservationProduct?resourceId=' + resourceId, reservationObj);\n    }\n\n    // createReservationCulturalBooking\n    createReservationCulturalBooking(resourceId: string, reservationObj: Array<object>) {\n        return this.http.post('/bestinform/createReservationCulturalBooking?resourceId=' + resourceId, reservationObj);\n    }\n\n    // createReservationCarBooking\n    createReservationCarBooking(resourceId: string, reservationObj: object) {\n        return this.http.post('/bestinform/createReservationCarBooking?resourceId=' + resourceId, reservationObj);\n    }\n\n    // createJobAplication\n    createJobAplication(resourceId: string) {\n        return this.http.post('/bestinform/createJobAplication?resourceId=' + resourceId, {});\n    }\n\n\n    // buyTickets\n    buyTickets(resourceId: string, reservationObj: Array<object>) {\n        return this.http.post('/bestinform/buyTickets?resourceId=' + resourceId, reservationObj);\n    }\n\n    // getUserListJobApplication\n    getUserListJobApplication(resourceId: string) {\n        return this.http.get('/bestinform/getUserListJobApplication?resourceId=' + resourceId);\n    }\n\n    // getReservationBySlug\n    getReservationBySlug(slug: string) {\n        return this.http.get('/bestinform/getReservationBySlug?slug=' + slug);\n    }\n\n    updateReservation(reservationId: string, reservation: Reservation) {\n        return this.http.put<{\n            success: boolean,\n            reason: string\n        }>('/bestinform/updateReservation?reservationId=' + reservationId, reservation);\n    }\n\n    // START: CHECK AVAILABILITY (before updating the reservation)\n    getNewAvailablePickerItems(bookingTimePickerId: string, date: string, hour: string, reservationId: string) {\n        return this.http.get<{\n            success: boolean,\n            reason: string\n        }>('/bestinform/getNewAvailablePickerItems?bookingTimePickerId=' + bookingTimePickerId + '&date=' + date + '&hour=' + hour + '&reservationId=' + reservationId);\n    }\n\n    getNewAvailableRooms(resourceId: string, startTime: string, endTime: string, reservationId: string) {\n        return this.http.post<{\n            items?: Room[],\n            totalNights?: number,\n            totalPrice?: number\n        }>('/bestinform/getNewAvailableRooms?resourceId=' + resourceId + '&startTime=' + startTime + '&endTime=' + endTime + '&reservationId=' + reservationId, {});\n    }\n\n    // END: CHECK AVAILABILITY\n\n    //trip reservation\n    listTripReservationFiltered(pageNumber: number, pageSize: number, sort: string, dir: string, filters?) {\n        return this.http.post('/bestinform/listTripReservationsFiltered?page=' + pageNumber + '&size=' + pageSize + '&sort=' + sort + '&dir=' + dir, filters);\n    }\n\n    getTripById(tripId: string) {\n        return this.http.get('/bestinform/getTripById?tripId=' + tripId);\n    }\n\n\n    markReservationAsRead(read: boolean, reservationId: string) {\n        return this.http.put('/bestinform/markReservationAsRead?read=' + read + '&reservationId=' + reservationId, {});\n    }\n\n    //change validity status\n    sendClientEmail(reservationId: string, message:string) {\n        return this.http.put('/bestinform/sendClientEmail?reservationId=' + reservationId, message);\n    }\n\n}\n","import {ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashboardHeaderComponent} from '../dashboard-header/dashboard-header.component';\nimport {Subject, takeUntil, timer} from 'rxjs';\nimport {UserDataService} from 'src/app/shared/_services/userData.service';\nimport {NotificationsService} from 'src/app/shared/_services/notifications.service';\nimport {User} from 'src/app/shared/_models/user.model';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {ToastService} from 'src/app/shared/_services/toast.service';\nimport {Notification} from \"../../shared/_models/notification.model\";\nimport {Router} from \"@angular/router\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\n\n@Component({\n    selector: 'app-all-notifications',\n    standalone: true,\n    imports: [CommonModule, DashboardHeaderComponent, MatTooltipModule, MatPaginatorModule],\n    templateUrl: './all-notifications.component.html',\n    styleUrls: ['./all-notifications.component.scss']\n})\nexport class AllNotificationsComponent implements OnInit, OnDestroy{\n\n    listNotification = [];\n    private ngUnsubscribe = new Subject<void>();\n    user: User = null;\n    isAdmin: boolean;\n    isStaff: boolean;\n    isProvider: boolean;\n    isClient: boolean;\n\n    pageSize = 10;\n    pageSizeArray = [10, 25, 50, 100];\n    pageNumber = 0;\n    totalElements = 0;\n\n    unreadMessagesNumber: number;\n\n    constructor(private userData: UserDataService,\n                private router: Router,\n                private notificationsService: NotificationsService,\n                private cdr: ChangeDetectorRef,\n                private toastService: ToastService) {\n    }\n\n    ngOnInit(): void {\n        this.getCurrentUser();\n        // Listen to List Changes\n        this.listChanged();\n    }\n\n    listChanged() {\n        this.notificationsService.listChangedObs.subscribe((data: boolean) => {\n            // If the response is true\n            if (data) {\n                // Get Documents List\n                this.getNotificationsList();\n                this.cdr.detectChanges();\n\n                this.notificationsService.triggerUserListChanges(false);\n            }\n        })\n    }\n\n    getCurrentUser() {\n        this.userData.getCurrentUser().subscribe((res: User) => {\n            this.user = {...res};\n            timer(0, 60000).pipe(takeUntil(this.ngUnsubscribe)).subscribe(() => this.getNotificationsList());\n            if (res.roles.includes('ROLE_CLIENT')) {\n                this.isClient = true;\n            }\n            if (res.roles.includes('ROLE_PROVIDER')) {\n                this.isProvider = true;\n            }\n            res.roles.forEach((role: string) => {\n                if (role === 'ROLE_SUPER_ADMIN') {\n                    this.isAdmin = true;\n                    this.isStaff = false;\n                } else if (role === 'ROLE_STAFF') {\n                    this.isAdmin = false;\n                    this.isStaff = true;\n                }\n            })\n\n        })\n    }\n\n    getNotificationsList() {\n        this.unreadMessagesNumber = 0;\n        this.notificationsService.listMyNotifications(this.pageNumber, this.pageSize, 'date', 'desc')\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((response: any) => {\n                this.listNotification = response.content;\n                this.totalElements = response.totalElements;\n\n                response.content.forEach(element => {\n                    if (element.read === false) {\n                        this.unreadMessagesNumber = ++this.unreadMessagesNumber;\n                    }\n                });\n            });\n    }\n\n    pageChanged(event) {\n        this.pageNumber = event.pageIndex;\n        this.pageSize = event.pageSize;\n        this.getNotificationsList();\n    }\n\n    markAllAsRead() {\n        this.notificationsService.markAllNotificationAsRead()\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((response: any) => {\n                this.notificationsService.triggerUserListChanges(true);\n                this.toastService.showToast('Succes', 'Mesajele au fost marcate ca citite!', 'success');\n            });\n    }\n\n    markAsRead(idNotification) {\n        this.notificationsService.markNotificationAsRead(idNotification)\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((response: any) => {\n                this.notificationsService.triggerUserListChanges(true);\n                this.toastService.showToast('Succes', 'Mesaj marcat ca citit!', 'success');\n            });\n    }\n\n    goToNotificationObject(notification: Notification) {\n        if (!notification.objectType || !notification.objectId) return;\n\n        switch (notification.objectType) {\n            case \"friendRequest\": {\n                switch (true) {\n                    case (this.isClient): {\n                        void this.router.navigate(['/client/dashboard/profile'], {queryParams: {tab: 'friends'}});\n                        break;\n                    }\n\n                    /*case (this.isProvider): {\n                        void this.router.navigate([]);\n                        break;\n                    }*/\n\n                    /*case (this.isStaff): {\n                        void this.router.navigate([]);\n                        break;\n                    }*/\n\n                    /*case (this.isAdmin): {\n                        void this.router.navigate([]);\n                        break;\n                    }*/\n                }\n                break;\n            }\n\n            case \"message\": {\n                switch (true) {\n                    case (this.isClient): {\n                        void this.router.navigate([`/client/dashboard/inbox/${notification.objectId}`]);\n                        break;\n                    }\n\n                    case (this.isProvider): {\n                        void this.router.navigate([`/private/provider/inbox/${notification.objectId}`]);\n                        break;\n                    }\n\n                    case (this.isStaff): {\n                        void this.router.navigate([`/private/staff/inbox/${notification.objectId}`]);\n                        break;\n                    }\n\n                    case (this.isAdmin): {\n                        void this.router.navigate([`/private/admin/inbox/${notification.objectId}`]);\n                        break;\n                    }\n                }\n                break;\n            }\n\n            case \"reservation\": {\n                switch (true) {\n                    case (this.isClient): {\n                        void this.router.navigate([`/client/dashboard/my-booking/view/${notification.objectId}`]);\n                        break;\n                    }\n\n                    case (this.isProvider): {\n                        void this.router.navigate([`/private/provider/reservations/view/${notification.objectId}`]);\n                        break;\n                    }\n\n                    case (this.isStaff): {\n                        void this.router.navigate([`/private/staff/reservations/view/${notification.objectId}`]);\n                        break;\n                    }\n\n                    case (this.isAdmin): {\n                        void this.router.navigate([`/private/admin/reservations/view/${notification.objectId}`]);\n                        break;\n                    }\n                }\n                break;\n            }\n\n            case \"resource\": {\n                switch (true) {\n                    case (this.isClient): {\n                        void this.router.navigate([`/client/events/view/${notification.objectSlug}`]);\n                        break;\n                    }\n\n                    case (this.isProvider): {\n                        void this.router.navigate([`/private/provider/resources/edit/${notification.objectId}`]);\n                        break;\n                    }\n\n                    case (this.isStaff): {\n                        void this.router.navigate([`/private/staff/resources/edit/${notification.objectId}`]);\n                        break;\n                    }\n\n                    case (this.isAdmin): {\n                        void this.router.navigate([`/private/admin/resources/edit/${notification.objectId}`]);\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule, ViewportScroller } from '@angular/common';\nimport {AbstractControl, FormBuilder, FormControl, ReactiveFormsModule, ValidatorFn, Validators} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {  MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MessagesConversationsService } from 'src/app/shared/_services/messages-conversations.service';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Reservation } from 'src/app/shared/_models/reservation.model';\nimport { ReservationsService } from 'src/app/shared/_services/reservations.service';\nimport { UserDataService } from 'src/app/shared/_services/userData.service';\nimport { User } from 'src/app/shared/_models/user.model';\nimport { DatePipe } from '@angular/common';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {DomSanitizer, SafeHtml} from \"@angular/platform-browser\";\n\nexport type Message = {\n  text?: string,\n  attachments?: Array<{\n      fileName?: string;\n      filePath?: string;\n  }>;\n}\n\n@Component({\n  selector: 'app-conversation',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatButtonModule,MatTooltipModule ],\n  templateUrl: './conversation.component.html',\n  styleUrls: ['./conversation.component.scss']\n})\n\n\nexport class ConversationComponent {\n\n  @Input() conversationID:string;\n\n\n\n  private ngUnsubscribe = new Subject<void>();\n  sendMessageForm=new FormControl('', [Validators.required, this.noWhitespaceValidator()]);\n  messageToSend:Message={};\n\n  //list of messages\n  messageList:Array<any>=[];\n  userData:User;\n  currentUserId:string;\n\n  //before this, hr-today divider\n  setTodayArray:Array<any>=[];\n  today = new Date();\n  isTodayMsg=false;\n\n  //get conversation id from reservation\n  reservationId:string;\n  conversationId:string; //641d9c5641916e57e2b59b05\n  reservation:Reservation; //641d9c5641916e57e2b59b06\n\n  conversationData:any;\n  nameUser:string;\n  userFromMessage:string;\n\n  constructor(private formBuilder: FormBuilder,\n    private conversationsServices:MessagesConversationsService,\n    private usersService: UserDataService,\n    private scroller: ViewportScroller,\n    private datePipe: DatePipe,\n              private sanitizer: DomSanitizer){}\n\n    ngOnInit(): void {\n    this.initData();\n  }\n\n  initData(){\n    console.log('id conversatie',this.conversationID);\n    this.getCurrentUser();\n    this.getIdConversation();\n  }\n\n  makeLinksClickable(text: string): SafeHtml {\n    // Regular expression to match URLs with or without http/https prefix\n    const urlRegex = /((http(s)?:\\/\\/)|(www\\.))[^\\s]+/g;\n\n    // Replace URLs with anchor tags\n    const linkedText = text.replace(urlRegex, (url) => {\n      // Check if the URL starts with \"www.\" and add \"http://\" if not\n      if (url.startsWith(\"www.\")) {\n        url = \"https://\" + url;\n      }\n\n      return `<a href=\"${url}\" class=\"message-link\" target=\"_blank\">${url}</a>`;\n    });\n\n    // Sanitize the HTML to prevent security issues\n    return this.sanitizer.bypassSecurityTrustHtml(linkedText);\n  }\n\n  // Function to process messages and add hyperlinks\n  processMessages(messages: any[]): any[] {\n    return messages.map((message) => {\n      return {\n        ...message,\n        text: this.makeLinksClickable(message.text)\n      };\n    });\n  }\n\n  get processedMessages() {\n    return this.processMessages(this.messageList);\n  }\n\n  isLink(text: string): boolean {\n    // Regular expression to match URLs with or without http/https prefix\n    const urlRegex = /((https?:\\/\\/)|(www\\.[^\\s]+))/g;\n\n    // Test if the text contains a match to the URL regex\n    return urlRegex.test(text);\n  }\n\n  //get current user data for message list\n  getCurrentUser(){\n    this.usersService.getCurrentUser()\n    .pipe(takeUntil(this.ngUnsubscribe))\n    .subscribe({\n      next: (user:User)=>{\n        console.log('USERUL MEU',user);\n        this.userData=user;\n        this.currentUserId=this.userData.id;\n        if(this.currentUserId){\n          this.getIdConversation()\n        }\n      }\n    });\n  }\n\n   // Listen to data changes and refresh the user list\n listChanges() {\n\n  this.conversationsServices.triggerListChanges(true);\n  this.getMessagesList();\n}\n\n  //get id conversation from reservation\n  getIdConversation(){\n    this.conversationId=this.conversationID;\n    this.getConversationById(this.conversationID);\n    if(this.conversationId){\n      this.getMessagesList();\n    }\n  }\n\n  getConversationById(idConv){\n    this.conversationsServices.getConversationById(idConv)\n    .pipe(takeUntil(this.ngUnsubscribe))\n    .subscribe({\n      next: conversation =>{\n        this.conversationData=conversation;\n      }\n    });\n  }\n\n  //\n  // checkToday(date:any){\n  //   const today=this.datePipe.transform(this.today, 'dd/MM/YYYY');\n  //   const msgDate= this.datePipe.transform(date, 'dd/MM/YYYY');\n\n  //   this.isTodayMsg = (today === msgDate) ? true : false;\n  //   return;\n  // }\n\n  sendMessage(){\n    //tratam daca cumva trebuie adaugate si atasamente\n\n    if (this.sendMessageForm.valid) {\n      this.messageToSend.text=this.sendMessageForm.value;\n      console.log(this.messageToSend);\n\n      //if the message is not null\n      if(this.messageToSend.text !== ''){\n        this.conversationsServices.sendMessage(this.conversationId, this.messageToSend)\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe({\n              next: res=>{\n                this.sendMessageForm.reset();\n                this.listChanges();\n\n                //this.getMessagesList();\n                console.log('s-a trimis:', res, this.conversationId, this.messageToSend);\n              },\n              error: error=>{\n                console.log('nu s-a trimis:', error, this.conversationId, this.messageToSend);\n              }\n            });\n      } else {\n        console.log('invalid message')\n      }\n    }\n\n\n  }\n\n\n  noWhitespaceValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const value = control.value;\n      if (value && value.trim().length === 0) {\n        return { noWhitespace: true };\n      }\n      return null;\n    };\n  }\n\n    getMessagesList(){\n      const filters={\n        // userId: ,\n        // text: ''\n      }\n      this.conversationsServices.listMessageFiltered(this.conversationID,0 ,-1 ,'date', 'asc', filters)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe({\n        next: (res:any)=>{\n\n          this.messageList=res.content;\n          console.log(this.messageList);\n\n        }\n      });\n    }\n\n  getUserById(id){\n    this.usersService.getUserById(id)\n    .pipe(takeUntil(this.ngUnsubscribe))\n    .subscribe({\n      next: (user:User)=>{\n        this.nameUser=user?.lastName+ ' '+user?.firstName+': ';\n        }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-dashboard-header',\n  standalone: true,\n  imports: [CommonModule, RouterModule, TranslateModule],\n  templateUrl: './dashboard-header.component.html',\n  styleUrls: ['./dashboard-header.component.scss']\n})\nexport class DashboardHeaderComponent {\n  isCallUsed = false;\n  isExtraCallUsed = false;\n  isBackCallUsed=false;\n\n\n  @Input() pageTitleOne: string;\n  @Input() routeTitleOne: string;\n\n  @Input() pageTitleTwo: string;\n  @Input() routeTitleTwo: string;\n\n  @Input() pageTitleThree: string;\n  @Input() routeTitleThree: string;\n\n  @Input() buttonBackRoute: string;\n\n  @Input() buttonAddRoute: string;\n\n  @Input() buttonCallName: string;\n  @Output() buttonCall = new EventEmitter<void>();\n\n  @Input() buttonExtraName: string;\n  @Output() buttonExtraCall = new EventEmitter<void>();\n\n  @Input() buttonBackName: string;\n  @Output() buttonBackCall = new EventEmitter<void>();\n\n  handleCall() {\n    this.buttonCall.emit();\n  }\n\n  handleExtraCall() {\n    this.buttonExtraCall.emit();\n  }\n\n  handleBackCall() {\n    this.buttonBackCall.emit();\n  }\n\n\n  ngOnInit() {\n    this.isBackCallUsed = this.buttonBackCall.observed;\n    this.isCallUsed = this.buttonCall.observed;\n    this.isExtraCallUsed = this.buttonExtraCall.observed;\n  }\n\n\n}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root {\\n  --primary-background: #FFFFFF;\\n  --secondary-background: #edf0fa;\\n  --header-footer-background: #FFF ;\\n}\\n\\n[data-theme=dark]:root {\\n  --primary-background: #EDE9E8;\\n  --secondary-background: #EDE9E8;\\n}\\n\\n.positive-amount {\\n  color: rgb(105, 201, 140) !important;\\n}\\n\\n.negative-amount {\\n  color: rgb(241, 56, 88) !important;\\n}\\n\\n.content {\\n  background-color: var(--primary-background);\\n  padding: 0px;\\n  margin-bottom: 34px;\\n  border: 1px solid rgba(36, 57, 138, 0.16);\\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\\n  border-radius: 8px;\\n  overflow: hidden;\\n}\\n\\n.second-content {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 0px;\\n  margin-bottom: 34px;\\n  height: 286px;\\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.12), rgba(36, 57, 138, 0.12)), #FFFFFF;\\n  border-radius: 8px;\\n}\\n.second-content h4 {\\n  font-style: normal;\\n  font-weight: 700;\\n  font-size: 16px;\\n  line-height: 140%;\\n  display: flex;\\n  align-items: center;\\n  color: #24398A;\\n  opacity: 0.48;\\n}\\n\\np {\\n  margin-bottom: 0px;\\n}\\n\\n.content .header-notifications {\\n  background-color: #24398A;\\n  padding: 13px 24px;\\n}\\n.content .header-notifications h5 {\\n  font-style: normal;\\n  color: white;\\n  margin-bottom: 0px;\\n  font-weight: 400;\\n  font-size: 16px;\\n  line-height: 140%;\\n}\\n.content .header-notifications h6 {\\n  font-family: \\\"Roboto\\\";\\n  font-style: normal;\\n  color: white;\\n  margin-bottom: 0px;\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 160%;\\n  cursor: pointer;\\n}\\n.content .all-notifications .read-bkg {\\n  background-color: white;\\n}\\n.content .all-notifications .unread-bkg {\\n  background-color: rgba(36, 57, 138, 0.08);\\n  border-left: 2px solid #FFCC04;\\n}\\n.content .all-notifications .notification-single-card {\\n  height: 66px;\\n  padding: 17px 25px;\\n}\\n.content .all-notifications .notification-single-card:hover {\\n  cursor: pointer;\\n  background-color: rgba(36, 57, 138, 0.3);\\n}\\n.content .all-notifications .notification-single-card .icon-notif {\\n  width: 30px;\\n  height: 30px;\\n  margin-right: 14px;\\n  border-radius: 50%;\\n}\\n.content .all-notifications .notification-single-card p.message-notif {\\n  font-style: normal;\\n  color: #231F20;\\n  font-weight: 400;\\n  font-size: 16px;\\n  line-height: 18px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 1;\\n  /* autoprefixer: ignore next */\\n  -webkit-box-orient: vertical;\\n}\\n.content .all-notifications .notification-single-card p.time-notif {\\n  font-style: normal;\\n  font-weight: 400;\\n  font-size: 12px;\\n  line-height: 14px;\\n  color: #24398A;\\n  opacity: 0.48;\\n}\\n.content .all-notifications .notification-single-card .check-notif i {\\n  cursor: pointer;\\n  font-style: normal;\\n  font-weight: 900;\\n  font-size: 14px;\\n  line-height: 16px;\\n  color: #24398A;\\n  opacity: 0.48;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/theme/styles/components/_colors.scss\",\"webpack://./src/app/standalone-components/all-notifications/all-notifications.component.scss\"],\"names\":[],\"mappings\":\"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAdA;EACI,2CAAA;EACA,YAAA;EACA,mBAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;EACA,gBAAA;AAiBJ;;AAdA;EACI,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;EACA,YAAA;EACA,mBAAA;EAEA,aAAA;EAEA,4FAAA;EACA,kBAAA;AAeJ;AAbI;EACI,kBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,cAAA;EACA,aAAA;AAeR;;AAXA;EACI,kBAAA;AAcJ;;AAVI;EACI,yBD3CQ;EC4CR,kBAAA;AAaR;AAXQ;EACI,kBAAA;EACA,YAAA;EACA,kBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;AAaZ;AAXQ;EACI,qBAAA;EACA,kBAAA;EACA,YAAA;EACA,kBAAA;EAEA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,eAAA;AAYZ;AANQ;EACI,uBAAA;AAQZ;AAJQ;EACI,yCAAA;EACA,8BAAA;AAMZ;AAHQ;EAMI,YAAA;EACA,kBAAA;AAAZ;AANY;EACI,eAAA;EACA,wCAAA;AAQhB;AAFY;EACI,WAAA;EACA,YAAA;EACA,kBAAA;EACA,kBAAA;AAIhB;AADY;EACI,kBAAA;EACA,cD5FJ;EC6FI,gBAAA;EACA,eAAA;EACA,iBAAA;EAGA,gBAAA;EACA,uBAAA;EACA,oBAAA;EACA,qBAAA;EACA,8BAAA;EACA,4BAAA;AAChB;AAEY;EACI,kBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,cDpHA;ECqHA,aAAA;AAAhB;AAGY;EACI,eAAA;EACA,kBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,cD9HA;EC+HA,aAAA;AADhB\",\"sourcesContent\":[\"// theme colors\\n$primary-color: #24398A;\\n\\n$secondary-color: #FFCC29;\\n\\n$title: #231F20;\\n$paragraph: #231F20;\\n$link: #0D4494;\\n\\n$background-primary: #FFFFFF !default;\\n$background-secondary: #edf0fa !default;\\n\\n$header-footer-color: #FFF;\\n\\n:root {\\n  --primary-background: #{$background-primary};\\n  --secondary-background: #{$background-secondary};\\n  --header-footer-background: #{$header-footer-color}\\n}\\n\\n[data-theme='dark']:root {\\n  --primary-background: #EDE9E8;\\n  --secondary-background: #EDE9E8;\\n}\\n\\n//label colors\\n$active-color:#69C98C;\\n$pending-color:#FCCC3D;\\n$inactive-color:#858495;\\n$draft-color:#2F9DF4;\\n$archived-color:#E6536C;\\n$inprogress-color:#236BB4;\\n\\n$bkg-active-color:rgba(105, 201, 140, 0.2);\\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\\n\\n$like-color:#2CCEA7;\\n$dislike-color: #EA4335;;\\n\\n\\n//label buttons active/inactive/disabled\\n\\n$active-btn-color:#34A853;\\n$inactive-btn-color:#848484;\\n$disabled-btn-color:#E64335;\\n\\n.positive-amount{\\n    color:rgba(105, 201, 140, 1)!important;\\n}\\n\\n.negative-amount{\\n        color:rgba(241, 56, 88, 1)!important;\\n}\\n\\n\",\"@import \\\"/src/app/theme/styles/components/colors\\\";\\n\\n\\n.content{\\n    background-color: var(--primary-background);\\n    padding: 0px;\\n    margin-bottom:34px;\\n    border: 1px solid rgba(36, 57, 138, 0.16);\\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\\n    border-radius: 8px;\\n    overflow: hidden;\\n}\\n\\n.second-content{\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 0px;\\n    margin-bottom: 34px;\\n\\n    height: 286px;\\n\\n    background: linear-gradient(0deg, rgba(36, 57, 138, 0.12), rgba(36, 57, 138, 0.12)), #FFFFFF;\\n    border-radius: 8px;\\n\\n    h4{\\n        font-style: normal;\\n        font-weight: 700;\\n        font-size: 16px;\\n        line-height: 140%;\\n        display: flex;\\n        align-items: center;\\n        color: #24398A;\\n        opacity: 0.48;\\n    }\\n}\\n\\np{\\n    margin-bottom: 0px;\\n}\\n\\n.content{\\n    .header-notifications{\\n        background-color: $primary-color;\\n        padding: 13px 24px;\\n\\n        h5{\\n            font-style: normal;\\n            color: white;\\n            margin-bottom: 0px;\\n            font-weight: 400;\\n            font-size: 16px;\\n            line-height: 140%;\\n        }\\n        h6{\\n            font-family: 'Roboto';\\n            font-style: normal;\\n            color: white;\\n            margin-bottom: 0px;\\n\\n            font-weight: 300;\\n            font-size: 16px;\\n            line-height: 160%;\\n            cursor: pointer;\\n        }\\n    }\\n\\n    .all-notifications{\\n\\n        .read-bkg{\\n            background-color: white;\\n\\n        }\\n\\n        .unread-bkg{\\n            background-color: rgba($primary-color,0.08);\\n            border-left: 2px solid #FFCC04;\\n        }\\n\\n        .notification-single-card{\\n            &:hover {\\n                cursor: pointer;\\n                background-color: rgba($primary-color, 0.3);\\n            }\\n\\n            height: 66px;\\n            padding: 17px 25px;\\n\\n            .icon-notif{\\n                width: 30px;\\n                height: 30px;\\n                margin-right: 14px;\\n                border-radius: 50%;\\n            }\\n\\n            p.message-notif{\\n                font-style: normal;\\n                color: $paragraph;\\n                font-weight: 400;\\n                font-size: 16px;\\n                line-height: 18px;\\n\\n\\n                overflow: hidden;\\n                text-overflow: ellipsis;\\n                display: -webkit-box;\\n                -webkit-line-clamp: 1;\\n                /* autoprefixer: ignore next */\\n                -webkit-box-orient: vertical;\\n            }\\n\\n            p.time-notif{\\n                font-style: normal;\\n                font-weight: 400;\\n                font-size: 12px;\\n                line-height: 14px;\\n                color: $primary-color;\\n                opacity: 0.48;\\n            }\\n\\n            .check-notif i{\\n                cursor: pointer;\\n                font-style: normal;\\n                font-weight: 900;\\n                font-size: 14px;\\n                line-height: 16px;\\n                color: $primary-color;\\n                opacity: 0.48;\\n            }\\n        }\\n\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root {\\n  --primary-background: #FFFFFF;\\n  --secondary-background: #edf0fa;\\n  --header-footer-background: #FFF ;\\n}\\n\\n[data-theme=dark]:root {\\n  --primary-background: #EDE9E8;\\n  --secondary-background: #EDE9E8;\\n}\\n\\n.positive-amount {\\n  color: rgb(105, 201, 140) !important;\\n}\\n\\n.negative-amount {\\n  color: rgb(241, 56, 88) !important;\\n}\\n\\n.conversation-general-class {\\n  background-color: var(--primary-background);\\n  padding-top: 32px;\\n  padding-bottom: 32px;\\n}\\n\\n.conversation-general-class .conversationBox {\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  height: 560px;\\n  margin-bottom: 20px;\\n}\\n.conversation-general-class .align-message-right {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-end;\\n  justify-content: end;\\n}\\n.conversation-general-class .align-message-left {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: start;\\n}\\n.conversation-general-class .message-class {\\n  font-style: normal;\\n  font-weight: 400;\\n  font-size: 14px;\\n  line-height: 126%;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  margin: 0px;\\n  /* or 18px */\\n  letter-spacing: -0.02em;\\n}\\n.conversation-general-class .message-class.reciver-bubble-message {\\n  display: flex;\\n  align-items: flex-start;\\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), rgba(255, 255, 255, 0.72);\\n  box-shadow: 0px 4px 4px rgba(36, 57, 138, 0.08);\\n  border-radius: 0px 8px 8px 8px;\\n  padding: 8px;\\n  color: #231F20;\\n}\\n.conversation-general-class .message-class.current-user-bubble-message {\\n  display: flex;\\n  align-items: flex-end;\\n  background: #24398A;\\n  box-shadow: 0px 4px 4px rgba(36, 57, 138, 0.08);\\n  border-radius: 8px 0px 8px 8px;\\n  padding: 8px;\\n  color: white;\\n}\\n.conversation-general-class .sending-date-time {\\n  font-weight: 400;\\n  font-size: 12px;\\n  line-height: 18px;\\n  display: flex;\\n  color: #24398A;\\n  opacity: 0.5;\\n}\\n.conversation-general-class .hr-text {\\n  line-height: 1em;\\n  position: relative;\\n  outline: 0;\\n  border: 0;\\n  font-weight: 400;\\n  font-size: 12px;\\n  line-height: 140%;\\n  /* identical to box height, or 17px */\\n  text-align: center;\\n  letter-spacing: -0.02em;\\n  /* Primary */\\n  color: #24398A;\\n  opacity: 0.48;\\n}\\n.conversation-general-class .hr-text:before {\\n  content: \\\"\\\";\\n  background: linear-gradient(to right, transparent, #818078, transparent);\\n  position: absolute;\\n  left: 0;\\n  top: 50%;\\n  width: 100%;\\n  height: 1px;\\n}\\n.conversation-general-class .hr-text:after {\\n  content: attr(data-content);\\n  position: relative;\\n  display: inline-block;\\n  color: black;\\n  padding: 0 0.5em;\\n  line-height: 1.5em;\\n  color: #818078;\\n  background-color: #fcfcfa;\\n}\\n.conversation-general-class .input-message-class input {\\n  height: 50px;\\n  align-items: center;\\n  padding: 8px 12px 8px 24px;\\n  background: rgba(36, 57, 138, 0.08);\\n  border-radius: 100px;\\n  border: transparent;\\n}\\n.conversation-general-class .input-message-class input:focus, .conversation-general-class .input-message-class input:focus-visible {\\n  border: 1px solid rgba(36, 57, 138, 0.5);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/theme/styles/components/_colors.scss\",\"webpack://./src/app/standalone-components/conversation/conversation.component.scss\"],\"names\":[],\"mappings\":\"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACI,2CAAA;EACA,iBAAA;EACA,oBAAA;AAkBJ;;AAXI;EACE,kBAAA;EACA,kBAAA;EAEA,aAAA;EACA,mBAAA;AAaN;AARI;EACE,aAAA;EACA,sBAAA;EACA,qBAAA;EACA,oBAAA;AAUN;AAPI;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,sBAAA;AASN;AALI;EACI,kBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,uBAAA;EAAA,kBAAA;EACA,WAAA;EACA,YAAA;EAIA,uBAAA;AAIR;AAFQ;EACI,aAAA;EACA,uBAAA;EACA,8GAAA;EACA,+CAAA;EACA,8BAAA;EACA,YAAA;EACA,cDnDA;ACuDZ;AADQ;EACI,aAAA;EACA,qBAAA;EACA,mBAAA;EACA,+CAAA;EACA,8BAAA;EACA,YAAA;EACA,YAAA;AAGZ;AAGI;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,cAAA;EACA,YAAA;AADN;AAMI;EACI,gBAAA;EACA,kBAAA;EACA,UAAA;EACA,SAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,kBAAA;EACA,uBAAA;EAEA,YAAA;EAEA,cAAA;EAEA,aAAA;AARR;AAUQ;EACE,WAAA;EAGA,wEAAA;EACA,kBAAA;EACA,OAAA;EACA,QAAA;EACA,WAAA;EACA,WAAA;AAVV;AAYQ;EACE,2BAAA;EACA,kBAAA;EACA,qBAAA;EACA,YAAA;EAEA,gBAAA;EACA,kBAAA;EAEA,cAAA;EACA,yBAAA;AAZV;AAiBQ;EAEE,YAAA;EACA,mBAAA;EACA,0BAAA;EACA,mCAAA;EACA,oBAAA;EACA,mBAAA;AAhBV;AAkBU;EACE,wCAAA;AAhBZ\",\"sourcesContent\":[\"// theme colors\\n$primary-color: #24398A;\\n\\n$secondary-color: #FFCC29;\\n\\n$title: #231F20;\\n$paragraph: #231F20;\\n$link: #0D4494;\\n\\n$background-primary: #FFFFFF !default;\\n$background-secondary: #edf0fa !default;\\n\\n$header-footer-color: #FFF;\\n\\n:root {\\n  --primary-background: #{$background-primary};\\n  --secondary-background: #{$background-secondary};\\n  --header-footer-background: #{$header-footer-color}\\n}\\n\\n[data-theme='dark']:root {\\n  --primary-background: #EDE9E8;\\n  --secondary-background: #EDE9E8;\\n}\\n\\n//label colors\\n$active-color:#69C98C;\\n$pending-color:#FCCC3D;\\n$inactive-color:#858495;\\n$draft-color:#2F9DF4;\\n$archived-color:#E6536C;\\n$inprogress-color:#236BB4;\\n\\n$bkg-active-color:rgba(105, 201, 140, 0.2);\\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\\n\\n$like-color:#2CCEA7;\\n$dislike-color: #EA4335;;\\n\\n\\n//label buttons active/inactive/disabled\\n\\n$active-btn-color:#34A853;\\n$inactive-btn-color:#848484;\\n$disabled-btn-color:#E64335;\\n\\n.positive-amount{\\n    color:rgba(105, 201, 140, 1)!important;\\n}\\n\\n.negative-amount{\\n        color:rgba(241, 56, 88, 1)!important;\\n}\\n\\n\",\"@import \\\"../../theme/styles/components/colors\\\";\\n\\n.conversation-general-class{\\n    background-color: var(--primary-background);\\n    padding-top:32px;\\n    padding-bottom:32px;\\n}\\n\\n\\n\\n.conversation-general-class{\\n\\n    .conversationBox{\\n      overflow-y: scroll;\\n      overflow-x: hidden;\\n\\n      height:560px;\\n      margin-bottom:20px;\\n\\n\\n    }\\n\\n    .align-message-right{\\n      display: flex;\\n      flex-direction: column;\\n      align-items: flex-end;\\n      justify-content: end;\\n    }\\n\\n    .align-message-left{\\n      display: flex;\\n      flex-direction: column;\\n      align-items: flex-start;\\n      justify-content: start;\\n    }\\n\\n    //messages bubble style\\n    .message-class {\\n        font-style: normal;\\n        font-weight: 400;\\n        font-size: 14px;\\n        line-height: 126%;\\n        width: fit-content;\\n        margin:0px;\\n        /* or 18px */\\n\\n        // display: flex;\\n        // flex-direction: column;\\n        letter-spacing: -0.02em;\\n\\n        &.reciver-bubble-message {\\n            display: flex;\\n            align-items: flex-start;\\n            background: linear-gradient(0deg, rgba(36, 57, 138, 0.04), rgba(36, 57, 138, 0.04)), rgba(255, 255, 255, 0.72);\\n            box-shadow: 0px 4px 4px rgba(36, 57, 138, 0.08);\\n            border-radius: 0px 8px 8px 8px;\\n            padding:8px;\\n            color: $paragraph;\\n        }\\n\\n        &.current-user-bubble-message {\\n            display: flex;\\n            align-items: flex-end;\\n            background: #24398A;\\n            box-shadow: 0px 4px 4px rgba(36, 57, 138, 0.08);\\n            border-radius: 8px 0px 8px 8px;\\n            padding:8px;\\n            color:white;\\n        }\\n\\n\\n    }\\n    //date-hour message paragraf\\n    .sending-date-time{\\n      font-weight: 400;\\n      font-size: 12px;\\n      line-height: 18px;\\n      display: flex;\\n      color: #24398A;\\n      opacity: 0.5;\\n    }\\n\\n\\n    //divider between days\\n    .hr-text {\\n        line-height: 1em;\\n        position: relative;\\n        outline: 0;\\n        border: 0;\\n        font-weight: 400;\\n        font-size: 12px;\\n        line-height: 140%;\\n        /* identical to box height, or 17px */\\n\\n        text-align: center;\\n        letter-spacing: -0.02em;\\n\\n        /* Primary */\\n\\n        color: #24398A;\\n\\n        opacity: 0.48;\\n\\n        &:before {\\n          content: '';\\n          // use the linear-gradient for the fading effect\\n          // use a solid background color for a solid bar\\n          background: linear-gradient(to right, transparent, #818078, transparent);\\n          position: absolute;\\n          left: 0;\\n          top: 50%;\\n          width: 100%;\\n          height: 1px;\\n        }\\n        &:after {\\n          content: attr(data-content);\\n          position: relative;\\n          display: inline-block;\\n          color: black;\\n\\n          padding: 0 .5em;\\n          line-height: 1.5em;\\n          // this is really the only tricky part, you need to specify the background color of the container element...\\n          color: #818078;\\n          background-color: #fcfcfa;\\n        }\\n      }\\n\\n      .input-message-class{\\n        input{\\n          // height: 74px;\\n          height: 50px;\\n          align-items: center;\\n          padding: 8px 12px 8px 24px;\\n          background: rgba(36, 57, 138, 0.08);\\n          border-radius: 100px;\\n          border:transparent;\\n\\n          &:focus, &:focus-visible{\\n            border: 1px solid rgba($primary-color,0.5);\\n          }\\n        }\\n\\n        //button inside input\\n        // button.btn-long{\\n        //   margin-left: -215px;\\n        // }\\n      }\\n}\\n\\n\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".page-titles-row h2 {\\n  margin-bottom: 0;\\n  opacity: 0.48;\\n  cursor: pointer;\\n}\\n.page-titles-row h2.active-page-link {\\n  opacity: 1;\\n}\\n.page-titles-row h2.no-pointer {\\n  cursor: default;\\n}\\n.page-titles-row h2:not(:last-child) {\\n  margin-right: 30px;\\n}\\n.page-titles-row h2:not(:last-child)::after {\\n  content: \\\"/\\\";\\n  position: absolute;\\n  margin-left: 10px;\\n}\\n\\n.titleBar {\\n  padding: 35px 0px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/standalone-components/dashboard-header/dashboard-header.component.scss\"],\"names\":[],\"mappings\":\"AACE;EACE,gBAAA;EACA,aAAA;EACA,eAAA;AAAJ;AAGE;EACE,UAAA;AADJ;AAIE;EACE,eAAA;AAFJ;AAKE;EACE,kBAAA;AAHJ;AAME;EACE,YAAA;EACA,kBAAA;EACA,iBAAA;AAJJ;;AAQA;EACE,iBAAA;AALF\",\"sourcesContent\":[\".page-titles-row {\\n  h2 {\\n    margin-bottom: 0;\\n    opacity: 0.48;\\n    cursor: pointer;\\n  }\\n\\n  h2.active-page-link {\\n    opacity: 1;\\n  }\\n\\n  h2.no-pointer {\\n    cursor: default;\\n  }\\n\\n  h2:not(:last-child) {\\n    margin-right: 30px;\\n  }\\n\\n  h2:not(:last-child)::after {\\n    content: '/';\\n    position: absolute;\\n    margin-left: 10px;\\n  }\\n}\\n\\n.titleBar {\\n  padding: 35px 0px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Injectable","HttpClient","BehaviorSubject","MessagesConversationsService","triggerListChanges","message","listChanged","next","constructor","http","asObservable","updateConversation","conversationId","conversationObj","put","removeUserFromConversation","userId","post","leaveConversation","createConversation","category","name","addUserToConversation","getConversationById","get","listConversationFiltered","page","size","sort","dir","listBestinformConversationFiltered","filters","sendMessage","messageObj","listMessageFiltered","getMessageById","messageId","deleteMessage","delete","providedIn","ReservationsService","setReservationId","reservationId","listReservationFiltered","getReservationById","changeValidityStatus","status","changeReservationStatus","canceledReason","createReservationTimeSlot","resourceId","reservationObj","createReservationTimePicker","createReservationRentalBooking","createReservationProduct","createReservationCulturalBooking","createReservationCarBooking","createJobAplication","buyTickets","getUserListJobApplication","getReservationBySlug","slug","updateReservation","reservation","getNewAvailablePickerItems","bookingTimePickerId","date","hour","getNewAvailableRooms","startTime","endTime","listTripReservationFiltered","pageNumber","pageSize","getTripById","tripId","markReservationAsRead","read","sendClientEmail","ChangeDetectorRef","Component","CommonModule","DashboardHeaderComponent","Subject","takeUntil","timer","UserDataService","NotificationsService","MatTooltipModule","ToastService","Router","MatPaginatorModule","AllNotificationsComponent","userData","router","notificationsService","cdr","toastService","ngOnInit","getCurrentUser","listChangedObs","subscribe","data","getNotificationsList","detectChanges","triggerUserListChanges","res","user","pipe","ngUnsubscribe","roles","includes","isClient","isProvider","forEach","role","isAdmin","isStaff","unreadMessagesNumber","listMyNotifications","response","listNotification","content","totalElements","element","pageChanged","event","pageIndex","markAllAsRead","markAllNotificationAsRead","showToast","markAsRead","idNotification","markNotificationAsRead","goToNotificationObject","notification","objectType","objectId","navigate","queryParams","tab","objectSlug","ngOnDestroy","complete","selector","standalone","imports","template","Input","ViewportScroller","FormBuilder","FormControl","ReactiveFormsModule","Validators","MatFormFieldModule","MatInputModule","MatButtonModule","DatePipe","DomSanitizer","ConversationComponent","formBuilder","conversationsServices","usersService","scroller","datePipe","sanitizer","required","noWhitespaceValidator","Date","initData","console","log","conversationID","getIdConversation","makeLinksClickable","text","urlRegex","linkedText","replace","url","startsWith","bypassSecurityTrustHtml","processMessages","messages","map","processedMessages","messageList","isLink","test","currentUserId","id","listChanges","getMessagesList","idConv","conversation","conversationData","sendMessageForm","valid","messageToSend","value","reset","error","control","trim","length","noWhitespace","getUserById","nameUser","lastName","firstName","EventEmitter","Output","RouterModule","TranslateModule","handleCall","buttonCall","emit","handleExtraCall","buttonExtraCall","handleBackCall","buttonBackCall","isBackCallUsed","observed","isCallUsed","isExtraCallUsed"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}