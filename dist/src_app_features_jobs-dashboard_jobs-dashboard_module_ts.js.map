{"version":3,"file":"src_app_features_jobs-dashboard_jobs-dashboard_module_ts.js","mappings":"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","sources":["./src/app/features/jobs-dashboard/candidates-list/candidates-list.component.ts","./src/app/features/jobs-dashboard/jobs-dashboard-list/jobs-dashboard-list.component.ts","./src/app/features/jobs-dashboard/jobs-dashboard.module.ts","./src/app/shared/_services/resources.service.ts","./src/app/features/jobs-dashboard/candidates-list/candidates-list.component.scss","./src/app/features/jobs-dashboard/jobs-dashboard-list/jobs-dashboard-list.component.scss"],"sourcesContent":["import {ChangeDetectorRef, Component, ViewChild} from '@angular/core';\nimport {PageEvent} from \"@angular/material/paginator\";\nimport {MatSort, Sort} from \"@angular/material/sort\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {FormControl} from \"@angular/forms\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ResourcesService} from \"../../../shared/_services/resources.service\";\nimport {ModalService} from \"../../../shared/_services/modals.service\";\nimport {Router} from \"@angular/router\";\nimport {DatePipe} from \"@angular/common\";\nimport {UserDataService} from \"../../../shared/_services/userData.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ToastService} from \"../../../shared/_services/toast.service\";\nimport {JobService} from \"../../jobs/_services/job.service\";\nimport {MatLegacyPaginator as MatPaginator} from '@angular/material/legacy-paginator';\n\n@Component({\n  selector: 'app-candidates-list',\n  templateUrl: './candidates-list.component.html',\n  styleUrls: ['./candidates-list.component.scss'],\n  providers: [DatePipe, NgbModal]\n\n})\nexport class CandidatesListComponent {\n\n  // Mat Table\n  displayedColumns: string[] = ['id', 'name', 'isPublic', 'actions'];\n  dataList:Array<any>=[];\n  myList = [];\n  pageItems = [10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  //on destroy component\n  ngUnsubscribe= new Subject<void>();\n\n  // Mat Table - Filter Forms\n  searchFilter: FormControl = new FormControl('');\n\n  // Data Loaded\n  dataLoaded: boolean;\n\n  // Mat Table - pagination, sorting, filtering\n  page = 0;\n  sorting = \"date\";\n  dir = 'desc';\n  pageSize= 10;\n  totalElements: number;\n  jobDomainId:string;\n\n  providerName:string;\n  statusInput: string;\n\n\n  constructor(\n      private ngbModalService: NgbModal,\n      private resourcesService:ResourcesService,\n      private modalService:ModalService,\n      private router:Router,\n      private cdr: ChangeDetectorRef,\n      public datepipe: DatePipe,\n      private userService: UserDataService,\n      private modal: MatDialog,\n      private toastService:ToastService,\n      private jobService: JobService\n  ) { }\n\n  ngOnInit(): void {\n    // Initialize Data\n    this.initiateData();\n\n    // Listen to List Changes\n    this.listChanges();\n  }\n\n  initiateData(){\n    this.resourcesService.getListOfDomains()\n        .pipe(takeUntil(this.ngUnsubscribe))\n        .subscribe({\n          next: (domain:any)=>{\n\n            domain.forEach(element => {\n              if(element.key === 'jobs'){\n                this.jobDomainId=element.id;\n              }\n\n            });\n            console.log('id job', this.jobDomainId);\n            this.getData();\n            // Data Loaded\n            this.dataLoaded = true;\n\n            // Change Detection\n            this.cdr.detectChanges();\n          }\n        })\n  }\n\n\n  getData(){\n    const filterObj={\n      name: this.searchFilter.value === '' ? null :this.searchFilter.value\n    }\n\n    this.jobService.getListCvFilteredpage(this.page, this.pageSize, this.sorting, this.dir,filterObj).pipe(takeUntil(this.ngUnsubscribe))\n        .subscribe({\n          next: (resp: any)=>{\n            this.dataList=resp.content;\n            this.totalElements=resp.totalElements;\n\n            console.log('obiectul',filterObj);\n\n          }});\n  }\n\n\n  // Listen to data changes and refresh the user list\n  listChanges() {\n    this.modalService.listChangedObs.subscribe((data: boolean) => {\n      // If the response is true\n      if (data) {\n        // Get All Job List\n        this.getData();\n        this.cdr.detectChanges();\n        this.modalService.triggerUserListChanges(false);\n\n      }\n    })\n  }\n\n  // Filter List\n  filterData() {\n    // Go to first page\n    this.paginator.firstPage();\n    // this.page=0;\n\n    // Get All Job List\n    this.getData();\n  }\n\n  // Sort List\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this.sorting = sortState.active;\n      this.dir = sortState.direction;\n\n      // Go to first page\n      this.paginator.firstPage();\n      // this.page=0;\n\n\n      // Listen to layout changes\n      this.cdr.detectChanges();\n\n      // Get All job List\n      this.getData();\n    }\n  }\n\n  applyFilter(event?){\n    if (event.direction) {\n\n      this.dir = (event.direction === 'desc') || (event.direction === '') ? 'asc' : 'desc';\n      this.sorting=event.active\n\n      // Go to first page\n      this.paginator.firstPage();\n      // this.page=0;\n\n      // Listen to layout changes\n      this.cdr.detectChanges();\n\n      // Get All Documents List\n      this.getData();\n    }\n  }\n\n  // Page Changer\n  pageChanged(event: object) {\n    this.page = event[\"pageIndex\"];\n    this.pageSize = event[\"pageSize\"];\n\n    // Get All Job List\n    this.getData();\n  }\n\n  changeStatus(elementId, status) {\n    console.log('change status', elementId, status)\n\n    this.resourcesService.changeStatusForResource(elementId, status).subscribe({\n      next: (resp: { success: boolean, reason: string }) => {\n        if (resp.success) {\n          this.modalService.triggerUserListChanges(true);\n\n          this.toastService.showToast('Success', 'Vizibilitatea CV-ului a fost modificată!', 'success');\n          this.modal.closeAll();\n        }\n      },\n      error: (err: any) => {\n        console.log(err);\n        this.toastService.showToast('Error', 'Vizibilitatea CV-ului NU a fost modificată!', \"error\");\n\n      }\n    })\n  }\n\n  deleteElement(elementId: string) {\n    console.log('test', elementId);\n    this.jobService.deleteCvById(elementId).subscribe({\n      next: (resp: { success: boolean, reason: string }) => {\n        if (resp.success) {\n          this.modalService.triggerUserListChanges(true);\n\n          this.toastService.showToast('Success', 'CV-ul a fost sters!', 'success');\n          this.modal.closeAll();\n        }\n      },\n      error: (err: any) => {\n        console.log(err);\n        this.toastService.showToast('Error', 'CV-ul NU a putut fi sters!', \"error\");\n      }\n    })\n  }\n\n  downloadCv(cv: any){\n    console.log('cv', cv)\n    const link = document.createElement('a');\n    link.href = cv.filePath;\n    link.download = cv.fileName;\n    link.target = '_blank';\n    link.click();\n  }\n\n  openModal(modal, data?: string) {\n    this.modal.open(modal);\n    this.statusInput = data;\n  }\n\n  closeModal() {\n    this.modal.closeAll();\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n}\n\n","import { DatePipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Resource } from 'src/app/shared/_models/resource.model';\nimport { ModalService } from 'src/app/shared/_services/modals.service';\nimport { ResourcesService } from 'src/app/shared/_services/resources.service';\nimport { UserDataService } from 'src/app/shared/_services/userData.service';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport { ToastComponent } from 'src/app/theme/components/toast/toast.component';\nimport { ToastService } from 'src/app/shared/_services/toast.service';\n\n@Component({\n  selector: 'app-jobs-dashboard-list',\n  templateUrl: './jobs-dashboard-list.component.html',\n  styleUrls: ['./jobs-dashboard-list.component.scss'],\n  providers: [DatePipe, NgbModal]\n})\nexport class JobsDashboardListComponent {\n\n    // Mat Table\n  displayedColumns: string[] = ['id', 'title', 'provider', 'date&hour', 'status', 'views', 'actions'];\n  dataList:Array<any>=[];\n  myList = [];\n  pageItems = [10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  //on destroy component\n  ngUnsubscribe= new Subject<void>();\n\n  // Mat Table - Filter Forms\n  searchFilter: FormControl = new FormControl('');\n\n  // Data Loaded\n  dataLoaded: boolean;\n\n  // Mat Table - pagination, sorting, filtering\n  page = 0;\n  sorting = \"lastUpdateDate\";\n  dir = 'desc';\n  pageSize= 10;\n  totalElements: number;\n  jobDomainId:string;\n\n  providerName:string;\n  statusInput: string;\n\n\n  constructor(\n    private ngbModalService: NgbModal,\n    private resourcesService:ResourcesService,\n    private modalService:ModalService,\n    private router:Router,\n    private cdr: ChangeDetectorRef,\n    public datepipe: DatePipe,\n    private userService: UserDataService,\n    private modal: MatDialog,\n    private toastService:ToastService\n    ) { }\n\n    ngOnInit(): void {\n      // Initialize Data\n      this.initiateData();\n\n    // Listen to List Changes\n    this.listChanges();\n    }\n\n    initiateData(){\n      this.resourcesService.getListOfDomains()\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe({\n        next: (domain:any)=>{\n\n          domain.forEach(element => {\n            if(element.key === 'jobs'){\n              this.jobDomainId=element.id;\n            }\n\n          });\n          console.log('id job', this.jobDomainId);\n          this.getJobList();\n           // Data Loaded\n          this.dataLoaded = true;\n\n          // Change Detection\n          this.cdr.detectChanges();\n        }\n      })\n    }\n\n   \n    getJobList(){\n      const filterObj={\n        title: this.searchFilter.value === '' ? null :this.searchFilter.value,\n        domain: this.jobDomainId\n      }\n\n      this.resourcesService.listResourceFiltered(this.page, this.pageSize, this.sorting, this.dir,filterObj )\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe({\n        next: (jobList: any)=>{\n          this.dataList=jobList.content;\n          this.totalElements=jobList.totalElements;\n     \n          console.log('din job list, obiectul',filterObj);\n\n     }});\n    }\n\n    // Listen to data changes and refresh the user list\n  listChanges() {\n    this.modalService.listChangedObs.subscribe((data: boolean) => {\n      // If the response is true\n      if (data) {\n    // Get All Job List\n    this.getJobList();\n        this.cdr.detectChanges();\n        this.modalService.triggerUserListChanges(false);\n\n      }\n    })\n  }\n\n   // Filter List\n   filterData() {\n    // Go to first page\n    // this.paginator.firstPage();\n    this.page=0;\n\n    // Get All Job List\n    this.getJobList();\n  }\n\n  // Sort List\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this.sorting = sortState.active;\n      this.dir = sortState.direction;\n\n      // Go to first page\n      // this.paginator.firstPage();\n      this.page=0;\n\n\n      // Listen to layout changes\n      this.cdr.detectChanges();\n\n      // Get All job List\n      this.getJobList();\n    }\n  }\n\n  applyFilter(event?){\n    if (event.direction) {\n\n      this.dir = (event.direction === 'desc') || (event.direction === '') ? 'asc' : 'desc';\n      if(event.active === 'provider'){\n        this.sorting='userId';\n\n      }else if(event.active === 'date&hour'){\n        this.sorting='date';\n      }else{\n        this.sorting=event.active\n      }\n\n      // Go to first page\n      // this.paginator.firstPage();\n      this.page=0;\n\n      // Listen to layout changes\n      this.cdr.detectChanges();\n\n      // Get All Documents List\n      this.getJobList();\n    }\n  }\n\n  // Page Changer\n  pageChanged(event: object) {\n    this.page = event[\"pageIndex\"];\n    this.pageSize = event[\"pageSize\"];\n\n    // Get All Job List\n    this.getJobList();\n  }\n\n    changeStatus(jobId, status) {\n      console.log('change status', jobId, status)\n\n      this.resourcesService.changeStatusForResource(jobId, status).subscribe({\n          next: (resp: { success: boolean, reason: string }) => {\n              if (resp.success) {\n                this.modalService.triggerUserListChanges(true);\n\n                  this.toastService.showToast('Success', 'Statusul resursei a fost modificat!', 'success');\n                  this.modal.closeAll();\n              }\n          },\n          error: (err: any) => {\n              console.log(err);\n              if (err.error.reason === 'invalidId') {\n                  this.toastService.showToast('Error', 'Această resursă nu mai există în baza de date!', \"error\");\n              }\n\n              if (err.error.reason === 'notLoggedIn' || err.error.reason === 'tokenExpired') {\n                  this.toastService.showToast('Error', 'Pentru a finaliza această acțiune trebuie să fii logat!', \"error\");\n              }\n          }\n      })\n  }\n\n  openModal(modal, data?: string) {\n    this.modal.open(modal);\n    this.statusInput = data;\n}\n\n    closeModal() {\n      this.modal.closeAll();\n  }\n\n    ngOnDestroy(): void {\n      this.ngUnsubscribe.next();\n      this.ngUnsubscribe.complete();\n    }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JobsDashboardListComponent } from './jobs-dashboard-list/jobs-dashboard-list.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardHeaderComponent } from 'src/app/standalone-components/dashboard-header/dashboard-header.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatLegacyFormFieldModule } from '@angular/material/legacy-form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatLegacyInputModule } from '@angular/material/legacy-input';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatLegacySelectModule } from '@angular/material/legacy-select';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ViewJobComponent } from '../jobs/_components/view-job/view-job.component';\nimport { CandidatesListComponent } from './candidates-list/candidates-list.component';\n\nexport const routes: Routes = [\n  // {\n  //     path: '',\n  //     redirectTo: 'jobs-dashboard-list',\n  //     pathMatch: \"full\"\n  //\n  // },\n  {\n      path: 'list',\n      component: JobsDashboardListComponent,\n      pathMatch: \"full\"\n  },\n  {\n    path: 'candidates',\n    component: CandidatesListComponent,\n    pathMatch: \"full\"\n  },\n  {\n    path: 'view/:id',\n    component: ViewJobComponent,\n    pathMatch: \"full\"\n}\n\n];\n\n\n@NgModule({\n  declarations: [\n    JobsDashboardListComponent,\n    CandidatesListComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    DashboardHeaderComponent,\n    ReactiveFormsModule,\n    FormsModule,\n    MatLegacyFormFieldModule,\n    MatIconModule,\n    MatLegacyInputModule,\n    TranslateModule,\n    MatLegacySelectModule,\n    SharedModule,\n\n  ]\n})\nexport class JobsDashboardModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Category} from \"../_models/category.model\";\nimport {ResourceType} from \"../_models/resource-type.model\";\nimport {Resource} from \"../_models/resource.model\";\nimport {PaginationResponse} from \"../_models/pagination-response.model\";\nimport {Domain} from \"../_models/domain.model\";\nimport {BehaviorSubject} from 'rxjs';\nimport {ResourceFilters} from \"../_models/resource-filters.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResourcesService {\n\n    // Functions For Changes Detection\n    private listChanged = new BehaviorSubject(false);\n    listChangedObs = this.listChanged.asObservable();\n\n    // Trigger list changes\n    triggerListChanges(message: boolean) {\n        // Change the subject value\n        this.listChanged.next(message);\n    }\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAttributesFromTemplate(id: string) {\n        return this.http.get('/bestinform/getAttributesFromTemplate?resourceTemplateId=' + id)\n    }\n\n    getListOfDomains() {\n        return this.http.get('/bestinform/getListOfDomains');\n    }\n\n    getResourceByDomain(resourceDomain: string) {\n        return this.http.get('/bestinform/getAllResourceCategoriesByResourceDomain?resourceDomain=' + encodeURIComponent(resourceDomain));\n    }\n\n    getResourceCategoryById(categoryId: string) {\n        return this.http.get<Category>('/bestinform/getResourceCategoryById?resourceCategoryId=' + categoryId);\n    }\n\n    updateResourceCategory(categoryId: string, resCategory: Category) {\n        return this.http.put('/bestinform/updateResourceCategory?resourceCategoryId=' + categoryId, resCategory);\n    }\n\n    getAllResourceTypes() {\n        return this.http.get('/bestinform/getAllResourceTypes');\n    }\n\n    getAllResourceCategoriesByResourceDomain(domainId: string, hideCategories?: boolean) {\n        return this.http.get<Category[]>('/bestinform/getAllResourceCategoriesByResourceDomain?resourceDomain=' + domainId + '&hideCategories=' + (hideCategories ? hideCategories : false));\n    }\n\n    getAllResourceTypesByResourceCategory(id) {\n        return this.http.get<ResourceType[]>('/bestinform/getAllResourceTypesByResourceCategory?resourceCategoryId=' + id);\n    }\n\n    deleteResourceTypeById(id: string) {\n        return this.http.delete('/bestinform/deleteResourceTypeById?resourceTypeId=' + id);\n    }\n\n    getResourceTypeById(resourceTypeId) {\n        return this.http.get<ResourceType>('/bestinform/getResourceTypeById?resourceTypeId=' + resourceTypeId);\n    }\n\n\n    deleteResourceCategory(resourceId: string) {\n        return this.http.delete('/bestinform/deleteCategoryById?resourceCategoryId=' + resourceId);\n    }\n\n    getMaxOrderForCategory(domainId) {\n        return this.http.get('/bestinform/getMaxOrderByDomainId?domainId=' + domainId);\n    }\n\n    getMaxOrderForResType(categoryId) {\n        return this.http.get('/bestinform/getMaxOrderByCategoryId?categoryId=' + categoryId);\n    }\n\n    addResourceCategory(category) {\n        return this.http.post('/bestinform/addResourceCategory', category);\n    }\n\n    // addReviewToResource(reservationId, review:boolean) {\n    //     return this.http.post('/bestinform/addReviewToResource?reservationId='+reservationId+'&review='+review,{});\n    // }\n\n    //changeReservationStatus\n    addReviewToResource(reservationId: string, review: boolean) {\n        return this.http.post('/bestinform/addReviewToResource?reservationId=' + reservationId + '&review=' + review, {});\n    }\n\n    addResourceType(resType) {\n        return this.http.post('/bestinform/addResourceType', resType);\n    }\n\n    listCategoryFiltered(page: number, size: number, sort?: string, dir?: string, filters?: object) {\n        return this.http.post('/bestinform/listResourceCategoriesFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters);\n    }\n\n    //resources list\n    listResourceFiltered(page: number, size: number, sort?: string, dir?: string, filters?: ResourceFilters) {\n        return this.http.post<PaginationResponse>('/bestinform/listResourceFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters ? filters : {});\n    }\n\n    updateResourceType(resTypeId, resType) {\n        return this.http.put('/bestinform/updateResourceType?resourceTypeId=' + resTypeId, resType);\n    }\n\n    getResourceById(resourceId) {\n        return this.http.get<Resource>('/bestinform/getResourceById?resourceId=' + resourceId);\n    }\n\n    getAttributes(attributesList) {\n        return this.http.post('/bestinform/getAttributes', attributesList);\n    }\n\n    getAttributeCategories(categoryList) {\n        return this.http.post('/bestinform/getAttributeCategories', categoryList)\n    }\n\n\n    //Favorites resources\n    getMyFavoritesResources(language: string) {\n        return this.http.get('/bestinform/getMyFavoriteResources?language=' + language);\n    }\n\n    deleteResourceFromFavorite(resourceId: string) {\n        return this.http.post<{ success: boolean, reason: string }>('/bestinform/deleteResourceFromFavorites?resourceId=' + resourceId, {});\n    }\n\n    addResourceToFavorite(resourceId: string) {\n        return this.http.post<{ success: boolean, reason: string }>('/bestinform/addResourceToFavorites?resourceId=' + resourceId, {});\n    }\n\n\n    getDomainById(domainId: string) {\n        return this.http.get<Domain>('/bestinform/getDomainById?domainId=' + domainId);\n    }\n\n\n    //temporar\n    deleteResource(resourceId: string) {\n        return this.http.delete('/bestinform/deleteResource?resourceId=' + resourceId);\n    }\n\n    changeStatusForResource(resourceId: string, status: string) {\n        return this.http.put('/bestinform/changeResourceStatus?resourceId=' + resourceId + '&status=' + status, {});\n    }\n\n    getTimepickerByResourceId(resourceId: string) {\n        return this.http.get('/bestinform/getBookingTimePickerByResourceId?resourceId=' + resourceId);\n    }\n\n    getRoomById(roomId: string) {\n        return this.http.get('/bestinform/getRoomById?roomItemId=' + roomId);\n    }\n\n    getProductsByResourceId(resourceId: string) {\n        return this.http.get('/bestinform/getProductListByResourceId?resourceId=' + resourceId);\n    }\n\n    getTimeslotsByResourceId(resourceId: string) {\n        return this.http.get('/bestinform/getBookingTimeSlotListByResourceId?resourceId=' + resourceId);\n    }\n\n    getAvailableSlotByDate(timeslotId: string, date: string) {\n        return this.http.get('/bestinform/getAvailableSlotsByDate?bookingTimeSlotId=' + timeslotId + '&date=' + date);\n    }\n\n}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root {\\n  --primary-background: #FFFFFF;\\n  --secondary-background: #edf0fa;\\n  --header-footer-background: #FFF ;\\n}\\n\\n[data-theme=dark]:root {\\n  --primary-background: #EDE9E8;\\n  --secondary-background: #EDE9E8;\\n}\\n\\n.positive-amount {\\n  color: rgb(105, 201, 140) !important;\\n}\\n\\n.negative-amount {\\n  color: rgb(241, 56, 88) !important;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.card-body > p {\\n  font-weight: 400;\\n  font-size: 16px;\\n  line-height: 140%;\\n  letter-spacing: -0.02em;\\n  color: #231F20;\\n}\\n\\n.table-container {\\n  padding: 24px;\\n  border-radius: 8px;\\n  border: solid 1px transparent;\\n}\\n\\n.card-header {\\n  padding-top: 44.5px;\\n  padding-bottom: 42.5px;\\n  border-color: transparent;\\n  background-color: rgb(237, 239, 245);\\n}\\n\\n.card.custom-table.gutter-b {\\n  border: none;\\n}\\n\\n.card-event h3 {\\n  max-width: 400px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 1;\\n  /* autoprefixer: ignore next */\\n  -webkit-box-orient: vertical;\\n}\\n\\n@media only screen and (min-width: 992px) {\\n  td.mat-cell.cdk-cell.cdk-column-title.mat-column-title.ng-star-inserted {\\n    max-width: 300px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n  }\\n}\\n@media only screen and (min-width: 992px) and (max-width: 1199px) {\\n  td.mat-cell.cdk-cell.cdk-column-title.mat-column-title.ng-star-inserted {\\n    max-width: 120px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n  }\\n  td.mat-cell.cdk-cell.cdk-column-category.mat-column-category.ng-star-inserted,\\n  td.mat-cell.cdk-cell.cdk-column-date.mat-column-date.ng-star-inserted,\\n  td.mat-cell.cdk-cell.cdk-column-authors.mat-column-authors.ng-star-inserted {\\n    max-width: 50px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n  }\\n}\\ni.fa-search {\\n  color: rgba(36, 57, 138, 0.24);\\n}\\n\\n/*:host {\\n    ::ng-deep .filters-inputs {\\n      .mat-form-field-wrapper {\\n        padding: 0;\\n      }\\n    }\\n  }*/\\na.title-link {\\n  text-decoration: none;\\n  color: #24398A;\\n  font-weight: 500;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/theme/styles/components/_colors.scss\",\"webpack://./src/app/features/jobs-dashboard/jobs-dashboard-list/jobs-dashboard-list.component.scss\"],\"names\":[],\"mappings\":\"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAhBA;EACE,WAAA;AAmBF;;AAfE;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,uBAAA;EACA,cDLQ;ACuBZ;;AAdA;EACE,aAAA;EACA,kBAAA;EACA,6BAAA;AAiBF;;AAdA;EACE,mBAAA;EACA,sBAAA;EACA,yBAAA;EACA,oCAAA;AAiBF;;AAdA;EACE,YAAA;AAiBF;;AAbE;EACE,gBAAA;EACA,gBAAA;EACA,uBAAA;EACA,oBAAA;EACA,qBAAA;EACA,8BAAA;EACA,4BAAA;AAgBJ;;AAXA;EAEE;IACE,gBAAA;IACA,uBAAA;IACA,gBAAA;IACA,mBAAA;EAaF;AACF;AAVA;EAGE;IACE,gBAAA;IACA,uBAAA;IACA,gBAAA;IACA,mBAAA;EAUF;EAPA;;;IAGE,eAAA;IACA,uBAAA;IACA,gBAAA;IACA,mBAAA;EASF;AACF;AANA;EACE,8BAAA;AAQF;;AALA;;;;;;IAAA;AAQA;EACE,qBAAA;EACA,cDxFc;ECyFd,gBAAA;AAOF\",\"sourcesContent\":[\"// theme colors\\n$primary-color: #24398A;\\n\\n$secondary-color: #FFCC29;\\n\\n$title: #231F20;\\n$paragraph: #231F20;\\n$link: #0D4494;\\n\\n$background-primary: #FFFFFF !default;\\n$background-secondary: #edf0fa !default;\\n\\n$header-footer-color: #FFF;\\n\\n:root {\\n  --primary-background: #{$background-primary};\\n  --secondary-background: #{$background-secondary};\\n  --header-footer-background: #{$header-footer-color}\\n}\\n\\n[data-theme='dark']:root {\\n  --primary-background: #EDE9E8;\\n  --secondary-background: #EDE9E8;\\n}\\n\\n//label colors\\n$active-color:#69C98C;\\n$pending-color:#FCCC3D;\\n$inactive-color:#858495;\\n$draft-color:#2F9DF4;\\n$archived-color:#E6536C;\\n$inprogress-color:#236BB4;\\n\\n$bkg-active-color:rgba(105, 201, 140, 0.2);\\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\\n\\n$like-color:#2CCEA7;\\n$dislike-color: #EA4335;;\\n\\n\\n//label buttons active/inactive/disabled\\n\\n$active-btn-color:#34A853;\\n$inactive-btn-color:#848484;\\n$disabled-btn-color:#E64335;\\n\\n.positive-amount{\\n    color:rgba(105, 201, 140, 1)!important;\\n}\\n\\n.negative-amount{\\n        color:rgba(241, 56, 88, 1)!important;\\n}\\n\\n\",\"@import '/src/app/theme/styles/components/colors';\\ntable{\\n  width:100%;\\n}\\n\\n.card-body {\\n  & > p {\\n    font-weight: 400;\\n    font-size: 16px;\\n    line-height: 140%;\\n    letter-spacing: -0.02em;\\n    color: $paragraph;\\n  }\\n}\\n\\n.table-container{\\n  padding:24px;\\n  border-radius: 8px;\\n  border: solid 1px transparent;\\n}\\n\\n.card-header{\\n  padding-top: 44.5px;\\n  padding-bottom: 42.5px;\\n  border-color:transparent;\\n  background-color: rgba(237, 239, 245, 1);\\n}\\n\\n.card.custom-table.gutter-b{\\n  border:none;\\n}\\n\\n.card-event{\\n  h3{\\n    max-width:400px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: -webkit-box;\\n    -webkit-line-clamp: 1;\\n    /* autoprefixer: ignore next */\\n    -webkit-box-orient: vertical;\\n  }\\n}\\n\\n\\n@media only screen and (min-width:992px){\\n  //title cell\\n  td.mat-cell.cdk-cell.cdk-column-title.mat-column-title.ng-star-inserted{\\n    max-width: 300px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n  }\\n}\\n\\n@media only screen and (min-width:992px) and (max-width: 1199px){\\n\\n\\n  td.mat-cell.cdk-cell.cdk-column-title.mat-column-title.ng-star-inserted{\\n    max-width: 120px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n  }\\n\\n  td.mat-cell.cdk-cell.cdk-column-category.mat-column-category.ng-star-inserted,\\n  td.mat-cell.cdk-cell.cdk-column-date.mat-column-date.ng-star-inserted,\\n  td.mat-cell.cdk-cell.cdk-column-authors.mat-column-authors.ng-star-inserted{\\n    max-width: 50px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n  }\\n}\\n\\ni.fa-search{\\n  color: rgba($primary-color, 0.24);\\n}\\n\\n/*:host {\\n    ::ng-deep .filters-inputs {\\n      .mat-form-field-wrapper {\\n        padding: 0;\\n      }\\n    }\\n  }*/\\n\\na.title-link{\\n  text-decoration: none;\\n  color:$primary-color;\\n  font-weight: 500;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["ChangeDetectorRef","Component","ViewChild","MatSort","Subject","takeUntil","FormControl","NgbModal","ResourcesService","ModalService","Router","DatePipe","UserDataService","MatDialog","ToastService","JobService","MatLegacyPaginator","MatPaginator","CandidatesListComponent","constructor","ngbModalService","resourcesService","modalService","router","cdr","datepipe","userService","modal","toastService","jobService","ngOnInit","initiateData","listChanges","getListOfDomains","pipe","ngUnsubscribe","subscribe","next","domain","forEach","element","key","jobDomainId","id","console","log","getData","dataLoaded","detectChanges","filterObj","name","searchFilter","value","getListCvFilteredpage","page","pageSize","sorting","dir","resp","dataList","content","totalElements","listChangedObs","data","triggerUserListChanges","filterData","paginator","firstPage","announceSortChange","sortState","direction","active","applyFilter","event","pageChanged","changeStatus","elementId","status","changeStatusForResource","success","showToast","closeAll","error","err","deleteElement","deleteCvById","downloadCv","cv","link","document","createElement","href","filePath","download","fileName","target","click","openModal","open","statusInput","closeModal","ngOnDestroy","complete","args","static","selector","template","providers","JobsDashboardListComponent","getJobList","title","listResourceFiltered","jobList","jobId","reason","NgModule","CommonModule","RouterModule","DashboardHeaderComponent","FormsModule","ReactiveFormsModule","MatLegacyFormFieldModule","MatIconModule","MatLegacyInputModule","TranslateModule","MatLegacySelectModule","SharedModule","ViewJobComponent","routes","path","component","pathMatch","JobsDashboardModule","declarations","imports","forChild","Injectable","HttpClient","BehaviorSubject","triggerListChanges","message","listChanged","http","asObservable","getAttributesFromTemplate","get","getResourceByDomain","resourceDomain","encodeURIComponent","getResourceCategoryById","categoryId","updateResourceCategory","resCategory","put","getAllResourceTypes","getAllResourceCategoriesByResourceDomain","domainId","hideCategories","getAllResourceTypesByResourceCategory","deleteResourceTypeById","delete","getResourceTypeById","resourceTypeId","deleteResourceCategory","resourceId","getMaxOrderForCategory","getMaxOrderForResType","addResourceCategory","category","post","addReviewToResource","reservationId","review","addResourceType","resType","listCategoryFiltered","size","sort","filters","updateResourceType","resTypeId","getResourceById","getAttributes","attributesList","getAttributeCategories","categoryList","getMyFavoritesResources","language","deleteResourceFromFavorite","addResourceToFavorite","getDomainById","deleteResource","getTimepickerByResourceId","getRoomById","roomId","getProductsByResourceId","getTimeslotsByResourceId","getAvailableSlotByDate","timeslotId","date","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}