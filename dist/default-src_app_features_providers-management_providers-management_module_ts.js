(self["webpackChunkbestinform"] = self["webpackChunkbestinform"] || []).push([["default-src_app_features_providers-management_providers-management_module_ts"],{

/***/ 39295:
/*!************************************************************************************************!*\
  !*** ./src/app/features/providers-management/add-edit-provider/add-edit-provider.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddEditProviderComponent": () => (/* binding */ AddEditProviderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_edit_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-edit-provider.component.html?ngResource */ 54420);
/* harmony import */ var _add_edit_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-edit-provider.component.scss?ngResource */ 67650);
/* harmony import */ var _add_edit_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_add_edit_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var randexp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! randexp */ 26802);
/* harmony import */ var randexp__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(randexp__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/toast.service */ 62941);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var src_app_shared_services_staff_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/_services/staff.service */ 50871);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @ngx-translate/core */ 38699);
/* harmony import */ var src_app_shared_domains__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/shared/_domains */ 70350);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 34534);
/* harmony import */ var _delete_provider_delete_provider_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../delete-provider/delete-provider.component */ 64759);
/* harmony import */ var _status_provider_status_provider_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../status-provider/status-provider.component */ 32901);
/* harmony import */ var _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../shared/_services/resources.service */ 3145);
/* harmony import */ var _shared_services_location_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../shared/_services/location.service */ 63712);




















let AddEditProviderComponent = class AddEditProviderComponent {
  constructor(fb, toastService, route, router, userService, modalService, staffService, providerService, translate, domainsList, ngbModal, domainsService, locationService) {
    this.fb = fb;
    this.toastService = toastService;
    this.route = route;
    this.router = router;
    this.userService = userService;
    this.modalService = modalService;
    this.staffService = staffService;
    this.providerService = providerService;
    this.translate = translate;
    this.domainsList = domainsList;
    this.ngbModal = ngbModal;
    this.domainsService = domainsService;
    this.locationService = locationService;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_13__.Subject();
    //password visibility
    this.showPassword = false;
    // images url and files
    this.thumbnailUrl = {
      fileName: undefined,
      filePath: undefined
    };
    this.countries = [];
    this.cities = [];
    this.$fileObservables = [];
    this.showActions = false;
    this.isCurrentUser = false;
    this.activeStatus = false;
  }
  //areas of activity
  // domains = this.domainsList.domains;
  ngOnInit() {
    this.getCountries();
    //get the role to allow or not some fields (percentage)
    this.getUserRole();
    // TO DO - de verificat ruta daca are id, daca are populam pagina cu informatii luate din getProviderById, daca nu - din getCurrentUser
    if (this.router.url.includes('profile')) {
      console.log('providerul se editeaza pe el');
      this.isEditMode = true;
      this.isCurrentUser = true;
      this.getCurrentUser();
    } else if (this.router.url.includes('add')) {
      console.log('providerul este adaugat');
      this.isEditMode = false;
      this.showActions = true;
    } else {
      console.log('providerul este editat de cineva');
      this.isEditMode = true;
      this.showActions = true;
      this.route.params.subscribe(params => {
        if (params['id']) {
          this.providerId = params['id'];
          this.getUserById(this.providerId);
        }
      });
    }
    // this.translateItems();
    this.initFormGroup();
    this.getDomains();
  }
  getCountries() {
    this.locationService.getAllCountries().subscribe({
      next: countries => {
        this.countries = countries;
      }
    });
  }
  getCities(event) {
    const country = {
      country: event.value ? event.value : event
    };
    this.locationService.getCityFilter(0, -1, null, null, country).subscribe({
      next: cities => {
        console.log(cities);
        this.cities = cities.content;
      }
    });
  }
  getUserRole() {
    this.userService.getCurrentUser().subscribe(response => {
      this.isAdmin = response.roles.includes('ROLE_SUPER_ADMIN');
      this.isStaff = response.roles.includes('ROLE_STAFF');
      this.isProvider = response.roles.includes('ROLE_PROVIDER');
    });
  }
  getDomains() {
    this.domainsService.getListOfDomains().subscribe(listOfDomains => {
      console.log('list of dom', listOfDomains);
      this.domains = listOfDomains;
    });
  }
  initFormGroup() {
    this.addEditForm = this.fb.group({
      companyName: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required]],
      cui: [''],
      telephone: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.compose([_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.pattern('^[0-9]*$'), _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.minLength(10), _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.maxLength(10)])],
      email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.email]],
      firstName: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required]],
      lastName: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required]],
      gender: [''],
      birthdate: [''],
      billingAddress: this.fb.group({
        city: [''],
        iban: [''],
        address: [''],
        country: [''],
        bankName: [''],
        name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required]]
      }),
      roles: [['ROLE_PROVIDER']],
      domain: [''],
      password: [''],
      checkPassword: [''],
      approvedStatus: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required]],
      activeStatus: false,
      percentageCommission: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.pattern('^[0-9]*$')]]
    }, {
      validator: this.checkPassword
    });
  }
  checkPassword(control) {
    const password = control.get('password');
    const nameRegexp = /[!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]/;
    const numbers = /[1234567890]/;
    const upper = /[A-Z]/;
    const lower = /[a-z]/;
    const whiteSpace = /[" "]/;
    // let errorsObject = {};
    //Password required
    // if (password.value === null || password.value === '') {
    //     password.setErrors({required: true});
    // }
    //Min length password
    if (password.value && password.value.length < 8) {
      password.setErrors({
        passMin: true
      });
      // errorsObject = {...errorsObject, passMin: true};
    }
    //Max length password
    if (password.value?.length > 16) {
      password.setErrors({
        passMax: true
      });
      // errorsObject = {...errorsObject, passMax: true};
    }
    //At least a special character
    if (password.value && !nameRegexp.test(password.value)) {
      password.setErrors({
        specialCharacter: true
      });
      // errorsObject = {...errorsObject, specialCharacter: true};
    }
    //At least a digit
    if (password.value && !numbers.test(password.value)) {
      password.setErrors({
        number: true
      });
      // errorsObject = {...errorsObject, number: true};
    }
    //At least an upper case
    if (password.value && !upper.test(password.value)) {
      password.setErrors({
        upper: true
      });
      // errorsObject = {...errorsObject, upper: true};
    }
    //At least a lower case
    if (password.value && !lower.test(password.value)) {
      password.setErrors({
        lower: true
      });
      // errorsObject = {...errorsObject, lower: true};
    }
    //No whitespaces
    if (password.value && whiteSpace.test(password.value)) {
      password.setErrors({
        whiteSpace: true
      });
    }
    return;
  }
  save() {
    this.addEditForm.markAllAsTouched();
    if (this.addEditForm.valid) {
      console.log('datele trimise lalala', this.addEditForm.value);
      if (this.isCurrentUser) {
        this.updateCurrentUser();
      } else if (this.isEditMode) {
        this.updateProvider();
      } else {
        this.addEditForm.get('password').addValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required);
        this.addEditForm.get('checkPassword').addValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required);
        this.addEditForm.get('password').updateValueAndValidity();
        this.addEditForm.get('checkPassword').updateValueAndValidity();
        this.addEditForm.markAllAsTouched();
        if (this.addEditForm.valid) {
          this.addProvider();
        } else {
          // TO DO - de pus notificare ca mai sunt campuri de completat
          return;
        }
      }
    } else {
      console.log('nu e valid');
      // TO DO - de pus notificare ca mai sunt campuri de completat
    }
  }

  getUserById(idProvider) {
    this.userService.getUserById(idProvider).subscribe(userData => {
      console.log('user data', userData);
      this.contractTitle = userData?.contract === null ? 'Contractul nu a fost adaugat.' : userData?.contract?.fileName;
      this.providerData = userData;
      this.addEditForm.patchValue(userData);
      this.getCities(userData.billingAddress.country);
      console.log("form init get user", this.addEditForm.value);
      this.dataLoaded = true;
    });
  }
  getCurrentUser() {
    this.userService.getCurrentUser().subscribe(userData => {
      this.contractTitle = userData.contract === null ? 'Contractul nu a fost adaugat.' : userData.contract.fileName;
      this.providerData = userData;
      this.providerId = userData.id;
      this.addEditForm.patchValue(userData);
      this.getCities(userData.billingAddress.country);
      console.log('init current user form', userData);
      this.dataLoaded = true;
    });
  }
  activateUser(event) {
    console.log('Status user', event);
    this.activeStatus = event === 'approved';
    if (this.activeStatus) {
      this.approvedStatus = {
        reason: 'Providerul a fost acceptat în momentul adăugării de către staff-ul Bestinform.',
        approvedStatus: true
      };
    } else {
      this.approvedStatus = null;
    }
  }
  onUploadContract($event) {
    console.log('contractul inainte de a aplea metoda de incarcare', this.contractTitle);
    this.userService.uploadUserContract(this.providerId, $event.target.files[0]).subscribe(() => {
      this.contractTitle = $event.target.files[0].name;
      // this.toastService.showToast( "Succes", this.uploadContractSuccessMsg, "success");
      console.log('contractul dupa incarcare', $event.target.files[0]);
      this.toastService.showToast("Success", this.translate.instant("PROVIDER.MESSAGE.UPLOAD_CONTRACT_SUCCESS"), "success");
    });
  }
  updateProvider() {
    console.log('FORM ADD updateProvider', this.addEditForm.value);
    this.userService.getUserById(this.providerId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: userData => {
        //the last contract that was uploaded
        if (userData.contract !== null) {
          this.contractObject = {
            fileName: userData.contract.fileName,
            filePath: userData.contract.filePath
          };
        }
        //the last contract that was uploaded
        this.updateProviderObject = {
          ...this.addEditForm.value,
          contract: this.contractObject
        };
        console.log('obiect trimis la editare', this.updateProviderObject);
        //update user
        this.userService.updateUser(this.providerId, this.updateProviderObject).subscribe(() => {
          this.modalService.triggerUserListChanges(true);
          this.toastService.showToast("Succes", this.translate.instant("PROVIDER.MESSAGE.UPDATE_SUCCESS"), "success");
          this.router.navigate(['../../active'], {
            relativeTo: this.route
          });
        });
      }
    });
    // const updateProvider={...this.addEditForm.value, contract: this.contractObject}
    // console.log('obiectul pe care il trimitem pentru modificat',updateProvider);
    // this.userService.updateUser(this.providerId, this.updateProviderObject).subscribe(() => {
    //     this.modalService.triggerUserListChanges(true);
    //     this.toastService.showToast("Succes", this.translate.instant("PROVIDER.MESSAGE.UPDATE_SUCCESS"), "success");
    //     this.router.navigate(['../../active'], {relativeTo: this.route});
    // });
  }

  updateCurrentUser() {
    // console.log('FORM current user', this.addEditForm.value);
    // console.log('FORM ADD updateCurrentUser', this.addEditForm.value);
    this.userService.getCurrentUser().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: user => {
        //the last contract that was uploaded
        if (user.contract !== null) {
          this.contractObject = {
            fileName: user.contract.fileName,
            filePath: user.contract.filePath
          };
        }
        //create the object to send for update user
        this.updateCurrentUserObject = {
          ...this.addEditForm.value,
          contract: this.contractObject
        };
        //update user
        this.userService.updateCurrentUser(this.updateCurrentUserObject).subscribe(response => {
          console.log(response);
          this.toastService.showToast("Succes", this.translate.instant("PROVIDER.MESSAGE.UPDATE_SUCCESS"), "success");
          this.router.navigate(['../view'], {
            relativeTo: this.route
          });
        });
      }
    });
  }
  addProvider() {
    // console.log('FORM ADD', this.addEditForm.value);
    this.userService.addUser(this.addEditForm.value).subscribe(response => {
      this.newProviderId = response.reason;
      this.toastService.showToast("Succes", this.translate.instant('User-ul a fost adaugat.'), "success");
      if (this.activeStatus) {
        this.providerService.changeActiveStatus(this.newProviderId, this.activeStatus).subscribe(responseActive => {
          console.log('User activat', responseActive);
          this.toastService.showToast("Succes", this.translate.instant('User-ul a fost activat.'), "success");
          this.providerService.changeUserStatus(this.newProviderId, 'active').subscribe(() => {
            console.log("id-ul de schimbare status" + response.reason + "approve statusul " + this.activeUser);
            this.toastService.showToast("Succes", this.translate.instant('User-ul a fost aprobat.'), "success");
          });
        });
      } else {
        this.userService.sendRegistrationEmail(this.newProviderId).subscribe(resp => {
          console.log('resp', resp);
          this.toastService.showToast("Succes", this.translate.instant('Mail-ul pentru activare a fost trimis.'), "success");
        }, error => {
          this.toastService.showToast("Eroare", this.translate.instant('Mail-ul pentru activare NU a fost trimis.'), "error");
        });
      }
      this.modalService.triggerUserListChanges(true);
      this.toastService.showToast("Succes", this.translate.instant('PROVIDER.MESSAGE.ADD_SUCCESS'), "success");
      this.router.navigate(['../active'], {
        relativeTo: this.route
      });
    }, error => {
      // Show specific error feedback message
      if (error.error.reason === 'emailNotValid') {
        this.toastService.showToast("Eroare", this.translate.instant('PROVIDER.MESSAGE.EMAIL_ERROR'), "error");
      } else if (error.error.reason === 'invalidPassword') {
        this.toastService.showToast("Eroare", "Parola nu este valida!", "error");
      } else if (error.error.reason === 'emailExists') {
        this.toastService.showToast("Eroare", this.translate.instant('PROVIDER.MESSAGE.EMAIL_EXIST'), "error");
      } else {
        this.toastService.showToast("Eroare", this.translate.instant('PROVIDER.MESSAGE.ERROR_MSG'), "error");
      }
    });
  }
  //password
  generatePassword() {
    const randexp = new randexp__WEBPACK_IMPORTED_MODULE_2__(/^(.\d{1})(.[a-z]\d{1})(.[A-Z]\d{1})(.[@$!%*?&]\d{1})(?=.[a-zA-Z]).{0,1}$/).gen();
    console.log(randexp);
    let generatedPassword = randexp;
    while (generatedPassword.indexOf(' ') !== -1) {
      // console.log(randexp.indexOf(' '));
      generatedPassword = generatedPassword.slice(0, generatedPassword.indexOf(' ')) + generatedPassword.slice(generatedPassword.indexOf(' ') + 1);
    }
    while (generatedPassword.indexOf('"') !== -1) {
      generatedPassword = generatedPassword.slice(0, generatedPassword.indexOf('"')) + generatedPassword.slice(generatedPassword.indexOf('"') + 1);
    }
    console.log(generatedPassword);
    this.addEditForm.get('password').patchValue(generatedPassword);
    this.addEditForm.get('checkPassword').patchValue(generatedPassword);
  }
  resetPassword() {
    this.addEditForm.get('password').markAsTouched();
    if (this.addEditForm.get('password').valid) {
      console.log(this.providerData["id"].toString(), this.addEditForm.get('password').value);
      this.staffService.changeUserPassword(this.providerData["id"].toString(), this.addEditForm.get('password').value).subscribe(res => {
        if (res.success) {
          this.toastService.showToast('Succes', this.translate.instant('PROVIDER.MESSAGE.RESET_PASSWORD_SUCCESS'), 'success');
        } else {
          this.toastService.showToast('Eroare', this.translate.instant('PROVIDER.MESSAGE.RESET_PASSWORD_ERROR'), 'error');
        }
      });
    } else {
      this.toastService.showToast('Eroare', this.translate.instant('PROVIDER.MESSAGE.RESET_PASSWORD_CRITERIA_ERROR'), 'error');
    }
  }
  // Modal - request doc
  deleteProvider(elementId) {
    this.ngbModal.open(_delete_provider_delete_provider_component__WEBPACK_IMPORTED_MODULE_9__.DeleteProviderComponent, {
      centered: true
    });
    this.modalService.setElementId(elementId);
  }
  // Modal - blocare
  blockProvider(elementId) {
    const modalRef = this.ngbModal.open(_status_provider_status_provider_component__WEBPACK_IMPORTED_MODULE_10__.StatusProviderComponent, {
      centered: true
    });
    modalRef.componentInstance.actionType = 'inactive';
    this.modalService.setElementId(elementId);
  }
  //gallery
  //clear fields by x icon
  clearName() {
    this.addEditForm.get("name").patchValue('');
  }
  clearCompanyName() {
    this.addEditForm.get("companyName").patchValue('');
  }
  clearLastName() {
    this.addEditForm.get("lastName").patchValue('');
  }
  clearAddress() {
    this.addEditForm.get("address").patchValue('');
  }
  clearIBAN() {
    this.addEditForm.get("iban").patchValue('');
  }
  clearBank() {
    this.addEditForm.get("bankName").patchValue('');
  }
  //de modificat numele cand revenim
  clearChannelEmail() {
    this.addEditForm.get("channelEmail").patchValue('');
  }
  //de modificat numele cand revenim
  clearToken() {
    this.addEditForm.get("token").patchValue('');
  }
  //de modificat numele cand revenim
  clearSignature() {
    this.addEditForm.get("signature").patchValue('');
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_14__.FormBuilder
  }, {
    type: src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__.ToastService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_16__.ActivatedRoute
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_16__.Router
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__.UserDataService
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__.ModalService
  }, {
    type: src_app_shared_services_staff_service__WEBPACK_IMPORTED_MODULE_6__.StaffService
  }, {
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_7__.ProvidersService
  }, {
    type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_17__.TranslateService
  }, {
    type: src_app_shared_domains__WEBPACK_IMPORTED_MODULE_8__.Domains
  }, {
    type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_18__.NgbModal
  }, {
    type: _shared_services_resources_service__WEBPACK_IMPORTED_MODULE_11__.ResourcesService
  }, {
    type: _shared_services_location_service__WEBPACK_IMPORTED_MODULE_12__.LocationService
  }];
};
AddEditProviderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_19__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_20__.Component)({
  selector: 'app-edit-provider',
  template: _add_edit_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [src_app_shared_domains__WEBPACK_IMPORTED_MODULE_8__.Domains],
  styles: [(_add_edit_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AddEditProviderComponent);


/***/ }),

/***/ 76461:
/*!**********************************************************************************************!*\
  !*** ./src/app/features/providers-management/balance-provider/balance-provider.component.ts ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BalanceProviderComponent": () => (/* binding */ BalanceProviderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _balance_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./balance-provider.component.html?ngResource */ 74790);
/* harmony import */ var _balance_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./balance-provider.component.scss?ngResource */ 81339);
/* harmony import */ var _balance_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_balance_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var src_app_shared_domains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_domains */ 70350);
/* harmony import */ var src_app_shared_services_resources_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/resources.service */ 3145);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/paginator */ 36060);
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/sort */ 92197);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 34534);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var _view_payment_request_view_payment_request_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../view-payment-request/view-payment-request.component */ 62627);
/* harmony import */ var _payment_request_payment_request_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../payment-request/payment-request.component */ 5242);
/* harmony import */ var src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/shared/_services/settings.service */ 25560);








//











let BalanceProviderComponent = class BalanceProviderComponent {
  constructor(route, userService, resourcesService, cdr, ngbModal, modalService, providersService, datePipe, settingsService
  //serviciul de adaugare cereri
  ) {
    this.route = route;
    this.userService = userService;
    this.resourcesService = resourcesService;
    this.cdr = cdr;
    this.ngbModal = ngbModal;
    this.modalService = modalService;
    this.providersService = providersService;
    this.datePipe = datePipe;
    this.settingsService = settingsService;
    //financial transactions table
    this.displayedTransactionColumns = ['id', 'title', 'client', 'date', 'totalPrice', 'status'];
    this.dataTransactionSource = [];
    this.transactionList = []; //de modificat?
    //financial transactions pagination
    this.pageTransaction = 0;
    this.sizeTransaction = 10;
    this.pageTransactionSizeArray = [10, 25, 100];
    this.sortingTransaction = 'date';
    this.dirTransaction = 'desc';
    //resources list
    this.resourcesList = [];
    this.finalResourcesList = [];
    //payment requests table
    this.displayedPaymentColumns = ['id', 'title', 'amount', 'requestDate', 'status', 'actions'];
    this.dataPaymentSource = [];
    this.paymentRequestsList = []; //de modificat?
    //filter transaction Resources
    this.pagePayment = 0;
    this.sizePayment = 10;
    this.sortingPayment = 'requestDate';
    this.pagePaymentSizeArray = [10, 25, 100];
    this.dirPayment = 'desc';
    //recent transaction
    this.recentTransactionList = [];
    this.customOptions = {
      loop: false,
      mouseDrag: true,
      touchDrag: true,
      pullDrag: true,
      dots: false,
      navSpeed: 700,
      navText: ['<', '>'],
      margin: 20,
      autoWidth: true,
      responsive: {
        0: {
          items: 1
        },
        400: {
          items: 2
        },
        740: {
          items: 3
        },
        940: {
          items: 4
        }
      },
      nav: true
    };
    // Payment Request- Filter Forms
    this.searchPaymentRequestFilter = new _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormControl('');
    // financial transactions- Filter Forms
    this.searchTransactionsFilter = new _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormControl('');
  }
  ngOnInit() {
    this.getCurrentRole();
    // TO DO - de verificat ruta daca are id, daca are populam pagina cu informatii luate din getProviderById, daca nu - din getCurrentUser
    this.getProviderId();
    //resources card
    //payment request list
    this.listChanges();
    //reservation/transaction list
    //last 3 reservation/transaction
    this.chartOptions = this.getChartOptions();
    // this.initiateData();
    // console.log('PROVIDER IDDDDD', this.providerId);
  }
  //get role
  getCurrentRole() {
    this.userService.getCurrentUser().subscribe(userData => {
      this.isAdmin = userData.roles.includes('ROLE_SUPER_ADMIN') ? true : false;
      this.isStaff = userData.roles.includes('ROLE_STAFF') ? true : false;
      this.isProvider = userData.roles.includes('ROLE_STAFF') ? true : false;
    });
  }
  //get current user
  getCurrentUser() {
    this.userService.getCurrentUser().subscribe(userData => {
      this.providerId = userData?.id;
      this.currentUser = userData?.id;
      this.companyName = userData?.companyName;
      this.county = userData?.billingAddress.county;
      this.city = userData?.billingAddress.city;
      this.domain = userData?.domain;
      this.coverImagePath = userData?.coverImage !== null ? userData?.coverImage?.filePath : "../../../assets/images/others/coming-soon-min.jpg";
      // balance data
      this.allMoney = userData.earnedMoney?.allMoney;
      this.moneyToReceive = userData.earnedMoney?.moneyToReceive;
      this.pendingMoney = userData.earnedMoney?.pendingMoney;
      this.commission = userData.earnedMoney?.commission;
      this.transactionHistory = userData.earnedMoney?.transactionHistory;
      this.getResourcesList(userData?.id);
      this.getReservation(userData?.id);
      this.getTransactionList();
      this.getPaymentRequestList();
    });
  }
  //get the provider's slug from url
  getProviderId() {
    this.route.params.subscribe(params => {
      if (params['id']) {
        this.providerId = params['id'];
        if (this.providerId) {
          this.getResourcesList(this.providerId);
          this.getProviderById(this.providerId);
          this.getReservation(this.providerId);
          this.getTransactionList();
          this.getPaymentRequestList();
        }
        this.getSettings();
      } else {
        this.getCurrentUser();
        this.getSettings();
      }
    });
  }
  //set data
  getProviderById(idProvider) {
    this.userService.getUserById(idProvider).subscribe(providerData => {
      this.companyName = providerData?.companyName;
      this.county = providerData?.billingAddress?.county;
      this.city = providerData?.billingAddress.city;
      this.domain = providerData?.domain;
      // balance data
      this.allMoney = providerData?.earnedMoney?.allMoney;
      this.moneyToReceive = providerData?.earnedMoney?.moneyToReceive;
      this.pendingMoney = providerData?.earnedMoney?.pendingMoney;
      this.commission = providerData?.earnedMoney?.commission;
      this.transactionHistory = providerData?.earnedMoney?.transactionHistory;
    });
  }
  // Listen to data changes and refresh the user list
  listChanges() {
    this.modalService.listChangedObs.subscribe(data => {
      // If the response is true
      if (data) {
        // Get Documents List
        this.getPaymentRequestList();
        // Reset Obs Trigger
        this.modalService.triggerUserListChanges(false);
      }
    });
  }
  //to get currency
  getSettings() {
    this.settingsService.getCurrentSettings().subscribe(data => {
      if (data !== null) {
        this.currency = data?.currency !== null ? data?.currency : 'EUR';
      } else {
        this.currency = 'EUR';
      }
    });
  }
  //get Payment request list
  getPaymentRequestList() {
    const filter = {
      name: this.searchPaymentRequestFilter.value !== '' ? this.searchPaymentRequestFilter.value : null,
      userId: this.providerId
    };
    this.providersService.listPaymentRequestFiltered(this.pagePayment, this.sizePayment, this.sortingPayment, this.dirPayment, filter).subscribe(paymentData => {
      this.paymentRequestsList = paymentData.content;
      this.paginationPaymentInfo = paymentData;
    });
  }
  //GET resources data
  getResourcesList(userId) {
    const filterObj = {
      userId: userId
    };
    this.resourcesService.listResourceFiltered(0, -1, '', '', filterObj).subscribe(data => {
      this.resourcesList = data.content;
      this.resourcesList.forEach((element, index) => {
        this.resourcesService.getResourceTypeById(element.resourceTypeId).subscribe(data => {
          this.finalResourcesList.push({
            index: index,
            title: element?.title,
            address: element?.address,
            icon: data?.icon,
            price: element.totalBookingAmount
          });
        });
      });
    });
  }
  //filtering and sorting
  //search filter
  filterData() {
    // Go to first page
    this.paginator.firstPage();
    //get list
    //  this.getPaymentRequestList();
    //set total of elements
    this.getTransactionList();
  }
  //sorting
  applyPaymentFilter(event) {
    if (event) {
      this.dirPayment = event.direction === 'desc' || event.direction === '' ? 'asc' : 'desc';
    }
    // // Listen to layout changes
    this.cdr.detectChanges();
    // // Get All Documents List
    this.getPaymentRequestList();
  }
  applyTransactionFilter(event) {
    if (event) {
      this.dirTransaction = event.direction === 'desc' || event.direction === '' ? 'asc' : 'desc';
    }
    this.cdr.detectChanges();
    this.getTransactionList();
  }
  //changed page
  pagePaymentChanged(event) {
    this.pagePayment = event.pageIndex + 1;
    this.sizePayment = event.pageSize;
    // Listen to layout changes
    this.cdr.detectChanges();
    // Get All Documents List
    this.getPaymentRequestList();
  }
  pageTransactionChange(event) {
    console.log('Page transaction change');
    this.pageTransaction = event.pageIndex;
    this.sizeTransaction = event.pageSize;
    // Listen to layout changes
    this.cdr.detectChanges();
    const filter = {
      resourceName: this.searchTransactionsFilter.value === '' ? null : this.searchTransactionsFilter.value,
      providerId: this.providerId
    };
    this.providersService.listReservationFiltered(this.pageTransaction, this.sizeTransaction, this.sortingTransaction, this.dirTransaction, filter).subscribe(reservationData => {
      this.transactionList = reservationData.content;
      this.paginationTransactionInfo = reservationData;
    });
  }
  //get transaction list
  getTransactionList() {
    const filter = {
      resourceName: this.searchTransactionsFilter.value === '' ? null : this.searchTransactionsFilter.value,
      providerId: this.providerId
    };
    console.log("obiectul din transaction list", filter);
    this.providersService.listReservationFiltered(this.pageTransaction, this.sizeTransaction, this.sortingTransaction, this.dirTransaction, filter).subscribe(reservationData => {
      this.transactionList = reservationData.content;
      this.paginationTransactionInfo = reservationData;
      console.log('paginatia', this.paginationTransactionInfo);
      console.log('lista in sine', this.transactionList);
    });
  }
  //recent transaction
  getReservation(userId) {
    const filter = {
      providerId: userId
    };
    this.providersService.listReservationFiltered(0, 3, 'date', 'desc', filter).subscribe(list => {
      this.recentTransactionList = list.content;
    });
    console.log('LISTA REZERVARI RECENTE: ', this.recentTransactionList);
  }
  getResourceById(resourceId) {
    this.resourcesService.getResourceById(resourceId).subscribe(resourcesData => {
      this.resourceNameTransaction = resourcesData.title;
    });
  }
  //chart graph
  getChartOptions() {
    return {
      series: [{
        name: "My-series",
        data: [10, 41, 35, 51, 49, 62, 69, 91, 148]
      }],
      chart: {
        height: 308,
        type: "line"
      },
      xaxis: {
        categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"]
      }
    };
  }
  //modals
  // Modal - Provider Request doc
  paymentRequest(elementId) {
    this.ngbModal.open(_payment_request_payment_request_component__WEBPACK_IMPORTED_MODULE_8__.PaymentRequestComponent, {
      centered: true
    });
    this.modalService.setElementId(elementId);
  }
  // Modal - Provider Request doc
  viewPaymentRequest(elementId) {
    this.ngbModal.open(_view_payment_request_view_payment_request_component__WEBPACK_IMPORTED_MODULE_7__.ViewPaymentRequestComponent, {
      centered: true
    });
    this.modalService.setElementId(elementId);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_router__WEBPACK_IMPORTED_MODULE_11__.ActivatedRoute
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_2__.UserDataService
  }, {
    type: src_app_shared_services_resources_service__WEBPACK_IMPORTED_MODULE_4__.ResourcesService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__.ChangeDetectorRef
  }, {
    type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__.NgbModal
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_5__.ModalService
  }, {
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_6__.ProvidersService
  }, {
    type: _angular_common__WEBPACK_IMPORTED_MODULE_14__.DatePipe
  }, {
    type: src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_9__.SettingsService
  }];
  static #_2 = this.propDecorators = {
    paginator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__.ViewChild,
      args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__.MatPaginator]
    }],
    sort: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__.ViewChild,
      args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_16__.MatSort, {
        static: true
      }]
    }],
    chart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__.ViewChild,
      args: ["chart"]
    }]
  };
};
BalanceProviderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_17__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_12__.Component)({
  selector: 'app-balance-provider',
  template: _balance_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [src_app_shared_domains__WEBPACK_IMPORTED_MODULE_3__.Domains, _angular_common__WEBPACK_IMPORTED_MODULE_14__.DatePipe, _angular_common__WEBPACK_IMPORTED_MODULE_14__.DecimalPipe],
  styles: [(_balance_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], BalanceProviderComponent);


/***/ }),

/***/ 29915:
/*!**********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/change-status-provider/change-status-provider.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChangeStatusProviderComponent": () => (/* binding */ ChangeStatusProviderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _change_status_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./change-status-provider.component.html?ngResource */ 67589);
/* harmony import */ var _change_status_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./change-status-provider.component.scss?ngResource */ 6953);
/* harmony import */ var _change_status_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_change_status_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 38699);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/toast.service */ 62941);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/dialog */ 31484);










let ChangeStatusProviderComponent = class ChangeStatusProviderComponent {
  constructor(modalService, providersService, toastService, translate, dialogRef) {
    this.modalService = modalService;
    this.providersService = providersService;
    this.toastService = toastService;
    this.translate = translate;
    this.dialogRef = dialogRef;
    // Change status form
    this.changeProviderStatusForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormGroup({
      status: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl(this.modalService.getElementInfo(), [_angular_forms__WEBPACK_IMPORTED_MODULE_5__.Validators.required])
    });
  }
  changeProviderStatus() {
    //get editorial id
    this.providerId = this.modalService.getElementId();
    //change status
    this.providersService.changeUserStatus(this.providerId, this.changeProviderStatusForm.value.status).subscribe(data => {
      this.modalService.triggerUserListChanges(true);
      console.log(data);
      // Trigger List Data Changes
      this.modalService.triggerUserListChanges(true);
      // Set Message & Response
      this.toastService.showToast("Succes", "Statusul a fost schimbat cu succes!", "success");
      console.log("status schimbat " + this.providerId);
      // Close Modal
      // this.closeModal();
      this.dialogRef.close();
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_2__.ModalService
  }, {
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_4__.ProvidersService
  }, {
    type: src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_3__.ToastService
  }, {
    type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__.MatDialogRef
  }];
};
ChangeStatusProviderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
  selector: 'app-change-status-provider',
  template: _change_status_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_change_status_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ChangeStatusProviderComponent);


/***/ }),

/***/ 64759:
/*!********************************************************************************************!*\
  !*** ./src/app/features/providers-management/delete-provider/delete-provider.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteProviderComponent": () => (/* binding */ DeleteProviderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delete_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delete-provider.component.html?ngResource */ 31534);
/* harmony import */ var _delete_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delete-provider.component.scss?ngResource */ 77248);
/* harmony import */ var _delete_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_delete_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/toast.service */ 62941);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var src_app_shared_services_staff_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/_services/staff.service */ 50871);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/dialog */ 31484);











let DeleteProviderComponent = class DeleteProviderComponent {
  constructor(providersService, staffService, userService, modalService, toastService, dialogRef, router) {
    this.providersService = providersService;
    this.staffService = staffService;
    this.userService = userService;
    this.modalService = modalService;
    this.toastService = toastService;
    this.dialogRef = dialogRef;
    this.router = router;
  }
  ngOnInit() {
    this.getCurrentUser();
    this.providerId = this.modalService.getElementId();
    this.getUserById(this.providerId);
  }
  getCurrentUser() {
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
  }
  getUserById(providerId) {
    this.userService.getUserById(providerId).subscribe(userData => {
      console.log(userData);
      this.providerId = userData.id;
      this.providerName = userData.companyName;
      this.providerEmail = userData.email;
      this.providerAvatar = userData.avatar !== null ? userData.avatar.filePath : '../../../../../assets/images/others/user.jpg';
    });
  }
  confirmAction() {
    // Store the selected element id
    this.providerId = this.modalService.getElementId();
    //delete editorial method
    this.staffService.deleteUser(this.providerId).subscribe(() => {
      if (this.isStaff) {
        this.router.navigate(['/private/staff/manage-providers/active']);
      }
      if (this.isAdmin) {
        this.router.navigate(['/private/admin/manage-providers/active']);
      }
      this.modalService.triggerUserListChanges(true);
      // Set Message & Response
      this.toastService.showToast('Succes', 'Providerul a fost sters cu succes!', 'success');
      // Trigger Feedback Message
      //this.formMessageService.triggerFeedbackMessage(true);
      //this.isDeleteLoading$.next(false);
      this.dialogRef.close();
    }, error => {
      console.log(error);
      this.toastService.showToast('Eroare', 'Providerul nu a fost sters!', 'error');
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__.ProvidersService
  }, {
    type: src_app_shared_services_staff_service__WEBPACK_IMPORTED_MODULE_6__.StaffService
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__.UserDataService
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__.ModalService
  }, {
    type: src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__.ToastService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__.MatDialogRef
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_8__.Router
  }];
};
DeleteProviderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_10__.Component)({
  selector: 'app-delete-provider',
  template: _delete_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_delete_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], DeleteProviderComponent);


/***/ }),

/***/ 66240:
/*!******************************************************************************************!*\
  !*** ./src/app/features/providers-management/list-providers/list-providers.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListProvidersComponent": () => (/* binding */ ListProvidersComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _list_providers_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./list-providers.component.html?ngResource */ 91493);
/* harmony import */ var _list_providers_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./list-providers.component.scss?ngResource */ 35783);
/* harmony import */ var _list_providers_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_list_providers_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var _angular_material_legacy_paginator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/legacy-paginator */ 47101);
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/sort */ 92197);
/* harmony import */ var _provider_request_provider_request_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../provider-request/provider-request.component */ 94892);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var _change_status_provider_change_status_provider_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../change-status-provider/change-status-provider.component */ 29915);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_services_domains_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/_services/domains.service */ 58820);
/* harmony import */ var _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/_services/createResource.service */ 92821);
/* harmony import */ var _status_provider_status_provider_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../status-provider/status-provider.component */ 32901);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 34534);


















let ListProvidersComponent = class ListProvidersComponent {
  constructor(providersServices, cdr, modalService, ngbModalService, router, domainService, createResourceService, activeModal) {
    this.providersServices = providersServices;
    this.cdr = cdr;
    this.modalService = modalService;
    this.ngbModalService = ngbModalService;
    this.router = router;
    this.domainService = domainService;
    this.createResourceService = createResourceService;
    this.activeModal = activeModal;
    //table
    this.displayedColumns = ['id', 'title', 'email', 'cui', 'country', 'city', 'domain', 'approvedStatus', 'actions'];
    this.dataSource = [];
    this.providersList = [];
    // initial pagination numbers
    this.pageNumber = 0;
    this.pageSize = 25;
    this.pageSizeArray = [10, 25, 100];
    this.isApprovedStatus = ['draft', 'pending', 'active', 'inactive', 'refused', 'archived'];
    this.sorting = "registrationDate";
    this.dir = 'desc';
    // Mat Table - Filter Forms
    this.searchFilter = new _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormControl('');
  }
  ngOnInit() {
    // console.log('RUTA', this.router.url);
    if (this.router.url.includes('active')) {
      this.isApprovedStatus = ['draft', 'pending', 'active', 'inactive', 'refused', 'archived'];
      this.initiateData();
    } else if (this.router.url.includes('pending')) {
      this.isApprovedStatus = ["new"];
      this.displayedColumns = ['id', 'title', 'email', 'cui', 'country', 'city', 'domain', 'activeStatus', 'approvedStatus', 'actions'];
      this.initiateData();
    }
    // Listen to List Changes
    this.listChanges();
    //this.getActiveProvidersList();
    this.selectedTabIndex = 0;
  }
  //initialize data
  initiateData() {
    const filters = {
      roles: ['ROLE_PROVIDER'],
      approvedStatuses: this.isApprovedStatus,
      companyName: this.searchFilter.value !== '' ? this.searchFilter.value : null
    };
    this.providersServices.listProvidersFiltered(this.pageNumber, this.pageSize, this.sorting, this.dir, filters).subscribe(activeProvidersList => {
      this.providersList = activeProvidersList["content"];
      this.totalElements = activeProvidersList["totalElements"];
      this.cdr.detectChanges();
      console.log('CONTENT', activeProvidersList["content"]);
      //VARIANTA PROVIZORIE PENTRU INLOCUIREA NUMELUI LA DOMENII
      // this.providersList.forEach((provider: ProvidersModel, index: number) => {
      //     this.domainService.getDomainById(provider.domain).subscribe((domainName) => {
      //         this.providersList[index].domain = domainName?.nameEn;
      //     })
      // })
    });
    // Data Loaded
    this.dataLoaded = true;
    // Change Detection
    this.cdr.detectChanges();
  }
  // Listen to data changes and refresh the user list
  listChanges() {
    this.modalService.listChangedObs.subscribe(data => {
      // console.log('schimbaree');
      // If the response is true
      if (data) {
        // Get Documents List
        this.initiateData();
        this.cdr.detectChanges();
        // Reset Obs Trigger
        this.modalService.triggerUserListChanges(false);
      }
    });
  }
  //search filter
  filterData() {
    // Go to first page
    this.paginator.firstPage();
    this.initiateData();
  }
  //sorting
  applyFilter(event) {
    if (event.direction) {
      console.log(event);
      this.dir = event.direction;
      // this.dir = (event.direction === 'desc') || (event.direction === '') ? 'asc' : '';
      this.sorting = event.active === 'title' ? 'companyName' : event.active;
      // Go to first page
      this.paginator.firstPage();
      // Listen to layout changes
      this.cdr.detectChanges();
      // Get All Documents List
      this.initiateData();
    }
  }
  //changed page
  pageChanged(event) {
    this.pageNumber = event.pageIndex;
    this.pageSize = event.pageSize;
    // Listen to layout changes
    this.cdr.detectChanges();
    // Get All Documents List
    this.initiateData();
  }
  //change status
  changeStatusModal(elementId, elementInfo) {
    console.log(elementInfo);
    this.modalService.setElementId(elementId);
    this.modalService.setElementInfo(elementInfo);
    this.ngbModalService.open(_change_status_provider_change_status_provider_component__WEBPACK_IMPORTED_MODULE_5__.ChangeStatusProviderComponent);
  }
  // Modal - Provider Request doc
  providerRequest(elementId) {
    this.ngbModalService.open(_provider_request_provider_request_component__WEBPACK_IMPORTED_MODULE_3__.ProviderRequestComponent);
    this.modalService.setElementId(elementId);
  }
  // Modal - blocare
  blockProvider(elementId) {
    const modalRef = this.ngbModalService.open(_status_provider_status_provider_component__WEBPACK_IMPORTED_MODULE_8__.StatusProviderComponent);
    modalRef.componentInstance.actionType = 'archived';
    this.modalService.setElementId(elementId);
  }
  sendProviderData(providerId, companyName, cui) {
    const providerData = {
      providerId: providerId,
      companyName: companyName,
      cui: cui
    };
    this.createResourceService.providerData$.next(providerData);
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__.ProvidersService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ChangeDetectorRef
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_4__.ModalService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__.MatDialog
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_12__.Router
  }, {
    type: _shared_services_domains_service__WEBPACK_IMPORTED_MODULE_6__.DomainsService
  }, {
    type: _shared_services_createResource_service__WEBPACK_IMPORTED_MODULE_7__.CreateResourceService
  }, {
    type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__.NgbActiveModal
  }];
  static #_2 = this.propDecorators = {
    paginator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ViewChild,
      args: [_angular_material_legacy_paginator__WEBPACK_IMPORTED_MODULE_14__.MatLegacyPaginator]
    }],
    sort: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ViewChild,
      args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_15__.MatSort, {
        static: true
      }]
    }]
  };
};
ListProvidersComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_16__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_10__.Component)({
  selector: 'app-list-providers',
  template: _list_providers_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__.NgbActiveModal],
  styles: [(_list_providers_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ListProvidersComponent);


/***/ }),

/***/ 5242:
/*!********************************************************************************************!*\
  !*** ./src/app/features/providers-management/payment-request/payment-request.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PaymentRequestComponent": () => (/* binding */ PaymentRequestComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _payment_request_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./payment-request.component.html?ngResource */ 93526);
/* harmony import */ var _payment_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./payment-request.component.scss?ngResource */ 88833);
/* harmony import */ var _payment_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_payment_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 34534);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/toast.service */ 62941);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/_services/settings.service */ 25560);












let PaymentRequestComponent = class PaymentRequestComponent {
  constructor(providersService, userService, cdr, ngbModal, modalService, toastService, settingsService) {
    this.providersService = providersService;
    this.userService = userService;
    this.cdr = cdr;
    this.ngbModal = ngbModal;
    this.modalService = modalService;
    this.toastService = toastService;
    this.settingsService = settingsService;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_7__.Subject();
  }
  ngOnInit() {
    //this.providerId = this.modalService.getElementId();
    this.getSettings();
    this.getCurrentUser();
    console.log("ID PROVIDER CURENT", this.providerId);
  }
  getCurrentUser() {
    this.userService.getCurrentUser().subscribe(userData => {
      this.isAdmin = userData.roles.includes('ROLE_SUPER_ADMIN') ? true : false;
      this.isStaff = userData.roles.includes('ROLE_STAFF') ? true : false;
      this.isProvider = userData.roles.includes('ROLE_STAFF') ? true : false;
      this.providerId = userData.id;
      this.providerName = userData.companyName;
      this.providerIBAN = userData.billingAddress.iban;
      this.providerMoneyToRecive = userData.earnedMoney == null || userData.earnedMoney?.moneyToReceive == 0 ? 0 : userData.earnedMoney?.moneyToReceive;
      this.dateRequest = new Date();
    });
  }
  getSettings() {
    this.settingsService.getCurrentSettings().subscribe(data => {
      this.currency = data.currency;
    });
  }
  confirmAction() {
    const obj = {
      name: this.providerName,
      amount: this.providerMoneyToRecive,
      iban: this.providerIBAN,
      status: 'new'
    };
    //create new payment request
    this.providersService.createPaymentRequest(obj).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: () => {
        // Set Message & Response
        this.toastService.showToast('Succes', 'Cerere de plata creata cu succes!', 'success');
        this.cdr.detectChanges();
        this.modalService.triggerUserListChanges(true);
        this.closeModal();
      },
      error: () => {
        this.toastService.showToast('Eroare', 'Cererea de plata a esuat!', 'error');
      }
    });
    // Trigger Feedback Message
    //this.formMessageService.triggerFeedbackMessage(true);
    //this.isDeleteLoading$.next(false);
  }
  // Close modal
  closeModal() {
    this.ngbModal.dismissAll();
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__.ProvidersService
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__.UserDataService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ChangeDetectorRef
  }, {
    type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbModal
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__.ModalService
  }, {
    type: src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__.ToastService
  }, {
    type: src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_6__.SettingsService
  }];
};
PaymentRequestComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
  selector: 'app-payment-request',
  template: _payment_request_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbActiveModal, _angular_common__WEBPACK_IMPORTED_MODULE_12__.DatePipe, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbModal],
  styles: [(_payment_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], PaymentRequestComponent);


/***/ }),

/***/ 94892:
/*!**********************************************************************************************!*\
  !*** ./src/app/features/providers-management/provider-request/provider-request.component.ts ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProviderRequestComponent": () => (/* binding */ ProviderRequestComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _provider_request_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider-request.component.html?ngResource */ 80151);
/* harmony import */ var _provider_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider-request.component.scss?ngResource */ 88311);
/* harmony import */ var _provider_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_provider_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ngx-translate/core */ 38699);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/toast.service */ 62941);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/dialog */ 31484);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 80228);












let ProviderRequestComponent = class ProviderRequestComponent {
  constructor(userService, providersService, toastService, modalService, translate, dialogRef, cdr) {
    this.userService = userService;
    this.providersService = providersService;
    this.toastService = toastService;
    this.modalService = modalService;
    this.translate = translate;
    this.dialogRef = dialogRef;
    this.cdr = cdr;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
    this.formReason = new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormGroup({
      reason: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl('')
    });
  }
  ngOnInit() {
    //get editorial id
    this.providerId = this.modalService.getElementId();
    this.getProviderData(this.providerId);
  }
  getProviderData(providerId) {
    this.userService.getUserById(providerId).subscribe(providerData => {
      console.log(providerData);
      console.log(this.providerId);
      this.name = providerData["companyName"];
      this.cui = providerData["cui"];
      this.email = providerData["email"];
      this.telephone = providerData["telephone"];
      this.dateRequest = providerData["registrationDate"];
    });
  }
  sendProviderApprovedEmail(userId, status) {
    this.providersService.sendProviderApprovedEmail(userId, status).subscribe(res => {
      console.log("de la mail", res);
      if (status === 'active') {
        this.toastService.showToast("Info", "Providerul va primi un email pentru a fi anunțat in legatură cu activarea contului!", "info");
      } else if (status === 'refused') {
        this.toastService.showToast("Info", "Providerul va primi un email pentru a fi anunțat in legatură cu neaprobarea contului!", "info");
      } else {
        return;
      }
    }, error => {
      console.log(error);
      this.toastService.showToast("Eroare", "A apărut o problemă!", "error");
    });
  }
  approveRequest() {
    this.providerId = this.modalService.getElementId();
    this.providersService.changeUserStatus(this.providerId, 'active').subscribe(() => {
      // Trigger List Data Changes
      this.modalService.triggerUserListChanges(true);
      this.sendProviderApprovedEmail(this.providerId, 'active');
      this.toastService.showToast("Succes", "Ați activat providerul!", "success");
      this.cdr.detectChanges();
      this.dialogRef.close();
    }, error => {
      if (error.error.reason === 'notAllowed') {
        this.toastService.showToast("Eroare", "Aveasta operațiune nu vă este permisă!", "error");
      } else if (error.error.reason === 'invalidCurrentUserOrTargetId ') {
        this.toastService.showToast("Eroare", "Nu sunteți logat!", "error");
      } else {
        this.toastService.showToast("Eroare", "A apărut o problemă!", "error");
        console.log(error);
      }
    });
  }
  declineRequest() {
    //get editorial id
    this.providerId = this.modalService.getElementId();
    this.providersService.changeUserStatus(this.providerId, 'refused').subscribe(() => {
      this.modalService.triggerUserListChanges(true);
      this.sendProviderApprovedEmail(this.providerId, 'refused');
      this.toastService.showToast("Succes", "Providerul a fost respins!", "success");
      this.cdr.detectChanges();
      this.dialogRef.close();
    }, error => {
      if (error.error.reason === 'notAllowed') {
        this.toastService.showToast("Eroare", "Aveasta operațiune nu vă este permisă!", "error");
      } else if (error.error.reason === 'invalidCurrentUserOrTargetId ') {
        this.toastService.showToast("Eroare", "Nu sunteți logat!", "error");
      } else {
        this.toastService.showToast("Eroare", "A apărut o problemă!", "error");
        console.log(error);
      }
    });
  }
  closeModal() {
    this.dialogRef.close();
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__.UserDataService
  }, {
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_3__.ProvidersService
  }, {
    type: src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__.ToastService
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_2__.ModalService
  }, {
    type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__.TranslateService
  }, {
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__.MatDialogRef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ChangeDetectorRef
  }];
};
ProviderRequestComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_10__.Component)({
  selector: 'app-provider-request',
  template: _provider_request_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_provider_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ProviderRequestComponent);


/***/ }),

/***/ 54632:
/*!******************************************************************************!*\
  !*** ./src/app/features/providers-management/providers-management.module.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProvidersManagementModule": () => (/* binding */ ProvidersManagementModule),
/* harmony export */   "routes": () => (/* binding */ routes)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var _delete_provider_delete_provider_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delete-provider/delete-provider.component */ 64759);
/* harmony import */ var _add_edit_provider_add_edit_provider_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-edit-provider/add-edit-provider.component */ 39295);
/* harmony import */ var _view_provider_view_provider_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-provider/view-provider.component */ 1457);
/* harmony import */ var _balance_provider_balance_provider_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./balance-provider/balance-provider.component */ 76461);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared/shared.module */ 44466);
/* harmony import */ var _change_status_provider_change_status_provider_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./change-status-provider/change-status-provider.component */ 29915);
/* harmony import */ var _provider_request_provider_request_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./provider-request/provider-request.component */ 94892);
/* harmony import */ var ng_apexcharts__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ng-apexcharts */ 93239);
/* harmony import */ var ngx_owl_carousel_o__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ngx-owl-carousel-o */ 27135);
/* harmony import */ var _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/material/datepicker */ 42298);
/* harmony import */ var _status_provider_status_provider_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./status-provider/status-provider.component */ 32901);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _payment_request_payment_request_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./payment-request/payment-request.component */ 5242);
/* harmony import */ var _view_payment_request_view_payment_request_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./view-payment-request/view-payment-request.component */ 62627);
/* harmony import */ var _standalone_components_dashboard_header_dashboard_header_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../standalone-components/dashboard-header/dashboard-header.component */ 54021);
/* harmony import */ var _list_providers_list_providers_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./list-providers/list-providers.component */ 66240);
/* harmony import */ var _shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../shared/_services/user-roles.guard */ 16070);
/* harmony import */ var src_app_standalone_components_available_balance_card_available_balance_card_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/standalone-components/available-balance-card/available-balance-card.component */ 36085);
/* harmony import */ var src_app_standalone_components_recently_reservation_card_recently_reservation_card_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/standalone-components/recently-reservation-card/recently-reservation-card.component */ 72696);
/* harmony import */ var src_app_standalone_components_history_reservation_card_history_reservation_card_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/standalone-components/history-reservation-card/history-reservation-card.component */ 60265);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @ngx-translate/core */ 38699);
/* harmony import */ var _role_provider_view_provider_messages_view_provider_messages_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../role-provider/view-provider-messages/view-provider-messages.component */ 16048);
/* harmony import */ var src_app_standalone_components_conversation_conversation_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/standalone-components/conversation/conversation.component */ 51440);



























const routes = [{
  path: 'active',
  component: _list_providers_list_providers_component__WEBPACK_IMPORTED_MODULE_11__.ListProvidersComponent
}, {
  path: 'pending',
  component: _list_providers_list_providers_component__WEBPACK_IMPORTED_MODULE_11__.ListProvidersComponent
}, {
  path: 'delete/:id',
  component: _delete_provider_delete_provider_component__WEBPACK_IMPORTED_MODULE_0__.DeleteProviderComponent,
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard],
  data: {
    allowedRoles: ['ROLE_STAFF']
  }
}, {
  path: 'edit/:id',
  component: _add_edit_provider_add_edit_provider_component__WEBPACK_IMPORTED_MODULE_1__.AddEditProviderComponent,
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard],
  data: {
    allowedRoles: ['ROLE_STAFF', 'ROLE_SUPER_ADMIN']
  }
}, {
  path: 'edit',
  component: _add_edit_provider_add_edit_provider_component__WEBPACK_IMPORTED_MODULE_1__.AddEditProviderComponent,
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard],
  data: {
    allowedRoles: ['ROLE_PROVIDER']
  }
}, {
  path: 'view/:id',
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard],
  data: {
    allowedRoles: ['ROLE_STAFF', 'ROLE_SUPER_ADMIN']
  },
  component: _view_provider_view_provider_component__WEBPACK_IMPORTED_MODULE_2__.ViewProviderComponent
}, {
  path: 'view',
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard],
  data: {
    allowedRoles: ['ROLE_PROVIDER']
  },
  component: _view_provider_view_provider_component__WEBPACK_IMPORTED_MODULE_2__.ViewProviderComponent
}, {
  path: 'add',
  component: _add_edit_provider_add_edit_provider_component__WEBPACK_IMPORTED_MODULE_1__.AddEditProviderComponent,
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard]
}, {
  path: 'balance/:id',
  component: _balance_provider_balance_provider_component__WEBPACK_IMPORTED_MODULE_3__.BalanceProviderComponent,
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard],
  data: {
    allowedRoles: ['ROLE_STAFF', 'ROLE_SUPER_ADMIN']
  }
}, {
  path: 'balance',
  component: _balance_provider_balance_provider_component__WEBPACK_IMPORTED_MODULE_3__.BalanceProviderComponent,
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard],
  data: {
    allowedRoles: ['ROLE_PROVIDER']
  }
}, {
  path: 'provider-view-messages/:idConversation',
  component: _role_provider_view_provider_messages_view_provider_messages_component__WEBPACK_IMPORTED_MODULE_16__.ViewProviderMessagesComponent,
  canActivate: [_shared_services_user_roles_guard__WEBPACK_IMPORTED_MODULE_12__.UserRolesGuard],
  data: {
    allowedRoles: ['ROLE_PROVIDER']
  }
}, {
  path: '',
  redirectTo: 'list',
  pathMatch: "full"
}];
let ProvidersManagementModule = class ProvidersManagementModule {};
ProvidersManagementModule = (0,tslib__WEBPACK_IMPORTED_MODULE_18__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_19__.NgModule)({
  declarations: [_list_providers_list_providers_component__WEBPACK_IMPORTED_MODULE_11__.ListProvidersComponent, _delete_provider_delete_provider_component__WEBPACK_IMPORTED_MODULE_0__.DeleteProviderComponent, _change_status_provider_change_status_provider_component__WEBPACK_IMPORTED_MODULE_5__.ChangeStatusProviderComponent, _delete_provider_delete_provider_component__WEBPACK_IMPORTED_MODULE_0__.DeleteProviderComponent, _add_edit_provider_add_edit_provider_component__WEBPACK_IMPORTED_MODULE_1__.AddEditProviderComponent, _view_provider_view_provider_component__WEBPACK_IMPORTED_MODULE_2__.ViewProviderComponent, _balance_provider_balance_provider_component__WEBPACK_IMPORTED_MODULE_3__.BalanceProviderComponent, _provider_request_provider_request_component__WEBPACK_IMPORTED_MODULE_6__.ProviderRequestComponent, _status_provider_status_provider_component__WEBPACK_IMPORTED_MODULE_7__.StatusProviderComponent, _payment_request_payment_request_component__WEBPACK_IMPORTED_MODULE_8__.PaymentRequestComponent, _view_payment_request_view_payment_request_component__WEBPACK_IMPORTED_MODULE_9__.ViewPaymentRequestComponent],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_20__.CommonModule, _angular_router__WEBPACK_IMPORTED_MODULE_21__.RouterModule.forChild(routes), _shared_shared_module__WEBPACK_IMPORTED_MODULE_4__.SharedModule, ng_apexcharts__WEBPACK_IMPORTED_MODULE_22__.NgApexchartsModule, ngx_owl_carousel_o__WEBPACK_IMPORTED_MODULE_23__.CarouselModule, _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_24__.MatDatepickerModule, _angular_forms__WEBPACK_IMPORTED_MODULE_25__.ReactiveFormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_25__.FormsModule, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_26__.TranslateModule, _standalone_components_dashboard_header_dashboard_header_component__WEBPACK_IMPORTED_MODULE_10__.DashboardHeaderComponent, src_app_standalone_components_available_balance_card_available_balance_card_component__WEBPACK_IMPORTED_MODULE_13__.AvailableBalanceCardComponent, src_app_standalone_components_recently_reservation_card_recently_reservation_card_component__WEBPACK_IMPORTED_MODULE_14__.RecentlyReservationCardComponent, src_app_standalone_components_history_reservation_card_history_reservation_card_component__WEBPACK_IMPORTED_MODULE_15__.HistoryReservationCardComponent, src_app_standalone_components_conversation_conversation_component__WEBPACK_IMPORTED_MODULE_17__.ConversationComponent]
})], ProvidersManagementModule);


/***/ }),

/***/ 32901:
/*!********************************************************************************************!*\
  !*** ./src/app/features/providers-management/status-provider/status-provider.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusProviderComponent": () => (/* binding */ StatusProviderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _status_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./status-provider.component.html?ngResource */ 70505);
/* harmony import */ var _status_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./status-provider.component.scss?ngResource */ 5461);
/* harmony import */ var _status_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_status_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 34534);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/toast.service */ 62941);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 60124);










let StatusProviderComponent = class StatusProviderComponent {
  constructor(providersService, userService, activeModal, modalService, toastService, router) {
    this.providersService = providersService;
    this.userService = userService;
    this.activeModal = activeModal;
    this.modalService = modalService;
    this.toastService = toastService;
    this.router = router;
  }
  ngOnInit() {
    this.providerId = this.modalService.getElementId();
    this.getUserById(this.providerId);
  }
  getCurrentUser() {
    this.userService.getCurrentUser().subscribe(response => {
      if (response.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      }
      if (response.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      }
      if (response.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      }
    });
  }
  getUserById(providerId) {
    this.userService.getUserById(providerId).subscribe(userData => {
      console.log(userData);
      this.providerId = userData.id;
      this.providerName = userData.companyName;
      this.providerEmail = userData.email;
      this.providerAvatar = userData.avatar !== null ? userData.avatar.filePath : '../../../../../assets/images/others/user.jpg';
    });
  }
  confirmAction() {
    // Store the selected element id
    this.providerId = this.modalService.getElementId();
    //block provider
    this.userService.changeUserStatus(this.providerId, this.actionType).subscribe(response => {
      console.log(response);
      // this.router.navigate(['/dashboard/providers/list']);
      this.modalService.triggerUserListChanges(true);
      // Set Message & Response
      this.toastService.showToast('Succes', 'Statusul providerului a fost schimbat cu success!', 'success');
      this.closeModal();
      if (this.isStaff) {
        this.router.navigate(['/private/staff/manage-providers/active']);
      } else if (this.isAdmin) {
        this.router.navigate(['/private/admin/manage-providers/active']);
      } else {
        return;
      }
      // Trigger Feedback Message
      //this.formMessageService.triggerFeedbackMessage(true);
      //this.isDeleteLoading$.next(false);
      // this.closeModal();
    }, error => {
      console.log(error);
      this.toastService.showToast('Eroare', 'Statusul providerului NU a fost schimbat!', 'error');
    });
  }
  // Close modal
  closeModal() {
    this.activeModal.dismiss();
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__.ProvidersService
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__.UserDataService
  }, {
    type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__.NgbActiveModal
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__.ModalService
  }, {
    type: src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__.ToastService
  }, {
    type: _angular_router__WEBPACK_IMPORTED_MODULE_7__.Router
  }];
  static #_2 = this.propDecorators = {
    actionType: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input
    }]
  };
};
StatusProviderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
  selector: 'app-status-provider',
  template: _status_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__.NgbActiveModal],
  styles: [(_status_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], StatusProviderComponent);


/***/ }),

/***/ 62627:
/*!******************************************************************************************************!*\
  !*** ./src/app/features/providers-management/view-payment-request/view-payment-request.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewPaymentRequestComponent": () => (/* binding */ ViewPaymentRequestComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _view_payment_request_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view-payment-request.component.html?ngResource */ 42830);
/* harmony import */ var _view_payment_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view-payment-request.component.scss?ngResource */ 71764);
/* harmony import */ var _view_payment_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_view_payment_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 34534);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/toast.service */ 62941);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! file-saver */ 65226);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/_services/settings.service */ 25560);













let ViewPaymentRequestComponent = class ViewPaymentRequestComponent {
  constructor(userService, providersService, toastService, modalService, ngbModal, cdr, settingsService) {
    this.userService = userService;
    this.providersService = providersService;
    this.toastService = toastService;
    this.modalService = modalService;
    this.ngbModal = ngbModal;
    this.cdr = cdr;
    this.settingsService = settingsService;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
  }
  ngOnInit() {
    this.getSettings();
    //this.getCurrentUser();
    this.paymentRequestId = this.modalService.getElementId();
    this.getPaymentData();
    // this.getCurrentUser();
  }

  getUserById(userId) {
    this.userService.getUserById(userId).subscribe(userData => {
      this.providerId = userData.id;
      this.providerName = userData.companyName;
      this.providerIBAN = userData.billingAddress?.iban;
    });
  }
  getSettings() {
    this.settingsService.getCurrentSettings().subscribe(data => {
      this.currency = data.currency;
    });
  }
  getPaymentData() {
    this.providersService.getPaymentRequestById(this.paymentRequestId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_9__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: paymentData => {
        // this.router.navigate(['/dashboard/providers/balance']);
        console.log("id-ul", this.paymentRequestId);
        this.paymentDate = paymentData.paymentDate;
        this.requestDate = paymentData.requestDate;
        this.paymentBill = paymentData.bill;
        this.paymentReport = paymentData.report;
        this.amount = paymentData.amount;
        this.status = paymentData.status;
        this.userId = paymentData.userId;
        this.getUserById(this.userId);
      }
    });
  }
  confirmAction(changeStatus) {
    this.providersService.changeStatusPaymentRequest(this.paymentRequestId, changeStatus).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_9__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: data => {
        // Trigger List Data Changes
        this.modalService.triggerUserListChanges(true);
        this.toastService.showToast('Succes', 'Cerere de plata creata cu succes!', 'success');
        this.cdr.detectChanges();
        this.closeModal();
      },
      error: () => {
        this.toastService.showToast('Eroare', 'Vizualizarea cererii nu poate fi efectuata!', 'error');
      }
    });
  }
  download(filepath, filename) {
    file_saver__WEBPACK_IMPORTED_MODULE_6__.saveAs(filepath, filename);
  }
  // Close modal
  closeModal() {
    this.ngbModal.dismissAll();
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_5__.UserDataService
  }, {
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_2__.ProvidersService
  }, {
    type: src_app_shared_services_toast_service__WEBPACK_IMPORTED_MODULE_4__.ToastService
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_3__.ModalService
  }, {
    type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbModal
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ChangeDetectorRef
  }, {
    type: src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_7__.SettingsService
  }];
};
ViewPaymentRequestComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_11__.Component)({
  selector: 'app-view-payment-request',
  template: _view_payment_request_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbActiveModal, _angular_common__WEBPACK_IMPORTED_MODULE_13__.DatePipe],
  styles: [(_view_payment_request_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ViewPaymentRequestComponent);


/***/ }),

/***/ 1457:
/*!****************************************************************************************!*\
  !*** ./src/app/features/providers-management/view-provider/view-provider.component.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewProviderComponent": () => (/* binding */ ViewProviderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _view_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view-provider.component.html?ngResource */ 76750);
/* harmony import */ var _view_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view-provider.component.scss?ngResource */ 41622);
/* harmony import */ var _view_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_view_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var src_app_shared_services_resources_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/resources.service */ 3145);
/* harmony import */ var src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/_services/providers.service */ 52077);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ 68951);
/* harmony import */ var _change_status_provider_change_status_provider_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../change-status-provider/change-status-provider.component */ 29915);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 34534);
/* harmony import */ var src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/_services/modals.service */ 82882);
/* harmony import */ var src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/_services/settings.service */ 25560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var src_app_shared_services_domains_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/shared/_services/domains.service */ 58820);















let ViewProviderComponent = class ViewProviderComponent {
  constructor(route, userService, resourcesService, providersService, ngbModal, modalService, settingsService, domainService) {
    this.route = route;
    this.userService = userService;
    this.resourcesService = resourcesService;
    this.providersService = providersService;
    this.ngbModal = ngbModal;
    this.modalService = modalService;
    this.settingsService = settingsService;
    this.domainService = domainService;
    // public chartOptions: Partial<ChartOptions>;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_9__.Subject();
    //resources list
    this.resourcesList = [];
    this.finalResourcesList = [];
    this.recentTransactionList = [];
    this.customOptions = {
      loop: false,
      mouseDrag: true,
      touchDrag: true,
      pullDrag: true,
      dots: false,
      navSpeed: 700,
      navText: ['<', '>'],
      autoWidth: true,
      margin: 20,
      responsive: {
        0: {
          items: 1,
          margin: 0
        },
        400: {
          items: 2
        },
        740: {
          items: 2
        },
        900: {
          items: 3
        },
        1200: {
          items: 4
        }
      },
      nav: true
    };
  }
  ngOnInit() {
    this.getPathSlug();
    this.getDomains();
    this.page = 0;
    this.size = -1;
    this.sort = '';
    this.dir = '';
    this.chartOptions = this.getChartOptions();
  }
  getDomains() {
    this.resourcesService.getListOfDomains().subscribe(resp => {
      console.log('Domenii', resp);
      this.allDomains = resp;
    });
  }
  //get the provider slug from url
  getPathSlug() {
    this.route.params.subscribe(params => {
      if (params['id']) {
        this.providerId = params['id'];
        this.getUserById(this.providerId);
        this.getSettings();
        // this.getReservation(this.providerId);
        this.isStaff = true;
      } else {
        this.getCurrentUser();
        this.getSettings();
        this.isProvider = true;
        // this.getReservation(this.providerId);
      }
    });
  }

  getChartOptions() {
    return {
      series: [{
        name: "My-series",
        data: [10, 41, 35, 51, 49, 62, 69, 91, 148]
      }],
      chart: {
        height: 308,
        type: "line"
      },
      xaxis: {
        categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"]
      }
    };
  }
  //get data for chart
  getChartData() {
    const filter = {
      providerId: this.providerId
      // date:
    };
    // this.providersService.listReservationFiltered(0,3,'date', 'desc', filter)
    // .subscribe((list:any)=>{
    //   console.log("lista de rezervari",list.content);
    //   this.recentTransactionList=list.content;
    // });
  }

  getSettings() {
    this.settingsService.getCurrentSettings().subscribe(data => {
      if (data !== null) {
        this.currency = data?.currency !== null ? data?.currency : 'EUR';
      } else {
        this.currency = 'EUR';
      }
    });
  }
  //get current user
  getCurrentUser() {
    this.userService.getCurrentUser().subscribe(userData => {
      console.log('USER DATA: ', userData);
      // this.providerId=userData?.id;
      this.companyName = userData?.companyName;
      this.county = userData?.billingAddress?.county;
      this.city = userData?.billingAddress?.city;
      this.domain = userData?.domain;
      this.status = userData?.approvedStatus;
      this.coverImagePath = userData?.coverImage !== null ? userData?.coverImage?.filePath : "../../../assets/images/others/coming-soon-min.jpg";
      // balance data
      this.allMoney = userData?.earnedMoney?.allMoney;
      this.moneyToReceive = userData?.earnedMoney?.moneyToReceive;
      this.pendingMoney = userData?.earnedMoney?.pendingMoney;
      this.commission = userData?.earnedMoney?.commission;
      this.transactionHistory = userData?.earnedMoney?.transactionHistory;
      // this.userDomain = this.allDomains?.find((x: any) => x.id === userData?.domain)?.nameEn;
      this.domainService.getDomainById(userData.domain).subscribe(domain => {
        this.userDomain = domain.nameEn;
      });
      console.log('USER DOMAIN', this.userDomain);
      this.getResourcesList(userData?.id);
      // if(this.providerId !== undefined || this.providerId!==null){
      this.getReservation(userData.id);
      // }
    });
  }

  getUserById(providerId) {
    // this.getReservation(providerId);
    this.userService.getUserById(providerId).subscribe(userData => {
      this.providerId = userData?.id;
      this.companyName = userData?.companyName;
      this.county = userData?.billingAddress.county;
      this.city = userData?.billingAddress.city;
      this.domain = userData?.domain;
      this.coverImagePath = userData?.coverImage !== null ? userData?.coverImage?.filePath : "../../../assets/images/others/coming-soon-min.jpg";
      this.status = userData?.approvedStatus;
      // balance data
      this.allMoney = userData?.earnedMoney?.allMoney;
      this.moneyToReceive = userData?.earnedMoney?.moneyToReceive;
      this.pendingMoney = userData?.earnedMoney?.pendingMoney;
      this.commission = userData?.earnedMoney?.commission;
      this.transactionHistory = userData?.earnedMoney?.transactionHistory;
      this.domainService.getDomainById(userData?.domain).subscribe(domain => {
        this.userDomain = domain.nameEn;
        console.log('NUME DOMENIU', this.userDomain);
      });
      // this.userDomain = this.allDomains?.find((x: any) => x.id === userData?.domain).nameEn;
      // console.log('USER DOMAIN by id',this.userDomain);
      this.getResourcesList(userData?.id);
      this.getReservation(userData.id);
      // if(this.providerId !== undefined || this.providerId!==null){
      // this.getReservation();
      // }
    });
  }

  getResourcesList(userId) {
    const filterObj = {
      userId: userId
    };
    this.resourcesService.listResourceFiltered(this.page, this.size, this.sort, this.dir, filterObj).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: data => {
        this.resourcesList = data?.content;
        this.resourcesList.forEach((element, index) => {
          this.resourcesService.getResourceTypeById(element.resourceTypeId).subscribe(data => {
            this.finalResourcesList.push({
              index: index,
              resourceId: element?.id,
              title: element?.title,
              address: element?.address,
              icon: data?.icon,
              price: element?.totalBookingAmount
            });
          });
        });
        console.log('cautam rezervarile', this.finalResourcesList);
      }
    });
  }
  //recent transaction
  getReservation(idProvider) {
    const filter = {
      providerId: idProvider
    };
    console.log('filter id?', filter);
    this.providersService.listReservationFiltered(0, 3, 'date', 'desc', filter).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this.ngUnsubscribe)).subscribe({
      next: list => {
        console.log("lista de rezervari 1", list.content);
        this.recentTransactionList = list?.content;
        console.log('lista de tranzactii', this.recentTransactionList);
      }
    });
  }
  //change status
  changeStatusModal(elementId) {
    this.ngbModal.open(_change_status_provider_change_status_provider_component__WEBPACK_IMPORTED_MODULE_5__.ChangeStatusProviderComponent, {
      centered: true
    });
    this.modalService.setElementId(elementId);
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_router__WEBPACK_IMPORTED_MODULE_11__.ActivatedRoute
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_2__.UserDataService
  }, {
    type: src_app_shared_services_resources_service__WEBPACK_IMPORTED_MODULE_3__.ResourcesService
  }, {
    type: src_app_shared_services_providers_service__WEBPACK_IMPORTED_MODULE_4__.ProvidersService
  }, {
    type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_12__.NgbModal
  }, {
    type: src_app_shared_services_modals_service__WEBPACK_IMPORTED_MODULE_6__.ModalService
  }, {
    type: src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_7__.SettingsService
  }, {
    type: src_app_shared_services_domains_service__WEBPACK_IMPORTED_MODULE_8__.DomainsService
  }];
  static #_2 = this.propDecorators = {
    chart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_13__.ViewChild,
      args: ["chart"]
    }]
  };
};
ViewProviderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_13__.Component)({
  selector: 'app-view-provider',
  template: _view_provider_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.DecimalPipe],
  styles: [(_view_provider_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ViewProviderComponent);


/***/ }),

/***/ 92821:
/*!************************************************************!*\
  !*** ./src/app/shared/_services/createResource.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateResourceService": () => (/* binding */ CreateResourceService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 58987);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);




let CreateResourceService = class CreateResourceService {
  constructor(http) {
    this.http = http;
    // refreshTicketList$ = new BehaviorSubject(false)
    this.providerData$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(undefined);
  }
  /** Listeners */
  // refreshTicketListData() {
  //     return this.refreshTicketList$.asObservable();
  // }
  providerData() {
    return this.providerData$.asObservable();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
CreateResourceService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
  providedIn: 'root'
})], CreateResourceService);


/***/ }),

/***/ 63712:
/*!******************************************************!*\
  !*** ./src/app/shared/_services/location.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LocationService": () => (/* binding */ LocationService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ 58987);



let LocationService = class LocationService {
  constructor(http) {
    this.http = http;
  }
  getAllCountries() {
    return this.http.get('/bestinform/getAllCountries');
  }
  getCityFilter(page, size, sort, dir, filters) {
    return this.http.post('/bestinform/listCityFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpClient
  }];
};
LocationService = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injectable)({
  providedIn: "root"
})], LocationService);


/***/ }),

/***/ 52077:
/*!*******************************************************!*\
  !*** ./src/app/shared/_services/providers.service.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProvidersService": () => (/* binding */ ProvidersService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ 58987);



let ProvidersService = class ProvidersService {
  constructor(http) {
    this.http = http;
  }
  listProvidersFiltered(page, size, sort, dir, filters) {
    return this.http.post('/bestinform/listUsersFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters);
  }
  changeActiveStatus(targetUserId, accept) {
    return this.http.put("/bestinform/changeActiveStatus?targetUserId=" + targetUserId + "&accept=" + accept, {});
  }
  changeUserStatus(userId, approvedStatus) {
    return this.http.put("/bestinform/changeUserStatus?userId=" + userId + '&approvedStatus=' + approvedStatus, {});
  }
  //list transaction
  listReservationFiltered(page, size, sort, dir, filters) {
    return this.http.post('/bestinform/listReservationFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters);
  }
  //Payment request
  //get payment request by id
  getPaymentRequestById(paymentRequestId) {
    return this.http.get('/bestinform/getPaymentRequestById?paymentRequestId=' + paymentRequestId);
  }
  //payment request
  createPaymentRequest(filters) {
    return this.http.post('/bestinform/createPaymentRequest', filters);
  }
  //list of payment request
  listPaymentRequestFiltered(page, size, sort, dir, filters) {
    return this.http.post('/bestinform/listPaymentRequestFiltered?page=' + page + '&size=' + size + '&sort=' + sort + '&dir=' + dir, filters);
  }
  //change status
  changeStatusPaymentRequest(paymentRequestId, status) {
    return this.http.put("/bestinform/changeStatusPaymentRequest?paymentRequestId=" + paymentRequestId + '&status=' + status, {});
  }
  //send email to announce the provider if accepted or not
  sendProviderApprovedEmail(userId, status) {
    return this.http.get("/bestinform/sendProviderApprovedEmail?userId=" + userId + '&status=' + status);
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpClient
  }];
};
ProvidersService = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injectable)({
  providedIn: 'root'
})], ProvidersService);


/***/ }),

/***/ 25560:
/*!******************************************************!*\
  !*** ./src/app/shared/_services/settings.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SettingsService": () => (/* binding */ SettingsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ 58987);



let SettingsService = class SettingsService {
  constructor(http) {
    this.http = http;
  }
  getCurrentSettings() {
    return this.http.get('/bestinform/getCurrentSetting');
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpClient
  }];
};
SettingsService = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injectable)({
  providedIn: 'root'
})], SettingsService);


/***/ }),

/***/ 36085:
/*!**************************************************************************************************!*\
  !*** ./src/app/standalone-components/available-balance-card/available-balance-card.component.ts ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AvailableBalanceCardComponent": () => (/* binding */ AvailableBalanceCardComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _available_balance_card_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./available-balance-card.component.html?ngResource */ 42404);
/* harmony import */ var _available_balance_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./available-balance-card.component.scss?ngResource */ 90341);
/* harmony import */ var _available_balance_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_available_balance_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngx-translate/core */ 38699);
/* harmony import */ var src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/settings.service */ 25560);








let AvailableBalanceCardComponent = class AvailableBalanceCardComponent {
  constructor(userService, translate, settingsService) {
    this.userService = userService;
    this.translate = translate;
    this.settingsService = settingsService;
  }
  ngOnInit() {
    // TO DO - de verificat ruta daca are id, daca are populam pagina cu informatii luate din getProviderById, daca nu - din getCurrentUser
    this.getProviderId();
    console.log("providerul din componenta:", this.providerId);
  }
  getProviderId() {
    if (this.providerId) {
      this.getUserById(this.providerId);
      this.myCurrency = this.currency;
    } else {
      this.getCurrentUser();
      this.myCurrency = this.currency;
    }
  }
  getUserById(providerId) {
    this.userService.getUserById(providerId).subscribe(userData => {
      console.log("Data by id din componenta", userData);
      this.allMoney = userData?.earnedMoney !== null ? userData?.earnedMoney?.allMoney : 0;
      this.receivedMoney = userData?.earnedMoney !== null ? userData?.earnedMoney?.receivedMoney : 0;
      this.moneyToReceive = userData?.earnedMoney !== null ? userData?.earnedMoney?.moneyToReceive : 0;
      this.pendingMoney = userData?.earnedMoney !== null ? userData?.earnedMoney?.pendingMoney : 0;
      this.commission = userData?.earnedMoney !== null ? userData?.earnedMoney?.commission : 0;
      this.transactionHistory = userData?.earnedMoney !== null ? userData?.earnedMoney?.transactionHistory : 0;
    });
  }
  getCurrentUser() {
    this.userService.getCurrentUser().subscribe(userData => {
      console.log("Data din componenta", userData);
      this.allMoney = userData?.earnedMoney !== null ? userData?.earnedMoney?.allMoney : 0;
      this.receivedMoney = userData?.earnedMoney !== null ? userData?.earnedMoney?.receivedMoney : 0;
      this.moneyToReceive = userData?.earnedMoney !== null ? userData?.earnedMoney?.moneyToReceive : 0;
      this.pendingMoney = userData?.earnedMoney !== null ? userData?.earnedMoney?.pendingMoney : 0;
      this.commission = userData?.earnedMoney !== null ? userData?.earnedMoney?.commission : 0;
      this.transactionHistory = userData?.earnedMoney !== null ? userData?.earnedMoney?.transactionHistory : 0;
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_2__.UserDataService
  }, {
    type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__.TranslateService
  }, {
    type: src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_3__.SettingsService
  }];
  static #_2 = this.propDecorators = {
    providerId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    currency: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }]
  };
};
AvailableBalanceCardComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-available-balance-card',
  standalone: true,
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.CommonModule, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__.TranslateModule],
  template: _available_balance_card_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.DecimalPipe],
  styles: [(_available_balance_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AvailableBalanceCardComponent);


/***/ }),

/***/ 60265:
/*!******************************************************************************************************!*\
  !*** ./src/app/standalone-components/history-reservation-card/history-reservation-card.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HistoryReservationCardComponent": () => (/* binding */ HistoryReservationCardComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _history_reservation_card_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./history-reservation-card.component.html?ngResource */ 59013);
/* harmony import */ var _history_reservation_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./history-reservation-card.component.scss?ngResource */ 20162);
/* harmony import */ var _history_reservation_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_history_reservation_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var ng_apexcharts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ng-apexcharts */ 93239);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ngx-translate/core */ 38699);
/* harmony import */ var src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/settings.service */ 25560);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);









let HistoryReservationCardComponent = class HistoryReservationCardComponent {
  //  constructor(
  //   // private route: ActivatedRoute,
  //   // private userService:UserDataService,
  //   // private resourcesService:ResourcesService,
  //   // private cdr:ChangeDetectorRef,
  //   // private ngbModal:NgbModal,
  //   // private modalService:ModalService,
  //   // private providersService:ProvidersService,
  //   // private datePipe: DatePipe
  //   //serviciul de adaugare cereri
  // ) {}
  constructor(settingsServices, userService) {
    this.settingsServices = settingsServices;
    this.userService = userService;
  }
  ngOnInit() {
    this.chartOptions = this.getChartOptions();
    this.getProviderId();
  }
  //chart graph
  getChartOptions() {
    return {
      series: [{
        name: "My-series",
        data: [10, 41, 35, 51, 49, 62, 69, 91, 148]
      }],
      chart: {
        height: 308,
        type: "line"
      },
      xaxis: {
        categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"]
      }
    };
  }
  getProviderId() {
    if (this.providerId) {
      this.getUserById(this.providerId);
    } else {
      this.getCurrentUser();
    }
  }
  getUserById(providerId) {
    this.userService.getUserById(providerId).subscribe(userData => {
      console.log("Data din history", userData);
      this.allMoney = userData?.earnedMoney !== null ? userData?.earnedMoney?.allMoney : 0;
      // this.moneyToReceive=userData?.earnedMoney !== null ? userData?.earnedMoney?.moneyToReceive:0;
      // this.pendingMoney=userData?.earnedMoney !== null ? userData?.earnedMoney?.pendingMoney: 0;
      // this.commission=userData?.earnedMoney !== null ? userData?.earnedMoney?.commission: 0;
      // this.transactionHistory=userData?.earnedMoney !== null ? userData?.earnedMoney?.transactionHistory : 0;
    });
  }

  getCurrentUser() {
    this.userService.getCurrentUser().subscribe(userData => {
      console.log("Data din history", userData);
      this.allMoney = userData?.earnedMoney !== null ? userData?.earnedMoney?.allMoney : 0;
      // this.moneyToReceive=userData?.earnedMoney !== null ? userData?.earnedMoney?.moneyToReceive : 0;
      // this.pendingMoney=userData?.earnedMoney !== null ? userData?.earnedMoney?.pendingMoney : 0;
      // this.commission=userData?.earnedMoney !== null ? userData?.earnedMoney?.commission : 0;
      // this.transactionHistory=userData?.earnedMoney !== null ? userData?.earnedMoney?.transactionHistory: 0;
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: src_app_shared_services_settings_service__WEBPACK_IMPORTED_MODULE_2__.SettingsService
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_3__.UserDataService
  }];
  static #_2 = this.propDecorators = {
    chart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewChild,
      args: ["chart"]
    }],
    currency: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    providerId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
HistoryReservationCardComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-history-reservation-card',
  standalone: true,
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule, ng_apexcharts__WEBPACK_IMPORTED_MODULE_7__.NgApexchartsModule, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__.TranslateModule],
  template: _history_reservation_card_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.DecimalPipe],
  styles: [(_history_reservation_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], HistoryReservationCardComponent);


/***/ }),

/***/ 72696:
/*!********************************************************************************************************!*\
  !*** ./src/app/standalone-components/recently-reservation-card/recently-reservation-card.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RecentlyReservationCardComponent": () => (/* binding */ RecentlyReservationCardComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _recently_reservation_card_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./recently-reservation-card.component.html?ngResource */ 85317);
/* harmony import */ var _recently_reservation_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recently-reservation-card.component.scss?ngResource */ 48724);
/* harmony import */ var _recently_reservation_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_recently_reservation_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 94666);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ngx-translate/core */ 38699);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 60124);
/* harmony import */ var src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/_services/userData.service */ 32763);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 68951);









let RecentlyReservationCardComponent = class RecentlyReservationCardComponent {
  constructor(route, userDataService) {
    this.route = route;
    this.userDataService = userDataService;
    this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
  }
  ngOnInit() {
    this.getUserRole();
    console.log('aici lista de tranzacrtii', this.recentTransactionList);
  }
  getUserRole() {
    this.userDataService.getCurrentUser().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.takeUntil)(this.ngUnsubscribe)).subscribe(res => {
      if (res.roles.includes('ROLE_SUPER_ADMIN')) {
        this.isAdmin = true;
      } else if (res.roles.includes('ROLE_STAFF')) {
        this.isStaff = true;
      } else if (res.roles.includes('ROLE_PROVIDER')) {
        this.isProvider = true;
      } else if (res.roles.includes('ROLE_CLIENT')) {
        this.isClient = true;
      }
    });
  }
  ngOnDestroy() {
    this.ngUnsubscribe.next();
    this.ngUnsubscribe.complete();
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_router__WEBPACK_IMPORTED_MODULE_5__.ActivatedRoute
  }, {
    type: src_app_shared_services_userData_service__WEBPACK_IMPORTED_MODULE_2__.UserDataService
  }];
  static #_2 = this.propDecorators = {
    recentTransactionList: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    currency: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }]
  };
};
RecentlyReservationCardComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-recently-reservation-card',
  standalone: true,
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__.TranslateModule, _angular_router__WEBPACK_IMPORTED_MODULE_5__.RouterLink],
  template: _recently_reservation_card_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.DecimalPipe],
  styles: [(_recently_reservation_card_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], RecentlyReservationCardComponent);


/***/ }),

/***/ 79604:
/*!***********************************************************!*\
  !*** ./node_modules/apexcharts/dist/apexcharts.common.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * ApexCharts v3.45.1
 * (c) 2018-2023 ApexCharts
 * Released under the MIT License.
 */


function t(t, e) {
  var i = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(t);
    e && (a = a.filter(function (e) {
      return Object.getOwnPropertyDescriptor(t, e).enumerable;
    })), i.push.apply(i, a);
  }
  return i;
}
function e(e) {
  for (var i = 1; i < arguments.length; i++) {
    var a = null != arguments[i] ? arguments[i] : {};
    i % 2 ? t(Object(a), !0).forEach(function (t) {
      o(e, t, a[t]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a)) : t(Object(a)).forEach(function (t) {
      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(a, t));
    });
  }
  return e;
}
function i(t) {
  return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
    return typeof t;
  } : function (t) {
    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, i(t);
}
function a(t, e) {
  if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
  for (var i = 0; i < e.length; i++) {
    var a = e[i];
    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(t, a.key, a);
  }
}
function r(t, e, i) {
  return e && s(t.prototype, e), i && s(t, i), t;
}
function o(t, e, i) {
  return e in t ? Object.defineProperty(t, e, {
    value: i,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = i, t;
}
function n(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, {
    constructor: {
      value: t,
      writable: !0,
      configurable: !0
    }
  }), e && h(t, e);
}
function l(t) {
  return l = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, l(t);
}
function h(t, e) {
  return h = Object.setPrototypeOf || function (t, e) {
    return t.__proto__ = e, t;
  }, h(t, e);
}
function c(t) {
  if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return t;
}
function d(t) {
  var e = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (t) {
      return !1;
    }
  }();
  return function () {
    var i,
      a = l(t);
    if (e) {
      var s = l(this).constructor;
      i = Reflect.construct(a, arguments, s);
    } else i = a.apply(this, arguments);
    return function (t, e) {
      if (e && ("object" == typeof e || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return c(t);
    }(this, i);
  };
}
function g(t, e) {
  return function (t) {
    if (Array.isArray(t)) return t;
  }(t) || function (t, e) {
    var i = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (null == i) return;
    var a,
      s,
      r = [],
      o = !0,
      n = !1;
    try {
      for (i = i.call(t); !(o = (a = i.next()).done) && (r.push(a.value), !e || r.length !== e); o = !0);
    } catch (t) {
      n = !0, s = t;
    } finally {
      try {
        o || null == i.return || i.return();
      } finally {
        if (n) throw s;
      }
    }
    return r;
  }(t, e) || p(t, e) || function () {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function u(t) {
  return function (t) {
    if (Array.isArray(t)) return f(t);
  }(t) || function (t) {
    if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
  }(t) || p(t) || function () {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function p(t, e) {
  if (t) {
    if ("string" == typeof t) return f(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Object" === i && t.constructor && (i = t.constructor.name), "Map" === i || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? f(t, e) : void 0;
  }
}
function f(t, e) {
  (null == e || e > t.length) && (e = t.length);
  for (var i = 0, a = new Array(e); i < e; i++) a[i] = t[i];
  return a;
}
var x = function () {
    function t() {
      a(this, t);
    }
    return r(t, [{
      key: "shadeRGBColor",
      value: function (t, e) {
        var i = e.split(","),
          a = t < 0 ? 0 : 255,
          s = t < 0 ? -1 * t : t,
          r = parseInt(i[0].slice(4), 10),
          o = parseInt(i[1], 10),
          n = parseInt(i[2], 10);
        return "rgb(" + (Math.round((a - r) * s) + r) + "," + (Math.round((a - o) * s) + o) + "," + (Math.round((a - n) * s) + n) + ")";
      }
    }, {
      key: "shadeHexColor",
      value: function (t, e) {
        var i = parseInt(e.slice(1), 16),
          a = t < 0 ? 0 : 255,
          s = t < 0 ? -1 * t : t,
          r = i >> 16,
          o = i >> 8 & 255,
          n = 255 & i;
        return "#" + (16777216 + 65536 * (Math.round((a - r) * s) + r) + 256 * (Math.round((a - o) * s) + o) + (Math.round((a - n) * s) + n)).toString(16).slice(1);
      }
    }, {
      key: "shadeColor",
      value: function (e, i) {
        return t.isColorHex(i) ? this.shadeHexColor(e, i) : this.shadeRGBColor(e, i);
      }
    }], [{
      key: "bind",
      value: function (t, e) {
        return function () {
          return t.apply(e, arguments);
        };
      }
    }, {
      key: "isObject",
      value: function (t) {
        return t && "object" === i(t) && !Array.isArray(t) && null != t;
      }
    }, {
      key: "is",
      value: function (t, e) {
        return Object.prototype.toString.call(e) === "[object " + t + "]";
      }
    }, {
      key: "listToArray",
      value: function (t) {
        var e,
          i = [];
        for (e = 0; e < t.length; e++) i[e] = t[e];
        return i;
      }
    }, {
      key: "extend",
      value: function (t, e) {
        var i = this;
        "function" != typeof Object.assign && (Object.assign = function (t) {
          if (null == t) throw new TypeError("Cannot convert undefined or null to object");
          for (var e = Object(t), i = 1; i < arguments.length; i++) {
            var a = arguments[i];
            if (null != a) for (var s in a) a.hasOwnProperty(s) && (e[s] = a[s]);
          }
          return e;
        });
        var a = Object.assign({}, t);
        return this.isObject(t) && this.isObject(e) && Object.keys(e).forEach(function (s) {
          i.isObject(e[s]) && s in t ? a[s] = i.extend(t[s], e[s]) : Object.assign(a, o({}, s, e[s]));
        }), a;
      }
    }, {
      key: "extendArray",
      value: function (e, i) {
        var a = [];
        return e.map(function (e) {
          a.push(t.extend(i, e));
        }), e = a;
      }
    }, {
      key: "monthMod",
      value: function (t) {
        return t % 12;
      }
    }, {
      key: "clone",
      value: function (e) {
        if (t.is("Array", e)) {
          for (var a = [], s = 0; s < e.length; s++) a[s] = this.clone(e[s]);
          return a;
        }
        if (t.is("Null", e)) return null;
        if (t.is("Date", e)) return e;
        if ("object" === i(e)) {
          var r = {};
          for (var o in e) e.hasOwnProperty(o) && (r[o] = this.clone(e[o]));
          return r;
        }
        return e;
      }
    }, {
      key: "log10",
      value: function (t) {
        return Math.log(t) / Math.LN10;
      }
    }, {
      key: "roundToBase10",
      value: function (t) {
        return Math.pow(10, Math.floor(Math.log10(t)));
      }
    }, {
      key: "roundToBase",
      value: function (t, e) {
        return Math.pow(e, Math.floor(Math.log(t) / Math.log(e)));
      }
    }, {
      key: "parseNumber",
      value: function (t) {
        return null === t ? t : parseFloat(t);
      }
    }, {
      key: "stripNumber",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
        return Number.isInteger(t) ? t : parseFloat(t.toPrecision(e));
      }
    }, {
      key: "randomId",
      value: function () {
        return (Math.random() + 1).toString(36).substring(4);
      }
    }, {
      key: "noExponents",
      value: function (t) {
        var e = String(t).split(/[eE]/);
        if (1 === e.length) return e[0];
        var i = "",
          a = t < 0 ? "-" : "",
          s = e[0].replace(".", ""),
          r = Number(e[1]) + 1;
        if (r < 0) {
          for (i = a + "0."; r++;) i += "0";
          return i + s.replace(/^-/, "");
        }
        for (r -= s.length; r--;) i += "0";
        return s + i;
      }
    }, {
      key: "getDimensions",
      value: function (t) {
        var e = getComputedStyle(t, null),
          i = t.clientHeight,
          a = t.clientWidth;
        return i -= parseFloat(e.paddingTop) + parseFloat(e.paddingBottom), [a -= parseFloat(e.paddingLeft) + parseFloat(e.paddingRight), i];
      }
    }, {
      key: "getBoundingClientRect",
      value: function (t) {
        var e = t.getBoundingClientRect();
        return {
          top: e.top,
          right: e.right,
          bottom: e.bottom,
          left: e.left,
          width: t.clientWidth,
          height: t.clientHeight,
          x: e.left,
          y: e.top
        };
      }
    }, {
      key: "getLargestStringFromArr",
      value: function (t) {
        return t.reduce(function (t, e) {
          return Array.isArray(e) && (e = e.reduce(function (t, e) {
            return t.length > e.length ? t : e;
          })), t.length > e.length ? t : e;
        }, 0);
      }
    }, {
      key: "hexToRgba",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#999999",
          e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .6;
        "#" !== t.substring(0, 1) && (t = "#999999");
        var i = t.replace("#", "");
        i = i.match(new RegExp("(.{" + i.length / 3 + "})", "g"));
        for (var a = 0; a < i.length; a++) i[a] = parseInt(1 === i[a].length ? i[a] + i[a] : i[a], 16);
        return void 0 !== e && i.push(e), "rgba(" + i.join(",") + ")";
      }
    }, {
      key: "getOpacityFromRGBA",
      value: function (t) {
        return parseFloat(t.replace(/^.*,(.+)\)/, "$1"));
      }
    }, {
      key: "rgb2hex",
      value: function (t) {
        return (t = t.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && 4 === t.length ? "#" + ("0" + parseInt(t[1], 10).toString(16)).slice(-2) + ("0" + parseInt(t[2], 10).toString(16)).slice(-2) + ("0" + parseInt(t[3], 10).toString(16)).slice(-2) : "";
      }
    }, {
      key: "isColorHex",
      value: function (t) {
        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(t);
      }
    }, {
      key: "getPolygonPos",
      value: function (t, e) {
        for (var i = [], a = 2 * Math.PI / e, s = 0; s < e; s++) {
          var r = {};
          r.x = t * Math.sin(s * a), r.y = -t * Math.cos(s * a), i.push(r);
        }
        return i;
      }
    }, {
      key: "polarToCartesian",
      value: function (t, e, i, a) {
        var s = (a - 90) * Math.PI / 180;
        return {
          x: t + i * Math.cos(s),
          y: e + i * Math.sin(s)
        };
      }
    }, {
      key: "escapeString",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x",
          i = t.toString().slice();
        return i = i.replace(/[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi, e);
      }
    }, {
      key: "negToZero",
      value: function (t) {
        return t < 0 ? 0 : t;
      }
    }, {
      key: "moveIndexInArray",
      value: function (t, e, i) {
        if (i >= t.length) for (var a = i - t.length + 1; a--;) t.push(void 0);
        return t.splice(i, 0, t.splice(e, 1)[0]), t;
      }
    }, {
      key: "extractNumber",
      value: function (t) {
        return parseFloat(t.replace(/[^\d.]*/g, ""));
      }
    }, {
      key: "findAncestor",
      value: function (t, e) {
        for (; (t = t.parentElement) && !t.classList.contains(e););
        return t;
      }
    }, {
      key: "setELstyles",
      value: function (t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t.style.key = e[i]);
      }
    }, {
      key: "isNumber",
      value: function (t) {
        return !isNaN(t) && parseFloat(Number(t)) === t && !isNaN(parseInt(t, 10));
      }
    }, {
      key: "isFloat",
      value: function (t) {
        return Number(t) === t && t % 1 != 0;
      }
    }, {
      key: "isSafari",
      value: function () {
        return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
      }
    }, {
      key: "isFirefox",
      value: function () {
        return navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
      }
    }, {
      key: "isIE11",
      value: function () {
        if (-1 !== window.navigator.userAgent.indexOf("MSIE") || window.navigator.appVersion.indexOf("Trident/") > -1) return !0;
      }
    }, {
      key: "isIE",
      value: function () {
        var t = window.navigator.userAgent,
          e = t.indexOf("MSIE ");
        if (e > 0) return parseInt(t.substring(e + 5, t.indexOf(".", e)), 10);
        if (t.indexOf("Trident/") > 0) {
          var i = t.indexOf("rv:");
          return parseInt(t.substring(i + 3, t.indexOf(".", i)), 10);
        }
        var a = t.indexOf("Edge/");
        return a > 0 && parseInt(t.substring(a + 5, t.indexOf(".", a)), 10);
      }
    }]), t;
  }(),
  b = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.setEasingFunctions();
    }
    return r(t, [{
      key: "setEasingFunctions",
      value: function () {
        var t;
        if (!this.w.globals.easing) {
          switch (this.w.config.chart.animations.easing) {
            case "linear":
              t = "-";
              break;
            case "easein":
              t = "<";
              break;
            case "easeout":
              t = ">";
              break;
            case "easeinout":
            default:
              t = "<>";
              break;
            case "swing":
              t = function (t) {
                var e = 1.70158;
                return (t -= 1) * t * ((e + 1) * t + e) + 1;
              };
              break;
            case "bounce":
              t = function (t) {
                return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
              };
              break;
            case "elastic":
              t = function (t) {
                return t === !!t ? t : Math.pow(2, -10 * t) * Math.sin((t - .075) * (2 * Math.PI) / .3) + 1;
              };
          }
          this.w.globals.easing = t;
        }
      }
    }, {
      key: "animateLine",
      value: function (t, e, i, a) {
        t.attr(e).animate(a).attr(i);
      }
    }, {
      key: "animateMarker",
      value: function (t, e, i, a, s, r) {
        e || (e = 0), t.attr({
          r: e,
          width: e,
          height: e
        }).animate(a, s).attr({
          r: i,
          width: i.width,
          height: i.height
        }).afterAll(function () {
          r();
        });
      }
    }, {
      key: "animateCircle",
      value: function (t, e, i, a, s) {
        t.attr({
          r: e.r,
          cx: e.cx,
          cy: e.cy
        }).animate(a, s).attr({
          r: i.r,
          cx: i.cx,
          cy: i.cy
        });
      }
    }, {
      key: "animateRect",
      value: function (t, e, i, a, s) {
        t.attr(e).animate(a).attr(i).afterAll(function () {
          return s();
        });
      }
    }, {
      key: "animatePathsGradually",
      value: function (t) {
        var e = t.el,
          i = t.realIndex,
          a = t.j,
          s = t.fill,
          r = t.pathFrom,
          o = t.pathTo,
          n = t.speed,
          l = t.delay,
          h = this.w,
          c = 0;
        h.config.chart.animations.animateGradually.enabled && (c = h.config.chart.animations.animateGradually.delay), h.config.chart.animations.dynamicAnimation.enabled && h.globals.dataChanged && "bar" !== h.config.chart.type && (c = 0), this.morphSVG(e, i, a, "line" !== h.config.chart.type || h.globals.comboCharts ? s : "stroke", r, o, n, l * c);
      }
    }, {
      key: "showDelayedElements",
      value: function () {
        this.w.globals.delayedElements.forEach(function (t) {
          var e = t.el;
          e.classList.remove("apexcharts-element-hidden"), e.classList.add("apexcharts-hidden-element-shown");
        });
      }
    }, {
      key: "animationCompleted",
      value: function (t) {
        var e = this.w;
        e.globals.animationEnded || (e.globals.animationEnded = !0, this.showDelayedElements(), "function" == typeof e.config.chart.events.animationEnd && e.config.chart.events.animationEnd(this.ctx, {
          el: t,
          w: e
        }));
      }
    }, {
      key: "morphSVG",
      value: function (t, e, i, a, s, r, o, n) {
        var l = this,
          h = this.w;
        s || (s = t.attr("pathFrom")), r || (r = t.attr("pathTo"));
        var c = function (t) {
          return "radar" === h.config.chart.type && (o = 1), "M 0 ".concat(h.globals.gridHeight);
        };
        (!s || s.indexOf("undefined") > -1 || s.indexOf("NaN") > -1) && (s = c()), (!r || r.indexOf("undefined") > -1 || r.indexOf("NaN") > -1) && (r = c()), h.globals.shouldAnimate || (o = 1), t.plot(s).animate(1, h.globals.easing, n).plot(s).animate(o, h.globals.easing, n).plot(r).afterAll(function () {
          x.isNumber(i) ? i === h.globals.series[h.globals.maxValsInArrayIndex].length - 2 && h.globals.shouldAnimate && l.animationCompleted(t) : "none" !== a && h.globals.shouldAnimate && (!h.globals.comboCharts && e === h.globals.series.length - 1 || h.globals.comboCharts) && l.animationCompleted(t), l.showDelayedElements();
        });
      }
    }]), t;
  }(),
  v = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "getDefaultFilter",
      value: function (t, e) {
        var i = this.w;
        t.unfilter(!0), new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"), "none" !== i.config.states.normal.filter ? this.applyFilter(t, e, i.config.states.normal.filter.type, i.config.states.normal.filter.value) : i.config.chart.dropShadow.enabled && this.dropShadow(t, i.config.chart.dropShadow, e);
      }
    }, {
      key: "addNormalFilter",
      value: function (t, e) {
        var i = this.w;
        i.config.chart.dropShadow.enabled && !t.node.classList.contains("apexcharts-marker") && this.dropShadow(t, i.config.chart.dropShadow, e);
      }
    }, {
      key: "addLightenFilter",
      value: function (t, e, i) {
        var a = this,
          s = this.w,
          r = i.intensity;
        t.unfilter(!0);
        new window.SVG.Filter();
        t.filter(function (t) {
          var i = s.config.chart.dropShadow;
          (i.enabled ? a.addShadow(t, e, i) : t).componentTransfer({
            rgb: {
              type: "linear",
              slope: 1.5,
              intercept: r
            }
          });
        }), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node);
      }
    }, {
      key: "addDarkenFilter",
      value: function (t, e, i) {
        var a = this,
          s = this.w,
          r = i.intensity;
        t.unfilter(!0);
        new window.SVG.Filter();
        t.filter(function (t) {
          var i = s.config.chart.dropShadow;
          (i.enabled ? a.addShadow(t, e, i) : t).componentTransfer({
            rgb: {
              type: "linear",
              slope: r
            }
          });
        }), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node);
      }
    }, {
      key: "applyFilter",
      value: function (t, e, i) {
        var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;
        switch (i) {
          case "none":
            this.addNormalFilter(t, e);
            break;
          case "lighten":
            this.addLightenFilter(t, e, {
              intensity: a
            });
            break;
          case "darken":
            this.addDarkenFilter(t, e, {
              intensity: a
            });
        }
      }
    }, {
      key: "addShadow",
      value: function (t, e, i) {
        var a = i.blur,
          s = i.top,
          r = i.left,
          o = i.color,
          n = i.opacity,
          l = t.flood(Array.isArray(o) ? o[e] : o, n).composite(t.sourceAlpha, "in").offset(r, s).gaussianBlur(a).merge(t.source);
        return t.blend(t.source, l);
      }
    }, {
      key: "dropShadow",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
          a = e.top,
          s = e.left,
          r = e.blur,
          o = e.color,
          n = e.opacity,
          l = e.noUserSpaceOnUse,
          h = this.w;
        return t.unfilter(!0), x.isIE() && "radialBar" === h.config.chart.type || (o = Array.isArray(o) ? o[i] : o, t.filter(function (t) {
          var e = null;
          e = x.isSafari() || x.isFirefox() || x.isIE() ? t.flood(o, n).composite(t.sourceAlpha, "in").offset(s, a).gaussianBlur(r) : t.flood(o, n).composite(t.sourceAlpha, "in").offset(s, a).gaussianBlur(r).merge(t.source), t.blend(t.source, e);
        }), l || t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node)), t;
      }
    }, {
      key: "setSelectionFilter",
      value: function (t, e, i) {
        var a = this.w;
        if (void 0 !== a.globals.selectedDataPoints[e] && a.globals.selectedDataPoints[e].indexOf(i) > -1) {
          t.node.setAttribute("selected", !0);
          var s = a.config.states.active.filter;
          "none" !== s && this.applyFilter(t, e, s.type, s.value);
        }
      }
    }, {
      key: "_scaleFilterSize",
      value: function (t) {
        !function (e) {
          for (var i in e) e.hasOwnProperty(i) && t.setAttribute(i, e[i]);
        }({
          width: "200%",
          height: "200%",
          x: "-50%",
          y: "-50%"
        });
      }
    }]), t;
  }(),
  m = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "roundPathCorners",
      value: function (t, e) {
        function i(t, e, i) {
          var s = e.x - t.x,
            r = e.y - t.y,
            o = Math.sqrt(s * s + r * r);
          return a(t, e, Math.min(1, i / o));
        }
        function a(t, e, i) {
          return {
            x: t.x + (e.x - t.x) * i,
            y: t.y + (e.y - t.y) * i
          };
        }
        function s(t, e) {
          t.length > 2 && (t[t.length - 2] = e.x, t[t.length - 1] = e.y);
        }
        function r(t) {
          return {
            x: parseFloat(t[t.length - 2]),
            y: parseFloat(t[t.length - 1])
          };
        }
        t.indexOf("NaN") > -1 && (t = "");
        var o = t.split(/[,\s]/).reduce(function (t, e) {
            var i = e.match("([a-zA-Z])(.+)");
            return i ? (t.push(i[1]), t.push(i[2])) : t.push(e), t;
          }, []).reduce(function (t, e) {
            return parseFloat(e) == e && t.length ? t[t.length - 1].push(e) : t.push([e]), t;
          }, []),
          n = [];
        if (o.length > 1) {
          var l = r(o[0]),
            h = null;
          "Z" == o[o.length - 1][0] && o[0].length > 2 && (h = ["L", l.x, l.y], o[o.length - 1] = h), n.push(o[0]);
          for (var c = 1; c < o.length; c++) {
            var d = n[n.length - 1],
              g = o[c],
              u = g == h ? o[1] : o[c + 1];
            if (u && d && d.length > 2 && "L" == g[0] && u.length > 2 && "L" == u[0]) {
              var p,
                f,
                x = r(d),
                b = r(g),
                v = r(u);
              p = i(b, x, e), f = i(b, v, e), s(g, p), g.origPoint = b, n.push(g);
              var m = a(p, b, .5),
                y = a(b, f, .5),
                w = ["C", m.x, m.y, y.x, y.y, f.x, f.y];
              w.origPoint = b, n.push(w);
            } else n.push(g);
          }
          if (h) {
            var k = r(n[n.length - 1]);
            n.push(["Z"]), s(n[0], k);
          }
        } else n = o;
        return n.reduce(function (t, e) {
          return t + e.join(" ") + " ";
        }, "");
      }
    }, {
      key: "drawLine",
      value: function (t, e, i, a) {
        var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "#a8a8a8",
          r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
          o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
          n = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "butt";
        return this.w.globals.dom.Paper.line().attr({
          x1: t,
          y1: e,
          x2: i,
          y2: a,
          stroke: s,
          "stroke-dasharray": r,
          "stroke-width": o,
          "stroke-linecap": n
        });
      }
    }, {
      key: "drawRect",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
          e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
          i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
          s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
          r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "#fefefe",
          o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 1,
          n = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
          l = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null,
          h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0,
          c = this.w.globals.dom.Paper.rect();
        return c.attr({
          x: t,
          y: e,
          width: i > 0 ? i : 0,
          height: a > 0 ? a : 0,
          rx: s,
          ry: s,
          opacity: o,
          "stroke-width": null !== n ? n : 0,
          stroke: null !== l ? l : "none",
          "stroke-dasharray": h
        }), c.node.setAttribute("fill", r), c;
      }
    }, {
      key: "drawPolygon",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "#e1e1e1",
          i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "none";
        return this.w.globals.dom.Paper.polygon(t).attr({
          fill: a,
          stroke: e,
          "stroke-width": i
        });
      }
    }, {
      key: "drawCircle",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
        t < 0 && (t = 0);
        var i = this.w.globals.dom.Paper.circle(2 * t);
        return null !== e && i.attr(e), i;
      }
    }, {
      key: "drawPath",
      value: function (t) {
        var e = t.d,
          i = void 0 === e ? "" : e,
          a = t.stroke,
          s = void 0 === a ? "#a8a8a8" : a,
          r = t.strokeWidth,
          o = void 0 === r ? 1 : r,
          n = t.fill,
          l = t.fillOpacity,
          h = void 0 === l ? 1 : l,
          c = t.strokeOpacity,
          d = void 0 === c ? 1 : c,
          g = t.classes,
          u = t.strokeLinecap,
          p = void 0 === u ? null : u,
          f = t.strokeDashArray,
          x = void 0 === f ? 0 : f,
          b = this.w;
        return null === p && (p = b.config.stroke.lineCap), (i.indexOf("undefined") > -1 || i.indexOf("NaN") > -1) && (i = "M 0 ".concat(b.globals.gridHeight)), b.globals.dom.Paper.path(i).attr({
          fill: n,
          "fill-opacity": h,
          stroke: s,
          "stroke-opacity": d,
          "stroke-linecap": p,
          "stroke-width": o,
          "stroke-dasharray": x,
          class: g
        });
      }
    }, {
      key: "group",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
          e = this.w.globals.dom.Paper.group();
        return null !== t && e.attr(t), e;
      }
    }, {
      key: "move",
      value: function (t, e) {
        var i = ["M", t, e].join(" ");
        return i;
      }
    }, {
      key: "line",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
          a = null;
        return null === i ? a = [" L", t, e].join(" ") : "H" === i ? a = [" H", t].join(" ") : "V" === i && (a = [" V", e].join(" ")), a;
      }
    }, {
      key: "curve",
      value: function (t, e, i, a, s, r) {
        var o = ["C", t, e, i, a, s, r].join(" ");
        return o;
      }
    }, {
      key: "quadraticCurve",
      value: function (t, e, i, a) {
        return ["Q", t, e, i, a].join(" ");
      }
    }, {
      key: "arc",
      value: function (t, e, i, a, s, r, o) {
        var n = "A";
        arguments.length > 7 && void 0 !== arguments[7] && arguments[7] && (n = "a");
        var l = [n, t, e, i, a, s, r, o].join(" ");
        return l;
      }
    }, {
      key: "renderPaths",
      value: function (t) {
        var i,
          a = t.j,
          s = t.realIndex,
          r = t.pathFrom,
          o = t.pathTo,
          n = t.stroke,
          l = t.strokeWidth,
          h = t.strokeLinecap,
          c = t.fill,
          d = t.animationDelay,
          g = t.initialSpeed,
          u = t.dataChangeSpeed,
          p = t.className,
          f = t.shouldClipToGrid,
          x = void 0 === f || f,
          m = t.bindEventsOnPaths,
          y = void 0 === m || m,
          w = t.drawShadow,
          k = void 0 === w || w,
          A = this.w,
          S = new v(this.ctx),
          C = new b(this.ctx),
          L = this.w.config.chart.animations.enabled,
          P = L && this.w.config.chart.animations.dynamicAnimation.enabled,
          I = !!(L && !A.globals.resized || P && A.globals.dataChanged && A.globals.shouldAnimate);
        I ? i = r : (i = o, A.globals.animationEnded = !0);
        var T = A.config.stroke.dashArray,
          M = 0;
        M = Array.isArray(T) ? T[s] : A.config.stroke.dashArray;
        var z = this.drawPath({
          d: i,
          stroke: n,
          strokeWidth: l,
          fill: c,
          fillOpacity: 1,
          classes: p,
          strokeLinecap: h,
          strokeDashArray: M
        });
        if (z.attr("index", s), x && z.attr({
          "clip-path": "url(#gridRectMask".concat(A.globals.cuid, ")")
        }), "none" !== A.config.states.normal.filter.type) S.getDefaultFilter(z, s);else if (A.config.chart.dropShadow.enabled && k && (!A.config.chart.dropShadow.enabledOnSeries || A.config.chart.dropShadow.enabledOnSeries && -1 !== A.config.chart.dropShadow.enabledOnSeries.indexOf(s))) {
          var X = A.config.chart.dropShadow;
          S.dropShadow(z, X, s);
        }
        y && (z.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, z)), z.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, z)), z.node.addEventListener("mousedown", this.pathMouseDown.bind(this, z))), z.attr({
          pathTo: o,
          pathFrom: r
        });
        var E = {
          el: z,
          j: a,
          realIndex: s,
          pathFrom: r,
          pathTo: o,
          fill: c,
          strokeWidth: l,
          delay: d
        };
        return !L || A.globals.resized || A.globals.dataChanged ? !A.globals.resized && A.globals.dataChanged || C.showDelayedElements() : C.animatePathsGradually(e(e({}, E), {}, {
          speed: g
        })), A.globals.dataChanged && P && I && C.animatePathsGradually(e(e({}, E), {}, {
          speed: u
        })), z;
      }
    }, {
      key: "drawPattern",
      value: function (t, e, i) {
        var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "#a8a8a8",
          s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
        return this.w.globals.dom.Paper.pattern(e, i, function (r) {
          "horizontalLines" === t ? r.line(0, 0, i, 0).stroke({
            color: a,
            width: s + 1
          }) : "verticalLines" === t ? r.line(0, 0, 0, e).stroke({
            color: a,
            width: s + 1
          }) : "slantedLines" === t ? r.line(0, 0, e, i).stroke({
            color: a,
            width: s
          }) : "squares" === t ? r.rect(e, i).fill("none").stroke({
            color: a,
            width: s
          }) : "circles" === t && r.circle(e).fill("none").stroke({
            color: a,
            width: s
          });
        });
      }
    }, {
      key: "drawGradient",
      value: function (t, e, i, a, s) {
        var r,
          o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
          n = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
          l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
          h = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0,
          c = this.w;
        e.length < 9 && 0 === e.indexOf("#") && (e = x.hexToRgba(e, a)), i.length < 9 && 0 === i.indexOf("#") && (i = x.hexToRgba(i, s));
        var d = 0,
          g = 1,
          u = 1,
          p = null;
        null !== n && (d = void 0 !== n[0] ? n[0] / 100 : 0, g = void 0 !== n[1] ? n[1] / 100 : 1, u = void 0 !== n[2] ? n[2] / 100 : 1, p = void 0 !== n[3] ? n[3] / 100 : null);
        var f = !("donut" !== c.config.chart.type && "pie" !== c.config.chart.type && "polarArea" !== c.config.chart.type && "bubble" !== c.config.chart.type);
        if (r = null === l || 0 === l.length ? c.globals.dom.Paper.gradient(f ? "radial" : "linear", function (t) {
          t.at(d, e, a), t.at(g, i, s), t.at(u, i, s), null !== p && t.at(p, e, a);
        }) : c.globals.dom.Paper.gradient(f ? "radial" : "linear", function (t) {
          (Array.isArray(l[h]) ? l[h] : l).forEach(function (e) {
            t.at(e.offset / 100, e.color, e.opacity);
          });
        }), f) {
          var b = c.globals.gridWidth / 2,
            v = c.globals.gridHeight / 2;
          "bubble" !== c.config.chart.type ? r.attr({
            gradientUnits: "userSpaceOnUse",
            cx: b,
            cy: v,
            r: o
          }) : r.attr({
            cx: .5,
            cy: .5,
            r: .8,
            fx: .2,
            fy: .2
          });
        } else "vertical" === t ? r.from(0, 0).to(0, 1) : "diagonal" === t ? r.from(0, 0).to(1, 1) : "horizontal" === t ? r.from(0, 1).to(1, 1) : "diagonal2" === t && r.from(1, 0).to(0, 1);
        return r;
      }
    }, {
      key: "getTextBasedOnMaxWidth",
      value: function (t) {
        var e = t.text,
          i = t.maxWidth,
          a = t.fontSize,
          s = t.fontFamily,
          r = this.getTextRects(e, a, s),
          o = r.width / e.length,
          n = Math.floor(i / o);
        return i < r.width ? e.slice(0, n - 3) + "..." : e;
      }
    }, {
      key: "drawText",
      value: function (t) {
        var i = this,
          a = t.x,
          s = t.y,
          r = t.text,
          o = t.textAnchor,
          n = t.fontSize,
          l = t.fontFamily,
          h = t.fontWeight,
          c = t.foreColor,
          d = t.opacity,
          g = t.maxWidth,
          u = t.cssClass,
          p = void 0 === u ? "" : u,
          f = t.isPlainText,
          x = void 0 === f || f,
          b = t.dominantBaseline,
          v = void 0 === b ? "auto" : b,
          m = this.w;
        void 0 === r && (r = "");
        var y = r;
        o || (o = "start"), c && c.length || (c = m.config.chart.foreColor), l = l || m.config.chart.fontFamily, h = h || "regular";
        var w,
          k = {
            maxWidth: g,
            fontSize: n = n || "11px",
            fontFamily: l
          };
        return Array.isArray(r) ? w = m.globals.dom.Paper.text(function (t) {
          for (var a = 0; a < r.length; a++) y = r[a], g && (y = i.getTextBasedOnMaxWidth(e({
            text: r[a]
          }, k))), 0 === a ? t.tspan(y) : t.tspan(y).newLine();
        }) : (g && (y = this.getTextBasedOnMaxWidth(e({
          text: r
        }, k))), w = x ? m.globals.dom.Paper.plain(r) : m.globals.dom.Paper.text(function (t) {
          return t.tspan(y);
        })), w.attr({
          x: a,
          y: s,
          "text-anchor": o,
          "dominant-baseline": v,
          "font-size": n,
          "font-family": l,
          "font-weight": h,
          fill: c,
          class: "apexcharts-text " + p
        }), w.node.style.fontFamily = l, w.node.style.opacity = d, w;
      }
    }, {
      key: "drawMarker",
      value: function (t, e, i) {
        t = t || 0;
        var a = i.pSize || 0,
          s = null;
        if ("square" === i.shape || "rect" === i.shape) {
          var r = void 0 === i.pRadius ? a / 2 : i.pRadius;
          null !== e && a || (a = 0, r = 0);
          var o = 1.2 * a + r,
            n = this.drawRect(o, o, o, o, r);
          n.attr({
            x: t - o / 2,
            y: e - o / 2,
            cx: t,
            cy: e,
            class: i.class ? i.class : "",
            fill: i.pointFillColor,
            "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
            stroke: i.pointStrokeColor,
            "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
            "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
          }), s = n;
        } else "circle" !== i.shape && i.shape || (x.isNumber(e) || (a = 0, e = 0), s = this.drawCircle(a, {
          cx: t,
          cy: e,
          class: i.class ? i.class : "",
          stroke: i.pointStrokeColor,
          fill: i.pointFillColor,
          "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
          "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
          "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
        }));
        return s;
      }
    }, {
      key: "pathMouseEnter",
      value: function (t, e) {
        var i = this.w,
          a = new v(this.ctx),
          s = parseInt(t.node.getAttribute("index"), 10),
          r = parseInt(t.node.getAttribute("j"), 10);
        if ("function" == typeof i.config.chart.events.dataPointMouseEnter && i.config.chart.events.dataPointMouseEnter(e, this.ctx, {
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }), this.ctx.events.fireEvent("dataPointMouseEnter", [e, this.ctx, {
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }]), ("none" === i.config.states.active.filter.type || "true" !== t.node.getAttribute("selected")) && "none" !== i.config.states.hover.filter.type && !i.globals.isTouchDevice) {
          var o = i.config.states.hover.filter;
          a.applyFilter(t, s, o.type, o.value);
        }
      }
    }, {
      key: "pathMouseLeave",
      value: function (t, e) {
        var i = this.w,
          a = new v(this.ctx),
          s = parseInt(t.node.getAttribute("index"), 10),
          r = parseInt(t.node.getAttribute("j"), 10);
        "function" == typeof i.config.chart.events.dataPointMouseLeave && i.config.chart.events.dataPointMouseLeave(e, this.ctx, {
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }), this.ctx.events.fireEvent("dataPointMouseLeave", [e, this.ctx, {
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }]), "none" !== i.config.states.active.filter.type && "true" === t.node.getAttribute("selected") || "none" !== i.config.states.hover.filter.type && a.getDefaultFilter(t, s);
      }
    }, {
      key: "pathMouseDown",
      value: function (t, e) {
        var i = this.w,
          a = new v(this.ctx),
          s = parseInt(t.node.getAttribute("index"), 10),
          r = parseInt(t.node.getAttribute("j"), 10),
          o = "false";
        if ("true" === t.node.getAttribute("selected")) {
          if (t.node.setAttribute("selected", "false"), i.globals.selectedDataPoints[s].indexOf(r) > -1) {
            var n = i.globals.selectedDataPoints[s].indexOf(r);
            i.globals.selectedDataPoints[s].splice(n, 1);
          }
        } else {
          if (!i.config.states.active.allowMultipleDataPointsSelection && i.globals.selectedDataPoints.length > 0) {
            i.globals.selectedDataPoints = [];
            var l = i.globals.dom.Paper.select(".apexcharts-series path").members,
              h = i.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,
              c = function (t) {
                Array.prototype.forEach.call(t, function (t) {
                  t.node.setAttribute("selected", "false"), a.getDefaultFilter(t, s);
                });
              };
            c(l), c(h);
          }
          t.node.setAttribute("selected", "true"), o = "true", void 0 === i.globals.selectedDataPoints[s] && (i.globals.selectedDataPoints[s] = []), i.globals.selectedDataPoints[s].push(r);
        }
        if ("true" === o) {
          var d = i.config.states.active.filter;
          if ("none" !== d) a.applyFilter(t, s, d.type, d.value);else if ("none" !== i.config.states.hover.filter && !i.globals.isTouchDevice) {
            var g = i.config.states.hover.filter;
            a.applyFilter(t, s, g.type, g.value);
          }
        } else if ("none" !== i.config.states.active.filter.type) if ("none" === i.config.states.hover.filter.type || i.globals.isTouchDevice) a.getDefaultFilter(t, s);else {
          g = i.config.states.hover.filter;
          a.applyFilter(t, s, g.type, g.value);
        }
        "function" == typeof i.config.chart.events.dataPointSelection && i.config.chart.events.dataPointSelection(e, this.ctx, {
          selectedDataPoints: i.globals.selectedDataPoints,
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }), e && this.ctx.events.fireEvent("dataPointSelection", [e, this.ctx, {
          selectedDataPoints: i.globals.selectedDataPoints,
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }]);
      }
    }, {
      key: "rotateAroundCenter",
      value: function (t) {
        var e = {};
        return t && "function" == typeof t.getBBox && (e = t.getBBox()), {
          x: e.x + e.width / 2,
          y: e.y + e.height / 2
        };
      }
    }, {
      key: "getTextRects",
      value: function (t, e, i, a) {
        var s = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
          r = this.w,
          o = this.drawText({
            x: -200,
            y: -200,
            text: t,
            textAnchor: "start",
            fontSize: e,
            fontFamily: i,
            foreColor: "#fff",
            opacity: 0
          });
        a && o.attr("transform", a), r.globals.dom.Paper.add(o);
        var n = o.bbox();
        return s || (n = o.node.getBoundingClientRect()), o.remove(), {
          width: n.width,
          height: n.height
        };
      }
    }, {
      key: "placeTextWithEllipsis",
      value: function (t, e, i) {
        if ("function" == typeof t.getComputedTextLength && (t.textContent = e, e.length > 0 && t.getComputedTextLength() >= i / 1.1)) {
          for (var a = e.length - 3; a > 0; a -= 3) if (t.getSubStringLength(0, a) <= i / 1.1) return void (t.textContent = e.substring(0, a) + "...");
          t.textContent = ".";
        }
      }
    }], [{
      key: "setAttrs",
      value: function (t, e) {
        for (var i in e) e.hasOwnProperty(i) && t.setAttribute(i, e[i]);
      }
    }]), t;
  }(),
  y = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "getStackedSeriesTotals",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
          e = this.w,
          i = [];
        if (0 === e.globals.series.length) return i;
        for (var a = 0; a < e.globals.series[e.globals.maxValsInArrayIndex].length; a++) {
          for (var s = 0, r = 0; r < e.globals.series.length; r++) void 0 !== e.globals.series[r][a] && -1 === t.indexOf(r) && (s += e.globals.series[r][a]);
          i.push(s);
        }
        return i;
      }
    }, {
      key: "getSeriesTotalByIndex",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
        return null === t ? this.w.config.series.reduce(function (t, e) {
          return t + e;
        }, 0) : this.w.globals.series[t].reduce(function (t, e) {
          return t + e;
        }, 0);
      }
    }, {
      key: "getStackedSeriesTotalsByGroups",
      value: function () {
        var t = this,
          e = this.w,
          i = [];
        return e.globals.seriesGroups.forEach(function (a) {
          var s = [];
          e.config.series.forEach(function (t, e) {
            a.indexOf(t.name) > -1 && s.push(e);
          });
          var r = e.globals.series.map(function (t, e) {
            return -1 === s.indexOf(e) ? e : -1;
          }).filter(function (t) {
            return -1 !== t;
          });
          i.push(t.getStackedSeriesTotals(r));
        }), i;
      }
    }, {
      key: "isSeriesNull",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
        return 0 === (null === t ? this.w.config.series.filter(function (t) {
          return null !== t;
        }) : this.w.config.series[t].data.filter(function (t) {
          return null !== t;
        })).length;
      }
    }, {
      key: "seriesHaveSameValues",
      value: function (t) {
        return this.w.globals.series[t].every(function (t, e, i) {
          return t === i[0];
        });
      }
    }, {
      key: "getCategoryLabels",
      value: function (t) {
        var e = this.w,
          i = t.slice();
        return e.config.xaxis.convertedCatToNumeric && (i = t.map(function (t, i) {
          return e.config.xaxis.labels.formatter(t - e.globals.minX + 1);
        })), i;
      }
    }, {
      key: "getLargestSeries",
      value: function () {
        var t = this.w;
        t.globals.maxValsInArrayIndex = t.globals.series.map(function (t) {
          return t.length;
        }).indexOf(Math.max.apply(Math, t.globals.series.map(function (t) {
          return t.length;
        })));
      }
    }, {
      key: "getLargestMarkerSize",
      value: function () {
        var t = this.w,
          e = 0;
        return t.globals.markers.size.forEach(function (t) {
          e = Math.max(e, t);
        }), t.config.markers.discrete && t.config.markers.discrete.length && t.config.markers.discrete.forEach(function (t) {
          e = Math.max(e, t.size);
        }), e > 0 && (e += t.config.markers.hover.sizeOffset + 1), t.globals.markers.largestSize = e, e;
      }
    }, {
      key: "getSeriesTotals",
      value: function () {
        var t = this.w;
        t.globals.seriesTotals = t.globals.series.map(function (t, e) {
          var i = 0;
          if (Array.isArray(t)) for (var a = 0; a < t.length; a++) i += t[a];else i += t;
          return i;
        });
      }
    }, {
      key: "getSeriesTotalsXRange",
      value: function (t, e) {
        var i = this.w;
        return i.globals.series.map(function (a, s) {
          for (var r = 0, o = 0; o < a.length; o++) i.globals.seriesX[s][o] > t && i.globals.seriesX[s][o] < e && (r += a[o]);
          return r;
        });
      }
    }, {
      key: "getPercentSeries",
      value: function () {
        var t = this.w;
        t.globals.seriesPercent = t.globals.series.map(function (e, i) {
          var a = [];
          if (Array.isArray(e)) for (var s = 0; s < e.length; s++) {
            var r = t.globals.stackedSeriesTotals[s],
              o = 0;
            r && (o = 100 * e[s] / r), a.push(o);
          } else {
            var n = 100 * e / t.globals.seriesTotals.reduce(function (t, e) {
              return t + e;
            }, 0);
            a.push(n);
          }
          return a;
        });
      }
    }, {
      key: "getCalculatedRatios",
      value: function () {
        var t,
          e,
          i,
          a,
          s = this.w.globals,
          r = [],
          o = 0,
          n = [],
          l = .1,
          h = 0;
        if (s.yRange = [], s.isMultipleYAxis) for (var c = 0; c < s.minYArr.length; c++) s.yRange.push(Math.abs(s.minYArr[c] - s.maxYArr[c])), n.push(0);else s.yRange.push(Math.abs(s.minY - s.maxY));
        s.xRange = Math.abs(s.maxX - s.minX), s.zRange = Math.abs(s.maxZ - s.minZ);
        for (var d = 0; d < s.yRange.length; d++) r.push(s.yRange[d] / s.gridHeight);
        if (e = s.xRange / s.gridWidth, i = Math.abs(s.initialMaxX - s.initialMinX) / s.gridWidth, t = s.yRange / s.gridWidth, a = s.xRange / s.gridHeight, (o = s.zRange / s.gridHeight * 16) || (o = 1), s.minY !== Number.MIN_VALUE && 0 !== Math.abs(s.minY) && (s.hasNegs = !0), s.isMultipleYAxis) {
          n = [];
          for (var g = 0; g < r.length; g++) n.push(-s.minYArr[g] / r[g]);
        } else n.push(-s.minY / r[0]), s.minY !== Number.MIN_VALUE && 0 !== Math.abs(s.minY) && (l = -s.minY / t, h = s.minX / e);
        return {
          yRatio: r,
          invertedYRatio: t,
          zRatio: o,
          xRatio: e,
          initialXRatio: i,
          invertedXRatio: a,
          baseLineInvertedY: l,
          baseLineY: n,
          baseLineX: h
        };
      }
    }, {
      key: "getLogSeries",
      value: function (t) {
        var e = this,
          i = this.w;
        return i.globals.seriesLog = t.map(function (t, a) {
          return i.config.yaxis[a] && i.config.yaxis[a].logarithmic ? t.map(function (t) {
            return null === t ? null : e.getLogVal(i.config.yaxis[a].logBase, t, a);
          }) : t;
        }), i.globals.invalidLogScale ? t : i.globals.seriesLog;
      }
    }, {
      key: "getBaseLog",
      value: function (t, e) {
        return Math.log(e) / Math.log(t);
      }
    }, {
      key: "getLogVal",
      value: function (t, e, i) {
        if (0 === e) return 0;
        var a = this.w,
          s = 0 === a.globals.minYArr[i] ? -1 : this.getBaseLog(t, a.globals.minYArr[i]),
          r = (0 === a.globals.maxYArr[i] ? 0 : this.getBaseLog(t, a.globals.maxYArr[i])) - s;
        return e < 1 ? e / r : (this.getBaseLog(t, e) - s) / r;
      }
    }, {
      key: "getLogYRatios",
      value: function (t) {
        var e = this,
          i = this.w,
          a = this.w.globals;
        return a.yLogRatio = t.slice(), a.logYRange = a.yRange.map(function (t, s) {
          if (i.config.yaxis[s] && e.w.config.yaxis[s].logarithmic) {
            var r,
              o = -Number.MAX_VALUE,
              n = Number.MIN_VALUE;
            return a.seriesLog.forEach(function (t, e) {
              t.forEach(function (t) {
                i.config.yaxis[e] && i.config.yaxis[e].logarithmic && (o = Math.max(t, o), n = Math.min(t, n));
              });
            }), r = Math.pow(a.yRange[s], Math.abs(n - o) / a.yRange[s]), a.yLogRatio[s] = r / a.gridHeight, r;
          }
        }), a.invalidLogScale ? t.slice() : a.yLogRatio;
      }
    }], [{
      key: "checkComboSeries",
      value: function (t) {
        var e = !1,
          i = 0,
          a = 0;
        return t.length && void 0 !== t[0].type && t.forEach(function (t) {
          "bar" !== t.type && "column" !== t.type && "candlestick" !== t.type && "boxPlot" !== t.type || i++, void 0 !== t.type && a++;
        }), a > 0 && (e = !0), {
          comboBarCount: i,
          comboCharts: e
        };
      }
    }, {
      key: "extendArrayProps",
      value: function (t, e, i) {
        return e.yaxis && (e = t.extendYAxis(e, i)), e.annotations && (e.annotations.yaxis && (e = t.extendYAxisAnnotations(e)), e.annotations.xaxis && (e = t.extendXAxisAnnotations(e)), e.annotations.points && (e = t.extendPointAnnotations(e))), e;
      }
    }]), t;
  }(),
  w = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.annoCtx = e;
    }
    return r(t, [{
      key: "setOrientations",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
          i = this.w;
        if ("vertical" === t.label.orientation) {
          var a = null !== e ? e : 0,
            s = i.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(a, "']"));
          if (null !== s) {
            var r = s.getBoundingClientRect();
            s.setAttribute("x", parseFloat(s.getAttribute("x")) - r.height + 4), "top" === t.label.position ? s.setAttribute("y", parseFloat(s.getAttribute("y")) + r.width) : s.setAttribute("y", parseFloat(s.getAttribute("y")) - r.width);
            var o = this.annoCtx.graphics.rotateAroundCenter(s),
              n = o.x,
              l = o.y;
            s.setAttribute("transform", "rotate(-90 ".concat(n, " ").concat(l, ")"));
          }
        }
      }
    }, {
      key: "addBackgroundToAnno",
      value: function (t, e) {
        var i = this.w;
        if (!t || void 0 === e.label.text || void 0 !== e.label.text && !String(e.label.text).trim()) return null;
        var a = i.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),
          s = t.getBoundingClientRect(),
          r = e.label.style.padding.left,
          o = e.label.style.padding.right,
          n = e.label.style.padding.top,
          l = e.label.style.padding.bottom;
        "vertical" === e.label.orientation && (n = e.label.style.padding.left, l = e.label.style.padding.right, r = e.label.style.padding.top, o = e.label.style.padding.bottom);
        var h = s.left - a.left - r,
          c = s.top - a.top - n,
          d = this.annoCtx.graphics.drawRect(h - i.globals.barPadForNumericAxis, c, s.width + r + o, s.height + n + l, e.label.borderRadius, e.label.style.background, 1, e.label.borderWidth, e.label.borderColor, 0);
        return e.id && d.node.classList.add(e.id), d;
      }
    }, {
      key: "annotationsBackground",
      value: function () {
        var t = this,
          e = this.w,
          i = function (i, a, s) {
            var r = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations .apexcharts-").concat(s, "-annotation-label[rel='").concat(a, "']"));
            if (r) {
              var o = r.parentNode,
                n = t.addBackgroundToAnno(r, i);
              n && (o.insertBefore(n.node, r), i.label.mouseEnter && n.node.addEventListener("mouseenter", i.label.mouseEnter.bind(t, i)), i.label.mouseLeave && n.node.addEventListener("mouseleave", i.label.mouseLeave.bind(t, i)), i.label.click && n.node.addEventListener("click", i.label.click.bind(t, i)));
            }
          };
        e.config.annotations.xaxis.map(function (t, e) {
          i(t, e, "xaxis");
        }), e.config.annotations.yaxis.map(function (t, e) {
          i(t, e, "yaxis");
        }), e.config.annotations.points.map(function (t, e) {
          i(t, e, "point");
        });
      }
    }, {
      key: "getY1Y2",
      value: function (t, e) {
        var i,
          a = "y1" === t ? e.y : e.y2,
          s = this.w;
        if (this.annoCtx.invertAxis) {
          var r = s.globals.labels.indexOf(a);
          s.config.xaxis.convertedCatToNumeric && (r = s.globals.categoryLabels.indexOf(a));
          var o = s.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (r + 1) + ")");
          o && (i = parseFloat(o.getAttribute("y"))), void 0 !== e.seriesIndex && s.globals.barHeight && (i = i - s.globals.barHeight / 2 * (s.globals.series.length - 1) + s.globals.barHeight * e.seriesIndex);
        } else {
          var n;
          if (s.config.yaxis[e.yAxisIndex].logarithmic) n = (a = new y(this.annoCtx.ctx).getLogVal(a, e.yAxisIndex)) / s.globals.yLogRatio[e.yAxisIndex];else n = (a - s.globals.minYArr[e.yAxisIndex]) / (s.globals.yRange[e.yAxisIndex] / s.globals.gridHeight);
          i = s.globals.gridHeight - n, !e.marker || void 0 !== e.y && null !== e.y || (i = 0), s.config.yaxis[e.yAxisIndex] && s.config.yaxis[e.yAxisIndex].reversed && (i = n);
        }
        return "string" == typeof a && a.indexOf("px") > -1 && (i = parseFloat(a)), i;
      }
    }, {
      key: "getX1X2",
      value: function (t, e) {
        var i = this.w,
          a = this.annoCtx.invertAxis ? i.globals.minY : i.globals.minX,
          s = this.annoCtx.invertAxis ? i.globals.maxY : i.globals.maxX,
          r = this.annoCtx.invertAxis ? i.globals.yRange[0] : i.globals.xRange,
          o = (e.x - a) / (r / i.globals.gridWidth);
        this.annoCtx.inversedReversedAxis && (o = (s - e.x) / (r / i.globals.gridWidth)), "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || i.globals.dataFormatXNumeric || (o = this.getStringX(e.x));
        var n = (e.x2 - a) / (r / i.globals.gridWidth);
        return this.annoCtx.inversedReversedAxis && (n = (s - e.x2) / (r / i.globals.gridWidth)), "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || i.globals.dataFormatXNumeric || (n = this.getStringX(e.x2)), void 0 !== e.x && null !== e.x || !e.marker || (o = i.globals.gridWidth), "x1" === t && "string" == typeof e.x && e.x.indexOf("px") > -1 && (o = parseFloat(e.x)), "x2" === t && "string" == typeof e.x2 && e.x2.indexOf("px") > -1 && (n = parseFloat(e.x2)), void 0 !== e.seriesIndex && i.globals.barWidth && !this.annoCtx.invertAxis && (o = o - i.globals.barWidth / 2 * (i.globals.series.length - 1) + i.globals.barWidth * e.seriesIndex), "x1" === t ? o : n;
      }
    }, {
      key: "getStringX",
      value: function (t) {
        var e = this.w,
          i = t;
        e.config.xaxis.convertedCatToNumeric && e.globals.categoryLabels.length && (t = e.globals.categoryLabels.indexOf(t) + 1);
        var a = e.globals.labels.indexOf(t),
          s = e.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (a + 1) + ")");
        return s && (i = parseFloat(s.getAttribute("x"))), i;
      }
    }]), t;
  }(),
  k = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.annoCtx = e, this.invertAxis = this.annoCtx.invertAxis, this.helpers = new w(this.annoCtx);
    }
    return r(t, [{
      key: "addXaxisAnnotation",
      value: function (t, e, i) {
        var a,
          s = this.w,
          r = this.helpers.getX1X2("x1", t),
          o = t.label.text,
          n = t.strokeDashArray;
        if (x.isNumber(r)) {
          if (null === t.x2 || void 0 === t.x2) {
            var l = this.annoCtx.graphics.drawLine(r + t.offsetX, 0 + t.offsetY, r + t.offsetX, s.globals.gridHeight + t.offsetY, t.borderColor, n, t.borderWidth);
            e.appendChild(l.node), t.id && l.node.classList.add(t.id);
          } else {
            if ((a = this.helpers.getX1X2("x2", t)) < r) {
              var h = r;
              r = a, a = h;
            }
            var c = this.annoCtx.graphics.drawRect(r + t.offsetX, 0 + t.offsetY, a - r, s.globals.gridHeight + t.offsetY, 0, t.fillColor, t.opacity, 1, t.borderColor, n);
            c.node.classList.add("apexcharts-annotation-rect"), c.attr("clip-path", "url(#gridRectMask".concat(s.globals.cuid, ")")), e.appendChild(c.node), t.id && c.node.classList.add(t.id);
          }
          var d = this.annoCtx.graphics.getTextRects(o, parseFloat(t.label.style.fontSize)),
            g = "top" === t.label.position ? 4 : "center" === t.label.position ? s.globals.gridHeight / 2 + ("vertical" === t.label.orientation ? d.width / 2 : 0) : s.globals.gridHeight,
            u = this.annoCtx.graphics.drawText({
              x: r + t.label.offsetX,
              y: g + t.label.offsetY - ("vertical" === t.label.orientation ? "top" === t.label.position ? d.width / 2 - 12 : -d.width / 2 : 0),
              text: o,
              textAnchor: t.label.textAnchor,
              fontSize: t.label.style.fontSize,
              fontFamily: t.label.style.fontFamily,
              fontWeight: t.label.style.fontWeight,
              foreColor: t.label.style.color,
              cssClass: "apexcharts-xaxis-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
            });
          u.attr({
            rel: i
          }), e.appendChild(u.node), this.annoCtx.helpers.setOrientations(t, i);
        }
      }
    }, {
      key: "drawXAxisAnnotations",
      value: function () {
        var t = this,
          e = this.w,
          i = this.annoCtx.graphics.group({
            class: "apexcharts-xaxis-annotations"
          });
        return e.config.annotations.xaxis.map(function (e, a) {
          t.addXaxisAnnotation(e, i.node, a);
        }), i;
      }
    }]), t;
  }(),
  A = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.annoCtx = e, this.helpers = new w(this.annoCtx);
    }
    return r(t, [{
      key: "addYaxisAnnotation",
      value: function (t, e, i) {
        var a,
          s = this.w,
          r = t.strokeDashArray,
          o = this.helpers.getY1Y2("y1", t),
          n = t.label.text;
        if (null === t.y2 || void 0 === t.y2) {
          var l = this.annoCtx.graphics.drawLine(0 + t.offsetX, o + t.offsetY, this._getYAxisAnnotationWidth(t), o + t.offsetY, t.borderColor, r, t.borderWidth);
          e.appendChild(l.node), t.id && l.node.classList.add(t.id);
        } else {
          if ((a = this.helpers.getY1Y2("y2", t)) > o) {
            var h = o;
            o = a, a = h;
          }
          var c = this.annoCtx.graphics.drawRect(0 + t.offsetX, a + t.offsetY, this._getYAxisAnnotationWidth(t), o - a, 0, t.fillColor, t.opacity, 1, t.borderColor, r);
          c.node.classList.add("apexcharts-annotation-rect"), c.attr("clip-path", "url(#gridRectMask".concat(s.globals.cuid, ")")), e.appendChild(c.node), t.id && c.node.classList.add(t.id);
        }
        var d = "right" === t.label.position ? s.globals.gridWidth : "center" === t.label.position ? s.globals.gridWidth / 2 : 0,
          g = this.annoCtx.graphics.drawText({
            x: d + t.label.offsetX,
            y: (null != a ? a : o) + t.label.offsetY - 3,
            text: n,
            textAnchor: t.label.textAnchor,
            fontSize: t.label.style.fontSize,
            fontFamily: t.label.style.fontFamily,
            fontWeight: t.label.style.fontWeight,
            foreColor: t.label.style.color,
            cssClass: "apexcharts-yaxis-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
          });
        g.attr({
          rel: i
        }), e.appendChild(g.node);
      }
    }, {
      key: "_getYAxisAnnotationWidth",
      value: function (t) {
        var e = this.w;
        e.globals.gridWidth;
        return (t.width.indexOf("%") > -1 ? e.globals.gridWidth * parseInt(t.width, 10) / 100 : parseInt(t.width, 10)) + t.offsetX;
      }
    }, {
      key: "drawYAxisAnnotations",
      value: function () {
        var t = this,
          e = this.w,
          i = this.annoCtx.graphics.group({
            class: "apexcharts-yaxis-annotations"
          });
        return e.config.annotations.yaxis.map(function (e, a) {
          t.addYaxisAnnotation(e, i.node, a);
        }), i;
      }
    }]), t;
  }(),
  S = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.annoCtx = e, this.helpers = new w(this.annoCtx);
    }
    return r(t, [{
      key: "addPointAnnotation",
      value: function (t, e, i) {
        this.w;
        var a = this.helpers.getX1X2("x1", t),
          s = this.helpers.getY1Y2("y1", t);
        if (x.isNumber(a)) {
          var r = {
              pSize: t.marker.size,
              pointStrokeWidth: t.marker.strokeWidth,
              pointFillColor: t.marker.fillColor,
              pointStrokeColor: t.marker.strokeColor,
              shape: t.marker.shape,
              pRadius: t.marker.radius,
              class: "apexcharts-point-annotation-marker ".concat(t.marker.cssClass, " ").concat(t.id ? t.id : "")
            },
            o = this.annoCtx.graphics.drawMarker(a + t.marker.offsetX, s + t.marker.offsetY, r);
          e.appendChild(o.node);
          var n = t.label.text ? t.label.text : "",
            l = this.annoCtx.graphics.drawText({
              x: a + t.label.offsetX,
              y: s + t.label.offsetY - t.marker.size - parseFloat(t.label.style.fontSize) / 1.6,
              text: n,
              textAnchor: t.label.textAnchor,
              fontSize: t.label.style.fontSize,
              fontFamily: t.label.style.fontFamily,
              fontWeight: t.label.style.fontWeight,
              foreColor: t.label.style.color,
              cssClass: "apexcharts-point-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
            });
          if (l.attr({
            rel: i
          }), e.appendChild(l.node), t.customSVG.SVG) {
            var h = this.annoCtx.graphics.group({
              class: "apexcharts-point-annotations-custom-svg " + t.customSVG.cssClass
            });
            h.attr({
              transform: "translate(".concat(a + t.customSVG.offsetX, ", ").concat(s + t.customSVG.offsetY, ")")
            }), h.node.innerHTML = t.customSVG.SVG, e.appendChild(h.node);
          }
          if (t.image.path) {
            var c = t.image.width ? t.image.width : 20,
              d = t.image.height ? t.image.height : 20;
            o = this.annoCtx.addImage({
              x: a + t.image.offsetX - c / 2,
              y: s + t.image.offsetY - d / 2,
              width: c,
              height: d,
              path: t.image.path,
              appendTo: ".apexcharts-point-annotations"
            });
          }
          t.mouseEnter && o.node.addEventListener("mouseenter", t.mouseEnter.bind(this, t)), t.mouseLeave && o.node.addEventListener("mouseleave", t.mouseLeave.bind(this, t)), t.click && o.node.addEventListener("click", t.click.bind(this, t));
        }
      }
    }, {
      key: "drawPointAnnotations",
      value: function () {
        var t = this,
          e = this.w,
          i = this.annoCtx.graphics.group({
            class: "apexcharts-point-annotations"
          });
        return e.config.annotations.points.map(function (e, a) {
          t.addPointAnnotation(e, i.node, a);
        }), i;
      }
    }]), t;
  }();
var C = {
    name: "en",
    options: {
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      toolbar: {
        exportToSVG: "Download SVG",
        exportToPNG: "Download PNG",
        exportToCSV: "Download CSV",
        menu: "Menu",
        selection: "Selection",
        selectionZoom: "Selection Zoom",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        pan: "Panning",
        reset: "Reset Zoom"
      }
    }
  },
  L = function () {
    function t() {
      a(this, t), this.yAxis = {
        show: !0,
        showAlways: !1,
        showForNullSeries: !0,
        seriesName: void 0,
        opposite: !1,
        reversed: !1,
        logarithmic: !1,
        logBase: 10,
        tickAmount: void 0,
        stepSize: void 0,
        forceNiceScale: !1,
        max: void 0,
        min: void 0,
        floating: !1,
        decimalsInFloat: void 0,
        labels: {
          show: !0,
          minWidth: 0,
          maxWidth: 160,
          offsetX: 0,
          offsetY: 0,
          align: void 0,
          rotate: 0,
          padding: 20,
          style: {
            colors: [],
            fontSize: "11px",
            fontWeight: 400,
            fontFamily: void 0,
            cssClass: ""
          },
          formatter: void 0
        },
        axisBorder: {
          show: !1,
          color: "#e0e0e0",
          width: 1,
          offsetX: 0,
          offsetY: 0
        },
        axisTicks: {
          show: !1,
          color: "#e0e0e0",
          width: 6,
          offsetX: 0,
          offsetY: 0
        },
        title: {
          text: void 0,
          rotate: -90,
          offsetY: 0,
          offsetX: 0,
          style: {
            color: void 0,
            fontSize: "11px",
            fontWeight: 900,
            fontFamily: void 0,
            cssClass: ""
          }
        },
        tooltip: {
          enabled: !1,
          offsetX: 0
        },
        crosshairs: {
          show: !0,
          position: "front",
          stroke: {
            color: "#b6b6b6",
            width: 1,
            dashArray: 0
          }
        }
      }, this.pointAnnotation = {
        id: void 0,
        x: 0,
        y: null,
        yAxisIndex: 0,
        seriesIndex: void 0,
        mouseEnter: void 0,
        mouseLeave: void 0,
        click: void 0,
        marker: {
          size: 4,
          fillColor: "#fff",
          strokeWidth: 2,
          strokeColor: "#333",
          shape: "circle",
          offsetX: 0,
          offsetY: 0,
          radius: 2,
          cssClass: ""
        },
        label: {
          borderColor: "#c2c2c2",
          borderWidth: 1,
          borderRadius: 2,
          text: void 0,
          textAnchor: "middle",
          offsetX: 0,
          offsetY: 0,
          mouseEnter: void 0,
          mouseLeave: void 0,
          click: void 0,
          style: {
            background: "#fff",
            color: void 0,
            fontSize: "11px",
            fontFamily: void 0,
            fontWeight: 400,
            cssClass: "",
            padding: {
              left: 5,
              right: 5,
              top: 2,
              bottom: 2
            }
          }
        },
        customSVG: {
          SVG: void 0,
          cssClass: void 0,
          offsetX: 0,
          offsetY: 0
        },
        image: {
          path: void 0,
          width: 20,
          height: 20,
          offsetX: 0,
          offsetY: 0
        }
      }, this.yAxisAnnotation = {
        id: void 0,
        y: 0,
        y2: null,
        strokeDashArray: 1,
        fillColor: "#c2c2c2",
        borderColor: "#c2c2c2",
        borderWidth: 1,
        opacity: .3,
        offsetX: 0,
        offsetY: 0,
        width: "100%",
        yAxisIndex: 0,
        label: {
          borderColor: "#c2c2c2",
          borderWidth: 1,
          borderRadius: 2,
          text: void 0,
          textAnchor: "end",
          position: "right",
          offsetX: 0,
          offsetY: -3,
          mouseEnter: void 0,
          mouseLeave: void 0,
          click: void 0,
          style: {
            background: "#fff",
            color: void 0,
            fontSize: "11px",
            fontFamily: void 0,
            fontWeight: 400,
            cssClass: "",
            padding: {
              left: 5,
              right: 5,
              top: 2,
              bottom: 2
            }
          }
        }
      }, this.xAxisAnnotation = {
        id: void 0,
        x: 0,
        x2: null,
        strokeDashArray: 1,
        fillColor: "#c2c2c2",
        borderColor: "#c2c2c2",
        borderWidth: 1,
        opacity: .3,
        offsetX: 0,
        offsetY: 0,
        label: {
          borderColor: "#c2c2c2",
          borderWidth: 1,
          borderRadius: 2,
          text: void 0,
          textAnchor: "middle",
          orientation: "vertical",
          position: "top",
          offsetX: 0,
          offsetY: 0,
          mouseEnter: void 0,
          mouseLeave: void 0,
          click: void 0,
          style: {
            background: "#fff",
            color: void 0,
            fontSize: "11px",
            fontFamily: void 0,
            fontWeight: 400,
            cssClass: "",
            padding: {
              left: 5,
              right: 5,
              top: 2,
              bottom: 2
            }
          }
        }
      }, this.text = {
        x: 0,
        y: 0,
        text: "",
        textAnchor: "start",
        foreColor: void 0,
        fontSize: "13px",
        fontFamily: void 0,
        fontWeight: 400,
        appendTo: ".apexcharts-annotations",
        backgroundColor: "transparent",
        borderColor: "#c2c2c2",
        borderRadius: 0,
        borderWidth: 0,
        paddingLeft: 4,
        paddingRight: 4,
        paddingTop: 2,
        paddingBottom: 2
      };
    }
    return r(t, [{
      key: "init",
      value: function () {
        return {
          annotations: {
            yaxis: [this.yAxisAnnotation],
            xaxis: [this.xAxisAnnotation],
            points: [this.pointAnnotation],
            texts: [],
            images: [],
            shapes: []
          },
          chart: {
            animations: {
              enabled: !0,
              easing: "easeinout",
              speed: 800,
              animateGradually: {
                delay: 150,
                enabled: !0
              },
              dynamicAnimation: {
                enabled: !0,
                speed: 350
              }
            },
            background: "transparent",
            locales: [C],
            defaultLocale: "en",
            dropShadow: {
              enabled: !1,
              enabledOnSeries: void 0,
              top: 2,
              left: 2,
              blur: 4,
              color: "#000",
              opacity: .35
            },
            events: {
              animationEnd: void 0,
              beforeMount: void 0,
              mounted: void 0,
              updated: void 0,
              click: void 0,
              mouseMove: void 0,
              mouseLeave: void 0,
              xAxisLabelClick: void 0,
              legendClick: void 0,
              markerClick: void 0,
              selection: void 0,
              dataPointSelection: void 0,
              dataPointMouseEnter: void 0,
              dataPointMouseLeave: void 0,
              beforeZoom: void 0,
              beforeResetZoom: void 0,
              zoomed: void 0,
              scrolled: void 0,
              brushScrolled: void 0
            },
            foreColor: "#373d3f",
            fontFamily: "Helvetica, Arial, sans-serif",
            height: "auto",
            parentHeightOffset: 15,
            redrawOnParentResize: !0,
            redrawOnWindowResize: !0,
            id: void 0,
            group: void 0,
            nonce: void 0,
            offsetX: 0,
            offsetY: 0,
            selection: {
              enabled: !1,
              type: "x",
              fill: {
                color: "#24292e",
                opacity: .1
              },
              stroke: {
                width: 1,
                color: "#24292e",
                opacity: .4,
                dashArray: 3
              },
              xaxis: {
                min: void 0,
                max: void 0
              },
              yaxis: {
                min: void 0,
                max: void 0
              }
            },
            sparkline: {
              enabled: !1
            },
            brush: {
              enabled: !1,
              autoScaleYaxis: !0,
              target: void 0,
              targets: void 0
            },
            stacked: !1,
            stackOnlyBar: !0,
            stackType: "normal",
            toolbar: {
              show: !0,
              offsetX: 0,
              offsetY: 0,
              tools: {
                download: !0,
                selection: !0,
                zoom: !0,
                zoomin: !0,
                zoomout: !0,
                pan: !0,
                reset: !0,
                customIcons: []
              },
              export: {
                csv: {
                  filename: void 0,
                  columnDelimiter: ",",
                  headerCategory: "category",
                  headerValue: "value",
                  dateFormatter: function (t) {
                    return new Date(t).toDateString();
                  }
                },
                png: {
                  filename: void 0
                },
                svg: {
                  filename: void 0
                }
              },
              autoSelected: "zoom"
            },
            type: "line",
            width: "100%",
            zoom: {
              enabled: !0,
              type: "x",
              autoScaleYaxis: !1,
              zoomedArea: {
                fill: {
                  color: "#90CAF9",
                  opacity: .4
                },
                stroke: {
                  color: "#0D47A1",
                  opacity: .4,
                  width: 1
                }
              }
            }
          },
          plotOptions: {
            area: {
              fillTo: "origin"
            },
            bar: {
              horizontal: !1,
              columnWidth: "70%",
              barHeight: "70%",
              distributed: !1,
              borderRadius: 0,
              borderRadiusApplication: "around",
              borderRadiusWhenStacked: "last",
              rangeBarOverlap: !0,
              rangeBarGroupRows: !1,
              hideZeroBarsWhenGrouped: !1,
              isDumbbell: !1,
              dumbbellColors: void 0,
              isFunnel: !1,
              isFunnel3d: !0,
              colors: {
                ranges: [],
                backgroundBarColors: [],
                backgroundBarOpacity: 1,
                backgroundBarRadius: 0
              },
              dataLabels: {
                position: "top",
                maxItems: 100,
                hideOverflowingLabels: !0,
                orientation: "horizontal",
                total: {
                  enabled: !1,
                  formatter: void 0,
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    color: "#373d3f",
                    fontSize: "12px",
                    fontFamily: void 0,
                    fontWeight: 600
                  }
                }
              }
            },
            bubble: {
              zScaling: !0,
              minBubbleRadius: void 0,
              maxBubbleRadius: void 0
            },
            candlestick: {
              colors: {
                upward: "#00B746",
                downward: "#EF403C"
              },
              wick: {
                useFillColor: !0
              }
            },
            boxPlot: {
              colors: {
                upper: "#00E396",
                lower: "#008FFB"
              }
            },
            heatmap: {
              radius: 2,
              enableShades: !0,
              shadeIntensity: .5,
              reverseNegativeShade: !1,
              distributed: !1,
              useFillColorAsStroke: !1,
              colorScale: {
                inverse: !1,
                ranges: [],
                min: void 0,
                max: void 0
              }
            },
            treemap: {
              enableShades: !0,
              shadeIntensity: .5,
              distributed: !1,
              reverseNegativeShade: !1,
              useFillColorAsStroke: !1,
              dataLabels: {
                format: "scale"
              },
              colorScale: {
                inverse: !1,
                ranges: [],
                min: void 0,
                max: void 0
              }
            },
            radialBar: {
              inverseOrder: !1,
              startAngle: 0,
              endAngle: 360,
              offsetX: 0,
              offsetY: 0,
              hollow: {
                margin: 5,
                size: "50%",
                background: "transparent",
                image: void 0,
                imageWidth: 150,
                imageHeight: 150,
                imageOffsetX: 0,
                imageOffsetY: 0,
                imageClipped: !0,
                position: "front",
                dropShadow: {
                  enabled: !1,
                  top: 0,
                  left: 0,
                  blur: 3,
                  color: "#000",
                  opacity: .5
                }
              },
              track: {
                show: !0,
                startAngle: void 0,
                endAngle: void 0,
                background: "#f2f2f2",
                strokeWidth: "97%",
                opacity: 1,
                margin: 5,
                dropShadow: {
                  enabled: !1,
                  top: 0,
                  left: 0,
                  blur: 3,
                  color: "#000",
                  opacity: .5
                }
              },
              dataLabels: {
                show: !0,
                name: {
                  show: !0,
                  fontSize: "16px",
                  fontFamily: void 0,
                  fontWeight: 600,
                  color: void 0,
                  offsetY: 0,
                  formatter: function (t) {
                    return t;
                  }
                },
                value: {
                  show: !0,
                  fontSize: "14px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  color: void 0,
                  offsetY: 16,
                  formatter: function (t) {
                    return t + "%";
                  }
                },
                total: {
                  show: !1,
                  label: "Total",
                  fontSize: "16px",
                  fontWeight: 600,
                  fontFamily: void 0,
                  color: void 0,
                  formatter: function (t) {
                    return t.globals.seriesTotals.reduce(function (t, e) {
                      return t + e;
                    }, 0) / t.globals.series.length + "%";
                  }
                }
              },
              barLabels: {
                enabled: !1,
                margin: 5,
                useSeriesColors: !0,
                fontFamily: void 0,
                fontWeight: 600,
                fontSize: "16px",
                formatter: function (t) {
                  return t;
                },
                onClick: void 0
              }
            },
            pie: {
              customScale: 1,
              offsetX: 0,
              offsetY: 0,
              startAngle: 0,
              endAngle: 360,
              expandOnClick: !0,
              dataLabels: {
                offset: 0,
                minAngleToShowLabel: 10
              },
              donut: {
                size: "65%",
                background: "transparent",
                labels: {
                  show: !1,
                  name: {
                    show: !0,
                    fontSize: "16px",
                    fontFamily: void 0,
                    fontWeight: 600,
                    color: void 0,
                    offsetY: -10,
                    formatter: function (t) {
                      return t;
                    }
                  },
                  value: {
                    show: !0,
                    fontSize: "20px",
                    fontFamily: void 0,
                    fontWeight: 400,
                    color: void 0,
                    offsetY: 10,
                    formatter: function (t) {
                      return t;
                    }
                  },
                  total: {
                    show: !1,
                    showAlways: !1,
                    label: "Total",
                    fontSize: "16px",
                    fontWeight: 400,
                    fontFamily: void 0,
                    color: void 0,
                    formatter: function (t) {
                      return t.globals.seriesTotals.reduce(function (t, e) {
                        return t + e;
                      }, 0);
                    }
                  }
                }
              }
            },
            polarArea: {
              rings: {
                strokeWidth: 1,
                strokeColor: "#e8e8e8"
              },
              spokes: {
                strokeWidth: 1,
                connectorColors: "#e8e8e8"
              }
            },
            radar: {
              size: void 0,
              offsetX: 0,
              offsetY: 0,
              polygons: {
                strokeWidth: 1,
                strokeColors: "#e8e8e8",
                connectorColors: "#e8e8e8",
                fill: {
                  colors: void 0
                }
              }
            }
          },
          colors: void 0,
          dataLabels: {
            enabled: !0,
            enabledOnSeries: void 0,
            formatter: function (t) {
              return null !== t ? t : "";
            },
            textAnchor: "middle",
            distributed: !1,
            offsetX: 0,
            offsetY: 0,
            style: {
              fontSize: "12px",
              fontFamily: void 0,
              fontWeight: 600,
              colors: void 0
            },
            background: {
              enabled: !0,
              foreColor: "#fff",
              borderRadius: 2,
              padding: 4,
              opacity: .9,
              borderWidth: 1,
              borderColor: "#fff",
              dropShadow: {
                enabled: !1,
                top: 1,
                left: 1,
                blur: 1,
                color: "#000",
                opacity: .45
              }
            },
            dropShadow: {
              enabled: !1,
              top: 1,
              left: 1,
              blur: 1,
              color: "#000",
              opacity: .45
            }
          },
          fill: {
            type: "solid",
            colors: void 0,
            opacity: .85,
            gradient: {
              shade: "dark",
              type: "horizontal",
              shadeIntensity: .5,
              gradientToColors: void 0,
              inverseColors: !0,
              opacityFrom: 1,
              opacityTo: 1,
              stops: [0, 50, 100],
              colorStops: []
            },
            image: {
              src: [],
              width: void 0,
              height: void 0
            },
            pattern: {
              style: "squares",
              width: 6,
              height: 6,
              strokeWidth: 2
            }
          },
          forecastDataPoints: {
            count: 0,
            fillOpacity: .5,
            strokeWidth: void 0,
            dashArray: 4
          },
          grid: {
            show: !0,
            borderColor: "#e0e0e0",
            strokeDashArray: 0,
            position: "back",
            xaxis: {
              lines: {
                show: !1
              }
            },
            yaxis: {
              lines: {
                show: !0
              }
            },
            row: {
              colors: void 0,
              opacity: .5
            },
            column: {
              colors: void 0,
              opacity: .5
            },
            padding: {
              top: 0,
              right: 10,
              bottom: 0,
              left: 12
            }
          },
          labels: [],
          legend: {
            show: !0,
            showForSingleSeries: !1,
            showForNullSeries: !0,
            showForZeroSeries: !0,
            floating: !1,
            position: "bottom",
            horizontalAlign: "center",
            inverseOrder: !1,
            fontSize: "12px",
            fontFamily: void 0,
            fontWeight: 400,
            width: void 0,
            height: void 0,
            formatter: void 0,
            tooltipHoverFormatter: void 0,
            offsetX: -20,
            offsetY: 4,
            customLegendItems: [],
            labels: {
              colors: void 0,
              useSeriesColors: !1
            },
            markers: {
              width: 12,
              height: 12,
              strokeWidth: 0,
              fillColors: void 0,
              strokeColor: "#fff",
              radius: 12,
              customHTML: void 0,
              offsetX: 0,
              offsetY: 0,
              onClick: void 0
            },
            itemMargin: {
              horizontal: 5,
              vertical: 2
            },
            onItemClick: {
              toggleDataSeries: !0
            },
            onItemHover: {
              highlightDataSeries: !0
            }
          },
          markers: {
            discrete: [],
            size: 0,
            colors: void 0,
            strokeColors: "#fff",
            strokeWidth: 2,
            strokeOpacity: .9,
            strokeDashArray: 0,
            fillOpacity: 1,
            shape: "circle",
            width: 8,
            height: 8,
            radius: 2,
            offsetX: 0,
            offsetY: 0,
            onClick: void 0,
            onDblClick: void 0,
            showNullDataPoints: !0,
            hover: {
              size: void 0,
              sizeOffset: 3
            }
          },
          noData: {
            text: void 0,
            align: "center",
            verticalAlign: "middle",
            offsetX: 0,
            offsetY: 0,
            style: {
              color: void 0,
              fontSize: "14px",
              fontFamily: void 0
            }
          },
          responsive: [],
          series: void 0,
          states: {
            normal: {
              filter: {
                type: "none",
                value: 0
              }
            },
            hover: {
              filter: {
                type: "lighten",
                value: .1
              }
            },
            active: {
              allowMultipleDataPointsSelection: !1,
              filter: {
                type: "darken",
                value: .5
              }
            }
          },
          title: {
            text: void 0,
            align: "left",
            margin: 5,
            offsetX: 0,
            offsetY: 0,
            floating: !1,
            style: {
              fontSize: "14px",
              fontWeight: 900,
              fontFamily: void 0,
              color: void 0
            }
          },
          subtitle: {
            text: void 0,
            align: "left",
            margin: 5,
            offsetX: 0,
            offsetY: 30,
            floating: !1,
            style: {
              fontSize: "12px",
              fontWeight: 400,
              fontFamily: void 0,
              color: void 0
            }
          },
          stroke: {
            show: !0,
            curve: "smooth",
            lineCap: "butt",
            width: 2,
            colors: void 0,
            dashArray: 0,
            fill: {
              type: "solid",
              colors: void 0,
              opacity: .85,
              gradient: {
                shade: "dark",
                type: "horizontal",
                shadeIntensity: .5,
                gradientToColors: void 0,
                inverseColors: !0,
                opacityFrom: 1,
                opacityTo: 1,
                stops: [0, 50, 100],
                colorStops: []
              }
            }
          },
          tooltip: {
            enabled: !0,
            enabledOnSeries: void 0,
            shared: !0,
            hideEmptySeries: !0,
            followCursor: !1,
            intersect: !1,
            inverseOrder: !1,
            custom: void 0,
            fillSeriesColor: !1,
            theme: "light",
            cssClass: "",
            style: {
              fontSize: "12px",
              fontFamily: void 0
            },
            onDatasetHover: {
              highlightDataSeries: !1
            },
            x: {
              show: !0,
              format: "dd MMM",
              formatter: void 0
            },
            y: {
              formatter: void 0,
              title: {
                formatter: function (t) {
                  return t ? t + ": " : "";
                }
              }
            },
            z: {
              formatter: void 0,
              title: "Size: "
            },
            marker: {
              show: !0,
              fillColors: void 0
            },
            items: {
              display: "flex"
            },
            fixed: {
              enabled: !1,
              position: "topRight",
              offsetX: 0,
              offsetY: 0
            }
          },
          xaxis: {
            type: "category",
            categories: [],
            convertedCatToNumeric: !1,
            offsetX: 0,
            offsetY: 0,
            overwriteCategories: void 0,
            labels: {
              show: !0,
              rotate: -45,
              rotateAlways: !1,
              hideOverlappingLabels: !0,
              trim: !1,
              minHeight: void 0,
              maxHeight: 120,
              showDuplicates: !0,
              style: {
                colors: [],
                fontSize: "12px",
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: ""
              },
              offsetX: 0,
              offsetY: 0,
              format: void 0,
              formatter: void 0,
              datetimeUTC: !0,
              datetimeFormatter: {
                year: "yyyy",
                month: "MMM 'yy",
                day: "dd MMM",
                hour: "HH:mm",
                minute: "HH:mm:ss",
                second: "HH:mm:ss"
              }
            },
            group: {
              groups: [],
              style: {
                colors: [],
                fontSize: "12px",
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: ""
              }
            },
            axisBorder: {
              show: !0,
              color: "#e0e0e0",
              width: "100%",
              height: 1,
              offsetX: 0,
              offsetY: 0
            },
            axisTicks: {
              show: !0,
              color: "#e0e0e0",
              height: 6,
              offsetX: 0,
              offsetY: 0
            },
            stepSize: void 0,
            tickAmount: void 0,
            tickPlacement: "on",
            min: void 0,
            max: void 0,
            range: void 0,
            floating: !1,
            decimalsInFloat: void 0,
            position: "bottom",
            title: {
              text: void 0,
              offsetX: 0,
              offsetY: 0,
              style: {
                color: void 0,
                fontSize: "12px",
                fontWeight: 900,
                fontFamily: void 0,
                cssClass: ""
              }
            },
            crosshairs: {
              show: !0,
              width: 1,
              position: "back",
              opacity: .9,
              stroke: {
                color: "#b6b6b6",
                width: 1,
                dashArray: 3
              },
              fill: {
                type: "solid",
                color: "#B1B9C4",
                gradient: {
                  colorFrom: "#D8E3F0",
                  colorTo: "#BED1E6",
                  stops: [0, 100],
                  opacityFrom: .4,
                  opacityTo: .5
                }
              },
              dropShadow: {
                enabled: !1,
                left: 0,
                top: 0,
                blur: 1,
                opacity: .4
              }
            },
            tooltip: {
              enabled: !0,
              offsetY: 0,
              formatter: void 0,
              style: {
                fontSize: "12px",
                fontFamily: void 0
              }
            }
          },
          yaxis: this.yAxis,
          theme: {
            mode: "light",
            palette: "palette1",
            monochrome: {
              enabled: !1,
              color: "#008FFB",
              shadeTo: "light",
              shadeIntensity: .65
            }
          }
        };
      }
    }]), t;
  }(),
  P = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.graphics = new m(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = !0), this.helpers = new w(this), this.xAxisAnnotations = new k(this), this.yAxisAnnotations = new A(this), this.pointsAnnotations = new S(this), this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = !0), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints;
    }
    return r(t, [{
      key: "drawAxesAnnotations",
      value: function () {
        var t = this.w;
        if (t.globals.axisCharts) {
          for (var e = this.yAxisAnnotations.drawYAxisAnnotations(), i = this.xAxisAnnotations.drawXAxisAnnotations(), a = this.pointsAnnotations.drawPointAnnotations(), s = t.config.chart.animations.enabled, r = [e, i, a], o = [i.node, e.node, a.node], n = 0; n < 3; n++) t.globals.dom.elGraphical.add(r[n]), !s || t.globals.resized || t.globals.dataChanged || "scatter" !== t.config.chart.type && "bubble" !== t.config.chart.type && t.globals.dataPoints > 1 && o[n].classList.add("apexcharts-element-hidden"), t.globals.delayedElements.push({
            el: o[n],
            index: 0
          });
          this.helpers.annotationsBackground();
        }
      }
    }, {
      key: "drawImageAnnos",
      value: function () {
        var t = this;
        this.w.config.annotations.images.map(function (e, i) {
          t.addImage(e, i);
        });
      }
    }, {
      key: "drawTextAnnos",
      value: function () {
        var t = this;
        this.w.config.annotations.texts.map(function (e, i) {
          t.addText(e, i);
        });
      }
    }, {
      key: "addXaxisAnnotation",
      value: function (t, e, i) {
        this.xAxisAnnotations.addXaxisAnnotation(t, e, i);
      }
    }, {
      key: "addYaxisAnnotation",
      value: function (t, e, i) {
        this.yAxisAnnotations.addYaxisAnnotation(t, e, i);
      }
    }, {
      key: "addPointAnnotation",
      value: function (t, e, i) {
        this.pointsAnnotations.addPointAnnotation(t, e, i);
      }
    }, {
      key: "addText",
      value: function (t, e) {
        var i = t.x,
          a = t.y,
          s = t.text,
          r = t.textAnchor,
          o = t.foreColor,
          n = t.fontSize,
          l = t.fontFamily,
          h = t.fontWeight,
          c = t.cssClass,
          d = t.backgroundColor,
          g = t.borderWidth,
          u = t.strokeDashArray,
          p = t.borderRadius,
          f = t.borderColor,
          x = t.appendTo,
          b = void 0 === x ? ".apexcharts-svg" : x,
          v = t.paddingLeft,
          m = void 0 === v ? 4 : v,
          y = t.paddingRight,
          w = void 0 === y ? 4 : y,
          k = t.paddingBottom,
          A = void 0 === k ? 2 : k,
          S = t.paddingTop,
          C = void 0 === S ? 2 : S,
          L = this.w,
          P = this.graphics.drawText({
            x: i,
            y: a,
            text: s,
            textAnchor: r || "start",
            fontSize: n || "12px",
            fontWeight: h || "regular",
            fontFamily: l || L.config.chart.fontFamily,
            foreColor: o || L.config.chart.foreColor,
            cssClass: c
          }),
          I = L.globals.dom.baseEl.querySelector(b);
        I && I.appendChild(P.node);
        var T = P.bbox();
        if (s) {
          var M = this.graphics.drawRect(T.x - m, T.y - C, T.width + m + w, T.height + A + C, p, d || "transparent", 1, g, f, u);
          I.insertBefore(M.node, P.node);
        }
      }
    }, {
      key: "addImage",
      value: function (t, e) {
        var i = this.w,
          a = t.path,
          s = t.x,
          r = void 0 === s ? 0 : s,
          o = t.y,
          n = void 0 === o ? 0 : o,
          l = t.width,
          h = void 0 === l ? 20 : l,
          c = t.height,
          d = void 0 === c ? 20 : c,
          g = t.appendTo,
          u = void 0 === g ? ".apexcharts-svg" : g,
          p = i.globals.dom.Paper.image(a);
        p.size(h, d).move(r, n);
        var f = i.globals.dom.baseEl.querySelector(u);
        return f && f.appendChild(p.node), p;
      }
    }, {
      key: "addXaxisAnnotationExternal",
      value: function (t, e, i) {
        return this.addAnnotationExternal({
          params: t,
          pushToMemory: e,
          context: i,
          type: "xaxis",
          contextMethod: i.addXaxisAnnotation
        }), i;
      }
    }, {
      key: "addYaxisAnnotationExternal",
      value: function (t, e, i) {
        return this.addAnnotationExternal({
          params: t,
          pushToMemory: e,
          context: i,
          type: "yaxis",
          contextMethod: i.addYaxisAnnotation
        }), i;
      }
    }, {
      key: "addPointAnnotationExternal",
      value: function (t, e, i) {
        return void 0 === this.invertAxis && (this.invertAxis = i.w.globals.isBarHorizontal), this.addAnnotationExternal({
          params: t,
          pushToMemory: e,
          context: i,
          type: "point",
          contextMethod: i.addPointAnnotation
        }), i;
      }
    }, {
      key: "addAnnotationExternal",
      value: function (t) {
        var e = t.params,
          i = t.pushToMemory,
          a = t.context,
          s = t.type,
          r = t.contextMethod,
          o = a,
          n = o.w,
          l = n.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations")),
          h = l.childNodes.length + 1,
          c = new L(),
          d = Object.assign({}, "xaxis" === s ? c.xAxisAnnotation : "yaxis" === s ? c.yAxisAnnotation : c.pointAnnotation),
          g = x.extend(d, e);
        switch (s) {
          case "xaxis":
            this.addXaxisAnnotation(g, l, h);
            break;
          case "yaxis":
            this.addYaxisAnnotation(g, l, h);
            break;
          case "point":
            this.addPointAnnotation(g, l, h);
        }
        var u = n.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations .apexcharts-").concat(s, "-annotation-label[rel='").concat(h, "']")),
          p = this.helpers.addBackgroundToAnno(u, g);
        return p && l.insertBefore(p.node, u), i && n.globals.memory.methodsToExec.push({
          context: o,
          id: g.id ? g.id : x.randomId(),
          method: r,
          label: "addAnnotation",
          params: e
        }), a;
      }
    }, {
      key: "clearAnnotations",
      value: function (t) {
        var e = t.w,
          i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
        e.globals.memory.methodsToExec.map(function (t, i) {
          "addText" !== t.label && "addAnnotation" !== t.label || e.globals.memory.methodsToExec.splice(i, 1);
        }), i = x.listToArray(i), Array.prototype.forEach.call(i, function (t) {
          for (; t.firstChild;) t.removeChild(t.firstChild);
        });
      }
    }, {
      key: "removeAnnotation",
      value: function (t, e) {
        var i = t.w,
          a = i.globals.dom.baseEl.querySelectorAll(".".concat(e));
        a && (i.globals.memory.methodsToExec.map(function (t, a) {
          t.id === e && i.globals.memory.methodsToExec.splice(a, 1);
        }), Array.prototype.forEach.call(a, function (t) {
          t.parentElement.removeChild(t);
        }));
      }
    }]), t;
  }(),
  I = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
    }
    return r(t, [{
      key: "isValidDate",
      value: function (t) {
        return "number" != typeof t && !isNaN(this.parseDate(t));
      }
    }, {
      key: "getTimeStamp",
      value: function (t) {
        return Date.parse(t) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t).toISOString().substr(0, 25)).getTime() : new Date(t).getTime() : t;
      }
    }, {
      key: "getDate",
      value: function (t) {
        return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t).toUTCString()) : new Date(t);
      }
    }, {
      key: "parseDate",
      value: function (t) {
        var e = Date.parse(t);
        if (!isNaN(e)) return this.getTimeStamp(t);
        var i = Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
        return i = this.getTimeStamp(i);
      }
    }, {
      key: "parseDateWithTimezone",
      value: function (t) {
        return Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
      }
    }, {
      key: "formatDate",
      value: function (t, e) {
        var i = this.w.globals.locale,
          a = this.w.config.xaxis.labels.datetimeUTC,
          s = ["\0"].concat(u(i.months)),
          r = ["\x01"].concat(u(i.shortMonths)),
          o = ["\x02"].concat(u(i.days)),
          n = ["\x03"].concat(u(i.shortDays));
        function l(t, e) {
          var i = t + "";
          for (e = e || 2; i.length < e;) i = "0" + i;
          return i;
        }
        var h = a ? t.getUTCFullYear() : t.getFullYear();
        e = (e = (e = e.replace(/(^|[^\\])yyyy+/g, "$1" + h)).replace(/(^|[^\\])yy/g, "$1" + h.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + h);
        var c = (a ? t.getUTCMonth() : t.getMonth()) + 1;
        e = (e = (e = (e = e.replace(/(^|[^\\])MMMM+/g, "$1" + s[0])).replace(/(^|[^\\])MMM/g, "$1" + r[0])).replace(/(^|[^\\])MM/g, "$1" + l(c))).replace(/(^|[^\\])M/g, "$1" + c);
        var d = a ? t.getUTCDate() : t.getDate();
        e = (e = (e = (e = e.replace(/(^|[^\\])dddd+/g, "$1" + o[0])).replace(/(^|[^\\])ddd/g, "$1" + n[0])).replace(/(^|[^\\])dd/g, "$1" + l(d))).replace(/(^|[^\\])d/g, "$1" + d);
        var g = a ? t.getUTCHours() : t.getHours(),
          p = g > 12 ? g - 12 : 0 === g ? 12 : g;
        e = (e = (e = (e = e.replace(/(^|[^\\])HH+/g, "$1" + l(g))).replace(/(^|[^\\])H/g, "$1" + g)).replace(/(^|[^\\])hh+/g, "$1" + l(p))).replace(/(^|[^\\])h/g, "$1" + p);
        var f = a ? t.getUTCMinutes() : t.getMinutes();
        e = (e = e.replace(/(^|[^\\])mm+/g, "$1" + l(f))).replace(/(^|[^\\])m/g, "$1" + f);
        var x = a ? t.getUTCSeconds() : t.getSeconds();
        e = (e = e.replace(/(^|[^\\])ss+/g, "$1" + l(x))).replace(/(^|[^\\])s/g, "$1" + x);
        var b = a ? t.getUTCMilliseconds() : t.getMilliseconds();
        e = e.replace(/(^|[^\\])fff+/g, "$1" + l(b, 3)), b = Math.round(b / 10), e = e.replace(/(^|[^\\])ff/g, "$1" + l(b)), b = Math.round(b / 10);
        var v = g < 12 ? "AM" : "PM";
        e = (e = (e = e.replace(/(^|[^\\])f/g, "$1" + b)).replace(/(^|[^\\])TT+/g, "$1" + v)).replace(/(^|[^\\])T/g, "$1" + v.charAt(0));
        var m = v.toLowerCase();
        e = (e = e.replace(/(^|[^\\])tt+/g, "$1" + m)).replace(/(^|[^\\])t/g, "$1" + m.charAt(0));
        var y = -t.getTimezoneOffset(),
          w = a || !y ? "Z" : y > 0 ? "+" : "-";
        if (!a) {
          var k = (y = Math.abs(y)) % 60;
          w += l(Math.floor(y / 60)) + ":" + l(k);
        }
        e = e.replace(/(^|[^\\])K/g, "$1" + w);
        var A = (a ? t.getUTCDay() : t.getDay()) + 1;
        return e = (e = (e = (e = (e = e.replace(new RegExp(o[0], "g"), o[A])).replace(new RegExp(n[0], "g"), n[A])).replace(new RegExp(s[0], "g"), s[c])).replace(new RegExp(r[0], "g"), r[c])).replace(/\\(.)/g, "$1");
      }
    }, {
      key: "getTimeUnitsfromTimestamp",
      value: function (t, e, i) {
        var a = this.w;
        void 0 !== a.config.xaxis.min && (t = a.config.xaxis.min), void 0 !== a.config.xaxis.max && (e = a.config.xaxis.max);
        var s = this.getDate(t),
          r = this.getDate(e),
          o = this.formatDate(s, "yyyy MM dd HH mm ss fff").split(" "),
          n = this.formatDate(r, "yyyy MM dd HH mm ss fff").split(" ");
        return {
          minMillisecond: parseInt(o[6], 10),
          maxMillisecond: parseInt(n[6], 10),
          minSecond: parseInt(o[5], 10),
          maxSecond: parseInt(n[5], 10),
          minMinute: parseInt(o[4], 10),
          maxMinute: parseInt(n[4], 10),
          minHour: parseInt(o[3], 10),
          maxHour: parseInt(n[3], 10),
          minDate: parseInt(o[2], 10),
          maxDate: parseInt(n[2], 10),
          minMonth: parseInt(o[1], 10) - 1,
          maxMonth: parseInt(n[1], 10) - 1,
          minYear: parseInt(o[0], 10),
          maxYear: parseInt(n[0], 10)
        };
      }
    }, {
      key: "isLeapYear",
      value: function (t) {
        return t % 4 == 0 && t % 100 != 0 || t % 400 == 0;
      }
    }, {
      key: "calculcateLastDaysOfMonth",
      value: function (t, e, i) {
        return this.determineDaysOfMonths(t, e) - i;
      }
    }, {
      key: "determineDaysOfYear",
      value: function (t) {
        var e = 365;
        return this.isLeapYear(t) && (e = 366), e;
      }
    }, {
      key: "determineRemainingDaysOfYear",
      value: function (t, e, i) {
        var a = this.daysCntOfYear[e] + i;
        return e > 1 && this.isLeapYear() && a++, a;
      }
    }, {
      key: "determineDaysOfMonths",
      value: function (t, e) {
        var i = 30;
        switch (t = x.monthMod(t), !0) {
          case this.months30.indexOf(t) > -1:
            2 === t && (i = this.isLeapYear(e) ? 29 : 28);
            break;
          case this.months31.indexOf(t) > -1:
          default:
            i = 31;
        }
        return i;
      }
    }]), t;
  }(),
  T = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.tooltipKeyFormat = "dd MMM";
    }
    return r(t, [{
      key: "xLabelFormat",
      value: function (t, e, i, a) {
        var s = this.w;
        if ("datetime" === s.config.xaxis.type && void 0 === s.config.xaxis.labels.formatter && void 0 === s.config.tooltip.x.formatter) {
          var r = new I(this.ctx);
          return r.formatDate(r.getDate(e), s.config.tooltip.x.format);
        }
        return t(e, i, a);
      }
    }, {
      key: "defaultGeneralFormatter",
      value: function (t) {
        return Array.isArray(t) ? t.map(function (t) {
          return t;
        }) : t;
      }
    }, {
      key: "defaultYFormatter",
      value: function (t, e, i) {
        var a = this.w;
        return x.isNumber(t) && (t = 0 !== a.globals.yValueDecimal ? t.toFixed(void 0 !== e.decimalsInFloat ? e.decimalsInFloat : a.globals.yValueDecimal) : a.globals.maxYArr[i] - a.globals.minYArr[i] < 5 ? t.toFixed(1) : t.toFixed(0)), t;
      }
    }, {
      key: "setLabelFormatters",
      value: function () {
        var t = this,
          e = this.w;
        return e.globals.xaxisTooltipFormatter = function (e) {
          return t.defaultGeneralFormatter(e);
        }, e.globals.ttKeyFormatter = function (e) {
          return t.defaultGeneralFormatter(e);
        }, e.globals.ttZFormatter = function (t) {
          return t;
        }, e.globals.legendFormatter = function (e) {
          return t.defaultGeneralFormatter(e);
        }, void 0 !== e.config.xaxis.labels.formatter ? e.globals.xLabelFormatter = e.config.xaxis.labels.formatter : e.globals.xLabelFormatter = function (t) {
          if (x.isNumber(t)) {
            if (!e.config.xaxis.convertedCatToNumeric && "numeric" === e.config.xaxis.type) {
              if (x.isNumber(e.config.xaxis.decimalsInFloat)) return t.toFixed(e.config.xaxis.decimalsInFloat);
              var i = e.globals.maxX - e.globals.minX;
              return i > 0 && i < 100 ? t.toFixed(1) : t.toFixed(0);
            }
            if (e.globals.isBarHorizontal) if (e.globals.maxY - e.globals.minYArr < 4) return t.toFixed(1);
            return t.toFixed(0);
          }
          return t;
        }, "function" == typeof e.config.tooltip.x.formatter ? e.globals.ttKeyFormatter = e.config.tooltip.x.formatter : e.globals.ttKeyFormatter = e.globals.xLabelFormatter, "function" == typeof e.config.xaxis.tooltip.formatter && (e.globals.xaxisTooltipFormatter = e.config.xaxis.tooltip.formatter), (Array.isArray(e.config.tooltip.y) || void 0 !== e.config.tooltip.y.formatter) && (e.globals.ttVal = e.config.tooltip.y), void 0 !== e.config.tooltip.z.formatter && (e.globals.ttZFormatter = e.config.tooltip.z.formatter), void 0 !== e.config.legend.formatter && (e.globals.legendFormatter = e.config.legend.formatter), e.config.yaxis.forEach(function (i, a) {
          void 0 !== i.labels.formatter ? e.globals.yLabelFormatters[a] = i.labels.formatter : e.globals.yLabelFormatters[a] = function (s) {
            return e.globals.xyCharts ? Array.isArray(s) ? s.map(function (e) {
              return t.defaultYFormatter(e, i, a);
            }) : t.defaultYFormatter(s, i, a) : s;
          };
        }), e.globals;
      }
    }, {
      key: "heatmapLabelFormatters",
      value: function () {
        var t = this.w;
        if ("heatmap" === t.config.chart.type) {
          t.globals.yAxisScale[0].result = t.globals.seriesNames.slice();
          var e = t.globals.seriesNames.reduce(function (t, e) {
            return t.length > e.length ? t : e;
          }, 0);
          t.globals.yAxisScale[0].niceMax = e, t.globals.yAxisScale[0].niceMin = e;
        }
      }
    }]), t;
  }(),
  M = function (t) {
    var e,
      i = t.isTimeline,
      a = t.ctx,
      s = t.seriesIndex,
      r = t.dataPointIndex,
      o = t.y1,
      n = t.y2,
      l = t.w,
      h = l.globals.seriesRangeStart[s][r],
      c = l.globals.seriesRangeEnd[s][r],
      d = l.globals.labels[r],
      g = l.config.series[s].name ? l.config.series[s].name : "",
      u = l.globals.ttKeyFormatter,
      p = l.config.tooltip.y.title.formatter,
      f = {
        w: l,
        seriesIndex: s,
        dataPointIndex: r,
        start: h,
        end: c
      };
    ("function" == typeof p && (g = p(g, f)), null !== (e = l.config.series[s].data[r]) && void 0 !== e && e.x && (d = l.config.series[s].data[r].x), i) || "datetime" === l.config.xaxis.type && (d = new T(a).xLabelFormat(l.globals.ttKeyFormatter, d, d, {
      i: void 0,
      dateFormatter: new I(a).formatDate,
      w: l
    }));
    "function" == typeof u && (d = u(d, f)), Number.isFinite(o) && Number.isFinite(n) && (h = o, c = n);
    var x = "",
      b = "",
      v = l.globals.colors[s];
    if (void 0 === l.config.tooltip.x.formatter) {
      if ("datetime" === l.config.xaxis.type) {
        var m = new I(a);
        x = m.formatDate(m.getDate(h), l.config.tooltip.x.format), b = m.formatDate(m.getDate(c), l.config.tooltip.x.format);
      } else x = h, b = c;
    } else x = l.config.tooltip.x.formatter(h), b = l.config.tooltip.x.formatter(c);
    return {
      start: h,
      end: c,
      startVal: x,
      endVal: b,
      ylabel: d,
      color: v,
      seriesName: g
    };
  },
  z = function (t) {
    var e = t.color,
      i = t.seriesName,
      a = t.ylabel,
      s = t.start,
      r = t.end,
      o = t.seriesIndex,
      n = t.dataPointIndex,
      l = t.ctx.tooltip.tooltipLabels.getFormatters(o);
    s = l.yLbFormatter(s), r = l.yLbFormatter(r);
    var h = l.yLbFormatter(t.w.globals.series[o][n]),
      c = '<span class="value start-value">\n  '.concat(s, '\n  </span> <span class="separator">-</span> <span class="value end-value">\n  ').concat(r, "\n  </span>");
    return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + e + '">' + (i || "") + '</span></div><div> <span class="category">' + a + ": </span> " + (t.w.globals.comboCharts ? "rangeArea" === t.w.config.series[o].type || "rangeBar" === t.w.config.series[o].type ? c : "<span>".concat(h, "</span>") : c) + " </div></div>";
  },
  X = function () {
    function t(e) {
      a(this, t), this.opts = e;
    }
    return r(t, [{
      key: "hideYAxis",
      value: function () {
        this.opts.yaxis[0].show = !1, this.opts.yaxis[0].title.text = "", this.opts.yaxis[0].axisBorder.show = !1, this.opts.yaxis[0].axisTicks.show = !1, this.opts.yaxis[0].floating = !0;
      }
    }, {
      key: "line",
      value: function () {
        return {
          chart: {
            animations: {
              easing: "swing"
            }
          },
          dataLabels: {
            enabled: !1
          },
          stroke: {
            width: 5,
            curve: "straight"
          },
          markers: {
            size: 0,
            hover: {
              sizeOffset: 6
            }
          },
          xaxis: {
            crosshairs: {
              width: 1
            }
          }
        };
      }
    }, {
      key: "sparkline",
      value: function (t) {
        this.hideYAxis();
        return x.extend(t, {
          grid: {
            show: !1,
            padding: {
              left: 0,
              right: 0,
              top: 0,
              bottom: 0
            }
          },
          legend: {
            show: !1
          },
          xaxis: {
            labels: {
              show: !1
            },
            tooltip: {
              enabled: !1
            },
            axisBorder: {
              show: !1
            },
            axisTicks: {
              show: !1
            }
          },
          chart: {
            toolbar: {
              show: !1
            },
            zoom: {
              enabled: !1
            }
          },
          dataLabels: {
            enabled: !1
          }
        });
      }
    }, {
      key: "bar",
      value: function () {
        return {
          chart: {
            stacked: !1,
            animations: {
              easing: "swing"
            }
          },
          plotOptions: {
            bar: {
              dataLabels: {
                position: "center"
              }
            }
          },
          dataLabels: {
            style: {
              colors: ["#fff"]
            },
            background: {
              enabled: !1
            }
          },
          stroke: {
            width: 0,
            lineCap: "round"
          },
          fill: {
            opacity: .85
          },
          legend: {
            markers: {
              shape: "square",
              radius: 2,
              size: 8
            }
          },
          tooltip: {
            shared: !1,
            intersect: !0
          },
          xaxis: {
            tooltip: {
              enabled: !1
            },
            tickPlacement: "between",
            crosshairs: {
              width: "barWidth",
              position: "back",
              fill: {
                type: "gradient"
              },
              dropShadow: {
                enabled: !1
              },
              stroke: {
                width: 0
              }
            }
          }
        };
      }
    }, {
      key: "funnel",
      value: function () {
        return this.hideYAxis(), e(e({}, this.bar()), {}, {
          chart: {
            animations: {
              easing: "linear",
              speed: 800,
              animateGradually: {
                enabled: !1
              }
            }
          },
          plotOptions: {
            bar: {
              horizontal: !0,
              borderRadiusApplication: "around",
              borderRadius: 0,
              dataLabels: {
                position: "center"
              }
            }
          },
          grid: {
            show: !1,
            padding: {
              left: 0,
              right: 0
            }
          },
          xaxis: {
            labels: {
              show: !1
            },
            tooltip: {
              enabled: !1
            },
            axisBorder: {
              show: !1
            },
            axisTicks: {
              show: !1
            }
          }
        });
      }
    }, {
      key: "candlestick",
      value: function () {
        var t = this;
        return {
          stroke: {
            width: 1,
            colors: ["#333"]
          },
          fill: {
            opacity: 1
          },
          dataLabels: {
            enabled: !1
          },
          tooltip: {
            shared: !0,
            custom: function (e) {
              var i = e.seriesIndex,
                a = e.dataPointIndex,
                s = e.w;
              return t._getBoxTooltip(s, i, a, ["Open", "High", "", "Low", "Close"], "candlestick");
            }
          },
          states: {
            active: {
              filter: {
                type: "none"
              }
            }
          },
          xaxis: {
            crosshairs: {
              width: 1
            }
          }
        };
      }
    }, {
      key: "boxPlot",
      value: function () {
        var t = this;
        return {
          chart: {
            animations: {
              dynamicAnimation: {
                enabled: !1
              }
            }
          },
          stroke: {
            width: 1,
            colors: ["#24292e"]
          },
          dataLabels: {
            enabled: !1
          },
          tooltip: {
            shared: !0,
            custom: function (e) {
              var i = e.seriesIndex,
                a = e.dataPointIndex,
                s = e.w;
              return t._getBoxTooltip(s, i, a, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot");
            }
          },
          markers: {
            size: 5,
            strokeWidth: 1,
            strokeColors: "#111"
          },
          xaxis: {
            crosshairs: {
              width: 1
            }
          }
        };
      }
    }, {
      key: "rangeBar",
      value: function () {
        return {
          chart: {
            animations: {
              animateGradually: !1
            }
          },
          stroke: {
            width: 0,
            lineCap: "square"
          },
          plotOptions: {
            bar: {
              borderRadius: 0,
              dataLabels: {
                position: "center"
              }
            }
          },
          dataLabels: {
            enabled: !1,
            formatter: function (t, e) {
              e.ctx;
              var i = e.seriesIndex,
                a = e.dataPointIndex,
                s = e.w,
                r = function () {
                  var t = s.globals.seriesRangeStart[i][a];
                  return s.globals.seriesRangeEnd[i][a] - t;
                };
              return s.globals.comboCharts ? "rangeBar" === s.config.series[i].type || "rangeArea" === s.config.series[i].type ? r() : t : r();
            },
            background: {
              enabled: !1
            },
            style: {
              colors: ["#fff"]
            }
          },
          markers: {
            size: 10
          },
          tooltip: {
            shared: !1,
            followCursor: !0,
            custom: function (t) {
              return t.w.config.plotOptions && t.w.config.plotOptions.bar && t.w.config.plotOptions.bar.horizontal ? function (t) {
                var i = M(e(e({}, t), {}, {
                    isTimeline: !0
                  })),
                  a = i.color,
                  s = i.seriesName,
                  r = i.ylabel,
                  o = i.startVal,
                  n = i.endVal;
                return z(e(e({}, t), {}, {
                  color: a,
                  seriesName: s,
                  ylabel: r,
                  start: o,
                  end: n
                }));
              }(t) : function (t) {
                var i = M(t),
                  a = i.color,
                  s = i.seriesName,
                  r = i.ylabel,
                  o = i.start,
                  n = i.end;
                return z(e(e({}, t), {}, {
                  color: a,
                  seriesName: s,
                  ylabel: r,
                  start: o,
                  end: n
                }));
              }(t);
            }
          },
          xaxis: {
            tickPlacement: "between",
            tooltip: {
              enabled: !1
            },
            crosshairs: {
              stroke: {
                width: 0
              }
            }
          }
        };
      }
    }, {
      key: "dumbbell",
      value: function (t) {
        var e, i;
        return null !== (e = t.plotOptions.bar) && void 0 !== e && e.barHeight || (t.plotOptions.bar.barHeight = 2), null !== (i = t.plotOptions.bar) && void 0 !== i && i.columnWidth || (t.plotOptions.bar.columnWidth = 2), t;
      }
    }, {
      key: "area",
      value: function () {
        return {
          stroke: {
            width: 4,
            fill: {
              type: "solid",
              gradient: {
                inverseColors: !1,
                shade: "light",
                type: "vertical",
                opacityFrom: .65,
                opacityTo: .5,
                stops: [0, 100, 100]
              }
            }
          },
          fill: {
            type: "gradient",
            gradient: {
              inverseColors: !1,
              shade: "light",
              type: "vertical",
              opacityFrom: .65,
              opacityTo: .5,
              stops: [0, 100, 100]
            }
          },
          markers: {
            size: 0,
            hover: {
              sizeOffset: 6
            }
          },
          tooltip: {
            followCursor: !1
          }
        };
      }
    }, {
      key: "rangeArea",
      value: function () {
        return {
          stroke: {
            curve: "straight",
            width: 0
          },
          fill: {
            type: "solid",
            opacity: .6
          },
          markers: {
            size: 0
          },
          states: {
            hover: {
              filter: {
                type: "none"
              }
            },
            active: {
              filter: {
                type: "none"
              }
            }
          },
          tooltip: {
            intersect: !1,
            shared: !0,
            followCursor: !0,
            custom: function (t) {
              return function (t) {
                var i = M(t),
                  a = i.color,
                  s = i.seriesName,
                  r = i.ylabel,
                  o = i.start,
                  n = i.end;
                return z(e(e({}, t), {}, {
                  color: a,
                  seriesName: s,
                  ylabel: r,
                  start: o,
                  end: n
                }));
              }(t);
            }
          }
        };
      }
    }, {
      key: "brush",
      value: function (t) {
        return x.extend(t, {
          chart: {
            toolbar: {
              autoSelected: "selection",
              show: !1
            },
            zoom: {
              enabled: !1
            }
          },
          dataLabels: {
            enabled: !1
          },
          stroke: {
            width: 1
          },
          tooltip: {
            enabled: !1
          },
          xaxis: {
            tooltip: {
              enabled: !1
            }
          }
        });
      }
    }, {
      key: "stacked100",
      value: function (t) {
        t.dataLabels = t.dataLabels || {}, t.dataLabels.formatter = t.dataLabels.formatter || void 0;
        var e = t.dataLabels.formatter;
        return t.yaxis.forEach(function (e, i) {
          t.yaxis[i].min = 0, t.yaxis[i].max = 100;
        }), "bar" === t.chart.type && (t.dataLabels.formatter = e || function (t) {
          return "number" == typeof t && t ? t.toFixed(0) + "%" : t;
        }), t;
      }
    }, {
      key: "stackedBars",
      value: function () {
        var t = this.bar();
        return e(e({}, t), {}, {
          plotOptions: e(e({}, t.plotOptions), {}, {
            bar: e(e({}, t.plotOptions.bar), {}, {
              borderRadiusApplication: "end",
              borderRadiusWhenStacked: "last"
            })
          })
        });
      }
    }, {
      key: "convertCatToNumeric",
      value: function (t) {
        return t.xaxis.convertedCatToNumeric = !0, t;
      }
    }, {
      key: "convertCatToNumericXaxis",
      value: function (t, e, i) {
        t.xaxis.type = "numeric", t.xaxis.labels = t.xaxis.labels || {}, t.xaxis.labels.formatter = t.xaxis.labels.formatter || function (t) {
          return x.isNumber(t) ? Math.floor(t) : t;
        };
        var a = t.xaxis.labels.formatter,
          s = t.xaxis.categories && t.xaxis.categories.length ? t.xaxis.categories : t.labels;
        return i && i.length && (s = i.map(function (t) {
          return Array.isArray(t) ? t : String(t);
        })), s && s.length && (t.xaxis.labels.formatter = function (t) {
          return x.isNumber(t) ? a(s[Math.floor(t) - 1]) : a(t);
        }), t.xaxis.categories = [], t.labels = [], t.xaxis.tickAmount = t.xaxis.tickAmount || "dataPoints", t;
      }
    }, {
      key: "bubble",
      value: function () {
        return {
          dataLabels: {
            style: {
              colors: ["#fff"]
            }
          },
          tooltip: {
            shared: !1,
            intersect: !0
          },
          xaxis: {
            crosshairs: {
              width: 0
            }
          },
          fill: {
            type: "solid",
            gradient: {
              shade: "light",
              inverse: !0,
              shadeIntensity: .55,
              opacityFrom: .4,
              opacityTo: .8
            }
          }
        };
      }
    }, {
      key: "scatter",
      value: function () {
        return {
          dataLabels: {
            enabled: !1
          },
          tooltip: {
            shared: !1,
            intersect: !0
          },
          markers: {
            size: 6,
            strokeWidth: 1,
            hover: {
              sizeOffset: 2
            }
          }
        };
      }
    }, {
      key: "heatmap",
      value: function () {
        return {
          chart: {
            stacked: !1
          },
          fill: {
            opacity: 1
          },
          dataLabels: {
            style: {
              colors: ["#fff"]
            }
          },
          stroke: {
            colors: ["#fff"]
          },
          tooltip: {
            followCursor: !0,
            marker: {
              show: !1
            },
            x: {
              show: !1
            }
          },
          legend: {
            position: "top",
            markers: {
              shape: "square",
              size: 10,
              offsetY: 2
            }
          },
          grid: {
            padding: {
              right: 20
            }
          }
        };
      }
    }, {
      key: "treemap",
      value: function () {
        return {
          chart: {
            zoom: {
              enabled: !1
            }
          },
          dataLabels: {
            style: {
              fontSize: 14,
              fontWeight: 600,
              colors: ["#fff"]
            }
          },
          stroke: {
            show: !0,
            width: 2,
            colors: ["#fff"]
          },
          legend: {
            show: !1
          },
          fill: {
            gradient: {
              stops: [0, 100]
            }
          },
          tooltip: {
            followCursor: !0,
            x: {
              show: !1
            }
          },
          grid: {
            padding: {
              left: 0,
              right: 0
            }
          },
          xaxis: {
            crosshairs: {
              show: !1
            },
            tooltip: {
              enabled: !1
            }
          }
        };
      }
    }, {
      key: "pie",
      value: function () {
        return {
          chart: {
            toolbar: {
              show: !1
            }
          },
          plotOptions: {
            pie: {
              donut: {
                labels: {
                  show: !1
                }
              }
            }
          },
          dataLabels: {
            formatter: function (t) {
              return t.toFixed(1) + "%";
            },
            style: {
              colors: ["#fff"]
            },
            background: {
              enabled: !1
            },
            dropShadow: {
              enabled: !0
            }
          },
          stroke: {
            colors: ["#fff"]
          },
          fill: {
            opacity: 1,
            gradient: {
              shade: "light",
              stops: [0, 100]
            }
          },
          tooltip: {
            theme: "dark",
            fillSeriesColor: !0
          },
          legend: {
            position: "right"
          }
        };
      }
    }, {
      key: "donut",
      value: function () {
        return {
          chart: {
            toolbar: {
              show: !1
            }
          },
          dataLabels: {
            formatter: function (t) {
              return t.toFixed(1) + "%";
            },
            style: {
              colors: ["#fff"]
            },
            background: {
              enabled: !1
            },
            dropShadow: {
              enabled: !0
            }
          },
          stroke: {
            colors: ["#fff"]
          },
          fill: {
            opacity: 1,
            gradient: {
              shade: "light",
              shadeIntensity: .35,
              stops: [80, 100],
              opacityFrom: 1,
              opacityTo: 1
            }
          },
          tooltip: {
            theme: "dark",
            fillSeriesColor: !0
          },
          legend: {
            position: "right"
          }
        };
      }
    }, {
      key: "polarArea",
      value: function () {
        return this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6, {
          chart: {
            toolbar: {
              show: !1
            }
          },
          dataLabels: {
            formatter: function (t) {
              return t.toFixed(1) + "%";
            },
            enabled: !1
          },
          stroke: {
            show: !0,
            width: 2
          },
          fill: {
            opacity: .7
          },
          tooltip: {
            theme: "dark",
            fillSeriesColor: !0
          },
          legend: {
            position: "right"
          }
        };
      }
    }, {
      key: "radar",
      value: function () {
        return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6, {
          dataLabels: {
            enabled: !1,
            style: {
              fontSize: "11px"
            }
          },
          stroke: {
            width: 2
          },
          markers: {
            size: 3,
            strokeWidth: 1,
            strokeOpacity: 1
          },
          fill: {
            opacity: .2
          },
          tooltip: {
            shared: !1,
            intersect: !0,
            followCursor: !0
          },
          grid: {
            show: !1
          },
          xaxis: {
            labels: {
              formatter: function (t) {
                return t;
              },
              style: {
                colors: ["#a8a8a8"],
                fontSize: "11px"
              }
            },
            tooltip: {
              enabled: !1
            },
            crosshairs: {
              show: !1
            }
          }
        };
      }
    }, {
      key: "radialBar",
      value: function () {
        return {
          chart: {
            animations: {
              dynamicAnimation: {
                enabled: !0,
                speed: 800
              }
            },
            toolbar: {
              show: !1
            }
          },
          fill: {
            gradient: {
              shade: "dark",
              shadeIntensity: .4,
              inverseColors: !1,
              type: "diagonal2",
              opacityFrom: 1,
              opacityTo: 1,
              stops: [70, 98, 100]
            }
          },
          legend: {
            show: !1,
            position: "right"
          },
          tooltip: {
            enabled: !1,
            fillSeriesColor: !0
          }
        };
      }
    }, {
      key: "_getBoxTooltip",
      value: function (t, e, i, a, s) {
        var r = t.globals.seriesCandleO[e][i],
          o = t.globals.seriesCandleH[e][i],
          n = t.globals.seriesCandleM[e][i],
          l = t.globals.seriesCandleL[e][i],
          h = t.globals.seriesCandleC[e][i];
        return t.config.series[e].type && t.config.series[e].type !== s ? '<div class="apexcharts-custom-tooltip">\n          '.concat(t.config.series[e].name ? t.config.series[e].name : "series-" + (e + 1), ": <strong>").concat(t.globals.series[e][i], "</strong>\n        </div>") : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(t.config.chart.type, '">') + "<div>".concat(a[0], ': <span class="value">') + r + "</span></div>" + "<div>".concat(a[1], ': <span class="value">') + o + "</span></div>" + (n ? "<div>".concat(a[2], ': <span class="value">') + n + "</span></div>" : "") + "<div>".concat(a[3], ': <span class="value">') + l + "</span></div>" + "<div>".concat(a[4], ': <span class="value">') + h + "</span></div></div>";
      }
    }]), t;
  }(),
  E = function () {
    function t(e) {
      a(this, t), this.opts = e;
    }
    return r(t, [{
      key: "init",
      value: function (t) {
        var e = t.responsiveOverride,
          a = this.opts,
          s = new L(),
          r = new X(a);
        this.chartType = a.chart.type, a = this.extendYAxis(a), a = this.extendAnnotations(a);
        var o = s.init(),
          n = {};
        if (a && "object" === i(a)) {
          var l,
            h,
            c,
            d,
            g,
            u,
            p,
            f,
            b,
            v,
            m = {};
          m = -1 !== ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "rangeArea", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(a.chart.type) ? r[a.chart.type]() : r.line(), null !== (l = a.plotOptions) && void 0 !== l && null !== (h = l.bar) && void 0 !== h && h.isFunnel && (m = r.funnel()), a.chart.stacked && "bar" === a.chart.type && (m = r.stackedBars()), null !== (c = a.chart.brush) && void 0 !== c && c.enabled && (m = r.brush(m)), a.chart.stacked && "100%" === a.chart.stackType && (a = r.stacked100(a)), null !== (d = a.plotOptions) && void 0 !== d && null !== (g = d.bar) && void 0 !== g && g.isDumbbell && (a = r.dumbbell(a)), "monotoneCubic" === (null === (u = a) || void 0 === u || null === (p = u.stroke) || void 0 === p ? void 0 : p.curve) && (a.stroke.curve = "smooth"), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(a), a.xaxis = a.xaxis || window.Apex.xaxis || {}, e || (a.xaxis.convertedCatToNumeric = !1), (null !== (f = (a = this.checkForCatToNumericXAxis(this.chartType, m, a)).chart.sparkline) && void 0 !== f && f.enabled || null !== (b = window.Apex.chart) && void 0 !== b && null !== (v = b.sparkline) && void 0 !== v && v.enabled) && (m = r.sparkline(m)), n = x.extend(o, m);
        }
        var y = x.extend(n, window.Apex);
        return o = x.extend(y, a), o = this.handleUserInputErrors(o);
      }
    }, {
      key: "checkForCatToNumericXAxis",
      value: function (t, e, i) {
        var a,
          s,
          r = new X(i),
          o = ("bar" === t || "boxPlot" === t) && (null === (a = i.plotOptions) || void 0 === a || null === (s = a.bar) || void 0 === s ? void 0 : s.horizontal),
          n = "pie" === t || "polarArea" === t || "donut" === t || "radar" === t || "radialBar" === t || "heatmap" === t,
          l = "datetime" !== i.xaxis.type && "numeric" !== i.xaxis.type,
          h = i.xaxis.tickPlacement ? i.xaxis.tickPlacement : e.xaxis && e.xaxis.tickPlacement;
        return o || n || !l || "between" === h || (i = r.convertCatToNumeric(i)), i;
      }
    }, {
      key: "extendYAxis",
      value: function (t, e) {
        var i = new L();
        (void 0 === t.yaxis || !t.yaxis || Array.isArray(t.yaxis) && 0 === t.yaxis.length) && (t.yaxis = {}), t.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (t.yaxis = x.extend(t.yaxis, window.Apex.yaxis)), t.yaxis.constructor !== Array ? t.yaxis = [x.extend(i.yAxis, t.yaxis)] : t.yaxis = x.extendArray(t.yaxis, i.yAxis);
        var a = !1;
        t.yaxis.forEach(function (t) {
          t.logarithmic && (a = !0);
        });
        var s = t.series;
        return e && !s && (s = e.config.series), a && s.length !== t.yaxis.length && s.length && (t.yaxis = s.map(function (e, a) {
          if (e.name || (s[a].name = "series-".concat(a + 1)), t.yaxis[a]) return t.yaxis[a].seriesName = s[a].name, t.yaxis[a];
          var r = x.extend(i.yAxis, t.yaxis[0]);
          return r.show = !1, r;
        })), a && s.length > 1 && s.length !== t.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes"), t;
      }
    }, {
      key: "extendAnnotations",
      value: function (t) {
        return void 0 === t.annotations && (t.annotations = {}, t.annotations.yaxis = [], t.annotations.xaxis = [], t.annotations.points = []), t = this.extendYAxisAnnotations(t), t = this.extendXAxisAnnotations(t), t = this.extendPointAnnotations(t);
      }
    }, {
      key: "extendYAxisAnnotations",
      value: function (t) {
        var e = new L();
        return t.annotations.yaxis = x.extendArray(void 0 !== t.annotations.yaxis ? t.annotations.yaxis : [], e.yAxisAnnotation), t;
      }
    }, {
      key: "extendXAxisAnnotations",
      value: function (t) {
        var e = new L();
        return t.annotations.xaxis = x.extendArray(void 0 !== t.annotations.xaxis ? t.annotations.xaxis : [], e.xAxisAnnotation), t;
      }
    }, {
      key: "extendPointAnnotations",
      value: function (t) {
        var e = new L();
        return t.annotations.points = x.extendArray(void 0 !== t.annotations.points ? t.annotations.points : [], e.pointAnnotation), t;
      }
    }, {
      key: "checkForDarkTheme",
      value: function (t) {
        t.theme && "dark" === t.theme.mode && (t.tooltip || (t.tooltip = {}), "light" !== t.tooltip.theme && (t.tooltip.theme = "dark"), t.chart.foreColor || (t.chart.foreColor = "#f6f7f8"), t.chart.background || (t.chart.background = "#424242"), t.theme.palette || (t.theme.palette = "palette4"));
      }
    }, {
      key: "handleUserInputErrors",
      value: function (t) {
        var e = t;
        if (e.tooltip.shared && e.tooltip.intersect) throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
        if ("bar" === e.chart.type && e.plotOptions.bar.horizontal) {
          if (e.yaxis.length > 1) throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
          e.yaxis[0].reversed && (e.yaxis[0].opposite = !0), e.xaxis.tooltip.enabled = !1, e.yaxis[0].tooltip.enabled = !1, e.chart.zoom.enabled = !1;
        }
        return "bar" !== e.chart.type && "rangeBar" !== e.chart.type || e.tooltip.shared && "barWidth" === e.xaxis.crosshairs.width && e.series.length > 1 && (e.xaxis.crosshairs.width = "tickWidth"), "candlestick" !== e.chart.type && "boxPlot" !== e.chart.type || e.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(e.chart.type, " chart is not supported.")), e.yaxis[0].reversed = !1), e;
      }
    }]), t;
  }(),
  Y = function () {
    function t() {
      a(this, t);
    }
    return r(t, [{
      key: "initGlobalVars",
      value: function (t) {
        t.series = [], t.seriesCandleO = [], t.seriesCandleH = [], t.seriesCandleM = [], t.seriesCandleL = [], t.seriesCandleC = [], t.seriesRangeStart = [], t.seriesRangeEnd = [], t.seriesRange = [], t.seriesPercent = [], t.seriesGoals = [], t.seriesX = [], t.seriesZ = [], t.seriesNames = [], t.seriesTotals = [], t.seriesLog = [], t.seriesColors = [], t.stackedSeriesTotals = [], t.seriesXvalues = [], t.seriesYvalues = [], t.labels = [], t.hasXaxisGroups = !1, t.groups = [], t.hasSeriesGroups = !1, t.seriesGroups = [], t.categoryLabels = [], t.timescaleLabels = [], t.noLabelsProvided = !1, t.resizeTimer = null, t.selectionResizeTimer = null, t.delayedElements = [], t.pointsArray = [], t.dataLabelsRects = [], t.isXNumeric = !1, t.skipLastTimelinelabel = !1, t.skipFirstTimelinelabel = !1, t.isDataXYZ = !1, t.isMultiLineX = !1, t.isMultipleYAxis = !1, t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE, t.minYArr = [], t.maxYArr = [], t.maxX = -Number.MAX_VALUE, t.minX = Number.MAX_VALUE, t.initialMaxX = -Number.MAX_VALUE, t.initialMinX = Number.MAX_VALUE, t.maxDate = 0, t.minDate = Number.MAX_VALUE, t.minZ = Number.MAX_VALUE, t.maxZ = -Number.MAX_VALUE, t.minXDiff = Number.MAX_VALUE, t.yAxisScale = [], t.xAxisScale = null, t.xAxisTicksPositions = [], t.yLabelsCoords = [], t.yTitleCoords = [], t.barPadForNumericAxis = 0, t.padHorizontal = 0, t.xRange = 0, t.yRange = [], t.zRange = 0, t.dataPoints = 0, t.xTickAmount = 0;
      }
    }, {
      key: "globalVars",
      value: function (t) {
        return {
          chartID: null,
          cuid: null,
          events: {
            beforeMount: [],
            mounted: [],
            updated: [],
            clicked: [],
            selection: [],
            dataPointSelection: [],
            zoomed: [],
            scrolled: []
          },
          colors: [],
          clientX: null,
          clientY: null,
          fill: {
            colors: []
          },
          stroke: {
            colors: []
          },
          dataLabels: {
            style: {
              colors: []
            }
          },
          radarPolygons: {
            fill: {
              colors: []
            }
          },
          markers: {
            colors: [],
            size: t.markers.size,
            largestSize: 0
          },
          animationEnded: !1,
          isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints,
          isDirty: !1,
          isExecCalled: !1,
          initialConfig: null,
          initialSeries: [],
          lastXAxis: [],
          lastYAxis: [],
          columnSeries: null,
          labels: [],
          timescaleLabels: [],
          noLabelsProvided: !1,
          allSeriesCollapsed: !1,
          collapsedSeries: [],
          collapsedSeriesIndices: [],
          ancillaryCollapsedSeries: [],
          ancillaryCollapsedSeriesIndices: [],
          risingSeries: [],
          dataFormatXNumeric: !1,
          capturedSeriesIndex: -1,
          capturedDataPointIndex: -1,
          selectedDataPoints: [],
          goldenPadding: 35,
          invalidLogScale: !1,
          ignoreYAxisIndexes: [],
          yAxisSameScaleIndices: [],
          maxValsInArrayIndex: 0,
          radialSize: 0,
          selection: void 0,
          zoomEnabled: "zoom" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.zoom && t.chart.zoom.enabled,
          panEnabled: "pan" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.pan,
          selectionEnabled: "selection" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.selection,
          yaxis: null,
          mousedown: !1,
          lastClientPosition: {},
          visibleXRange: void 0,
          yValueDecimal: 0,
          total: 0,
          SVGNS: "http://www.w3.org/2000/svg",
          svgWidth: 0,
          svgHeight: 0,
          noData: !1,
          locale: {},
          dom: {},
          memory: {
            methodsToExec: []
          },
          shouldAnimate: !0,
          skipLastTimelinelabel: !1,
          skipFirstTimelinelabel: !1,
          delayedElements: [],
          axisCharts: !0,
          isDataXYZ: !1,
          resized: !1,
          resizeTimer: null,
          comboCharts: !1,
          dataChanged: !1,
          previousPaths: [],
          allSeriesHasEqualX: !0,
          pointsArray: [],
          dataLabelsRects: [],
          lastDrawnDataLabelsIndexes: [],
          hasNullValues: !1,
          easing: null,
          zoomed: !1,
          gridWidth: 0,
          gridHeight: 0,
          rotateXLabels: !1,
          defaultLabels: !1,
          xLabelFormatter: void 0,
          yLabelFormatters: [],
          xaxisTooltipFormatter: void 0,
          ttKeyFormatter: void 0,
          ttVal: void 0,
          ttZFormatter: void 0,
          LINE_HEIGHT_RATIO: 1.618,
          xAxisLabelsHeight: 0,
          xAxisGroupLabelsHeight: 0,
          xAxisLabelsWidth: 0,
          yAxisLabelsWidth: 0,
          scaleX: 1,
          scaleY: 1,
          translateX: 0,
          translateY: 0,
          translateYAxisX: [],
          yAxisWidths: [],
          translateXAxisY: 0,
          translateXAxisX: 0,
          tooltip: null
        };
      }
    }, {
      key: "init",
      value: function (t) {
        var e = this.globalVars(t);
        return this.initGlobalVars(e), e.initialConfig = x.extend({}, t), e.initialSeries = x.clone(t.series), e.lastXAxis = x.clone(e.initialConfig.xaxis), e.lastYAxis = x.clone(e.initialConfig.yaxis), e;
      }
    }]), t;
  }(),
  F = function () {
    function t(e) {
      a(this, t), this.opts = e;
    }
    return r(t, [{
      key: "init",
      value: function () {
        var t = new E(this.opts).init({
          responsiveOverride: !1
        });
        return {
          config: t,
          globals: new Y().init(t)
        };
      }
    }]), t;
  }(),
  R = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.opts = null, this.seriesIndex = 0;
    }
    return r(t, [{
      key: "clippedImgArea",
      value: function (t) {
        var e = this.w,
          i = e.config,
          a = parseInt(e.globals.gridWidth, 10),
          s = parseInt(e.globals.gridHeight, 10),
          r = a > s ? a : s,
          o = t.image,
          n = 0,
          l = 0;
        void 0 === t.width && void 0 === t.height ? void 0 !== i.fill.image.width && void 0 !== i.fill.image.height ? (n = i.fill.image.width + 1, l = i.fill.image.height) : (n = r + 1, l = r) : (n = t.width, l = t.height);
        var h = document.createElementNS(e.globals.SVGNS, "pattern");
        m.setAttrs(h, {
          id: t.patternID,
          patternUnits: t.patternUnits ? t.patternUnits : "userSpaceOnUse",
          width: n + "px",
          height: l + "px"
        });
        var c = document.createElementNS(e.globals.SVGNS, "image");
        h.appendChild(c), c.setAttributeNS(window.SVG.xlink, "href", o), m.setAttrs(c, {
          x: 0,
          y: 0,
          preserveAspectRatio: "none",
          width: n + "px",
          height: l + "px"
        }), c.style.opacity = t.opacity, e.globals.dom.elDefs.node.appendChild(h);
      }
    }, {
      key: "getSeriesIndex",
      value: function (t) {
        var e = this.w,
          i = e.config.chart.type;
        return ("bar" === i || "rangeBar" === i) && e.config.plotOptions.bar.distributed || "heatmap" === i || "treemap" === i ? this.seriesIndex = t.seriesNumber : this.seriesIndex = t.seriesNumber % e.globals.series.length, this.seriesIndex;
      }
    }, {
      key: "fillPath",
      value: function (t) {
        var e = this.w;
        this.opts = t;
        var i,
          a,
          s,
          r = this.w.config;
        this.seriesIndex = this.getSeriesIndex(t);
        var o = this.getFillColors()[this.seriesIndex];
        void 0 !== e.globals.seriesColors[this.seriesIndex] && (o = e.globals.seriesColors[this.seriesIndex]), "function" == typeof o && (o = o({
          seriesIndex: this.seriesIndex,
          dataPointIndex: t.dataPointIndex,
          value: t.value,
          w: e
        }));
        var n = t.fillType ? t.fillType : this.getFillType(this.seriesIndex),
          l = Array.isArray(r.fill.opacity) ? r.fill.opacity[this.seriesIndex] : r.fill.opacity;
        t.color && (o = t.color), o || (o = "#fff", console.warn("undefined color - ApexCharts"));
        var h = o;
        if (-1 === o.indexOf("rgb") ? o.length < 9 && (h = x.hexToRgba(o, l)) : o.indexOf("rgba") > -1 && (l = x.getOpacityFromRGBA(o)), t.opacity && (l = t.opacity), "pattern" === n && (a = this.handlePatternFill({
          fillConfig: t.fillConfig,
          patternFill: a,
          fillColor: o,
          fillOpacity: l,
          defaultColor: h
        })), "gradient" === n && (s = this.handleGradientFill({
          fillConfig: t.fillConfig,
          fillColor: o,
          fillOpacity: l,
          i: this.seriesIndex
        })), "image" === n) {
          var c = r.fill.image.src,
            d = t.patternID ? t.patternID : "";
          this.clippedImgArea({
            opacity: l,
            image: Array.isArray(c) ? t.seriesNumber < c.length ? c[t.seriesNumber] : c[0] : c,
            width: t.width ? t.width : void 0,
            height: t.height ? t.height : void 0,
            patternUnits: t.patternUnits,
            patternID: "pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1).concat(d)
          }), i = "url(#pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1).concat(d, ")");
        } else i = "gradient" === n ? s : "pattern" === n ? a : h;
        return t.solid && (i = h), i;
      }
    }, {
      key: "getFillType",
      value: function (t) {
        var e = this.w;
        return Array.isArray(e.config.fill.type) ? e.config.fill.type[t] : e.config.fill.type;
      }
    }, {
      key: "getFillColors",
      value: function () {
        var t = this.w,
          e = t.config,
          i = this.opts,
          a = [];
        return t.globals.comboCharts ? "line" === t.config.series[this.seriesIndex].type ? Array.isArray(t.globals.stroke.colors) ? a = t.globals.stroke.colors : a.push(t.globals.stroke.colors) : Array.isArray(t.globals.fill.colors) ? a = t.globals.fill.colors : a.push(t.globals.fill.colors) : "line" === e.chart.type ? Array.isArray(t.globals.stroke.colors) ? a = t.globals.stroke.colors : a.push(t.globals.stroke.colors) : Array.isArray(t.globals.fill.colors) ? a = t.globals.fill.colors : a.push(t.globals.fill.colors), void 0 !== i.fillColors && (a = [], Array.isArray(i.fillColors) ? a = i.fillColors.slice() : a.push(i.fillColors)), a;
      }
    }, {
      key: "handlePatternFill",
      value: function (t) {
        var e = t.fillConfig,
          i = t.patternFill,
          a = t.fillColor,
          s = t.fillOpacity,
          r = t.defaultColor,
          o = this.w.config.fill;
        e && (o = e);
        var n = this.opts,
          l = new m(this.ctx),
          h = Array.isArray(o.pattern.strokeWidth) ? o.pattern.strokeWidth[this.seriesIndex] : o.pattern.strokeWidth,
          c = a;
        Array.isArray(o.pattern.style) ? i = void 0 !== o.pattern.style[n.seriesNumber] ? l.drawPattern(o.pattern.style[n.seriesNumber], o.pattern.width, o.pattern.height, c, h, s) : r : i = l.drawPattern(o.pattern.style, o.pattern.width, o.pattern.height, c, h, s);
        return i;
      }
    }, {
      key: "handleGradientFill",
      value: function (t) {
        var i = t.fillColor,
          a = t.fillOpacity,
          s = t.fillConfig,
          r = t.i,
          o = this.w.config.fill;
        s && (o = e(e({}, o), s));
        var n,
          l = this.opts,
          h = new m(this.ctx),
          c = new x(),
          d = o.gradient.type,
          g = i,
          u = void 0 === o.gradient.opacityFrom ? a : Array.isArray(o.gradient.opacityFrom) ? o.gradient.opacityFrom[r] : o.gradient.opacityFrom;
        g.indexOf("rgba") > -1 && (u = x.getOpacityFromRGBA(g));
        var p = void 0 === o.gradient.opacityTo ? a : Array.isArray(o.gradient.opacityTo) ? o.gradient.opacityTo[r] : o.gradient.opacityTo;
        if (void 0 === o.gradient.gradientToColors || 0 === o.gradient.gradientToColors.length) n = "dark" === o.gradient.shade ? c.shadeColor(-1 * parseFloat(o.gradient.shadeIntensity), i.indexOf("rgb") > -1 ? x.rgb2hex(i) : i) : c.shadeColor(parseFloat(o.gradient.shadeIntensity), i.indexOf("rgb") > -1 ? x.rgb2hex(i) : i);else if (o.gradient.gradientToColors[l.seriesNumber]) {
          var f = o.gradient.gradientToColors[l.seriesNumber];
          n = f, f.indexOf("rgba") > -1 && (p = x.getOpacityFromRGBA(f));
        } else n = i;
        if (o.gradient.gradientFrom && (g = o.gradient.gradientFrom), o.gradient.gradientTo && (n = o.gradient.gradientTo), o.gradient.inverseColors) {
          var b = g;
          g = n, n = b;
        }
        return g.indexOf("rgb") > -1 && (g = x.rgb2hex(g)), n.indexOf("rgb") > -1 && (n = x.rgb2hex(n)), h.drawGradient(d, g, n, u, p, l.size, o.gradient.stops, o.gradient.colorStops, r);
      }
    }]), t;
  }(),
  H = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "setGlobalMarkerSize",
      value: function () {
        var t = this.w;
        if (t.globals.markers.size = Array.isArray(t.config.markers.size) ? t.config.markers.size : [t.config.markers.size], t.globals.markers.size.length > 0) {
          if (t.globals.markers.size.length < t.globals.series.length + 1) for (var e = 0; e <= t.globals.series.length; e++) void 0 === t.globals.markers.size[e] && t.globals.markers.size.push(t.globals.markers.size[0]);
        } else t.globals.markers.size = t.config.series.map(function (e) {
          return t.config.markers.size;
        });
      }
    }, {
      key: "plotChartMarkers",
      value: function (t, e, i, a) {
        var s,
          r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
          o = this.w,
          n = e,
          l = t,
          h = null,
          c = new m(this.ctx),
          d = o.config.markers.discrete && o.config.markers.discrete.length;
        if ((o.globals.markers.size[e] > 0 || r || d) && (h = c.group({
          class: r || d ? "" : "apexcharts-series-markers"
        })).attr("clip-path", "url(#gridRectMarkerMask".concat(o.globals.cuid, ")")), Array.isArray(l.x)) for (var g = 0; g < l.x.length; g++) {
          var u = i;
          1 === i && 0 === g && (u = 0), 1 === i && 1 === g && (u = 1);
          var p = "apexcharts-marker";
          if ("line" !== o.config.chart.type && "area" !== o.config.chart.type || o.globals.comboCharts || o.config.tooltip.intersect || (p += " no-pointer-events"), (Array.isArray(o.config.markers.size) ? o.globals.markers.size[e] > 0 : o.config.markers.size > 0) || r || d) {
            x.isNumber(l.y[g]) ? p += " w".concat(x.randomId()) : p = "apexcharts-nullpoint";
            var f = this.getMarkerConfig({
              cssClass: p,
              seriesIndex: e,
              dataPointIndex: u
            });
            o.config.series[n].data[u] && (o.config.series[n].data[u].fillColor && (f.pointFillColor = o.config.series[n].data[u].fillColor), o.config.series[n].data[u].strokeColor && (f.pointStrokeColor = o.config.series[n].data[u].strokeColor)), a && (f.pSize = a), (l.x[g] < 0 || l.x[g] > o.globals.gridWidth || l.y[g] < -o.globals.markers.largestSize || l.y[g] > o.globals.gridHeight + o.globals.markers.largestSize) && (f.pSize = 0), (s = c.drawMarker(l.x[g], l.y[g], f)).attr("rel", u), s.attr("j", u), s.attr("index", e), s.node.setAttribute("default-marker-size", f.pSize), new v(this.ctx).setSelectionFilter(s, e, u), this.addEvents(s), h && h.add(s);
          } else void 0 === o.globals.pointsArray[e] && (o.globals.pointsArray[e] = []), o.globals.pointsArray[e].push([l.x[g], l.y[g]]);
        }
        return h;
      }
    }, {
      key: "getMarkerConfig",
      value: function (t) {
        var e = t.cssClass,
          i = t.seriesIndex,
          a = t.dataPointIndex,
          s = void 0 === a ? null : a,
          r = t.finishRadius,
          o = void 0 === r ? null : r,
          n = this.w,
          l = this.getMarkerStyle(i),
          h = n.globals.markers.size[i],
          c = n.config.markers;
        return null !== s && c.discrete.length && c.discrete.map(function (t) {
          t.seriesIndex === i && t.dataPointIndex === s && (l.pointStrokeColor = t.strokeColor, l.pointFillColor = t.fillColor, h = t.size, l.pointShape = t.shape);
        }), {
          pSize: null === o ? h : o,
          pRadius: c.radius,
          width: Array.isArray(c.width) ? c.width[i] : c.width,
          height: Array.isArray(c.height) ? c.height[i] : c.height,
          pointStrokeWidth: Array.isArray(c.strokeWidth) ? c.strokeWidth[i] : c.strokeWidth,
          pointStrokeColor: l.pointStrokeColor,
          pointFillColor: l.pointFillColor,
          shape: l.pointShape || (Array.isArray(c.shape) ? c.shape[i] : c.shape),
          class: e,
          pointStrokeOpacity: Array.isArray(c.strokeOpacity) ? c.strokeOpacity[i] : c.strokeOpacity,
          pointStrokeDashArray: Array.isArray(c.strokeDashArray) ? c.strokeDashArray[i] : c.strokeDashArray,
          pointFillOpacity: Array.isArray(c.fillOpacity) ? c.fillOpacity[i] : c.fillOpacity,
          seriesIndex: i
        };
      }
    }, {
      key: "addEvents",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx);
        t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this.ctx, t)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this.ctx, t)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this.ctx, t)), t.node.addEventListener("click", e.config.markers.onClick), t.node.addEventListener("dblclick", e.config.markers.onDblClick), t.node.addEventListener("touchstart", i.pathMouseDown.bind(this.ctx, t), {
          passive: !0
        });
      }
    }, {
      key: "getMarkerStyle",
      value: function (t) {
        var e = this.w,
          i = e.globals.markers.colors,
          a = e.config.markers.strokeColor || e.config.markers.strokeColors;
        return {
          pointStrokeColor: Array.isArray(a) ? a[t] : a,
          pointFillColor: Array.isArray(i) ? i[t] : i
        };
      }
    }]), t;
  }(),
  D = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;
    }
    return r(t, [{
      key: "draw",
      value: function (t, e, i) {
        var a = this.w,
          s = new m(this.ctx),
          r = i.realIndex,
          o = i.pointsPos,
          n = i.zRatio,
          l = i.elParent,
          h = s.group({
            class: "apexcharts-series-markers apexcharts-series-".concat(a.config.chart.type)
          });
        if (h.attr("clip-path", "url(#gridRectMarkerMask".concat(a.globals.cuid, ")")), Array.isArray(o.x)) for (var c = 0; c < o.x.length; c++) {
          var d = e + 1,
            g = !0;
          0 === e && 0 === c && (d = 0), 0 === e && 1 === c && (d = 1);
          var u = 0,
            p = a.globals.markers.size[r];
          if (n !== 1 / 0) {
            var f = a.config.plotOptions.bubble;
            p = a.globals.seriesZ[r][d], f.zScaling && (p /= n), f.minBubbleRadius && p < f.minBubbleRadius && (p = f.minBubbleRadius), f.maxBubbleRadius && p > f.maxBubbleRadius && (p = f.maxBubbleRadius);
          }
          a.config.chart.animations.enabled || (u = p);
          var x = o.x[c],
            b = o.y[c];
          if (u = u || 0, null !== b && void 0 !== a.globals.series[r][d] || (g = !1), g) {
            var v = this.drawPoint(x, b, u, p, r, d, e);
            h.add(v);
          }
          l.add(h);
        }
      }
    }, {
      key: "drawPoint",
      value: function (t, e, i, a, s, r, o) {
        var n = this.w,
          l = s,
          h = new b(this.ctx),
          c = new v(this.ctx),
          d = new R(this.ctx),
          g = new H(this.ctx),
          u = new m(this.ctx),
          p = g.getMarkerConfig({
            cssClass: "apexcharts-marker",
            seriesIndex: l,
            dataPointIndex: r,
            finishRadius: "bubble" === n.config.chart.type || n.globals.comboCharts && n.config.series[s] && "bubble" === n.config.series[s].type ? a : null
          });
        a = p.pSize;
        var f,
          x = d.fillPath({
            seriesNumber: s,
            dataPointIndex: r,
            color: p.pointFillColor,
            patternUnits: "objectBoundingBox",
            value: n.globals.series[s][o]
          });
        if ("circle" === p.shape ? f = u.drawCircle(i) : "square" !== p.shape && "rect" !== p.shape || (f = u.drawRect(0, 0, p.width - p.pointStrokeWidth / 2, p.height - p.pointStrokeWidth / 2, p.pRadius)), n.config.series[l].data[r] && n.config.series[l].data[r].fillColor && (x = n.config.series[l].data[r].fillColor), f.attr({
          x: t - p.width / 2 - p.pointStrokeWidth / 2,
          y: e - p.height / 2 - p.pointStrokeWidth / 2,
          cx: t,
          cy: e,
          fill: x,
          "fill-opacity": p.pointFillOpacity,
          stroke: p.pointStrokeColor,
          r: a,
          "stroke-width": p.pointStrokeWidth,
          "stroke-dasharray": p.pointStrokeDashArray,
          "stroke-opacity": p.pointStrokeOpacity
        }), n.config.chart.dropShadow.enabled) {
          var y = n.config.chart.dropShadow;
          c.dropShadow(f, y, s);
        }
        if (!this.initialAnim || n.globals.dataChanged || n.globals.resized) n.globals.animationEnded = !0;else {
          var w = n.config.chart.animations.speed;
          h.animateMarker(f, 0, "circle" === p.shape ? a : {
            width: p.width,
            height: p.height
          }, w, n.globals.easing, function () {
            window.setTimeout(function () {
              h.animationCompleted(f);
            }, 100);
          });
        }
        if (n.globals.dataChanged && "circle" === p.shape) if (this.dynamicAnim) {
          var k,
            A,
            S,
            C,
            L = n.config.chart.animations.dynamicAnimation.speed;
          null != (C = n.globals.previousPaths[s] && n.globals.previousPaths[s][o]) && (k = C.x, A = C.y, S = void 0 !== C.r ? C.r : a);
          for (var P = 0; P < n.globals.collapsedSeries.length; P++) n.globals.collapsedSeries[P].index === s && (L = 1, a = 0);
          0 === t && 0 === e && (a = 0), h.animateCircle(f, {
            cx: k,
            cy: A,
            r: S
          }, {
            cx: t,
            cy: e,
            r: a
          }, L, n.globals.easing);
        } else f.attr({
          r: a
        });
        return f.attr({
          rel: r,
          j: r,
          index: s,
          "default-marker-size": a
        }), c.setSelectionFilter(f, s, r), g.addEvents(f), f.node.classList.add("apexcharts-marker"), f;
      }
    }, {
      key: "centerTextInBubble",
      value: function (t) {
        var e = this.w;
        return {
          y: t += parseInt(e.config.dataLabels.style.fontSize, 10) / 4
        };
      }
    }]), t;
  }(),
  O = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "dataLabelsCorrection",
      value: function (t, e, i, a, s, r, o) {
        var n = this.w,
          l = !1,
          h = new m(this.ctx).getTextRects(i, o),
          c = h.width,
          d = h.height;
        e < 0 && (e = 0), e > n.globals.gridHeight + d && (e = n.globals.gridHeight + d / 2), void 0 === n.globals.dataLabelsRects[a] && (n.globals.dataLabelsRects[a] = []), n.globals.dataLabelsRects[a].push({
          x: t,
          y: e,
          width: c,
          height: d
        });
        var g = n.globals.dataLabelsRects[a].length - 2,
          u = void 0 !== n.globals.lastDrawnDataLabelsIndexes[a] ? n.globals.lastDrawnDataLabelsIndexes[a][n.globals.lastDrawnDataLabelsIndexes[a].length - 1] : 0;
        if (void 0 !== n.globals.dataLabelsRects[a][g]) {
          var p = n.globals.dataLabelsRects[a][u];
          (t > p.x + p.width || e > p.y + p.height || e + d < p.y || t + c < p.x) && (l = !0);
        }
        return (0 === s || r) && (l = !0), {
          x: t,
          y: e,
          textRects: h,
          drawnextLabel: l
        };
      }
    }, {
      key: "drawDataLabel",
      value: function (t) {
        var e = this,
          i = t.type,
          a = t.pos,
          s = t.i,
          r = t.j,
          o = t.isRangeStart,
          n = t.strokeWidth,
          l = void 0 === n ? 2 : n,
          h = this.w,
          c = new m(this.ctx),
          d = h.config.dataLabels,
          g = 0,
          u = 0,
          p = r,
          f = null;
        if (!d.enabled || !Array.isArray(a.x)) return f;
        f = c.group({
          class: "apexcharts-data-labels"
        });
        for (var x = 0; x < a.x.length; x++) if (g = a.x[x] + d.offsetX, u = a.y[x] + d.offsetY + l, !isNaN(g)) {
          1 === r && 0 === x && (p = 0), 1 === r && 1 === x && (p = 1);
          var b = h.globals.series[s][p];
          "rangeArea" === i && (b = o ? h.globals.seriesRangeStart[s][p] : h.globals.seriesRangeEnd[s][p]);
          var v = "",
            y = function (t) {
              return h.config.dataLabels.formatter(t, {
                ctx: e.ctx,
                seriesIndex: s,
                dataPointIndex: p,
                w: h
              });
            };
          if ("bubble" === h.config.chart.type) v = y(b = h.globals.seriesZ[s][p]), u = a.y[x], u = new D(this.ctx).centerTextInBubble(u, s, p).y;else void 0 !== b && (v = y(b));
          this.plotDataLabelsText({
            x: g,
            y: u,
            text: v,
            i: s,
            j: p,
            parent: f,
            offsetCorrection: !0,
            dataLabelsConfig: h.config.dataLabels
          });
        }
        return f;
      }
    }, {
      key: "plotDataLabelsText",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = t.x,
          s = t.y,
          r = t.i,
          o = t.j,
          n = t.text,
          l = t.textAnchor,
          h = t.fontSize,
          c = t.parent,
          d = t.dataLabelsConfig,
          g = t.color,
          u = t.alwaysDrawDataLabel,
          p = t.offsetCorrection;
        if (!(Array.isArray(e.config.dataLabels.enabledOnSeries) && e.config.dataLabels.enabledOnSeries.indexOf(r) < 0)) {
          var f = {
            x: a,
            y: s,
            drawnextLabel: !0,
            textRects: null
          };
          p && (f = this.dataLabelsCorrection(a, s, n, r, o, u, parseInt(d.style.fontSize, 10))), e.globals.zoomed || (a = f.x, s = f.y), f.textRects && (a < -20 - f.textRects.width || a > e.globals.gridWidth + f.textRects.width + 30) && (n = "");
          var x = e.globals.dataLabels.style.colors[r];
          (("bar" === e.config.chart.type || "rangeBar" === e.config.chart.type) && e.config.plotOptions.bar.distributed || e.config.dataLabels.distributed) && (x = e.globals.dataLabels.style.colors[o]), "function" == typeof x && (x = x({
            series: e.globals.series,
            seriesIndex: r,
            dataPointIndex: o,
            w: e
          })), g && (x = g);
          var b = d.offsetX,
            y = d.offsetY;
          if ("bar" !== e.config.chart.type && "rangeBar" !== e.config.chart.type || (b = 0, y = 0), f.drawnextLabel) {
            var w = i.drawText({
              width: 100,
              height: parseInt(d.style.fontSize, 10),
              x: a + b,
              y: s + y,
              foreColor: x,
              textAnchor: l || d.textAnchor,
              text: n,
              fontSize: h || d.style.fontSize,
              fontFamily: d.style.fontFamily,
              fontWeight: d.style.fontWeight || "normal"
            });
            if (w.attr({
              class: "apexcharts-datalabel",
              cx: a,
              cy: s
            }), d.dropShadow.enabled) {
              var k = d.dropShadow;
              new v(this.ctx).dropShadow(w, k);
            }
            c.add(w), void 0 === e.globals.lastDrawnDataLabelsIndexes[r] && (e.globals.lastDrawnDataLabelsIndexes[r] = []), e.globals.lastDrawnDataLabelsIndexes[r].push(o);
          }
        }
      }
    }, {
      key: "addBackgroundToDataLabel",
      value: function (t, e) {
        var i = this.w,
          a = i.config.dataLabels.background,
          s = a.padding,
          r = a.padding / 2,
          o = e.width,
          n = e.height,
          l = new m(this.ctx).drawRect(e.x - s, e.y - r / 2, o + 2 * s, n + r, a.borderRadius, "transparent" === i.config.chart.background ? "#fff" : i.config.chart.background, a.opacity, a.borderWidth, a.borderColor);
        a.dropShadow.enabled && new v(this.ctx).dropShadow(l, a.dropShadow);
        return l;
      }
    }, {
      key: "dataLabelsBackground",
      value: function () {
        var t = this.w;
        if ("bubble" !== t.config.chart.type) for (var e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), i = 0; i < e.length; i++) {
          var a = e[i],
            s = a.getBBox(),
            r = null;
          if (s.width && s.height && (r = this.addBackgroundToDataLabel(a, s)), r) {
            a.parentNode.insertBefore(r.node, a);
            var o = a.getAttribute("fill");
            t.config.chart.animations.enabled && !t.globals.resized && !t.globals.dataChanged ? r.animate().attr({
              fill: o
            }) : r.attr({
              fill: o
            }), a.setAttribute("fill", t.config.dataLabels.background.foreColor);
          }
        }
      }
    }, {
      key: "bringForward",
      value: function () {
        for (var t = this.w, e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), i = t.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), a = 0; a < e.length; a++) i && i.insertBefore(e[a], i.nextSibling);
      }
    }]), t;
  }(),
  N = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.legendInactiveClass = "legend-mouseover-inactive";
    }
    return r(t, [{
      key: "getAllSeriesEls",
      value: function () {
        return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series");
      }
    }, {
      key: "getSeriesByName",
      value: function (t) {
        return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(x.escapeString(t), "']"));
      }
    }, {
      key: "isSeriesHidden",
      value: function (t) {
        var e = this.getSeriesByName(t),
          i = parseInt(e.getAttribute("data:realIndex"), 10);
        return {
          isHidden: e.classList.contains("apexcharts-series-collapsed"),
          realIndex: i
        };
      }
    }, {
      key: "addCollapsedClassToSeries",
      value: function (t, e) {
        var i = this.w;
        function a(i) {
          for (var a = 0; a < i.length; a++) i[a].index === e && t.node.classList.add("apexcharts-series-collapsed");
        }
        a(i.globals.collapsedSeries), a(i.globals.ancillaryCollapsedSeries);
      }
    }, {
      key: "toggleSeries",
      value: function (t) {
        var e = this.isSeriesHidden(t);
        return this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, e.isHidden), e.isHidden;
      }
    }, {
      key: "showSeries",
      value: function (t) {
        var e = this.isSeriesHidden(t);
        e.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, !0);
      }
    }, {
      key: "hideSeries",
      value: function (t) {
        var e = this.isSeriesHidden(t);
        e.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, !1);
      }
    }, {
      key: "resetSeries",
      value: function () {
        var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
          e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
          i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
          a = this.w,
          s = x.clone(a.globals.initialSeries);
        a.globals.previousPaths = [], i ? (a.globals.collapsedSeries = [], a.globals.ancillaryCollapsedSeries = [], a.globals.collapsedSeriesIndices = [], a.globals.ancillaryCollapsedSeriesIndices = []) : s = this.emptyCollapsedSeries(s), a.config.series = s, t && (e && (a.globals.zoomed = !1, this.ctx.updateHelpers.revertDefaultAxisMinMax()), this.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled));
      }
    }, {
      key: "emptyCollapsedSeries",
      value: function (t) {
        for (var e = this.w, i = 0; i < t.length; i++) e.globals.collapsedSeriesIndices.indexOf(i) > -1 && (t[i].data = []);
        return t;
      }
    }, {
      key: "toggleSeriesOnHover",
      value: function (t, e) {
        var i = this.w;
        e || (e = t.target);
        var a = i.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");
        if ("mousemove" === t.type) {
          var s = parseInt(e.getAttribute("rel"), 10) - 1,
            r = null,
            o = null;
          i.globals.axisCharts || "radialBar" === i.config.chart.type ? i.globals.axisCharts ? (r = i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(s, "']")), o = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(s, "']"))) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s + 1, "']")) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s + 1, "'] path"));
          for (var n = 0; n < a.length; n++) a[n].classList.add(this.legendInactiveClass);
          null !== r && (i.globals.axisCharts || r.parentNode.classList.remove(this.legendInactiveClass), r.classList.remove(this.legendInactiveClass), null !== o && o.classList.remove(this.legendInactiveClass));
        } else if ("mouseout" === t.type) for (var l = 0; l < a.length; l++) a[l].classList.remove(this.legendInactiveClass);
      }
    }, {
      key: "highlightRangeInSeries",
      value: function (t, e) {
        var i = this,
          a = this.w,
          s = a.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"),
          r = function (t) {
            for (var e = 0; e < s.length; e++) s[e].classList[t](i.legendInactiveClass);
          };
        if ("mousemove" === t.type) {
          var o = parseInt(e.getAttribute("rel"), 10) - 1;
          r("add"), function (t) {
            for (var e = 0; e < s.length; e++) {
              var a = parseInt(s[e].getAttribute("val"), 10);
              a >= t.from && a <= t.to && s[e].classList.remove(i.legendInactiveClass);
            }
          }(a.config.plotOptions.heatmap.colorScale.ranges[o]);
        } else "mouseout" === t.type && r("remove");
      }
    }, {
      key: "getActiveConfigSeriesIndex",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "asc",
          e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
          i = this.w,
          a = 0;
        if (i.config.series.length > 1) for (var s = i.config.series.map(function (t, a) {
            return t.data && t.data.length > 0 && -1 === i.globals.collapsedSeriesIndices.indexOf(a) && (!i.globals.comboCharts || 0 === e.length || e.length && e.indexOf(i.config.series[a].type) > -1) ? a : -1;
          }), r = "asc" === t ? 0 : s.length - 1; "asc" === t ? r < s.length : r >= 0; "asc" === t ? r++ : r--) if (-1 !== s[r]) {
          a = s[r];
          break;
        }
        return a;
      }
    }, {
      key: "getBarSeriesIndices",
      value: function () {
        return this.w.globals.comboCharts ? this.w.config.series.map(function (t, e) {
          return "bar" === t.type || "column" === t.type ? e : -1;
        }).filter(function (t) {
          return -1 !== t;
        }) : this.w.config.series.map(function (t, e) {
          return e;
        });
      }
    }, {
      key: "getPreviousPaths",
      value: function () {
        var t = this.w;
        function e(e, i, a) {
          for (var s = e[i].childNodes, r = {
              type: a,
              paths: [],
              realIndex: e[i].getAttribute("data:realIndex")
            }, o = 0; o < s.length; o++) if (s[o].hasAttribute("pathTo")) {
            var n = s[o].getAttribute("pathTo");
            r.paths.push({
              d: n
            });
          }
          t.globals.previousPaths.push(r);
        }
        t.globals.previousPaths = [];
        ["line", "area", "bar", "rangebar", "rangeArea", "candlestick", "radar"].forEach(function (i) {
          for (var a, s = (a = i, t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a, "-series .apexcharts-series"))), r = 0; r < s.length; r++) e(s, r, i);
        }), this.handlePrevBubbleScatterPaths("bubble"), this.handlePrevBubbleScatterPaths("scatter");
        var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t.config.chart.type, " .apexcharts-series"));
        if (i.length > 0) for (var a = function (e) {
            for (var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(e, "'] rect")), a = [], s = function (t) {
                var e = function (e) {
                    return i[t].getAttribute(e);
                  },
                  s = {
                    x: parseFloat(e("x")),
                    y: parseFloat(e("y")),
                    width: parseFloat(e("width")),
                    height: parseFloat(e("height"))
                  };
                a.push({
                  rect: s,
                  color: i[t].getAttribute("color")
                });
              }, r = 0; r < i.length; r++) s(r);
            t.globals.previousPaths.push(a);
          }, s = 0; s < i.length; s++) a(s);
        t.globals.axisCharts || (t.globals.previousPaths = t.globals.series);
      }
    }, {
      key: "handlePrevBubbleScatterPaths",
      value: function (t) {
        var e = this.w,
          i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t, "-series .apexcharts-series"));
        if (i.length > 0) for (var a = 0; a < i.length; a++) {
          for (var s = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t, "-series .apexcharts-series[data\\:realIndex='").concat(a, "'] circle")), r = [], o = 0; o < s.length; o++) r.push({
            x: s[o].getAttribute("cx"),
            y: s[o].getAttribute("cy"),
            r: s[o].getAttribute("r")
          });
          e.globals.previousPaths.push(r);
        }
      }
    }, {
      key: "clearPreviousPaths",
      value: function () {
        var t = this.w;
        t.globals.previousPaths = [], t.globals.allSeriesCollapsed = !1;
      }
    }, {
      key: "handleNoData",
      value: function () {
        var t = this.w,
          e = t.config.noData,
          i = new m(this.ctx),
          a = t.globals.svgWidth / 2,
          s = t.globals.svgHeight / 2,
          r = "middle";
        if (t.globals.noData = !0, t.globals.animationEnded = !0, "left" === e.align ? (a = 10, r = "start") : "right" === e.align && (a = t.globals.svgWidth - 10, r = "end"), "top" === e.verticalAlign ? s = 50 : "bottom" === e.verticalAlign && (s = t.globals.svgHeight - 50), a += e.offsetX, s = s + parseInt(e.style.fontSize, 10) + 2 + e.offsetY, void 0 !== e.text && "" !== e.text) {
          var o = i.drawText({
            x: a,
            y: s,
            text: e.text,
            textAnchor: r,
            fontSize: e.style.fontSize,
            fontFamily: e.style.fontFamily,
            foreColor: e.style.color,
            opacity: 1,
            class: "apexcharts-text-nodata"
          });
          t.globals.dom.Paper.add(o);
        }
      }
    }, {
      key: "setNullSeriesToZeroValues",
      value: function (t) {
        for (var e = this.w, i = 0; i < t.length; i++) if (0 === t[i].length) for (var a = 0; a < t[e.globals.maxValsInArrayIndex].length; a++) t[i].push(0);
        return t;
      }
    }, {
      key: "hasAllSeriesEqualX",
      value: function () {
        for (var t = !0, e = this.w, i = this.filteredSeriesX(), a = 0; a < i.length - 1; a++) if (i[a][0] !== i[a + 1][0]) {
          t = !1;
          break;
        }
        return e.globals.allSeriesHasEqualX = t, t;
      }
    }, {
      key: "filteredSeriesX",
      value: function () {
        var t = this.w.globals.seriesX.map(function (t) {
          return t.length > 0 ? t : [];
        });
        return t;
      }
    }]), t;
  }(),
  W = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = [], this.seriesGoals = [], this.coreUtils = new y(this.ctx);
    }
    return r(t, [{
      key: "isMultiFormat",
      value: function () {
        return this.isFormatXY() || this.isFormat2DArray();
      }
    }, {
      key: "isFormatXY",
      value: function () {
        var t = this.w.config.series.slice(),
          e = new N(this.ctx);
        if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && null !== t[this.activeSeriesIndex].data[0] && void 0 !== t[this.activeSeriesIndex].data[0].x && null !== t[this.activeSeriesIndex].data[0]) return !0;
      }
    }, {
      key: "isFormat2DArray",
      value: function () {
        var t = this.w.config.series.slice(),
          e = new N(this.ctx);
        if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && void 0 !== t[this.activeSeriesIndex].data[0] && null !== t[this.activeSeriesIndex].data[0] && t[this.activeSeriesIndex].data[0].constructor === Array) return !0;
      }
    }, {
      key: "handleFormat2DArray",
      value: function (t, e) {
        for (var i = this.w.config, a = this.w.globals, s = "boxPlot" === i.chart.type || "boxPlot" === i.series[e].type, r = 0; r < t[e].data.length; r++) if (void 0 !== t[e].data[r][1] && (Array.isArray(t[e].data[r][1]) && 4 === t[e].data[r][1].length && !s ? this.twoDSeries.push(x.parseNumber(t[e].data[r][1][3])) : t[e].data[r].length >= 5 ? this.twoDSeries.push(x.parseNumber(t[e].data[r][4])) : this.twoDSeries.push(x.parseNumber(t[e].data[r][1])), a.dataFormatXNumeric = !0), "datetime" === i.xaxis.type) {
          var o = new Date(t[e].data[r][0]);
          o = new Date(o).getTime(), this.twoDSeriesX.push(o);
        } else this.twoDSeriesX.push(t[e].data[r][0]);
        for (var n = 0; n < t[e].data.length; n++) void 0 !== t[e].data[n][2] && (this.threeDSeries.push(t[e].data[n][2]), a.isDataXYZ = !0);
      }
    }, {
      key: "handleFormatXY",
      value: function (t, e) {
        var i = this.w.config,
          a = this.w.globals,
          s = new I(this.ctx),
          r = e;
        a.collapsedSeriesIndices.indexOf(e) > -1 && (r = this.activeSeriesIndex);
        for (var o = 0; o < t[e].data.length; o++) void 0 !== t[e].data[o].y && (Array.isArray(t[e].data[o].y) ? this.twoDSeries.push(x.parseNumber(t[e].data[o].y[t[e].data[o].y.length - 1])) : this.twoDSeries.push(x.parseNumber(t[e].data[o].y))), void 0 !== t[e].data[o].goals && Array.isArray(t[e].data[o].goals) ? (void 0 === this.seriesGoals[e] && (this.seriesGoals[e] = []), this.seriesGoals[e].push(t[e].data[o].goals)) : (void 0 === this.seriesGoals[e] && (this.seriesGoals[e] = []), this.seriesGoals[e].push(null));
        for (var n = 0; n < t[r].data.length; n++) {
          var l = "string" == typeof t[r].data[n].x,
            h = Array.isArray(t[r].data[n].x),
            c = !h && !!s.isValidDate(t[r].data[n].x);
          if (l || c) {
            if (l || i.xaxis.convertedCatToNumeric) {
              var d = a.isBarHorizontal && a.isRangeData;
              "datetime" !== i.xaxis.type || d ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[r].data[n].x), isNaN(t[r].data[n].x) || "category" === this.w.config.xaxis.type || "string" == typeof t[r].data[n].x || (a.isXNumeric = !0)) : this.twoDSeriesX.push(s.parseDate(t[r].data[n].x));
            } else "datetime" === i.xaxis.type ? this.twoDSeriesX.push(s.parseDate(t[r].data[n].x.toString())) : (a.dataFormatXNumeric = !0, a.isXNumeric = !0, this.twoDSeriesX.push(parseFloat(t[r].data[n].x)));
          } else h ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[r].data[n].x)) : (a.isXNumeric = !0, a.dataFormatXNumeric = !0, this.twoDSeriesX.push(t[r].data[n].x));
        }
        if (t[e].data[0] && void 0 !== t[e].data[0].z) {
          for (var g = 0; g < t[e].data.length; g++) this.threeDSeries.push(t[e].data[g].z);
          a.isDataXYZ = !0;
        }
      }
    }, {
      key: "handleRangeData",
      value: function (t, e) {
        var i = this.w.globals,
          a = {};
        return this.isFormat2DArray() ? a = this.handleRangeDataFormat("array", t, e) : this.isFormatXY() && (a = this.handleRangeDataFormat("xy", t, e)), i.seriesRangeStart.push(a.start), i.seriesRangeEnd.push(a.end), i.seriesRange.push(a.rangeUniques), i.seriesRange.forEach(function (t, e) {
          t && t.forEach(function (t, e) {
            t.y.forEach(function (e, i) {
              for (var a = 0; a < t.y.length; a++) if (i !== a) {
                var s = e.y1,
                  r = e.y2,
                  o = t.y[a].y1;
                s <= t.y[a].y2 && o <= r && (t.overlaps.indexOf(e.rangeName) < 0 && t.overlaps.push(e.rangeName), t.overlaps.indexOf(t.y[a].rangeName) < 0 && t.overlaps.push(t.y[a].rangeName));
              }
            });
          });
        }), a;
      }
    }, {
      key: "handleCandleStickBoxData",
      value: function (t, e) {
        var i = this.w.globals,
          a = {};
        return this.isFormat2DArray() ? a = this.handleCandleStickBoxDataFormat("array", t, e) : this.isFormatXY() && (a = this.handleCandleStickBoxDataFormat("xy", t, e)), i.seriesCandleO[e] = a.o, i.seriesCandleH[e] = a.h, i.seriesCandleM[e] = a.m, i.seriesCandleL[e] = a.l, i.seriesCandleC[e] = a.c, a;
      }
    }, {
      key: "handleRangeDataFormat",
      value: function (t, e, i) {
        var a = [],
          s = [],
          r = e[i].data.filter(function (t, e, i) {
            return e === i.findIndex(function (e) {
              return e.x === t.x;
            });
          }).map(function (t, e) {
            return {
              x: t.x,
              overlaps: [],
              y: []
            };
          });
        if ("array" === t) for (var o = 0; o < e[i].data.length; o++) Array.isArray(e[i].data[o]) ? (a.push(e[i].data[o][1][0]), s.push(e[i].data[o][1][1])) : (a.push(e[i].data[o]), s.push(e[i].data[o]));else if ("xy" === t) for (var n = function (t) {
            var o = Array.isArray(e[i].data[t].y),
              n = x.randomId(),
              l = e[i].data[t].x,
              h = {
                y1: o ? e[i].data[t].y[0] : e[i].data[t].y,
                y2: o ? e[i].data[t].y[1] : e[i].data[t].y,
                rangeName: n
              };
            e[i].data[t].rangeName = n;
            var c = r.findIndex(function (t) {
              return t.x === l;
            });
            r[c].y.push(h), a.push(h.y1), s.push(h.y2);
          }, l = 0; l < e[i].data.length; l++) n(l);
        return {
          start: a,
          end: s,
          rangeUniques: r
        };
      }
    }, {
      key: "handleCandleStickBoxDataFormat",
      value: function (t, e, i) {
        var a = this.w,
          s = "boxPlot" === a.config.chart.type || "boxPlot" === a.config.series[i].type,
          r = [],
          o = [],
          n = [],
          l = [],
          h = [];
        if ("array" === t) {
          if (s && 6 === e[i].data[0].length || !s && 5 === e[i].data[0].length) for (var c = 0; c < e[i].data.length; c++) r.push(e[i].data[c][1]), o.push(e[i].data[c][2]), s ? (n.push(e[i].data[c][3]), l.push(e[i].data[c][4]), h.push(e[i].data[c][5])) : (l.push(e[i].data[c][3]), h.push(e[i].data[c][4]));else for (var d = 0; d < e[i].data.length; d++) Array.isArray(e[i].data[d][1]) && (r.push(e[i].data[d][1][0]), o.push(e[i].data[d][1][1]), s ? (n.push(e[i].data[d][1][2]), l.push(e[i].data[d][1][3]), h.push(e[i].data[d][1][4])) : (l.push(e[i].data[d][1][2]), h.push(e[i].data[d][1][3])));
        } else if ("xy" === t) for (var g = 0; g < e[i].data.length; g++) Array.isArray(e[i].data[g].y) && (r.push(e[i].data[g].y[0]), o.push(e[i].data[g].y[1]), s ? (n.push(e[i].data[g].y[2]), l.push(e[i].data[g].y[3]), h.push(e[i].data[g].y[4])) : (l.push(e[i].data[g].y[2]), h.push(e[i].data[g].y[3])));
        return {
          o: r,
          h: o,
          m: n,
          l: l,
          c: h
        };
      }
    }, {
      key: "parseDataAxisCharts",
      value: function (t) {
        var e,
          i = this,
          a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.ctx,
          s = this.w.config,
          r = this.w.globals,
          o = new I(a),
          n = s.labels.length > 0 ? s.labels.slice() : s.xaxis.categories.slice();
        if (r.isRangeBar = "rangeBar" === s.chart.type && r.isBarHorizontal, r.hasXaxisGroups = "category" === s.xaxis.type && s.xaxis.group.groups.length > 0, r.hasXaxisGroups && (r.groups = s.xaxis.group.groups), r.hasSeriesGroups = null === (e = t[0]) || void 0 === e ? void 0 : e.group, r.hasSeriesGroups) {
          var l = [],
            h = u(new Set(t.map(function (t) {
              return t.group;
            })));
          t.forEach(function (t, e) {
            var i = h.indexOf(t.group);
            l[i] || (l[i] = []), l[i].push(t.name);
          }), r.seriesGroups = l;
        }
        for (var c = function () {
            for (var t = 0; t < n.length; t++) if ("string" == typeof n[t]) {
              if (!o.isValidDate(n[t])) throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
              i.twoDSeriesX.push(o.parseDate(n[t]));
            } else i.twoDSeriesX.push(n[t]);
          }, d = 0; d < t.length; d++) {
          if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], void 0 === t[d].data) return void console.error("It is a possibility that you may have not included 'data' property in series.");
          if ("rangeBar" !== s.chart.type && "rangeArea" !== s.chart.type && "rangeBar" !== t[d].type && "rangeArea" !== t[d].type || (r.isRangeData = !0, "rangeBar" !== s.chart.type && "rangeArea" !== s.chart.type || this.handleRangeData(t, d)), this.isMultiFormat()) this.isFormat2DArray() ? this.handleFormat2DArray(t, d) : this.isFormatXY() && this.handleFormatXY(t, d), "candlestick" !== s.chart.type && "candlestick" !== t[d].type && "boxPlot" !== s.chart.type && "boxPlot" !== t[d].type || this.handleCandleStickBoxData(t, d), r.series.push(this.twoDSeries), r.labels.push(this.twoDSeriesX), r.seriesX.push(this.twoDSeriesX), r.seriesGoals = this.seriesGoals, d !== this.activeSeriesIndex || this.fallbackToCategory || (r.isXNumeric = !0);else {
            "datetime" === s.xaxis.type ? (r.isXNumeric = !0, c(), r.seriesX.push(this.twoDSeriesX)) : "numeric" === s.xaxis.type && (r.isXNumeric = !0, n.length > 0 && (this.twoDSeriesX = n, r.seriesX.push(this.twoDSeriesX))), r.labels.push(this.twoDSeriesX);
            var g = t[d].data.map(function (t) {
              return x.parseNumber(t);
            });
            r.series.push(g);
          }
          r.seriesZ.push(this.threeDSeries), void 0 !== t[d].name ? r.seriesNames.push(t[d].name) : r.seriesNames.push("series-" + parseInt(d + 1, 10)), void 0 !== t[d].color ? r.seriesColors.push(t[d].color) : r.seriesColors.push(void 0);
        }
        return this.w;
      }
    }, {
      key: "parseDataNonAxisCharts",
      value: function (t) {
        var e = this.w.globals,
          i = this.w.config;
        e.series = t.slice(), e.seriesNames = i.labels.slice();
        for (var a = 0; a < e.series.length; a++) void 0 === e.seriesNames[a] && e.seriesNames.push("series-" + (a + 1));
        return this.w;
      }
    }, {
      key: "handleExternalLabelsData",
      value: function (t) {
        var e = this.w.config,
          i = this.w.globals;
        if (e.xaxis.categories.length > 0) i.labels = e.xaxis.categories;else if (e.labels.length > 0) i.labels = e.labels.slice();else if (this.fallbackToCategory) {
          if (i.labels = i.labels[0], i.seriesRange.length && (i.seriesRange.map(function (t) {
            t.forEach(function (t) {
              i.labels.indexOf(t.x) < 0 && t.x && i.labels.push(t.x);
            });
          }), i.labels = Array.from(new Set(i.labels.map(JSON.stringify)), JSON.parse)), e.xaxis.convertedCatToNumeric) new X(e).convertCatToNumericXaxis(e, this.ctx, i.seriesX[0]), this._generateExternalLabels(t);
        } else this._generateExternalLabels(t);
      }
    }, {
      key: "_generateExternalLabels",
      value: function (t) {
        var e = this.w.globals,
          i = this.w.config,
          a = [];
        if (e.axisCharts) {
          if (e.series.length > 0) if (this.isFormatXY()) for (var s = i.series.map(function (t, e) {
              return t.data.filter(function (t, e, i) {
                return i.findIndex(function (e) {
                  return e.x === t.x;
                }) === e;
              });
            }), r = s.reduce(function (t, e, i, a) {
              return a[t].length > e.length ? t : i;
            }, 0), o = 0; o < s[r].length; o++) a.push(o + 1);else for (var n = 0; n < e.series[e.maxValsInArrayIndex].length; n++) a.push(n + 1);
          e.seriesX = [];
          for (var l = 0; l < t.length; l++) e.seriesX.push(a);
          this.w.globals.isBarHorizontal || (e.isXNumeric = !0);
        }
        if (0 === a.length) {
          a = e.axisCharts ? [] : e.series.map(function (t, e) {
            return e + 1;
          });
          for (var h = 0; h < t.length; h++) e.seriesX.push(a);
        }
        e.labels = a, i.xaxis.convertedCatToNumeric && (e.categoryLabels = a.map(function (t) {
          return i.xaxis.labels.formatter(t);
        })), e.noLabelsProvided = !0;
      }
    }, {
      key: "parseData",
      value: function (t) {
        var e = this.w,
          i = e.config,
          a = e.globals;
        if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = !1, this.ctx.core.resetGlobals(), this.ctx.core.isMultipleY(), a.axisCharts ? (this.parseDataAxisCharts(t), this.coreUtils.getLargestSeries()) : this.parseDataNonAxisCharts(t), i.chart.stacked) {
          var s = new N(this.ctx);
          a.series = s.setNullSeriesToZeroValues(a.series);
        }
        this.coreUtils.getSeriesTotals(), a.axisCharts && (a.stackedSeriesTotals = this.coreUtils.getStackedSeriesTotals(), a.stackedSeriesTotalsByGroups = this.coreUtils.getStackedSeriesTotalsByGroups()), this.coreUtils.getPercentSeries(), a.dataFormatXNumeric || a.isXNumeric && ("numeric" !== i.xaxis.type || 0 !== i.labels.length || 0 !== i.xaxis.categories.length) || this.handleExternalLabelsData(t);
        for (var r = this.coreUtils.getCategoryLabels(a.labels), o = 0; o < r.length; o++) if (Array.isArray(r[o])) {
          a.isMultiLineX = !0;
          break;
        }
      }
    }, {
      key: "excludeCollapsedSeriesInYAxis",
      value: function () {
        var t = this,
          e = this.w;
        e.globals.ignoreYAxisIndexes = e.globals.collapsedSeries.map(function (i, a) {
          if (t.w.globals.isMultipleYAxis && !e.config.chart.stacked) return i.index;
        });
      }
    }]), t;
  }(),
  B = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "getLabel",
      value: function (t, e, i, a) {
        var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],
          r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "12px",
          o = !(arguments.length > 6 && void 0 !== arguments[6]) || arguments[6],
          n = this.w,
          l = void 0 === t[a] ? "" : t[a],
          h = l,
          c = n.globals.xLabelFormatter,
          d = n.config.xaxis.labels.formatter,
          g = !1,
          u = new T(this.ctx),
          p = l;
        o && (h = u.xLabelFormat(c, l, p, {
          i: a,
          dateFormatter: new I(this.ctx).formatDate,
          w: n
        }), void 0 !== d && (h = d(l, t[a], {
          i: a,
          dateFormatter: new I(this.ctx).formatDate,
          w: n
        })));
        var f, x;
        e.length > 0 ? (f = e[a].unit, x = null, e.forEach(function (t) {
          "month" === t.unit ? x = "year" : "day" === t.unit ? x = "month" : "hour" === t.unit ? x = "day" : "minute" === t.unit && (x = "hour");
        }), g = x === f, i = e[a].position, h = e[a].value) : "datetime" === n.config.xaxis.type && void 0 === d && (h = ""), void 0 === h && (h = ""), h = Array.isArray(h) ? h : h.toString();
        var b = new m(this.ctx),
          v = {};
        v = n.globals.rotateXLabels && o ? b.getTextRects(h, parseInt(r, 10), null, "rotate(".concat(n.config.xaxis.labels.rotate, " 0 0)"), !1) : b.getTextRects(h, parseInt(r, 10));
        var y = !n.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
        return !Array.isArray(h) && (0 === h.indexOf("NaN") || 0 === h.toLowerCase().indexOf("invalid") || h.toLowerCase().indexOf("infinity") >= 0 || s.indexOf(h) >= 0 && y) && (h = ""), {
          x: i,
          text: h,
          textRect: v,
          isBold: g
        };
      }
    }, {
      key: "checkLabelBasedOnTickamount",
      value: function (t, e, i) {
        var a = this.w,
          s = a.config.xaxis.tickAmount;
        return "dataPoints" === s && (s = Math.round(a.globals.gridWidth / 120)), s > i || t % Math.round(i / (s + 1)) == 0 || (e.text = ""), e;
      }
    }, {
      key: "checkForOverflowingLabels",
      value: function (t, e, i, a, s) {
        var r = this.w;
        if (0 === t && r.globals.skipFirstTimelinelabel && (e.text = ""), t === i - 1 && r.globals.skipLastTimelinelabel && (e.text = ""), r.config.xaxis.labels.hideOverlappingLabels && a.length > 0) {
          var o = s[s.length - 1];
          e.x < o.textRect.width / (r.globals.rotateXLabels ? Math.abs(r.config.xaxis.labels.rotate) / 12 : 1.01) + o.x && (e.text = "");
        }
        return e;
      }
    }, {
      key: "checkForReversedLabels",
      value: function (t, e) {
        var i = this.w;
        return i.config.yaxis[t] && i.config.yaxis[t].reversed && e.reverse(), e;
      }
    }, {
      key: "isYAxisHidden",
      value: function (t) {
        var e = this.w,
          i = new y(this.ctx);
        return !e.config.yaxis[t].show || !e.config.yaxis[t].showForNullSeries && i.isSeriesNull(t) && -1 === e.globals.collapsedSeriesIndices.indexOf(t);
      }
    }, {
      key: "getYAxisForeColor",
      value: function (t, e) {
        var i = this.w;
        return Array.isArray(t) && i.globals.yAxisScale[e] && this.ctx.theme.pushExtraColors(t, i.globals.yAxisScale[e].result.length, !1), t;
      }
    }, {
      key: "drawYAxisTicks",
      value: function (t, e, i, a, s, r, o) {
        var n = this.w,
          l = new m(this.ctx),
          h = n.globals.translateY;
        if (a.show && e > 0) {
          !0 === n.config.yaxis[s].opposite && (t += a.width);
          for (var c = e; c >= 0; c--) {
            var d = h + e / 10 + n.config.yaxis[s].labels.offsetY - 1;
            n.globals.isBarHorizontal && (d = r * c), "heatmap" === n.config.chart.type && (d += r / 2);
            var g = l.drawLine(t + i.offsetX - a.width + a.offsetX, d + a.offsetY, t + i.offsetX + a.offsetX, d + a.offsetY, a.color);
            o.add(g), h += r;
          }
        }
      }
    }]), t;
  }(),
  G = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "scaleSvgNode",
      value: function (t, e) {
        var i = parseFloat(t.getAttributeNS(null, "width")),
          a = parseFloat(t.getAttributeNS(null, "height"));
        t.setAttributeNS(null, "width", i * e), t.setAttributeNS(null, "height", a * e), t.setAttributeNS(null, "viewBox", "0 0 " + i + " " + a);
      }
    }, {
      key: "fixSvgStringForIe11",
      value: function (t) {
        if (!x.isIE11()) return t.replace(/&nbsp;/g, "&#160;");
        var e = 0,
          i = t.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, function (t) {
            return 2 === ++e ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : t;
          });
        return i = (i = i.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1");
      }
    }, {
      key: "getSvgString",
      value: function (t) {
        null == t && (t = 1);
        var e = this.w.globals.dom.Paper.svg();
        if (1 !== t) {
          var i = this.w.globals.dom.Paper.node.cloneNode(!0);
          this.scaleSvgNode(i, t), e = new XMLSerializer().serializeToString(i);
        }
        return this.fixSvgStringForIe11(e);
      }
    }, {
      key: "cleanup",
      value: function () {
        var t = this.w,
          e = t.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),
          i = t.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),
          a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
        Array.prototype.forEach.call(a, function (t) {
          t.setAttribute("width", 0);
        }), e && e[0] && (e[0].setAttribute("x", -500), e[0].setAttribute("x1", -500), e[0].setAttribute("x2", -500)), i && i[0] && (i[0].setAttribute("y", -100), i[0].setAttribute("y1", -100), i[0].setAttribute("y2", -100));
      }
    }, {
      key: "svgUrl",
      value: function () {
        this.cleanup();
        var t = this.getSvgString(),
          e = new Blob([t], {
            type: "image/svg+xml;charset=utf-8"
          });
        return URL.createObjectURL(e);
      }
    }, {
      key: "dataURI",
      value: function (t) {
        var e = this;
        return new Promise(function (i) {
          var a = e.w,
            s = t ? t.scale || t.width / a.globals.svgWidth : 1;
          e.cleanup();
          var r = document.createElement("canvas");
          r.width = a.globals.svgWidth * s, r.height = parseInt(a.globals.dom.elWrap.style.height, 10) * s;
          var o = "transparent" === a.config.chart.background ? "#fff" : a.config.chart.background,
            n = r.getContext("2d");
          n.fillStyle = o, n.fillRect(0, 0, r.width * s, r.height * s);
          var l = e.getSvgString(s);
          if (window.canvg && x.isIE11()) {
            var h = window.canvg.Canvg.fromString(n, l, {
              ignoreClear: !0,
              ignoreDimensions: !0
            });
            h.start();
            var c = r.msToBlob();
            h.stop(), i({
              blob: c
            });
          } else {
            var d = "data:image/svg+xml," + encodeURIComponent(l),
              g = new Image();
            g.crossOrigin = "anonymous", g.onload = function () {
              if (n.drawImage(g, 0, 0), r.msToBlob) {
                var t = r.msToBlob();
                i({
                  blob: t
                });
              } else {
                var e = r.toDataURL("image/png");
                i({
                  imgURI: e
                });
              }
            }, g.src = d;
          }
        });
      }
    }, {
      key: "exportToSVG",
      value: function () {
        this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, ".svg");
      }
    }, {
      key: "exportToPng",
      value: function () {
        var t = this;
        this.dataURI().then(function (e) {
          var i = e.imgURI,
            a = e.blob;
          a ? navigator.msSaveOrOpenBlob(a, t.w.globals.chartID + ".png") : t.triggerDownload(i, t.w.config.chart.toolbar.export.png.filename, ".png");
        });
      }
    }, {
      key: "exportToCSV",
      value: function (t) {
        var e = this,
          i = t.series,
          a = t.fileName,
          s = t.columnDelimiter,
          r = void 0 === s ? "," : s,
          o = t.lineDelimiter,
          n = void 0 === o ? "\n" : o,
          l = this.w;
        i || (i = l.config.series);
        var h,
          c,
          d = [],
          g = [],
          p = "",
          f = l.globals.series.map(function (t, e) {
            return -1 === l.globals.collapsedSeriesIndices.indexOf(e) ? t : [];
          }),
          b = function (t) {
            return "datetime" === l.config.xaxis.type && String(t).length >= 10;
          },
          v = Math.max.apply(Math, u(i.map(function (t) {
            return t.data ? t.data.length : 0;
          }))),
          m = new W(this.ctx),
          y = new B(this.ctx),
          w = function (t) {
            var i = "";
            if (l.globals.axisCharts) {
              if ("category" === l.config.xaxis.type || l.config.xaxis.convertedCatToNumeric) if (l.globals.isBarHorizontal) {
                var a = l.globals.yLabelFormatters[0],
                  s = new N(e.ctx).getActiveConfigSeriesIndex();
                i = a(l.globals.labels[t], {
                  seriesIndex: s,
                  dataPointIndex: t,
                  w: l
                });
              } else i = y.getLabel(l.globals.labels, l.globals.timescaleLabels, 0, t).text;
              "datetime" === l.config.xaxis.type && (l.config.xaxis.categories.length ? i = l.config.xaxis.categories[t] : l.config.labels.length && (i = l.config.labels[t]));
            } else i = l.config.labels[t];
            return Array.isArray(i) && (i = i.join(" ")), x.isNumber(i) ? i : i.split(r).join("");
          },
          k = function (t, e) {
            if (d.length && 0 === e && g.push(d.join(r)), t.data) {
              t.data = t.data.length && t.data || u(Array(v)).map(function () {
                return "";
              });
              for (var a = 0; a < t.data.length; a++) {
                d = [];
                var s = w(a);
                if (s || (m.isFormatXY() ? s = i[e].data[a].x : m.isFormat2DArray() && (s = i[e].data[a] ? i[e].data[a][0] : "")), 0 === e) {
                  d.push(b(s) ? l.config.chart.toolbar.export.csv.dateFormatter(s) : x.isNumber(s) ? s : s.split(r).join(""));
                  for (var o = 0; o < l.globals.series.length; o++) {
                    var n;
                    if (m.isFormatXY()) d.push(null === (n = i[o].data[a]) || void 0 === n ? void 0 : n.y);else d.push(f[o][a]);
                  }
                }
                ("candlestick" === l.config.chart.type || t.type && "candlestick" === t.type) && (d.pop(), d.push(l.globals.seriesCandleO[e][a]), d.push(l.globals.seriesCandleH[e][a]), d.push(l.globals.seriesCandleL[e][a]), d.push(l.globals.seriesCandleC[e][a])), ("boxPlot" === l.config.chart.type || t.type && "boxPlot" === t.type) && (d.pop(), d.push(l.globals.seriesCandleO[e][a]), d.push(l.globals.seriesCandleH[e][a]), d.push(l.globals.seriesCandleM[e][a]), d.push(l.globals.seriesCandleL[e][a]), d.push(l.globals.seriesCandleC[e][a])), "rangeBar" === l.config.chart.type && (d.pop(), d.push(l.globals.seriesRangeStart[e][a]), d.push(l.globals.seriesRangeEnd[e][a])), d.length && g.push(d.join(r));
              }
            }
          };
        d.push(l.config.chart.toolbar.export.csv.headerCategory), "boxPlot" === l.config.chart.type ? (d.push("minimum"), d.push("q1"), d.push("median"), d.push("q3"), d.push("maximum")) : "candlestick" === l.config.chart.type ? (d.push("open"), d.push("high"), d.push("low"), d.push("close")) : "rangeBar" === l.config.chart.type ? (d.push("minimum"), d.push("maximum")) : i.map(function (t, e) {
          var i = (t.name ? t.name : "series-".concat(e)) + "";
          l.globals.axisCharts && d.push(i.split(r).join("") ? i.split(r).join("") : "series-".concat(e));
        }), l.globals.axisCharts || (d.push(l.config.chart.toolbar.export.csv.headerValue), g.push(d.join(r))), l.globals.allSeriesHasEqualX || !l.globals.axisCharts || l.config.xaxis.categories.length || l.config.labels.length ? i.map(function (t, e) {
          l.globals.axisCharts ? k(t, e) : ((d = []).push(l.globals.labels[e].split(r).join("")), d.push(f[e]), g.push(d.join(r)));
        }) : (h = new Set(), c = {}, i.forEach(function (t, e) {
          null == t || t.data.forEach(function (t) {
            var a, s;
            if (m.isFormatXY()) a = t.x, s = t.y;else {
              if (!m.isFormat2DArray()) return;
              a = t[0], s = t[1];
            }
            c[a] || (c[a] = Array(i.length).fill("")), c[a][e] = s, h.add(a);
          });
        }), d.length && g.push(d.join(r)), Array.from(h).sort().forEach(function (t) {
          g.push([b(t) && "datetime" === l.config.xaxis.type ? l.config.chart.toolbar.export.csv.dateFormatter(t) : x.isNumber(t) ? t : t.split(r).join(""), c[t].join(r)]);
        })), p += g.join(n), this.triggerDownload("data:text/csv; charset=utf-8," + encodeURIComponent("\ufeff" + p), a || l.config.chart.toolbar.export.csv.filename, ".csv");
      }
    }, {
      key: "triggerDownload",
      value: function (t, e, i) {
        var a = document.createElement("a");
        a.href = t, a.download = (e || this.w.globals.chartID) + i, document.body.appendChild(a), a.click(), document.body.removeChild(a);
      }
    }]), t;
  }(),
  V = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.elgrid = i, this.w = e.w;
      var s = this.w;
      this.axesUtils = new B(e), this.xaxisLabels = s.globals.labels.slice(), s.globals.timescaleLabels.length > 0 && !s.globals.isBarHorizontal && (this.xaxisLabels = s.globals.timescaleLabels.slice()), s.config.xaxis.overwriteCategories && (this.xaxisLabels = s.config.xaxis.overwriteCategories), this.drawnLabels = [], this.drawnLabelsRects = [], "top" === s.config.xaxis.position ? this.offY = 0 : this.offY = s.globals.gridHeight + 1, this.offY = this.offY + s.config.xaxis.axisBorder.offsetY, this.isCategoryBarHorizontal = "bar" === s.config.chart.type && s.config.plotOptions.bar.horizontal, this.xaxisFontSize = s.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = s.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = s.config.xaxis.labels.style.colors, this.xaxisBorderWidth = s.config.xaxis.axisBorder.width, this.isCategoryBarHorizontal && (this.xaxisBorderWidth = s.config.yaxis[0].axisBorder.width.toString()), this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = s.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10), this.xaxisBorderHeight = s.config.xaxis.axisBorder.height, this.yaxis = s.config.yaxis[0];
    }
    return r(t, [{
      key: "drawXaxis",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = e.group({
            class: "apexcharts-xaxis",
            transform: "translate(".concat(t.config.xaxis.offsetX, ", ").concat(t.config.xaxis.offsetY, ")")
          }),
          a = e.group({
            class: "apexcharts-xaxis-texts-g",
            transform: "translate(".concat(t.globals.translateXAxisX, ", ").concat(t.globals.translateXAxisY, ")")
          });
        i.add(a);
        for (var s = [], r = 0; r < this.xaxisLabels.length; r++) s.push(this.xaxisLabels[r]);
        if (this.drawXAxisLabelAndGroup(!0, e, a, s, t.globals.isXNumeric, function (t, e) {
          return e;
        }), t.globals.hasXaxisGroups) {
          var o = t.globals.groups;
          s = [];
          for (var n = 0; n < o.length; n++) s.push(o[n].title);
          var l = {};
          t.config.xaxis.group.style && (l.xaxisFontSize = t.config.xaxis.group.style.fontSize, l.xaxisFontFamily = t.config.xaxis.group.style.fontFamily, l.xaxisForeColors = t.config.xaxis.group.style.colors, l.fontWeight = t.config.xaxis.group.style.fontWeight, l.cssClass = t.config.xaxis.group.style.cssClass), this.drawXAxisLabelAndGroup(!1, e, a, s, !1, function (t, e) {
            return o[t].cols * e;
          }, l);
        }
        if (void 0 !== t.config.xaxis.title.text) {
          var h = e.group({
              class: "apexcharts-xaxis-title"
            }),
            c = e.drawText({
              x: t.globals.gridWidth / 2 + t.config.xaxis.title.offsetX,
              y: this.offY + parseFloat(this.xaxisFontSize) + ("bottom" === t.config.xaxis.position ? t.globals.xAxisLabelsHeight : -t.globals.xAxisLabelsHeight - 10) + t.config.xaxis.title.offsetY,
              text: t.config.xaxis.title.text,
              textAnchor: "middle",
              fontSize: t.config.xaxis.title.style.fontSize,
              fontFamily: t.config.xaxis.title.style.fontFamily,
              fontWeight: t.config.xaxis.title.style.fontWeight,
              foreColor: t.config.xaxis.title.style.color,
              cssClass: "apexcharts-xaxis-title-text " + t.config.xaxis.title.style.cssClass
            });
          h.add(c), i.add(h);
        }
        if (t.config.xaxis.axisBorder.show) {
          var d = t.globals.barPadForNumericAxis,
            g = e.drawLine(t.globals.padHorizontal + t.config.xaxis.axisBorder.offsetX - d, this.offY, this.xaxisBorderWidth + d, this.offY, t.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
          this.elgrid && this.elgrid.elGridBorders && t.config.grid.show ? this.elgrid.elGridBorders.add(g) : i.add(g);
        }
        return i;
      }
    }, {
      key: "drawXAxisLabelAndGroup",
      value: function (t, e, i, a, s, r) {
        var o,
          n = this,
          l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : {},
          h = [],
          c = [],
          d = this.w,
          g = l.xaxisFontSize || this.xaxisFontSize,
          u = l.xaxisFontFamily || this.xaxisFontFamily,
          p = l.xaxisForeColors || this.xaxisForeColors,
          f = l.fontWeight || d.config.xaxis.labels.style.fontWeight,
          x = l.cssClass || d.config.xaxis.labels.style.cssClass,
          b = d.globals.padHorizontal,
          v = a.length,
          m = "category" === d.config.xaxis.type ? d.globals.dataPoints : v;
        if (0 === m && v > m && (m = v), s) {
          var y = m > 1 ? m - 1 : m;
          o = d.globals.gridWidth / Math.min(y, v - 1), b = b + r(0, o) / 2 + d.config.xaxis.labels.offsetX;
        } else o = d.globals.gridWidth / m, b = b + r(0, o) + d.config.xaxis.labels.offsetX;
        for (var w = function (s) {
            var l = b - r(s, o) / 2 + d.config.xaxis.labels.offsetX;
            0 === s && 1 === v && o / 2 === b && 1 === m && (l = d.globals.gridWidth / 2);
            var y = n.axesUtils.getLabel(a, d.globals.timescaleLabels, l, s, h, g, t),
              w = 28;
            d.globals.rotateXLabels && t && (w = 22), d.config.xaxis.title.text && "top" === d.config.xaxis.position && (w += parseFloat(d.config.xaxis.title.style.fontSize) + 2), t || (w = w + parseFloat(g) + (d.globals.xAxisLabelsHeight - d.globals.xAxisGroupLabelsHeight) + (d.globals.rotateXLabels ? 10 : 0)), y = void 0 !== d.config.xaxis.tickAmount && "dataPoints" !== d.config.xaxis.tickAmount && "datetime" !== d.config.xaxis.type ? n.axesUtils.checkLabelBasedOnTickamount(s, y, v) : n.axesUtils.checkForOverflowingLabels(s, y, v, h, c);
            if (d.config.xaxis.labels.show) {
              var k = e.drawText({
                x: y.x,
                y: n.offY + d.config.xaxis.labels.offsetY + w - ("top" === d.config.xaxis.position ? d.globals.xAxisHeight + d.config.xaxis.axisTicks.height - 2 : 0),
                text: y.text,
                textAnchor: "middle",
                fontWeight: y.isBold ? 600 : f,
                fontSize: g,
                fontFamily: u,
                foreColor: Array.isArray(p) ? t && d.config.xaxis.convertedCatToNumeric ? p[d.globals.minX + s - 1] : p[s] : p,
                isPlainText: !1,
                cssClass: (t ? "apexcharts-xaxis-label " : "apexcharts-xaxis-group-label ") + x
              });
              if (i.add(k), k.on("click", function (t) {
                if ("function" == typeof d.config.chart.events.xAxisLabelClick) {
                  var e = Object.assign({}, d, {
                    labelIndex: s
                  });
                  d.config.chart.events.xAxisLabelClick(t, n.ctx, e);
                }
              }), t) {
                var A = document.createElementNS(d.globals.SVGNS, "title");
                A.textContent = Array.isArray(y.text) ? y.text.join(" ") : y.text, k.node.appendChild(A), "" !== y.text && (h.push(y.text), c.push(y));
              }
            }
            s < v - 1 && (b += r(s + 1, o));
          }, k = 0; k <= v - 1; k++) w(k);
      }
    }, {
      key: "drawXaxisInversed",
      value: function (t) {
        var e,
          i,
          a = this,
          s = this.w,
          r = new m(this.ctx),
          o = s.config.yaxis[0].opposite ? s.globals.translateYAxisX[t] : 0,
          n = r.group({
            class: "apexcharts-yaxis apexcharts-xaxis-inversed",
            rel: t
          }),
          l = r.group({
            class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
            transform: "translate(" + o + ", 0)"
          });
        n.add(l);
        var h = [];
        if (s.config.yaxis[t].show) for (var c = 0; c < this.xaxisLabels.length; c++) h.push(this.xaxisLabels[c]);
        e = s.globals.gridHeight / h.length, i = -e / 2.2;
        var d = s.globals.yLabelFormatters[0],
          g = s.config.yaxis[0].labels;
        if (g.show) for (var u = function (o) {
            var n = void 0 === h[o] ? "" : h[o];
            n = d(n, {
              seriesIndex: t,
              dataPointIndex: o,
              w: s
            });
            var c = a.axesUtils.getYAxisForeColor(g.style.colors, t),
              u = 0;
            Array.isArray(n) && (u = n.length / 2 * parseInt(g.style.fontSize, 10));
            var p = g.offsetX - 15,
              f = "end";
            a.yaxis.opposite && (f = "start"), "left" === s.config.yaxis[0].labels.align ? (p = g.offsetX, f = "start") : "center" === s.config.yaxis[0].labels.align ? (p = g.offsetX, f = "middle") : "right" === s.config.yaxis[0].labels.align && (f = "end");
            var x = r.drawText({
              x: p,
              y: i + e + g.offsetY - u,
              text: n,
              textAnchor: f,
              foreColor: Array.isArray(c) ? c[o] : c,
              fontSize: g.style.fontSize,
              fontFamily: g.style.fontFamily,
              fontWeight: g.style.fontWeight,
              isPlainText: !1,
              cssClass: "apexcharts-yaxis-label " + g.style.cssClass,
              maxWidth: g.maxWidth
            });
            l.add(x), x.on("click", function (t) {
              if ("function" == typeof s.config.chart.events.xAxisLabelClick) {
                var e = Object.assign({}, s, {
                  labelIndex: o
                });
                s.config.chart.events.xAxisLabelClick(t, a.ctx, e);
              }
            });
            var b = document.createElementNS(s.globals.SVGNS, "title");
            if (b.textContent = Array.isArray(n) ? n.join(" ") : n, x.node.appendChild(b), 0 !== s.config.yaxis[t].labels.rotate) {
              var v = r.rotateAroundCenter(x.node);
              x.node.setAttribute("transform", "rotate(".concat(s.config.yaxis[t].labels.rotate, " 0 ").concat(v.y, ")"));
            }
            i += e;
          }, p = 0; p <= h.length - 1; p++) u(p);
        if (void 0 !== s.config.yaxis[0].title.text) {
          var f = r.group({
              class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
              transform: "translate(" + o + ", 0)"
            }),
            x = r.drawText({
              x: s.config.yaxis[0].title.offsetX,
              y: s.globals.gridHeight / 2 + s.config.yaxis[0].title.offsetY,
              text: s.config.yaxis[0].title.text,
              textAnchor: "middle",
              foreColor: s.config.yaxis[0].title.style.color,
              fontSize: s.config.yaxis[0].title.style.fontSize,
              fontWeight: s.config.yaxis[0].title.style.fontWeight,
              fontFamily: s.config.yaxis[0].title.style.fontFamily,
              cssClass: "apexcharts-yaxis-title-text " + s.config.yaxis[0].title.style.cssClass
            });
          f.add(x), n.add(f);
        }
        var b = 0;
        this.isCategoryBarHorizontal && s.config.yaxis[0].opposite && (b = s.globals.gridWidth);
        var v = s.config.xaxis.axisBorder;
        if (v.show) {
          var y = r.drawLine(s.globals.padHorizontal + v.offsetX + b, 1 + v.offsetY, s.globals.padHorizontal + v.offsetX + b, s.globals.gridHeight + v.offsetY, v.color, 0);
          this.elgrid && this.elgrid.elGridBorders && s.config.grid.show ? this.elgrid.elGridBorders.add(y) : n.add(y);
        }
        return s.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(b, h.length, s.config.yaxis[0].axisBorder, s.config.yaxis[0].axisTicks, 0, e, n), n;
      }
    }, {
      key: "drawXaxisTicks",
      value: function (t, e, i) {
        var a = this.w,
          s = t;
        if (!(t < 0 || t - 2 > a.globals.gridWidth)) {
          var r = this.offY + a.config.xaxis.axisTicks.offsetY;
          if (e = e + r + a.config.xaxis.axisTicks.height, "top" === a.config.xaxis.position && (e = r - a.config.xaxis.axisTicks.height), a.config.xaxis.axisTicks.show) {
            var o = new m(this.ctx).drawLine(t + a.config.xaxis.axisTicks.offsetX, r + a.config.xaxis.offsetY, s + a.config.xaxis.axisTicks.offsetX, e + a.config.xaxis.offsetY, a.config.xaxis.axisTicks.color);
            i.add(o), o.node.classList.add("apexcharts-xaxis-tick");
          }
        }
      }
    }, {
      key: "getXAxisTicksPositions",
      value: function () {
        var t = this.w,
          e = [],
          i = this.xaxisLabels.length,
          a = t.globals.padHorizontal;
        if (t.globals.timescaleLabels.length > 0) for (var s = 0; s < i; s++) a = this.xaxisLabels[s].position, e.push(a);else for (var r = i, o = 0; o < r; o++) {
          var n = r;
          t.globals.isXNumeric && "bar" !== t.config.chart.type && (n -= 1), a += t.globals.gridWidth / n, e.push(a);
        }
        return e;
      }
    }, {
      key: "xAxisLabelCorrections",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),
          a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"),
          s = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),
          r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
        if (t.globals.rotateXLabels || t.config.xaxis.labels.rotateAlways) for (var o = 0; o < a.length; o++) {
          var n = e.rotateAroundCenter(a[o]);
          n.y = n.y - 1, n.x = n.x + 1, a[o].setAttribute("transform", "rotate(".concat(t.config.xaxis.labels.rotate, " ").concat(n.x, " ").concat(n.y, ")")), a[o].setAttribute("text-anchor", "end");
          i.setAttribute("transform", "translate(0, ".concat(-10, ")"));
          var l = a[o].childNodes;
          t.config.xaxis.labels.trim && Array.prototype.forEach.call(l, function (i) {
            e.placeTextWithEllipsis(i, i.textContent, t.globals.xAxisLabelsHeight - ("bottom" === t.config.legend.position ? 20 : 10));
          });
        } else !function () {
          for (var i = t.globals.gridWidth / (t.globals.labels.length + 1), s = 0; s < a.length; s++) {
            var r = a[s].childNodes;
            t.config.xaxis.labels.trim && "datetime" !== t.config.xaxis.type && Array.prototype.forEach.call(r, function (t) {
              e.placeTextWithEllipsis(t, t.textContent, i);
            });
          }
        }();
        if (s.length > 0) {
          var h = s[s.length - 1].getBBox(),
            c = s[0].getBBox();
          h.x < -20 && s[s.length - 1].parentNode.removeChild(s[s.length - 1]), c.x + c.width > t.globals.gridWidth && !t.globals.isBarHorizontal && s[0].parentNode.removeChild(s[0]);
          for (var d = 0; d < r.length; d++) e.placeTextWithEllipsis(r[d], r[d].textContent, t.config.yaxis[0].labels.maxWidth - (t.config.yaxis[0].title.text ? 2 * parseFloat(t.config.yaxis[0].title.style.fontSize) : 0) - 15);
        }
      }
    }]), t;
  }(),
  j = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
      var i = this.w;
      this.xaxisLabels = i.globals.labels.slice(), this.axesUtils = new B(e), this.isRangeBar = i.globals.seriesRange.length && i.globals.isBarHorizontal, i.globals.timescaleLabels.length > 0 && (this.xaxisLabels = i.globals.timescaleLabels.slice());
    }
    return r(t, [{
      key: "drawGridArea",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
          e = this.w,
          i = new m(this.ctx);
        null === t && (t = i.group({
          class: "apexcharts-grid"
        }));
        var a = i.drawLine(e.globals.padHorizontal, 1, e.globals.padHorizontal, e.globals.gridHeight, "transparent"),
          s = i.drawLine(e.globals.padHorizontal, e.globals.gridHeight, e.globals.gridWidth, e.globals.gridHeight, "transparent");
        return t.add(s), t.add(a), t;
      }
    }, {
      key: "drawGrid",
      value: function () {
        var t = null;
        return this.w.globals.axisCharts && (t = this.renderGrid(), this.drawGridArea(t.el)), t;
      }
    }, {
      key: "createGridMask",
      value: function () {
        var t = this.w,
          e = t.globals,
          i = new m(this.ctx),
          a = Array.isArray(t.config.stroke.width) ? 0 : t.config.stroke.width;
        if (Array.isArray(t.config.stroke.width)) {
          var s = 0;
          t.config.stroke.width.forEach(function (t) {
            s = Math.max(s, t);
          }), a = s;
        }
        e.dom.elGridRectMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(e.cuid)), e.dom.elGridRectMarkerMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(e.cuid)), e.dom.elForecastMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elForecastMask.setAttribute("id", "forecastMask".concat(e.cuid)), e.dom.elNonForecastMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(e.cuid));
        var r = t.config.chart.type,
          o = 0,
          n = 0;
        ("bar" === r || "rangeBar" === r || "candlestick" === r || "boxPlot" === r || t.globals.comboBarCount > 0) && t.globals.isXNumeric && !t.globals.isBarHorizontal && (o = t.config.grid.padding.left, n = t.config.grid.padding.right, e.barPadForNumericAxis > o && (o = e.barPadForNumericAxis, n = e.barPadForNumericAxis)), e.dom.elGridRect = i.drawRect(-a - o - 2, 2 * -a - 2, e.gridWidth + a + n + o + 4, e.gridHeight + 4 * a + 4, 0, "#fff");
        var l = t.globals.markers.largestSize + 1;
        e.dom.elGridRectMarker = i.drawRect(2 * -l, 2 * -l, e.gridWidth + 4 * l, e.gridHeight + 4 * l, 0, "#fff"), e.dom.elGridRectMask.appendChild(e.dom.elGridRect.node), e.dom.elGridRectMarkerMask.appendChild(e.dom.elGridRectMarker.node);
        var h = e.dom.baseEl.querySelector("defs");
        h.appendChild(e.dom.elGridRectMask), h.appendChild(e.dom.elForecastMask), h.appendChild(e.dom.elNonForecastMask), h.appendChild(e.dom.elGridRectMarkerMask);
      }
    }, {
      key: "_drawGridLines",
      value: function (t) {
        var e = t.i,
          i = t.x1,
          a = t.y1,
          s = t.x2,
          r = t.y2,
          o = t.xCount,
          n = t.parent,
          l = this.w;
        if (!(0 === e && l.globals.skipFirstTimelinelabel || e === o - 1 && l.globals.skipLastTimelinelabel && !l.config.xaxis.labels.formatter || "radar" === l.config.chart.type)) {
          l.config.grid.xaxis.lines.show && this._drawGridLine({
            i: e,
            x1: i,
            y1: a,
            x2: s,
            y2: r,
            xCount: o,
            parent: n
          });
          var h = 0;
          if (l.globals.hasXaxisGroups && "between" === l.config.xaxis.tickPlacement) {
            var c = l.globals.groups;
            if (c) {
              for (var d = 0, g = 0; d < e && g < c.length; g++) d += c[g].cols;
              d === e && (h = .6 * l.globals.xAxisLabelsHeight);
            }
          }
          new V(this.ctx).drawXaxisTicks(i, h, l.globals.dom.elGraphical);
        }
      }
    }, {
      key: "_drawGridLine",
      value: function (t) {
        var e = t.i,
          i = t.x1,
          a = t.y1,
          s = t.x2,
          r = t.y2,
          o = t.xCount,
          n = t.parent,
          l = this.w,
          h = !1,
          c = n.node.classList.contains("apexcharts-gridlines-horizontal"),
          d = l.config.grid.strokeDashArray,
          g = l.globals.barPadForNumericAxis;
        (0 === a && 0 === r || 0 === i && 0 === s) && (h = !0), a === l.globals.gridHeight && r === l.globals.gridHeight && (h = !0), !l.globals.isBarHorizontal || 0 !== e && e !== o - 1 || (h = !0);
        var u = new m(this).drawLine(i - (c ? g : 0), a, s + (c ? g : 0), r, l.config.grid.borderColor, d);
        u.node.classList.add("apexcharts-gridline"), h && l.config.grid.show ? this.elGridBorders.add(u) : n.add(u);
      }
    }, {
      key: "_drawGridBandRect",
      value: function (t) {
        var e = t.c,
          i = t.x1,
          a = t.y1,
          s = t.x2,
          r = t.y2,
          o = t.type,
          n = this.w,
          l = new m(this.ctx),
          h = n.globals.barPadForNumericAxis;
        if ("column" !== o || "datetime" !== n.config.xaxis.type) {
          var c = n.config.grid[o].colors[e],
            d = l.drawRect(i - ("row" === o ? h : 0), a, s + ("row" === o ? 2 * h : 0), r, 0, c, n.config.grid[o].opacity);
          this.elg.add(d), d.attr("clip-path", "url(#gridRectMask".concat(n.globals.cuid, ")")), d.node.classList.add("apexcharts-grid-".concat(o));
        }
      }
    }, {
      key: "_drawXYLines",
      value: function (t) {
        var e = this,
          i = t.xCount,
          a = t.tickAmount,
          s = this.w;
        if (s.config.grid.xaxis.lines.show || s.config.xaxis.axisTicks.show) {
          var r,
            o = s.globals.padHorizontal,
            n = s.globals.gridHeight;
          s.globals.timescaleLabels.length ? function (t) {
            for (var a = t.xC, s = t.x1, r = t.y1, o = t.x2, n = t.y2, l = 0; l < a; l++) s = e.xaxisLabels[l].position, o = e.xaxisLabels[l].position, e._drawGridLines({
              i: l,
              x1: s,
              y1: r,
              x2: o,
              y2: n,
              xCount: i,
              parent: e.elgridLinesV
            });
          }({
            xC: i,
            x1: o,
            y1: 0,
            x2: r,
            y2: n
          }) : (s.globals.isXNumeric && (i = s.globals.xAxisScale.result.length), function (t) {
            for (var a = t.xC, r = t.x1, o = t.y1, n = t.x2, l = t.y2, h = 0; h < a + (s.globals.isXNumeric ? 0 : 1); h++) 0 === h && 1 === a && 1 === s.globals.dataPoints && (n = r = s.globals.gridWidth / 2), e._drawGridLines({
              i: h,
              x1: r,
              y1: o,
              x2: n,
              y2: l,
              xCount: i,
              parent: e.elgridLinesV
            }), n = r += s.globals.gridWidth / (s.globals.isXNumeric ? a - 1 : a);
          }({
            xC: i,
            x1: o,
            y1: 0,
            x2: r,
            y2: n
          }));
        }
        if (s.config.grid.yaxis.lines.show) {
          var l = 0,
            h = 0,
            c = s.globals.gridWidth,
            d = a + 1;
          this.isRangeBar && (d = s.globals.labels.length);
          for (var g = 0; g < d + (this.isRangeBar ? 1 : 0); g++) this._drawGridLine({
            i: g,
            xCount: d + (this.isRangeBar ? 1 : 0),
            x1: 0,
            y1: l,
            x2: c,
            y2: h,
            parent: this.elgridLinesH
          }), h = l += s.globals.gridHeight / (this.isRangeBar ? d : a);
        }
      }
    }, {
      key: "_drawInvertedXYLines",
      value: function (t) {
        var e = t.xCount,
          i = this.w;
        if (i.config.grid.xaxis.lines.show || i.config.xaxis.axisTicks.show) for (var a, s = i.globals.padHorizontal, r = i.globals.gridHeight, o = 0; o < e + 1; o++) {
          i.config.grid.xaxis.lines.show && this._drawGridLine({
            i: o,
            xCount: e + 1,
            x1: s,
            y1: 0,
            x2: a,
            y2: r,
            parent: this.elgridLinesV
          }), new V(this.ctx).drawXaxisTicks(s, 0, i.globals.dom.elGraphical), a = s = s + i.globals.gridWidth / e + .3;
        }
        if (i.config.grid.yaxis.lines.show) for (var n = 0, l = 0, h = i.globals.gridWidth, c = 0; c < i.globals.dataPoints + 1; c++) this._drawGridLine({
          i: c,
          xCount: i.globals.dataPoints + 1,
          x1: 0,
          y1: n,
          x2: h,
          y2: l,
          parent: this.elgridLinesH
        }), l = n += i.globals.gridHeight / i.globals.dataPoints;
      }
    }, {
      key: "renderGrid",
      value: function () {
        var t = this.w,
          e = new m(this.ctx);
        this.elg = e.group({
          class: "apexcharts-grid"
        }), this.elgridLinesH = e.group({
          class: "apexcharts-gridlines-horizontal"
        }), this.elgridLinesV = e.group({
          class: "apexcharts-gridlines-vertical"
        }), this.elGridBorders = e.group({
          class: "apexcharts-grid-borders"
        }), this.elg.add(this.elgridLinesH), this.elg.add(this.elgridLinesV), t.config.grid.show || (this.elgridLinesV.hide(), this.elgridLinesH.hide(), this.elGridBorders.hide());
        for (var i, a = t.globals.yAxisScale.length ? t.globals.yAxisScale[0].result.length - 1 : 5, s = 0; s < t.globals.series.length && (void 0 !== t.globals.yAxisScale[s] && (a = t.globals.yAxisScale[s].result.length - 1), !(a > 2)); s++);
        if (!t.globals.isBarHorizontal || this.isRangeBar) {
          var r, o, n;
          if (i = this.xaxisLabels.length, this.isRangeBar) i--, a = t.globals.labels.length, t.config.xaxis.tickAmount && t.config.xaxis.labels.formatter && (i = t.config.xaxis.tickAmount), (null === (r = t.globals.yAxisScale) || void 0 === r || null === (o = r[0]) || void 0 === o || null === (n = o.result) || void 0 === n ? void 0 : n.length) > 0 && "datetime" !== t.config.xaxis.type && (i = t.globals.yAxisScale[0].result.length - 1);
          this._drawXYLines({
            xCount: i,
            tickAmount: a
          });
        } else i = a, a = t.globals.xTickAmount, this._drawInvertedXYLines({
          xCount: i,
          tickAmount: a
        });
        return this.drawGridBands(i, a), {
          el: this.elg,
          elGridBorders: this.elGridBorders,
          xAxisTickWidth: t.globals.gridWidth / i
        };
      }
    }, {
      key: "drawGridBands",
      value: function (t, e) {
        var i = this.w;
        if (void 0 !== i.config.grid.row.colors && i.config.grid.row.colors.length > 0) for (var a = 0, s = i.globals.gridHeight / e, r = i.globals.gridWidth, o = 0, n = 0; o < e; o++, n++) n >= i.config.grid.row.colors.length && (n = 0), this._drawGridBandRect({
          c: n,
          x1: 0,
          y1: a,
          x2: r,
          y2: s,
          type: "row"
        }), a += i.globals.gridHeight / e;
        if (void 0 !== i.config.grid.column.colors && i.config.grid.column.colors.length > 0) for (var l = i.globals.isBarHorizontal || "on" !== i.config.xaxis.tickPlacement || "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric ? t : t - 1, h = i.globals.padHorizontal, c = i.globals.padHorizontal + i.globals.gridWidth / l, d = i.globals.gridHeight, g = 0, u = 0; g < t; g++, u++) u >= i.config.grid.column.colors.length && (u = 0), this._drawGridBandRect({
          c: u,
          x1: h,
          y1: 0,
          x2: c,
          y2: d,
          type: "column"
        }), h += i.globals.gridWidth / l;
      }
    }]), t;
  }(),
  _ = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "niceScale",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 5,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
          s = arguments.length > 4 ? arguments[4] : void 0,
          r = this.w,
          o = Math.abs(e - t);
        if ("dataPoints" === (i = this._adjustTicksForSmallRange(i, a, o)) && (i = r.globals.dataPoints - 1), t === Number.MIN_VALUE && 0 === e || !x.isNumber(t) && !x.isNumber(e) || t === Number.MIN_VALUE && e === -Number.MAX_VALUE) return t = 0, e = i, this.linearScale(t, e, i, a, r.config.yaxis[a].stepSize);
        t > e ? (console.warn("axis.min cannot be greater than axis.max"), e = t + .1) : t === e && (t = 0 === t ? 0 : t - .5, e = 0 === e ? 2 : e + .5);
        var n = [];
        o < 1 && s && ("candlestick" === r.config.chart.type || "candlestick" === r.config.series[a].type || "boxPlot" === r.config.chart.type || "boxPlot" === r.config.series[a].type || r.globals.isRangeData) && (e *= 1.01);
        var l = i + 1;
        l < 2 ? l = 2 : l > 2 && (l -= 2);
        var h = o / l,
          c = Math.floor(x.log10(h)),
          d = Math.pow(10, c),
          g = Math.round(h / d);
        g < 1 && (g = 1);
        var u = g * d;
        r.config.yaxis[a].stepSize && (u = r.config.yaxis[a].stepSize), r.globals.isBarHorizontal && r.config.xaxis.stepSize && "datetime" !== r.config.xaxis.type && (u = r.config.xaxis.stepSize);
        var p = u * Math.floor(t / u),
          f = u * Math.ceil(e / u),
          b = p;
        if (s && o > 2) {
          for (; n.push(x.stripNumber(b, 7)), !((b += u) > f););
          return {
            result: n,
            niceMin: n[0],
            niceMax: n[n.length - 1]
          };
        }
        var v = t;
        (n = []).push(x.stripNumber(v, 7));
        for (var m = Math.abs(e - t) / i, y = 0; y <= i; y++) v += m, n.push(v);
        return n[n.length - 2] >= e && n.pop(), {
          result: n,
          niceMin: n[0],
          niceMax: n[n.length - 1]
        };
      }
    }, {
      key: "linearScale",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 5,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
          s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0,
          r = Math.abs(e - t);
        "dataPoints" === (i = this._adjustTicksForSmallRange(i, a, r)) && (i = this.w.globals.dataPoints - 1), s || (s = r / i), i === Number.MAX_VALUE && (i = 5, s = 1);
        for (var o = [], n = t; i >= 0;) o.push(n), n += s, i -= 1;
        return {
          result: o,
          niceMin: o[0],
          niceMax: o[o.length - 1]
        };
      }
    }, {
      key: "logarithmicScaleNice",
      value: function (t, e, i) {
        e <= 0 && (e = Math.max(t, i)), t <= 0 && (t = Math.min(e, i));
        for (var a = [], s = Math.ceil(Math.log(e) / Math.log(i) + 1), r = Math.floor(Math.log(t) / Math.log(i)); r < s; r++) a.push(Math.pow(i, r));
        return {
          result: a,
          niceMin: a[0],
          niceMax: a[a.length - 1]
        };
      }
    }, {
      key: "logarithmicScale",
      value: function (t, e, i) {
        e <= 0 && (e = Math.max(t, i)), t <= 0 && (t = Math.min(e, i));
        for (var a = [], s = Math.log(e) / Math.log(i), r = Math.log(t) / Math.log(i), o = s - r, n = Math.round(o), l = o / n, h = 0, c = r; h < n; h++, c += l) a.push(Math.pow(i, c));
        return a.push(Math.pow(i, s)), {
          result: a,
          niceMin: t,
          niceMax: e
        };
      }
    }, {
      key: "_adjustTicksForSmallRange",
      value: function (t, e, i) {
        var a = t;
        if (void 0 !== e && this.w.config.yaxis[e].labels.formatter && void 0 === this.w.config.yaxis[e].tickAmount) {
          var s = Number(this.w.config.yaxis[e].labels.formatter(1));
          x.isNumber(s) && 0 === this.w.globals.yValueDecimal && (a = Math.ceil(i));
        }
        return a < t ? a : t;
      }
    }, {
      key: "setYScaleForIndex",
      value: function (t, e, i) {
        var a = this.w.globals,
          s = this.w.config,
          r = a.isBarHorizontal ? s.xaxis : s.yaxis[t];
        void 0 === a.yAxisScale[t] && (a.yAxisScale[t] = []);
        var o = Math.abs(i - e);
        if (r.logarithmic && o <= 5 && (a.invalidLogScale = !0), r.logarithmic && o > 5) a.allSeriesCollapsed = !1, a.yAxisScale[t] = this.logarithmicScale(e, i, r.logBase), a.yAxisScale[t] = r.forceNiceScale ? this.logarithmicScaleNice(e, i, r.logBase) : this.logarithmicScale(e, i, r.logBase);else if (i !== -Number.MAX_VALUE && x.isNumber(i)) {
          if (a.allSeriesCollapsed = !1, void 0 === r.min && void 0 === r.max || r.forceNiceScale) {
            var n = void 0 === s.yaxis[t].max && void 0 === s.yaxis[t].min || s.yaxis[t].forceNiceScale;
            a.yAxisScale[t] = this.niceScale(e, i, r.tickAmount ? r.tickAmount : o < 5 && o > 1 ? o + 1 : 5, t, n);
          } else a.yAxisScale[t] = this.linearScale(e, i, r.tickAmount, t, s.yaxis[t].stepSize);
        } else a.yAxisScale[t] = this.linearScale(0, 5, 5, t, s.yaxis[t].stepSize);
      }
    }, {
      key: "setXScale",
      value: function (t, e) {
        var i = this.w,
          a = i.globals,
          s = Math.abs(e - t);
        return e !== -Number.MAX_VALUE && x.isNumber(e) ? a.xAxisScale = this.linearScale(t, e, i.config.xaxis.tickAmount ? i.config.xaxis.tickAmount : s < 5 && s > 1 ? s + 1 : 5, 0, i.config.xaxis.stepSize) : a.xAxisScale = this.linearScale(0, 5, 5), a.xAxisScale;
      }
    }, {
      key: "setMultipleYScales",
      value: function () {
        var t = this,
          e = this.w.globals,
          i = this.w.config,
          a = e.minYArr.concat([]),
          s = e.maxYArr.concat([]),
          r = [];
        i.yaxis.forEach(function (e, o) {
          var n = o;
          i.series.forEach(function (t, i) {
            t.name === e.seriesName && (n = i, o !== i ? r.push({
              index: i,
              similarIndex: o,
              alreadyExists: !0
            }) : r.push({
              index: i
            }));
          });
          var l = a[n],
            h = s[n];
          t.setYScaleForIndex(o, l, h);
        }), this.sameScaleInMultipleAxes(a, s, r);
      }
    }, {
      key: "sameScaleInMultipleAxes",
      value: function (t, e, i) {
        var a = this,
          s = this.w.config,
          r = this.w.globals,
          o = [];
        i.forEach(function (t) {
          t.alreadyExists && (void 0 === o[t.index] && (o[t.index] = []), o[t.index].push(t.index), o[t.index].push(t.similarIndex));
        }), r.yAxisSameScaleIndices = o, o.forEach(function (t, e) {
          o.forEach(function (i, a) {
            var s, r;
            e !== a && (s = t, r = i, s.filter(function (t) {
              return -1 !== r.indexOf(t);
            })).length > 0 && (o[e] = o[e].concat(o[a]));
          });
        });
        var n = o.map(function (t) {
          return t.filter(function (e, i) {
            return t.indexOf(e) === i;
          });
        }).map(function (t) {
          return t.sort();
        });
        o = o.filter(function (t) {
          return !!t;
        });
        var l = n.slice(),
          h = l.map(function (t) {
            return JSON.stringify(t);
          });
        l = l.filter(function (t, e) {
          return h.indexOf(JSON.stringify(t)) === e;
        });
        var c = [],
          d = [];
        t.forEach(function (t, i) {
          l.forEach(function (a, s) {
            a.indexOf(i) > -1 && (void 0 === c[s] && (c[s] = [], d[s] = []), c[s].push({
              key: i,
              value: t
            }), d[s].push({
              key: i,
              value: e[i]
            }));
          });
        });
        var g = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, Number.MIN_VALUE),
          u = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
        c.forEach(function (t, e) {
          t.forEach(function (t, i) {
            g[e] = Math.min(t.value, g[e]);
          });
        }), d.forEach(function (t, e) {
          t.forEach(function (t, i) {
            u[e] = Math.max(t.value, u[e]);
          });
        }), t.forEach(function (t, e) {
          d.forEach(function (t, i) {
            var o = g[i],
              n = u[i];
            s.chart.stacked && (n = 0, t.forEach(function (t, e) {
              t.value !== -Number.MAX_VALUE && (n += t.value), o !== Number.MIN_VALUE && (o += c[i][e].value);
            })), t.forEach(function (i, l) {
              t[l].key === e && (void 0 !== s.yaxis[e].min && (o = "function" == typeof s.yaxis[e].min ? s.yaxis[e].min(r.minY) : s.yaxis[e].min), void 0 !== s.yaxis[e].max && (n = "function" == typeof s.yaxis[e].max ? s.yaxis[e].max(r.maxY) : s.yaxis[e].max), a.setYScaleForIndex(e, o, n));
            });
          });
        });
      }
    }, {
      key: "autoScaleY",
      value: function (t, e, i) {
        t || (t = this);
        var a = t.w;
        if (a.globals.isMultipleYAxis || a.globals.collapsedSeries.length) return console.warn("autoScaleYaxis not supported in a multi-yaxis chart."), e;
        var s = a.globals.seriesX[0],
          r = a.config.chart.stacked;
        return e.forEach(function (t, o) {
          for (var n = 0, l = 0; l < s.length; l++) if (s[l] >= i.xaxis.min) {
            n = l;
            break;
          }
          var h,
            c,
            d = a.globals.minYArr[o],
            g = a.globals.maxYArr[o],
            u = a.globals.stackedSeriesTotals;
          a.globals.series.forEach(function (o, l) {
            var p = o[n];
            r ? (p = u[n], h = c = p, u.forEach(function (t, e) {
              s[e] <= i.xaxis.max && s[e] >= i.xaxis.min && (t > c && null !== t && (c = t), o[e] < h && null !== o[e] && (h = o[e]));
            })) : (h = c = p, o.forEach(function (t, e) {
              if (s[e] <= i.xaxis.max && s[e] >= i.xaxis.min) {
                var r = t,
                  o = t;
                a.globals.series.forEach(function (i, a) {
                  null !== t && (r = Math.min(i[e], r), o = Math.max(i[e], o));
                }), o > c && null !== o && (c = o), r < h && null !== r && (h = r);
              }
            })), void 0 === h && void 0 === c && (h = d, c = g), c *= c < 0 ? .9 : 1.1, 0 === (h *= h < 0 ? 1.1 : .9) && 0 === c && (h = -1, c = 1), c < 0 && c < g && (c = g), h < 0 && h > d && (h = d), e.length > 1 ? (e[l].min = void 0 === t.min ? h : t.min, e[l].max = void 0 === t.max ? c : t.max) : (e[0].min = void 0 === t.min ? h : t.min, e[0].max = void 0 === t.max ? c : t.max);
          });
        }), e;
      }
    }]), t;
  }(),
  U = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.scales = new _(e);
    }
    return r(t, [{
      key: "init",
      value: function () {
        this.setYRange(), this.setXRange(), this.setZRange();
      }
    }, {
      key: "getMinYMaxY",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_VALUE,
          i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -Number.MAX_VALUE,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
          s = this.w.config,
          r = this.w.globals,
          o = -Number.MAX_VALUE,
          n = Number.MIN_VALUE;
        null === a && (a = t + 1);
        var l = r.series,
          h = l,
          c = l;
        "candlestick" === s.chart.type ? (h = r.seriesCandleL, c = r.seriesCandleH) : "boxPlot" === s.chart.type ? (h = r.seriesCandleO, c = r.seriesCandleC) : r.isRangeData && (h = r.seriesRangeStart, c = r.seriesRangeEnd);
        for (var d = t; d < a; d++) {
          r.dataPoints = Math.max(r.dataPoints, l[d].length), r.categoryLabels.length && (r.dataPoints = r.categoryLabels.filter(function (t) {
            return void 0 !== t;
          }).length), r.labels.length && "datetime" !== s.xaxis.type && 0 !== r.series.reduce(function (t, e) {
            return t + e.length;
          }, 0) && (r.dataPoints = Math.max(r.dataPoints, r.labels.length));
          for (var g = 0; g < r.series[d].length; g++) {
            var u = l[d][g];
            null !== u && x.isNumber(u) ? (void 0 !== c[d][g] && (o = Math.max(o, c[d][g]), e = Math.min(e, c[d][g])), void 0 !== h[d][g] && (e = Math.min(e, h[d][g]), i = Math.max(i, h[d][g])), "candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type && "rangeArea" === this.w.config.chart.type && "rangeBar" === this.w.config.chart.type || ("candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type || void 0 !== r.seriesCandleC[d][g] && (o = Math.max(o, r.seriesCandleO[d][g]), o = Math.max(o, r.seriesCandleH[d][g]), o = Math.max(o, r.seriesCandleL[d][g]), o = Math.max(o, r.seriesCandleC[d][g]), "boxPlot" === this.w.config.chart.type && (o = Math.max(o, r.seriesCandleM[d][g]))), !s.series[d].type || "candlestick" === s.series[d].type && "boxPlot" === s.series[d].type && "rangeArea" === s.series[d].type && "rangeBar" === s.series[d].type || (o = Math.max(o, r.series[d][g]), e = Math.min(e, r.series[d][g])), i = o), r.seriesGoals[d] && r.seriesGoals[d][g] && Array.isArray(r.seriesGoals[d][g]) && r.seriesGoals[d][g].forEach(function (t) {
              n !== Number.MIN_VALUE && (n = Math.min(n, t.value), e = n), o = Math.max(o, t.value), i = o;
            }), x.isFloat(u) && (u = x.noExponents(u), r.yValueDecimal = Math.max(r.yValueDecimal, u.toString().split(".")[1].length)), n > h[d][g] && h[d][g] < 0 && (n = h[d][g])) : r.hasNullValues = !0;
          }
        }
        return "rangeBar" === s.chart.type && r.seriesRangeStart.length && r.isBarHorizontal && (n = e), "bar" === s.chart.type && (n < 0 && o < 0 && (o = 0), n === Number.MIN_VALUE && (n = 0)), {
          minY: n,
          maxY: o,
          lowestY: e,
          highestY: i
        };
      }
    }, {
      key: "setYRange",
      value: function () {
        var t = this.w.globals,
          e = this.w.config;
        t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE;
        var i = Number.MAX_VALUE;
        if (t.isMultipleYAxis) for (var a = 0; a < t.series.length; a++) {
          var s = this.getMinYMaxY(a, i, null, a + 1);
          t.minYArr.push(s.minY), t.maxYArr.push(s.maxY), i = s.lowestY;
        }
        var r = this.getMinYMaxY(0, i, null, t.series.length);
        if (t.minY = r.minY, t.maxY = r.maxY, i = r.lowestY, e.chart.stacked && this._setStackedMinMax(), ("line" === e.chart.type || "area" === e.chart.type || "candlestick" === e.chart.type || "boxPlot" === e.chart.type || "rangeBar" === e.chart.type && !t.isBarHorizontal) && t.minY === Number.MIN_VALUE && i !== -Number.MAX_VALUE && i !== t.maxY) {
          var o = t.maxY - i;
          (i >= 0 && i <= 10 || void 0 !== e.yaxis[0].min || void 0 !== e.yaxis[0].max) && (o = 0), t.minY = i - 5 * o / 100, i > 0 && t.minY < 0 && (t.minY = 0), t.maxY = t.maxY + 5 * o / 100;
        }
        if (e.yaxis.forEach(function (e, i) {
          void 0 !== e.max && ("number" == typeof e.max ? t.maxYArr[i] = e.max : "function" == typeof e.max && (t.maxYArr[i] = e.max(t.isMultipleYAxis ? t.maxYArr[i] : t.maxY)), t.maxY = t.maxYArr[i]), void 0 !== e.min && ("number" == typeof e.min ? t.minYArr[i] = e.min : "function" == typeof e.min && (t.minYArr[i] = e.min(t.isMultipleYAxis ? t.minYArr[i] === Number.MIN_VALUE ? 0 : t.minYArr[i] : t.minY)), t.minY = t.minYArr[i]);
        }), t.isBarHorizontal) {
          ["min", "max"].forEach(function (i) {
            void 0 !== e.xaxis[i] && "number" == typeof e.xaxis[i] && ("min" === i ? t.minY = e.xaxis[i] : t.maxY = e.xaxis[i]);
          });
        }
        return t.isMultipleYAxis ? (this.scales.setMultipleYScales(), t.minY = i, t.yAxisScale.forEach(function (e, i) {
          t.minYArr[i] = e.niceMin, t.maxYArr[i] = e.niceMax;
        })) : (this.scales.setYScaleForIndex(0, t.minY, t.maxY), t.minY = t.yAxisScale[0].niceMin, t.maxY = t.yAxisScale[0].niceMax, t.minYArr[0] = t.yAxisScale[0].niceMin, t.maxYArr[0] = t.yAxisScale[0].niceMax), {
          minY: t.minY,
          maxY: t.maxY,
          minYArr: t.minYArr,
          maxYArr: t.maxYArr,
          yAxisScale: t.yAxisScale
        };
      }
    }, {
      key: "setXRange",
      value: function () {
        var t = this.w.globals,
          e = this.w.config,
          i = "numeric" === e.xaxis.type || "datetime" === e.xaxis.type || "category" === e.xaxis.type && !t.noLabelsProvided || t.noLabelsProvided || t.isXNumeric;
        if (t.isXNumeric && function () {
          for (var e = 0; e < t.series.length; e++) if (t.labels[e]) for (var i = 0; i < t.labels[e].length; i++) null !== t.labels[e][i] && x.isNumber(t.labels[e][i]) && (t.maxX = Math.max(t.maxX, t.labels[e][i]), t.initialMaxX = Math.max(t.maxX, t.labels[e][i]), t.minX = Math.min(t.minX, t.labels[e][i]), t.initialMinX = Math.min(t.minX, t.labels[e][i]));
        }(), t.noLabelsProvided && 0 === e.xaxis.categories.length && (t.maxX = t.labels[t.labels.length - 1], t.initialMaxX = t.labels[t.labels.length - 1], t.minX = 1, t.initialMinX = 1), t.isXNumeric || t.noLabelsProvided || t.dataFormatXNumeric) {
          var a;
          if (void 0 === e.xaxis.tickAmount ? (a = Math.round(t.svgWidth / 150), "numeric" === e.xaxis.type && t.dataPoints < 30 && (a = t.dataPoints - 1), a > t.dataPoints && 0 !== t.dataPoints && (a = t.dataPoints - 1)) : "dataPoints" === e.xaxis.tickAmount ? (t.series.length > 1 && (a = t.series[t.maxValsInArrayIndex].length - 1), t.isXNumeric && (a = t.maxX - t.minX - 1)) : a = e.xaxis.tickAmount, t.xTickAmount = a, void 0 !== e.xaxis.max && "number" == typeof e.xaxis.max && (t.maxX = e.xaxis.max), void 0 !== e.xaxis.min && "number" == typeof e.xaxis.min && (t.minX = e.xaxis.min), void 0 !== e.xaxis.range && (t.minX = t.maxX - e.xaxis.range), t.minX !== Number.MAX_VALUE && t.maxX !== -Number.MAX_VALUE) {
            if (e.xaxis.convertedCatToNumeric && !t.dataFormatXNumeric) {
              for (var s = [], r = t.minX - 1; r < t.maxX; r++) s.push(r + 1);
              t.xAxisScale = {
                result: s,
                niceMin: s[0],
                niceMax: s[s.length - 1]
              };
            } else t.xAxisScale = this.scales.setXScale(t.minX, t.maxX);
          } else t.xAxisScale = this.scales.linearScale(0, a, a, 0, e.xaxis.stepSize), t.noLabelsProvided && t.labels.length > 0 && (t.xAxisScale = this.scales.linearScale(1, t.labels.length, a - 1, 0, e.xaxis.stepSize), t.seriesX = t.labels.slice());
          i && (t.labels = t.xAxisScale.result.slice());
        }
        return t.isBarHorizontal && t.labels.length && (t.xTickAmount = t.labels.length), this._handleSingleDataPoint(), this._getMinXDiff(), {
          minX: t.minX,
          maxX: t.maxX
        };
      }
    }, {
      key: "setZRange",
      value: function () {
        var t = this.w.globals;
        if (t.isDataXYZ) for (var e = 0; e < t.series.length; e++) if (void 0 !== t.seriesZ[e]) for (var i = 0; i < t.seriesZ[e].length; i++) null !== t.seriesZ[e][i] && x.isNumber(t.seriesZ[e][i]) && (t.maxZ = Math.max(t.maxZ, t.seriesZ[e][i]), t.minZ = Math.min(t.minZ, t.seriesZ[e][i]));
      }
    }, {
      key: "_handleSingleDataPoint",
      value: function () {
        var t = this.w.globals,
          e = this.w.config;
        if (t.minX === t.maxX) {
          var i = new I(this.ctx);
          if ("datetime" === e.xaxis.type) {
            var a = i.getDate(t.minX);
            e.xaxis.labels.datetimeUTC ? a.setUTCDate(a.getUTCDate() - 2) : a.setDate(a.getDate() - 2), t.minX = new Date(a).getTime();
            var s = i.getDate(t.maxX);
            e.xaxis.labels.datetimeUTC ? s.setUTCDate(s.getUTCDate() + 2) : s.setDate(s.getDate() + 2), t.maxX = new Date(s).getTime();
          } else ("numeric" === e.xaxis.type || "category" === e.xaxis.type && !t.noLabelsProvided) && (t.minX = t.minX - 2, t.initialMinX = t.minX, t.maxX = t.maxX + 2, t.initialMaxX = t.maxX);
        }
      }
    }, {
      key: "_getMinXDiff",
      value: function () {
        var t = this.w.globals;
        t.isXNumeric && t.seriesX.forEach(function (e, i) {
          1 === e.length && e.push(t.seriesX[t.maxValsInArrayIndex][t.seriesX[t.maxValsInArrayIndex].length - 1]);
          var a = e.slice();
          a.sort(function (t, e) {
            return t - e;
          }), a.forEach(function (e, i) {
            if (i > 0) {
              var s = e - a[i - 1];
              s > 0 && (t.minXDiff = Math.min(s, t.minXDiff));
            }
          }), 1 !== t.dataPoints && t.minXDiff !== Number.MAX_VALUE || (t.minXDiff = .5);
        });
      }
    }, {
      key: "_setStackedMinMax",
      value: function () {
        var t = this,
          e = this.w.globals;
        if (e.series.length) {
          var i = e.seriesGroups;
          i.length || (i = [this.w.config.series.map(function (t) {
            return t.name;
          })]);
          var a = {},
            s = {};
          i.forEach(function (i) {
            a[i] = [], s[i] = [], t.w.config.series.map(function (t, e) {
              return i.indexOf(t.name) > -1 ? e : null;
            }).filter(function (t) {
              return null !== t;
            }).forEach(function (r) {
              for (var o = 0; o < e.series[e.maxValsInArrayIndex].length; o++) {
                var n, l;
                void 0 === a[i][o] && (a[i][o] = 0, s[i][o] = 0), (t.w.config.chart.stacked && !e.comboCharts || t.w.config.chart.stacked && e.comboCharts && (!t.w.config.chart.stackOnlyBar || "bar" === (null === (n = t.w.config.series) || void 0 === n || null === (l = n[r]) || void 0 === l ? void 0 : l.type))) && null !== e.series[r][o] && x.isNumber(e.series[r][o]) && (e.series[r][o] > 0 ? a[i][o] += parseFloat(e.series[r][o]) + 1e-4 : s[i][o] += parseFloat(e.series[r][o]));
              }
            });
          }), Object.entries(a).forEach(function (t) {
            var i = g(t, 1)[0];
            a[i].forEach(function (t, r) {
              e.maxY = Math.max(e.maxY, a[i][r]), e.minY = Math.min(e.minY, s[i][r]);
            });
          });
        }
      }
    }]), t;
  }(),
  q = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.elgrid = i, this.w = e.w;
      var s = this.w;
      this.xaxisFontSize = s.config.xaxis.labels.style.fontSize, this.axisFontFamily = s.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = s.config.xaxis.labels.style.colors, this.isCategoryBarHorizontal = "bar" === s.config.chart.type && s.config.plotOptions.bar.horizontal, this.xAxisoffX = 0, "bottom" === s.config.xaxis.position && (this.xAxisoffX = s.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new B(e);
    }
    return r(t, [{
      key: "drawYaxis",
      value: function (t) {
        var e = this,
          i = this.w,
          a = new m(this.ctx),
          s = i.config.yaxis[t].labels.style,
          r = s.fontSize,
          o = s.fontFamily,
          n = s.fontWeight,
          l = a.group({
            class: "apexcharts-yaxis",
            rel: t,
            transform: "translate(" + i.globals.translateYAxisX[t] + ", 0)"
          });
        if (this.axesUtils.isYAxisHidden(t)) return l;
        var h = a.group({
          class: "apexcharts-yaxis-texts-g"
        });
        l.add(h);
        var c = i.globals.yAxisScale[t].result.length - 1,
          d = i.globals.gridHeight / c,
          g = i.globals.translateY,
          u = i.globals.yLabelFormatters[t],
          p = i.globals.yAxisScale[t].result.slice();
        p = this.axesUtils.checkForReversedLabels(t, p);
        var f = "";
        if (i.config.yaxis[t].labels.show) for (var x = function (l) {
            var x = p[l];
            x = u(x, l, i);
            var b = i.config.yaxis[t].labels.padding;
            i.config.yaxis[t].opposite && 0 !== i.config.yaxis.length && (b *= -1);
            var v = "end";
            i.config.yaxis[t].opposite && (v = "start"), "left" === i.config.yaxis[t].labels.align ? v = "start" : "center" === i.config.yaxis[t].labels.align ? v = "middle" : "right" === i.config.yaxis[t].labels.align && (v = "end");
            var m = e.axesUtils.getYAxisForeColor(s.colors, t),
              y = i.config.yaxis[t].labels.offsetY;
            "heatmap" === i.config.chart.type && (y -= (i.globals.gridHeight / i.globals.series.length - 1) / 2);
            var w = a.drawText({
              x: b,
              y: g + c / 10 + y + 1,
              text: x,
              textAnchor: v,
              fontSize: r,
              fontFamily: o,
              fontWeight: n,
              maxWidth: i.config.yaxis[t].labels.maxWidth,
              foreColor: Array.isArray(m) ? m[l] : m,
              isPlainText: !1,
              cssClass: "apexcharts-yaxis-label " + s.cssClass
            });
            l === c && (f = w), h.add(w);
            var k = document.createElementNS(i.globals.SVGNS, "title");
            if (k.textContent = Array.isArray(x) ? x.join(" ") : x, w.node.appendChild(k), 0 !== i.config.yaxis[t].labels.rotate) {
              var A = a.rotateAroundCenter(f.node),
                S = a.rotateAroundCenter(w.node);
              w.node.setAttribute("transform", "rotate(".concat(i.config.yaxis[t].labels.rotate, " ").concat(A.x, " ").concat(S.y, ")"));
            }
            g += d;
          }, b = c; b >= 0; b--) x(b);
        if (void 0 !== i.config.yaxis[t].title.text) {
          var v = a.group({
              class: "apexcharts-yaxis-title"
            }),
            y = 0;
          i.config.yaxis[t].opposite && (y = i.globals.translateYAxisX[t]);
          var w = a.drawText({
            x: y,
            y: i.globals.gridHeight / 2 + i.globals.translateY + i.config.yaxis[t].title.offsetY,
            text: i.config.yaxis[t].title.text,
            textAnchor: "end",
            foreColor: i.config.yaxis[t].title.style.color,
            fontSize: i.config.yaxis[t].title.style.fontSize,
            fontWeight: i.config.yaxis[t].title.style.fontWeight,
            fontFamily: i.config.yaxis[t].title.style.fontFamily,
            cssClass: "apexcharts-yaxis-title-text " + i.config.yaxis[t].title.style.cssClass
          });
          v.add(w), l.add(v);
        }
        var k = i.config.yaxis[t].axisBorder,
          A = 31 + k.offsetX;
        if (i.config.yaxis[t].opposite && (A = -31 - k.offsetX), k.show) {
          var S = a.drawLine(A, i.globals.translateY + k.offsetY - 2, A, i.globals.gridHeight + i.globals.translateY + k.offsetY + 2, k.color, 0, k.width);
          l.add(S);
        }
        return i.config.yaxis[t].axisTicks.show && this.axesUtils.drawYAxisTicks(A, c, k, i.config.yaxis[t].axisTicks, t, d, l), l;
      }
    }, {
      key: "drawYaxisInversed",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = i.group({
            class: "apexcharts-xaxis apexcharts-yaxis-inversed"
          }),
          s = i.group({
            class: "apexcharts-xaxis-texts-g",
            transform: "translate(".concat(e.globals.translateXAxisX, ", ").concat(e.globals.translateXAxisY, ")")
          });
        a.add(s);
        var r = e.globals.yAxisScale[t].result.length - 1,
          o = e.globals.gridWidth / r + .1,
          n = o + e.config.xaxis.labels.offsetX,
          l = e.globals.xLabelFormatter,
          h = e.globals.yAxisScale[t].result.slice(),
          c = e.globals.timescaleLabels;
        c.length > 0 && (this.xaxisLabels = c.slice(), r = (h = c.slice()).length), h = this.axesUtils.checkForReversedLabels(t, h);
        var d = c.length;
        if (e.config.xaxis.labels.show) for (var g = d ? 0 : r; d ? g < d : g >= 0; d ? g++ : g--) {
          var u = h[g];
          u = l(u, g, e);
          var p = e.globals.gridWidth + e.globals.padHorizontal - (n - o + e.config.xaxis.labels.offsetX);
          if (c.length) {
            var f = this.axesUtils.getLabel(h, c, p, g, this.drawnLabels, this.xaxisFontSize);
            p = f.x, u = f.text, this.drawnLabels.push(f.text), 0 === g && e.globals.skipFirstTimelinelabel && (u = ""), g === h.length - 1 && e.globals.skipLastTimelinelabel && (u = "");
          }
          var x = i.drawText({
            x: p,
            y: this.xAxisoffX + e.config.xaxis.labels.offsetY + 30 - ("top" === e.config.xaxis.position ? e.globals.xAxisHeight + e.config.xaxis.axisTicks.height - 2 : 0),
            text: u,
            textAnchor: "middle",
            foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[t] : this.xaxisForeColors,
            fontSize: this.xaxisFontSize,
            fontFamily: this.xaxisFontFamily,
            fontWeight: e.config.xaxis.labels.style.fontWeight,
            isPlainText: !1,
            cssClass: "apexcharts-xaxis-label " + e.config.xaxis.labels.style.cssClass
          });
          s.add(x), x.tspan(u);
          var b = document.createElementNS(e.globals.SVGNS, "title");
          b.textContent = u, x.node.appendChild(b), n += o;
        }
        return this.inversedYAxisTitleText(a), this.inversedYAxisBorder(a), a;
      }
    }, {
      key: "inversedYAxisBorder",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = e.config.xaxis.axisBorder;
        if (a.show) {
          var s = 0;
          "bar" === e.config.chart.type && e.globals.isXNumeric && (s -= 15);
          var r = i.drawLine(e.globals.padHorizontal + s + a.offsetX, this.xAxisoffX, e.globals.gridWidth, this.xAxisoffX, a.color, 0, a.height);
          this.elgrid && this.elgrid.elGridBorders && e.config.grid.show ? this.elgrid.elGridBorders.add(r) : t.add(r);
        }
      }
    }, {
      key: "inversedYAxisTitleText",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx);
        if (void 0 !== e.config.xaxis.title.text) {
          var a = i.group({
              class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed"
            }),
            s = i.drawText({
              x: e.globals.gridWidth / 2 + e.config.xaxis.title.offsetX,
              y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(e.config.xaxis.title.style.fontSize) + e.config.xaxis.title.offsetY + 20,
              text: e.config.xaxis.title.text,
              textAnchor: "middle",
              fontSize: e.config.xaxis.title.style.fontSize,
              fontFamily: e.config.xaxis.title.style.fontFamily,
              fontWeight: e.config.xaxis.title.style.fontWeight,
              foreColor: e.config.xaxis.title.style.color,
              cssClass: "apexcharts-xaxis-title-text " + e.config.xaxis.title.style.cssClass
            });
          a.add(s), t.add(a);
        }
      }
    }, {
      key: "yAxisTitleRotate",
      value: function (t, e) {
        var i = this.w,
          a = new m(this.ctx),
          s = {
            width: 0,
            height: 0
          },
          r = {
            width: 0,
            height: 0
          },
          o = i.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-texts-g"));
        null !== o && (s = o.getBoundingClientRect());
        var n = i.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-title text"));
        if (null !== n && (r = n.getBoundingClientRect()), null !== n) {
          var l = this.xPaddingForYAxisTitle(t, s, r, e);
          n.setAttribute("x", l.xPos - (e ? 10 : 0));
        }
        if (null !== n) {
          var h = a.rotateAroundCenter(n);
          n.setAttribute("transform", "rotate(".concat(e ? -1 * i.config.yaxis[t].title.rotate : i.config.yaxis[t].title.rotate, " ").concat(h.x, " ").concat(h.y, ")"));
        }
      }
    }, {
      key: "xPaddingForYAxisTitle",
      value: function (t, e, i, a) {
        var s = this.w,
          r = 0,
          o = 0,
          n = 10;
        return void 0 === s.config.yaxis[t].title.text || t < 0 ? {
          xPos: o,
          padd: 0
        } : (a ? (o = e.width + s.config.yaxis[t].title.offsetX + i.width / 2 + n / 2, 0 === (r += 1) && (o -= n / 2)) : (o = -1 * e.width + s.config.yaxis[t].title.offsetX + n / 2 + i.width / 2, s.globals.isBarHorizontal && (n = 25, o = -1 * e.width - s.config.yaxis[t].title.offsetX - n)), {
          xPos: o,
          padd: n
        });
      }
    }, {
      key: "setYAxisXPosition",
      value: function (t, e) {
        var i = this.w,
          a = 0,
          s = 0,
          r = 18,
          o = 1;
        i.config.yaxis.length > 1 && (this.multipleYs = !0), i.config.yaxis.map(function (n, l) {
          var h = i.globals.ignoreYAxisIndexes.indexOf(l) > -1 || !n.show || n.floating || 0 === t[l].width,
            c = t[l].width + e[l].width;
          n.opposite ? i.globals.isBarHorizontal ? (s = i.globals.gridWidth + i.globals.translateX - 1, i.globals.translateYAxisX[l] = s - n.labels.offsetX) : (s = i.globals.gridWidth + i.globals.translateX + o, h || (o = o + c + 20), i.globals.translateYAxisX[l] = s - n.labels.offsetX + 20) : (a = i.globals.translateX - r, h || (r = r + c + 20), i.globals.translateYAxisX[l] = a + n.labels.offsetX);
        });
      }
    }, {
      key: "setYAxisTextAlignments",
      value: function () {
        var t = this.w,
          e = t.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
        (e = x.listToArray(e)).forEach(function (e, i) {
          var a = t.config.yaxis[i];
          if (a && !a.floating && void 0 !== a.labels.align) {
            var s = t.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-texts-g")),
              r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-label"));
            r = x.listToArray(r);
            var o = s.getBoundingClientRect();
            "left" === a.labels.align ? (r.forEach(function (t, e) {
              t.setAttribute("text-anchor", "start");
            }), a.opposite || s.setAttribute("transform", "translate(-".concat(o.width, ", 0)"))) : "center" === a.labels.align ? (r.forEach(function (t, e) {
              t.setAttribute("text-anchor", "middle");
            }), s.setAttribute("transform", "translate(".concat(o.width / 2 * (a.opposite ? 1 : -1), ", 0)"))) : "right" === a.labels.align && (r.forEach(function (t, e) {
              t.setAttribute("text-anchor", "end");
            }), a.opposite && s.setAttribute("transform", "translate(".concat(o.width, ", 0)")));
          }
        });
      }
    }]), t;
  }(),
  Z = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.documentEvent = x.bind(this.documentEvent, this);
    }
    return r(t, [{
      key: "addEventListener",
      value: function (t, e) {
        var i = this.w;
        i.globals.events.hasOwnProperty(t) ? i.globals.events[t].push(e) : i.globals.events[t] = [e];
      }
    }, {
      key: "removeEventListener",
      value: function (t, e) {
        var i = this.w;
        if (i.globals.events.hasOwnProperty(t)) {
          var a = i.globals.events[t].indexOf(e);
          -1 !== a && i.globals.events[t].splice(a, 1);
        }
      }
    }, {
      key: "fireEvent",
      value: function (t, e) {
        var i = this.w;
        if (i.globals.events.hasOwnProperty(t)) {
          e && e.length || (e = []);
          for (var a = i.globals.events[t], s = a.length, r = 0; r < s; r++) a[r].apply(null, e);
        }
      }
    }, {
      key: "setupEventHandlers",
      value: function () {
        var t = this,
          e = this.w,
          i = this.ctx,
          a = e.globals.dom.baseEl.querySelector(e.globals.chartClass);
        this.ctx.eventList.forEach(function (t) {
          a.addEventListener(t, function (t) {
            var a = Object.assign({}, e, {
              seriesIndex: e.globals.capturedSeriesIndex,
              dataPointIndex: e.globals.capturedDataPointIndex
            });
            "mousemove" === t.type || "touchmove" === t.type ? "function" == typeof e.config.chart.events.mouseMove && e.config.chart.events.mouseMove(t, i, a) : "mouseleave" === t.type || "touchleave" === t.type ? "function" == typeof e.config.chart.events.mouseLeave && e.config.chart.events.mouseLeave(t, i, a) : ("mouseup" === t.type && 1 === t.which || "touchend" === t.type) && ("function" == typeof e.config.chart.events.click && e.config.chart.events.click(t, i, a), i.ctx.events.fireEvent("click", [t, i, a]));
          }, {
            capture: !1,
            passive: !0
          });
        }), this.ctx.eventList.forEach(function (i) {
          e.globals.dom.baseEl.addEventListener(i, t.documentEvent, {
            passive: !0
          });
        }), this.ctx.core.setupBrushHandler();
      }
    }, {
      key: "documentEvent",
      value: function (t) {
        var e = this.w,
          i = t.target.className;
        if ("click" === t.type) {
          var a = e.globals.dom.baseEl.querySelector(".apexcharts-menu");
          a && a.classList.contains("apexcharts-menu-open") && "apexcharts-menu-icon" !== i && a.classList.remove("apexcharts-menu-open");
        }
        e.globals.clientX = "touchmove" === t.type ? t.touches[0].clientX : t.clientX, e.globals.clientY = "touchmove" === t.type ? t.touches[0].clientY : t.clientY;
      }
    }]), t;
  }(),
  $ = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "setCurrentLocaleValues",
      value: function (t) {
        var e = this.w.config.chart.locales;
        window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (e = this.w.config.chart.locales.concat(window.Apex.chart.locales));
        var i = e.filter(function (e) {
          return e.name === t;
        })[0];
        if (!i) throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
        var a = x.extend(C, i);
        this.w.globals.locale = a.options;
      }
    }]), t;
  }(),
  J = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "drawAxis",
      value: function (t, e) {
        var i,
          a,
          s = this,
          r = this.w.globals,
          o = this.w.config,
          n = new V(this.ctx, e),
          l = new q(this.ctx, e);
        r.axisCharts && "radar" !== t && (r.isBarHorizontal ? (a = l.drawYaxisInversed(0), i = n.drawXaxisInversed(0), r.dom.elGraphical.add(i), r.dom.elGraphical.add(a)) : (i = n.drawXaxis(), r.dom.elGraphical.add(i), o.yaxis.map(function (t, e) {
          if (-1 === r.ignoreYAxisIndexes.indexOf(e) && (a = l.drawYaxis(e), r.dom.Paper.add(a), "back" === s.w.config.grid.position)) {
            var i = r.dom.Paper.children()[1];
            i.remove(), r.dom.Paper.add(i);
          }
        })));
      }
    }]), t;
  }(),
  Q = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "drawXCrosshairs",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = new v(this.ctx),
          a = t.config.xaxis.crosshairs.fill.gradient,
          s = t.config.xaxis.crosshairs.dropShadow,
          r = t.config.xaxis.crosshairs.fill.type,
          o = a.colorFrom,
          n = a.colorTo,
          l = a.opacityFrom,
          h = a.opacityTo,
          c = a.stops,
          d = s.enabled,
          g = s.left,
          u = s.top,
          p = s.blur,
          f = s.color,
          b = s.opacity,
          y = t.config.xaxis.crosshairs.fill.color;
        if (t.config.xaxis.crosshairs.show) {
          "gradient" === r && (y = e.drawGradient("vertical", o, n, l, h, null, c, null));
          var w = e.drawRect();
          1 === t.config.xaxis.crosshairs.width && (w = e.drawLine());
          var k = t.globals.gridHeight;
          (!x.isNumber(k) || k < 0) && (k = 0);
          var A = t.config.xaxis.crosshairs.width;
          (!x.isNumber(A) || A < 0) && (A = 0), w.attr({
            class: "apexcharts-xcrosshairs",
            x: 0,
            y: 0,
            y2: k,
            width: A,
            height: k,
            fill: y,
            filter: "none",
            "fill-opacity": t.config.xaxis.crosshairs.opacity,
            stroke: t.config.xaxis.crosshairs.stroke.color,
            "stroke-width": t.config.xaxis.crosshairs.stroke.width,
            "stroke-dasharray": t.config.xaxis.crosshairs.stroke.dashArray
          }), d && (w = i.dropShadow(w, {
            left: g,
            top: u,
            blur: p,
            color: f,
            opacity: b
          })), t.globals.dom.elGraphical.add(w);
        }
      }
    }, {
      key: "drawYCrosshairs",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = t.config.yaxis[0].crosshairs,
          a = t.globals.barPadForNumericAxis;
        if (t.config.yaxis[0].crosshairs.show) {
          var s = e.drawLine(-a, 0, t.globals.gridWidth + a, 0, i.stroke.color, i.stroke.dashArray, i.stroke.width);
          s.attr({
            class: "apexcharts-ycrosshairs"
          }), t.globals.dom.elGraphical.add(s);
        }
        var r = e.drawLine(-a, 0, t.globals.gridWidth + a, 0, i.stroke.color, 0, 0);
        r.attr({
          class: "apexcharts-ycrosshairs-hidden"
        }), t.globals.dom.elGraphical.add(r);
      }
    }]), t;
  }(),
  K = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "checkResponsiveConfig",
      value: function (t) {
        var e = this,
          i = this.w,
          a = i.config;
        if (0 !== a.responsive.length) {
          var s = a.responsive.slice();
          s.sort(function (t, e) {
            return t.breakpoint > e.breakpoint ? 1 : e.breakpoint > t.breakpoint ? -1 : 0;
          }).reverse();
          var r = new E({}),
            o = function () {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                a = s[0].breakpoint,
                o = window.innerWidth > 0 ? window.innerWidth : screen.width;
              if (o > a) {
                var n = y.extendArrayProps(r, i.globals.initialConfig, i);
                t = x.extend(n, t), t = x.extend(i.config, t), e.overrideResponsiveOptions(t);
              } else for (var l = 0; l < s.length; l++) o < s[l].breakpoint && (t = y.extendArrayProps(r, s[l].options, i), t = x.extend(i.config, t), e.overrideResponsiveOptions(t));
            };
          if (t) {
            var n = y.extendArrayProps(r, t, i);
            n = x.extend(i.config, n), o(n = x.extend(n, t));
          } else o({});
        }
      }
    }, {
      key: "overrideResponsiveOptions",
      value: function (t) {
        var e = new E(t).init({
          responsiveOverride: !0
        });
        this.w.config = e;
      }
    }]), t;
  }(),
  tt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.colors = [], this.w = e.w;
      var i = this.w;
      this.isColorFn = !1, this.isHeatmapDistributed = "treemap" === i.config.chart.type && i.config.plotOptions.treemap.distributed || "heatmap" === i.config.chart.type && i.config.plotOptions.heatmap.distributed, this.isBarDistributed = i.config.plotOptions.bar.distributed && ("bar" === i.config.chart.type || "rangeBar" === i.config.chart.type);
    }
    return r(t, [{
      key: "init",
      value: function () {
        this.setDefaultColors();
      }
    }, {
      key: "setDefaultColors",
      value: function () {
        var t,
          e = this,
          i = this.w,
          a = new x();
        if (i.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(i.config.theme.mode)), void 0 === i.config.colors || 0 === (null === (t = i.config.colors) || void 0 === t ? void 0 : t.length) ? i.globals.colors = this.predefined() : (i.globals.colors = i.config.colors, Array.isArray(i.config.colors) && i.config.colors.length > 0 && "function" == typeof i.config.colors[0] && (i.globals.colors = i.config.series.map(function (t, a) {
          var s = i.config.colors[a];
          return s || (s = i.config.colors[0]), "function" == typeof s ? (e.isColorFn = !0, s({
            value: i.globals.axisCharts ? i.globals.series[a][0] ? i.globals.series[a][0] : 0 : i.globals.series[a],
            seriesIndex: a,
            dataPointIndex: a,
            w: i
          })) : s;
        }))), i.globals.seriesColors.map(function (t, e) {
          t && (i.globals.colors[e] = t);
        }), i.config.theme.monochrome.enabled) {
          var s = [],
            r = i.globals.series.length;
          (this.isBarDistributed || this.isHeatmapDistributed) && (r = i.globals.series[0].length * i.globals.series.length);
          for (var o = i.config.theme.monochrome.color, n = 1 / (r / i.config.theme.monochrome.shadeIntensity), l = i.config.theme.monochrome.shadeTo, h = 0, c = 0; c < r; c++) {
            var d = void 0;
            "dark" === l ? (d = a.shadeColor(-1 * h, o), h += n) : (d = a.shadeColor(h, o), h += n), s.push(d);
          }
          i.globals.colors = s.slice();
        }
        var g = i.globals.colors.slice();
        this.pushExtraColors(i.globals.colors);
        ["fill", "stroke"].forEach(function (t) {
          void 0 === i.config[t].colors ? i.globals[t].colors = e.isColorFn ? i.config.colors : g : i.globals[t].colors = i.config[t].colors.slice(), e.pushExtraColors(i.globals[t].colors);
        }), void 0 === i.config.dataLabels.style.colors ? i.globals.dataLabels.style.colors = g : i.globals.dataLabels.style.colors = i.config.dataLabels.style.colors.slice(), this.pushExtraColors(i.globals.dataLabels.style.colors, 50), void 0 === i.config.plotOptions.radar.polygons.fill.colors ? i.globals.radarPolygons.fill.colors = ["dark" === i.config.theme.mode ? "#424242" : "none"] : i.globals.radarPolygons.fill.colors = i.config.plotOptions.radar.polygons.fill.colors.slice(), this.pushExtraColors(i.globals.radarPolygons.fill.colors, 20), void 0 === i.config.markers.colors ? i.globals.markers.colors = g : i.globals.markers.colors = i.config.markers.colors.slice(), this.pushExtraColors(i.globals.markers.colors);
      }
    }, {
      key: "pushExtraColors",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
          a = this.w,
          s = e || a.globals.series.length;
        if (null === i && (i = this.isBarDistributed || this.isHeatmapDistributed || "heatmap" === a.config.chart.type && a.config.plotOptions.heatmap.colorScale.inverse), i && a.globals.series.length && (s = a.globals.series[a.globals.maxValsInArrayIndex].length * a.globals.series.length), t.length < s) for (var r = s - t.length, o = 0; o < r; o++) t.push(t[o]);
      }
    }, {
      key: "updateThemeOptions",
      value: function (t) {
        t.chart = t.chart || {}, t.tooltip = t.tooltip || {};
        var e = t.theme.mode || "light",
          i = t.theme.palette ? t.theme.palette : "dark" === e ? "palette4" : "palette1",
          a = t.chart.foreColor ? t.chart.foreColor : "dark" === e ? "#f6f7f8" : "#373d3f";
        return t.tooltip.theme = e, t.chart.foreColor = a, t.theme.palette = i, t;
      }
    }, {
      key: "predefined",
      value: function () {
        switch (this.w.config.theme.palette) {
          case "palette1":
          default:
            this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
            break;
          case "palette2":
            this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
            break;
          case "palette3":
            this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
            break;
          case "palette4":
            this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
            break;
          case "palette5":
            this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
            break;
          case "palette6":
            this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
            break;
          case "palette7":
            this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
            break;
          case "palette8":
            this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
            break;
          case "palette9":
            this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
            break;
          case "palette10":
            this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"];
        }
        return this.colors;
      }
    }]), t;
  }(),
  et = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "draw",
      value: function () {
        this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle");
      }
    }, {
      key: "drawTitleSubtitle",
      value: function (t) {
        var e = this.w,
          i = "title" === t ? e.config.title : e.config.subtitle,
          a = e.globals.svgWidth / 2,
          s = i.offsetY,
          r = "middle";
        if ("left" === i.align ? (a = 10, r = "start") : "right" === i.align && (a = e.globals.svgWidth - 10, r = "end"), a += i.offsetX, s = s + parseInt(i.style.fontSize, 10) + i.margin / 2, void 0 !== i.text) {
          var o = new m(this.ctx).drawText({
            x: a,
            y: s,
            text: i.text,
            textAnchor: r,
            fontSize: i.style.fontSize,
            fontFamily: i.style.fontFamily,
            fontWeight: i.style.fontWeight,
            foreColor: i.style.color,
            opacity: 1
          });
          o.node.setAttribute("class", "apexcharts-".concat(t, "-text")), e.globals.dom.Paper.add(o);
        }
      }
    }]), t;
  }(),
  it = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.dCtx = e;
    }
    return r(t, [{
      key: "getTitleSubtitleCoords",
      value: function (t) {
        var e = this.w,
          i = 0,
          a = 0,
          s = "title" === t ? e.config.title.floating : e.config.subtitle.floating,
          r = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(t, "-text"));
        if (null !== r && !s) {
          var o = r.getBoundingClientRect();
          i = o.width, a = e.globals.axisCharts ? o.height + 5 : o.height;
        }
        return {
          width: i,
          height: a
        };
      }
    }, {
      key: "getLegendsRect",
      value: function () {
        var t = this.w,
          e = t.globals.dom.elLegendWrap;
        t.config.legend.height || "top" !== t.config.legend.position && "bottom" !== t.config.legend.position || (e.style.maxHeight = t.globals.svgHeight / 2 + "px");
        var i = Object.assign({}, x.getBoundingClientRect(e));
        return null !== e && !t.config.legend.floating && t.config.legend.show ? this.dCtx.lgRect = {
          x: i.x,
          y: i.y,
          height: i.height,
          width: 0 === i.height ? 0 : i.width
        } : this.dCtx.lgRect = {
          x: 0,
          y: 0,
          height: 0,
          width: 0
        }, "left" !== t.config.legend.position && "right" !== t.config.legend.position || 1.5 * this.dCtx.lgRect.width > t.globals.svgWidth && (this.dCtx.lgRect.width = t.globals.svgWidth / 1.5), this.dCtx.lgRect;
      }
    }, {
      key: "getLargestStringFromMultiArr",
      value: function (t, e) {
        var i = t;
        if (this.w.globals.isMultiLineX) {
          var a = e.map(function (t, e) {
              return Array.isArray(t) ? t.length : 1;
            }),
            s = Math.max.apply(Math, u(a));
          i = e[a.indexOf(s)];
        }
        return i;
      }
    }]), t;
  }(),
  at = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.dCtx = e;
    }
    return r(t, [{
      key: "getxAxisLabelsCoords",
      value: function () {
        var t,
          e = this.w,
          i = e.globals.labels.slice();
        if (e.config.xaxis.convertedCatToNumeric && 0 === i.length && (i = e.globals.categoryLabels), e.globals.timescaleLabels.length > 0) {
          var a = this.getxAxisTimeScaleLabelsCoords();
          t = {
            width: a.width,
            height: a.height
          }, e.globals.rotateXLabels = !1;
        } else {
          this.dCtx.lgWidthForSideLegends = "left" !== e.config.legend.position && "right" !== e.config.legend.position || e.config.legend.floating ? 0 : this.dCtx.lgRect.width;
          var s = e.globals.xLabelFormatter,
            r = x.getLargestStringFromArr(i),
            o = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r, i);
          e.globals.isBarHorizontal && (o = r = e.globals.yAxisScale[0].result.reduce(function (t, e) {
            return t.length > e.length ? t : e;
          }, 0));
          var n = new T(this.dCtx.ctx),
            l = r;
          r = n.xLabelFormat(s, r, l, {
            i: void 0,
            dateFormatter: new I(this.dCtx.ctx).formatDate,
            w: e
          }), o = n.xLabelFormat(s, o, l, {
            i: void 0,
            dateFormatter: new I(this.dCtx.ctx).formatDate,
            w: e
          }), (e.config.xaxis.convertedCatToNumeric && void 0 === r || "" === String(r).trim()) && (o = r = "1");
          var h = new m(this.dCtx.ctx),
            c = h.getTextRects(r, e.config.xaxis.labels.style.fontSize),
            d = c;
          if (r !== o && (d = h.getTextRects(o, e.config.xaxis.labels.style.fontSize)), (t = {
            width: c.width >= d.width ? c.width : d.width,
            height: c.height >= d.height ? c.height : d.height
          }).width * i.length > e.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && 0 !== e.config.xaxis.labels.rotate || e.config.xaxis.labels.rotateAlways) {
            if (!e.globals.isBarHorizontal) {
              e.globals.rotateXLabels = !0;
              var g = function (t) {
                return h.getTextRects(t, e.config.xaxis.labels.style.fontSize, e.config.xaxis.labels.style.fontFamily, "rotate(".concat(e.config.xaxis.labels.rotate, " 0 0)"), !1);
              };
              c = g(r), r !== o && (d = g(o)), t.height = (c.height > d.height ? c.height : d.height) / 1.5, t.width = c.width > d.width ? c.width : d.width;
            }
          } else e.globals.rotateXLabels = !1;
        }
        return e.config.xaxis.labels.show || (t = {
          width: 0,
          height: 0
        }), {
          width: t.width,
          height: t.height
        };
      }
    }, {
      key: "getxAxisGroupLabelsCoords",
      value: function () {
        var t,
          e = this.w;
        if (!e.globals.hasXaxisGroups) return {
          width: 0,
          height: 0
        };
        var i,
          a = (null === (t = e.config.xaxis.group.style) || void 0 === t ? void 0 : t.fontSize) || e.config.xaxis.labels.style.fontSize,
          s = e.globals.groups.map(function (t) {
            return t.title;
          }),
          r = x.getLargestStringFromArr(s),
          o = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r, s),
          n = new m(this.dCtx.ctx),
          l = n.getTextRects(r, a),
          h = l;
        return r !== o && (h = n.getTextRects(o, a)), i = {
          width: l.width >= h.width ? l.width : h.width,
          height: l.height >= h.height ? l.height : h.height
        }, e.config.xaxis.labels.show || (i = {
          width: 0,
          height: 0
        }), {
          width: i.width,
          height: i.height
        };
      }
    }, {
      key: "getxAxisTitleCoords",
      value: function () {
        var t = this.w,
          e = 0,
          i = 0;
        if (void 0 !== t.config.xaxis.title.text) {
          var a = new m(this.dCtx.ctx).getTextRects(t.config.xaxis.title.text, t.config.xaxis.title.style.fontSize);
          e = a.width, i = a.height;
        }
        return {
          width: e,
          height: i
        };
      }
    }, {
      key: "getxAxisTimeScaleLabelsCoords",
      value: function () {
        var t,
          e = this.w;
        this.dCtx.timescaleLabels = e.globals.timescaleLabels.slice();
        var i = this.dCtx.timescaleLabels.map(function (t) {
            return t.value;
          }),
          a = i.reduce(function (t, e) {
            return void 0 === t ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : t.length > e.length ? t : e;
          }, 0);
        return 1.05 * (t = new m(this.dCtx.ctx).getTextRects(a, e.config.xaxis.labels.style.fontSize)).width * i.length > e.globals.gridWidth && 0 !== e.config.xaxis.labels.rotate && (e.globals.overlappingXLabels = !0), t;
      }
    }, {
      key: "additionalPaddingXLabels",
      value: function (t) {
        var e = this,
          i = this.w,
          a = i.globals,
          s = i.config,
          r = s.xaxis.type,
          o = t.width;
        a.skipLastTimelinelabel = !1, a.skipFirstTimelinelabel = !1;
        var n = i.config.yaxis[0].opposite && i.globals.isBarHorizontal,
          l = function (t, n) {
            s.yaxis.length > 1 && function (t) {
              return -1 !== a.collapsedSeriesIndices.indexOf(t);
            }(n) || function (t) {
              if (e.dCtx.timescaleLabels && e.dCtx.timescaleLabels.length) {
                var n = e.dCtx.timescaleLabels[0],
                  l = e.dCtx.timescaleLabels[e.dCtx.timescaleLabels.length - 1].position + o / 1.75 - e.dCtx.yAxisWidthRight,
                  h = n.position - o / 1.75 + e.dCtx.yAxisWidthLeft,
                  c = "right" === i.config.legend.position && e.dCtx.lgRect.width > 0 ? e.dCtx.lgRect.width : 0;
                l > a.svgWidth - a.translateX - c && (a.skipLastTimelinelabel = !0), h < -(t.show && !t.floating || "bar" !== s.chart.type && "candlestick" !== s.chart.type && "rangeBar" !== s.chart.type && "boxPlot" !== s.chart.type ? 10 : o / 1.75) && (a.skipFirstTimelinelabel = !0);
              } else "datetime" === r ? e.dCtx.gridPad.right < o && !a.rotateXLabels && (a.skipLastTimelinelabel = !0) : "datetime" !== r && e.dCtx.gridPad.right < o / 2 - e.dCtx.yAxisWidthRight && !a.rotateXLabels && !i.config.xaxis.labels.trim && ("between" !== i.config.xaxis.tickPlacement || i.globals.isBarHorizontal) && (e.dCtx.xPadRight = o / 2 + 1);
            }(t);
          };
        s.yaxis.forEach(function (t, i) {
          n ? (e.dCtx.gridPad.left < o && (e.dCtx.xPadLeft = o / 2 + 1), e.dCtx.xPadRight = o / 2 + 1) : l(t, i);
        });
      }
    }]), t;
  }(),
  st = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.dCtx = e;
    }
    return r(t, [{
      key: "getyAxisLabelsCoords",
      value: function () {
        var t = this,
          e = this.w,
          i = [],
          a = 10,
          s = new B(this.dCtx.ctx);
        return e.config.yaxis.map(function (r, o) {
          var n = {
              seriesIndex: o,
              dataPointIndex: -1,
              w: e
            },
            l = e.globals.yAxisScale[o],
            h = 0;
          if (!s.isYAxisHidden(o) && r.labels.show && void 0 !== r.labels.minWidth && (h = r.labels.minWidth), !s.isYAxisHidden(o) && r.labels.show && l.result.length) {
            var c = e.globals.yLabelFormatters[o],
              d = l.niceMin === Number.MIN_VALUE ? 0 : l.niceMin,
              g = l.result.reduce(function (t, e) {
                var i, a;
                return (null === (i = String(c(t, n))) || void 0 === i ? void 0 : i.length) > (null === (a = String(c(e, n))) || void 0 === a ? void 0 : a.length) ? t : e;
              }, d),
              u = g = c(g, n);
            if (void 0 !== g && 0 !== g.length || (g = l.niceMax), e.globals.isBarHorizontal) {
              a = 0;
              var p = e.globals.labels.slice();
              g = x.getLargestStringFromArr(p), g = c(g, {
                seriesIndex: o,
                dataPointIndex: -1,
                w: e
              }), u = t.dCtx.dimHelpers.getLargestStringFromMultiArr(g, p);
            }
            var f = new m(t.dCtx.ctx),
              b = "rotate(".concat(r.labels.rotate, " 0 0)"),
              v = f.getTextRects(g, r.labels.style.fontSize, r.labels.style.fontFamily, b, !1),
              y = v;
            g !== u && (y = f.getTextRects(u, r.labels.style.fontSize, r.labels.style.fontFamily, b, !1)), i.push({
              width: (h > y.width || h > v.width ? h : y.width > v.width ? y.width : v.width) + a,
              height: y.height > v.height ? y.height : v.height
            });
          } else i.push({
            width: 0,
            height: 0
          });
        }), i;
      }
    }, {
      key: "getyAxisTitleCoords",
      value: function () {
        var t = this,
          e = this.w,
          i = [];
        return e.config.yaxis.map(function (e, a) {
          if (e.show && void 0 !== e.title.text) {
            var s = new m(t.dCtx.ctx),
              r = "rotate(".concat(e.title.rotate, " 0 0)"),
              o = s.getTextRects(e.title.text, e.title.style.fontSize, e.title.style.fontFamily, r, !1);
            i.push({
              width: o.width,
              height: o.height
            });
          } else i.push({
            width: 0,
            height: 0
          });
        }), i;
      }
    }, {
      key: "getTotalYAxisWidth",
      value: function () {
        var t = this.w,
          e = 0,
          i = 0,
          a = 0,
          s = t.globals.yAxisScale.length > 1 ? 10 : 0,
          r = new B(this.dCtx.ctx),
          o = function (o, n) {
            var l = t.config.yaxis[n].floating,
              h = 0;
            o.width > 0 && !l ? (h = o.width + s, function (e) {
              return t.globals.ignoreYAxisIndexes.indexOf(e) > -1;
            }(n) && (h = h - o.width - s)) : h = l || r.isYAxisHidden(n) ? 0 : 5, t.config.yaxis[n].opposite ? a += h : i += h, e += h;
          };
        return t.globals.yLabelsCoords.map(function (t, e) {
          o(t, e);
        }), t.globals.yTitleCoords.map(function (t, e) {
          o(t, e);
        }), t.globals.isBarHorizontal && !t.config.yaxis[0].floating && (e = t.globals.yLabelsCoords[0].width + t.globals.yTitleCoords[0].width + 15), this.dCtx.yAxisWidthLeft = i, this.dCtx.yAxisWidthRight = a, e;
      }
    }]), t;
  }(),
  rt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.dCtx = e;
    }
    return r(t, [{
      key: "gridPadForColumnsInNumericAxis",
      value: function (t) {
        var e = this.w;
        if (e.globals.noData || e.globals.allSeriesCollapsed) return 0;
        var i = function (t) {
            return "bar" === t || "rangeBar" === t || "candlestick" === t || "boxPlot" === t;
          },
          a = e.config.chart.type,
          s = 0,
          r = i(a) ? e.config.series.length : 1;
        if (e.globals.comboBarCount > 0 && (r = e.globals.comboBarCount), e.globals.collapsedSeries.forEach(function (t) {
          i(t.type) && (r -= 1);
        }), e.config.chart.stacked && (r = 1), (i(a) || e.globals.comboBarCount > 0) && e.globals.isXNumeric && !e.globals.isBarHorizontal && r > 0) {
          var o,
            n,
            l = Math.abs(e.globals.initialMaxX - e.globals.initialMinX);
          l <= 3 && (l = e.globals.dataPoints), o = l / t, e.globals.minXDiff && e.globals.minXDiff / o > 0 && (n = e.globals.minXDiff / o), n > t / 2 && (n /= 2), (s = n / r * parseInt(e.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (s = 1), s = s / (r > 1 ? 1 : 1.5) + 5, e.globals.barPadForNumericAxis = s;
        }
        return s;
      }
    }, {
      key: "gridPadFortitleSubtitle",
      value: function () {
        var t = this,
          e = this.w,
          i = e.globals,
          a = this.dCtx.isSparkline || !e.globals.axisCharts ? 0 : 10;
        ["title", "subtitle"].forEach(function (i) {
          void 0 !== e.config[i].text ? a += e.config[i].margin : a += t.dCtx.isSparkline || !e.globals.axisCharts ? 0 : 5;
        }), !e.config.legend.show || "bottom" !== e.config.legend.position || e.config.legend.floating || e.globals.axisCharts || (a += 10);
        var s = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
          r = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
        i.gridHeight = i.gridHeight - s.height - r.height - a, i.translateY = i.translateY + s.height + r.height + a;
      }
    }, {
      key: "setGridXPosForDualYAxis",
      value: function (t, e) {
        var i = this.w,
          a = new B(this.dCtx.ctx);
        i.config.yaxis.map(function (s, r) {
          -1 !== i.globals.ignoreYAxisIndexes.indexOf(r) || s.floating || a.isYAxisHidden(r) || (s.opposite && (i.globals.translateX = i.globals.translateX - (e[r].width + t[r].width) - parseInt(i.config.yaxis[r].labels.style.fontSize, 10) / 1.2 - 12), i.globals.translateX < 2 && (i.globals.translateX = 2));
        });
      }
    }]), t;
  }(),
  ot = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.lgRect = {}, this.yAxisWidth = 0, this.yAxisWidthLeft = 0, this.yAxisWidthRight = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.dimHelpers = new it(this), this.dimYAxis = new st(this), this.dimXAxis = new at(this), this.dimGrid = new rt(this), this.lgWidthForSideLegends = 0, this.gridPad = this.w.config.grid.padding, this.xPadRight = 0, this.xPadLeft = 0;
    }
    return r(t, [{
      key: "plotCoords",
      value: function () {
        var t = this,
          e = this.w,
          i = e.globals;
        this.lgRect = this.dimHelpers.getLegendsRect(), this.isSparkline && ((e.config.markers.discrete.length > 0 || e.config.markers.size > 0) && Object.entries(this.gridPad).forEach(function (e) {
          var i = g(e, 2),
            a = i[0],
            s = i[1];
          t.gridPad[a] = Math.max(s, t.w.globals.markers.largestSize / 1.5);
        }), this.gridPad.top = Math.max(e.config.stroke.width / 2, this.gridPad.top), this.gridPad.bottom = Math.max(e.config.stroke.width / 2, this.gridPad.bottom)), i.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(), this.dimGrid.gridPadFortitleSubtitle(), i.gridHeight = i.gridHeight - this.gridPad.top - this.gridPad.bottom, i.gridWidth = i.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
        var a = this.dimGrid.gridPadForColumnsInNumericAxis(i.gridWidth);
        i.gridWidth = i.gridWidth - 2 * a, i.translateX = i.translateX + this.gridPad.left + this.xPadLeft + (a > 0 ? a + 4 : 0), i.translateY = i.translateY + this.gridPad.top;
      }
    }, {
      key: "setDimensionsForAxisCharts",
      value: function () {
        var t = this,
          e = this.w,
          i = e.globals,
          a = this.dimYAxis.getyAxisLabelsCoords(),
          s = this.dimYAxis.getyAxisTitleCoords();
        e.globals.yLabelsCoords = [], e.globals.yTitleCoords = [], e.config.yaxis.map(function (t, i) {
          e.globals.yLabelsCoords.push({
            width: a[i].width,
            index: i
          }), e.globals.yTitleCoords.push({
            width: s[i].width,
            index: i
          });
        }), this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
        var r = this.dimXAxis.getxAxisLabelsCoords(),
          o = this.dimXAxis.getxAxisGroupLabelsCoords(),
          n = this.dimXAxis.getxAxisTitleCoords();
        this.conditionalChecksForAxisCoords(r, n, o), i.translateXAxisY = e.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, i.translateXAxisX = e.globals.rotateXLabels && e.globals.isXNumeric && e.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, e.globals.isBarHorizontal && (i.rotateXLabels = !1, i.translateXAxisY = parseInt(e.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1), i.translateXAxisY = i.translateXAxisY + e.config.xaxis.labels.offsetY, i.translateXAxisX = i.translateXAxisX + e.config.xaxis.labels.offsetX;
        var l = this.yAxisWidth,
          h = this.xAxisHeight;
        i.xAxisLabelsHeight = this.xAxisHeight - n.height, i.xAxisGroupLabelsHeight = i.xAxisLabelsHeight - r.height, i.xAxisLabelsWidth = this.xAxisWidth, i.xAxisHeight = this.xAxisHeight;
        var c = 10;
        ("radar" === e.config.chart.type || this.isSparkline) && (l = 0, h = i.goldenPadding), this.isSparkline && (this.lgRect = {
          height: 0,
          width: 0
        }), (this.isSparkline || "treemap" === e.config.chart.type) && (l = 0, h = 0, c = 0), this.isSparkline || this.dimXAxis.additionalPaddingXLabels(r);
        var d = function () {
          i.translateX = l, i.gridHeight = i.svgHeight - t.lgRect.height - h - (t.isSparkline || "treemap" === e.config.chart.type ? 0 : e.globals.rotateXLabels ? 10 : 15), i.gridWidth = i.svgWidth - l;
        };
        switch ("top" === e.config.xaxis.position && (c = i.xAxisHeight - e.config.xaxis.axisTicks.height - 5), e.config.legend.position) {
          case "bottom":
            i.translateY = c, d();
            break;
          case "top":
            i.translateY = this.lgRect.height + c, d();
            break;
          case "left":
            i.translateY = c, i.translateX = this.lgRect.width + l, i.gridHeight = i.svgHeight - h - 12, i.gridWidth = i.svgWidth - this.lgRect.width - l;
            break;
          case "right":
            i.translateY = c, i.translateX = l, i.gridHeight = i.svgHeight - h - 12, i.gridWidth = i.svgWidth - this.lgRect.width - l - 5;
            break;
          default:
            throw new Error("Legend position not supported");
        }
        this.dimGrid.setGridXPosForDualYAxis(s, a), new q(this.ctx).setYAxisXPosition(a, s);
      }
    }, {
      key: "setDimensionsForNonAxisCharts",
      value: function () {
        var t = this.w,
          e = t.globals,
          i = t.config,
          a = 0;
        t.config.legend.show && !t.config.legend.floating && (a = 20);
        var s = "pie" === i.chart.type || "polarArea" === i.chart.type || "donut" === i.chart.type ? "pie" : "radialBar",
          r = i.plotOptions[s].offsetY,
          o = i.plotOptions[s].offsetX;
        if (!i.legend.show || i.legend.floating) return e.gridHeight = e.svgHeight - i.grid.padding.left + i.grid.padding.right, e.gridWidth = e.gridHeight, e.translateY = r, void (e.translateX = o + (e.svgWidth - e.gridWidth) / 2);
        switch (i.legend.position) {
          case "bottom":
            e.gridHeight = e.svgHeight - this.lgRect.height - e.goldenPadding, e.gridWidth = e.svgWidth, e.translateY = r - 10, e.translateX = o + (e.svgWidth - e.gridWidth) / 2;
            break;
          case "top":
            e.gridHeight = e.svgHeight - this.lgRect.height - e.goldenPadding, e.gridWidth = e.svgWidth, e.translateY = this.lgRect.height + r + 10, e.translateX = o + (e.svgWidth - e.gridWidth) / 2;
            break;
          case "left":
            e.gridWidth = e.svgWidth - this.lgRect.width - a, e.gridHeight = "auto" !== i.chart.height ? e.svgHeight : e.gridWidth, e.translateY = r, e.translateX = o + this.lgRect.width + a;
            break;
          case "right":
            e.gridWidth = e.svgWidth - this.lgRect.width - a - 5, e.gridHeight = "auto" !== i.chart.height ? e.svgHeight : e.gridWidth, e.translateY = r, e.translateX = o + 10;
            break;
          default:
            throw new Error("Legend position not supported");
        }
      }
    }, {
      key: "conditionalChecksForAxisCoords",
      value: function (t, e, i) {
        var a = this.w,
          s = a.globals.hasXaxisGroups ? 2 : 1,
          r = i.height + t.height + e.height,
          o = a.globals.isMultiLineX ? 1.2 : a.globals.LINE_HEIGHT_RATIO,
          n = a.globals.rotateXLabels ? 22 : 10,
          l = a.globals.rotateXLabels && "bottom" === a.config.legend.position ? 10 : 0;
        this.xAxisHeight = r * o + s * n + l, this.xAxisWidth = t.width, this.xAxisHeight - e.height > a.config.xaxis.labels.maxHeight && (this.xAxisHeight = a.config.xaxis.labels.maxHeight), a.config.xaxis.labels.minHeight && this.xAxisHeight < a.config.xaxis.labels.minHeight && (this.xAxisHeight = a.config.xaxis.labels.minHeight), a.config.xaxis.floating && (this.xAxisHeight = 0);
        var h = 0,
          c = 0;
        a.config.yaxis.forEach(function (t) {
          h += t.labels.minWidth, c += t.labels.maxWidth;
        }), this.yAxisWidth < h && (this.yAxisWidth = h), this.yAxisWidth > c && (this.yAxisWidth = c);
      }
    }]), t;
  }(),
  nt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.lgCtx = e;
    }
    return r(t, [{
      key: "getLegendStyles",
      value: function () {
        var t,
          e,
          i,
          a = document.createElement("style");
        a.setAttribute("type", "text/css");
        var s = (null === (t = this.lgCtx.ctx) || void 0 === t || null === (e = t.opts) || void 0 === e || null === (i = e.chart) || void 0 === i ? void 0 : i.nonce) || this.w.config.chart.nonce;
        s && a.setAttribute("nonce", s);
        var r = document.createTextNode("\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }");
        return a.appendChild(r), a;
      }
    }, {
      key: "getLegendBBox",
      value: function () {
        var t = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),
          e = t.width;
        return {
          clwh: t.height,
          clww: e
        };
      }
    }, {
      key: "appendToForeignObject",
      value: function () {
        this.w.globals.dom.elLegendForeign.appendChild(this.getLegendStyles());
      }
    }, {
      key: "toggleDataSeries",
      value: function (t, e) {
        var i = this,
          a = this.w;
        if (a.globals.axisCharts || "radialBar" === a.config.chart.type) {
          a.globals.resized = !0;
          var s = null,
            r = null;
          if (a.globals.risingSeries = [], a.globals.axisCharts ? (s = a.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t, "']")), r = parseInt(s.getAttribute("data:realIndex"), 10)) : (s = a.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(t + 1, "']")), r = parseInt(s.getAttribute("rel"), 10) - 1), e) [{
            cs: a.globals.collapsedSeries,
            csi: a.globals.collapsedSeriesIndices
          }, {
            cs: a.globals.ancillaryCollapsedSeries,
            csi: a.globals.ancillaryCollapsedSeriesIndices
          }].forEach(function (t) {
            i.riseCollapsedSeries(t.cs, t.csi, r);
          });else this.hideSeries({
            seriesEl: s,
            realIndex: r
          });
        } else {
          var o = a.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(t + 1, "'] path")),
            n = a.config.chart.type;
          if ("pie" === n || "polarArea" === n || "donut" === n) {
            var l = a.config.plotOptions.pie.donut.labels;
            new m(this.lgCtx.ctx).pathMouseDown(o.members[0], null), this.lgCtx.ctx.pie.printDataLabelsInner(o.members[0].node, l);
          }
          o.fire("click");
        }
      }
    }, {
      key: "hideSeries",
      value: function (t) {
        var e = t.seriesEl,
          i = t.realIndex,
          a = this.w,
          s = x.clone(a.config.series);
        if (a.globals.axisCharts) {
          var r = !1;
          if (a.config.yaxis[i] && a.config.yaxis[i].show && a.config.yaxis[i].showAlways && (r = !0, a.globals.ancillaryCollapsedSeriesIndices.indexOf(i) < 0 && (a.globals.ancillaryCollapsedSeries.push({
            index: i,
            data: s[i].data.slice(),
            type: e.parentNode.className.baseVal.split("-")[1]
          }), a.globals.ancillaryCollapsedSeriesIndices.push(i))), !r) {
            a.globals.collapsedSeries.push({
              index: i,
              data: s[i].data.slice(),
              type: e.parentNode.className.baseVal.split("-")[1]
            }), a.globals.collapsedSeriesIndices.push(i);
            var o = a.globals.risingSeries.indexOf(i);
            a.globals.risingSeries.splice(o, 1);
          }
        } else a.globals.collapsedSeries.push({
          index: i,
          data: s[i]
        }), a.globals.collapsedSeriesIndices.push(i);
        for (var n = e.childNodes, l = 0; l < n.length; l++) n[l].classList.contains("apexcharts-series-markers-wrap") && (n[l].classList.contains("apexcharts-hide") ? n[l].classList.remove("apexcharts-hide") : n[l].classList.add("apexcharts-hide"));
        a.globals.allSeriesCollapsed = a.globals.collapsedSeries.length === a.config.series.length, s = this._getSeriesBasedOnCollapsedState(s), this.lgCtx.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled);
      }
    }, {
      key: "riseCollapsedSeries",
      value: function (t, e, i) {
        var a = this.w,
          s = x.clone(a.config.series);
        if (t.length > 0) {
          for (var r = 0; r < t.length; r++) t[r].index === i && (a.globals.axisCharts ? (s[i].data = t[r].data.slice(), t.splice(r, 1), e.splice(r, 1), a.globals.risingSeries.push(i)) : (s[i] = t[r].data, t.splice(r, 1), e.splice(r, 1), a.globals.risingSeries.push(i)));
          s = this._getSeriesBasedOnCollapsedState(s), this.lgCtx.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled);
        }
      }
    }, {
      key: "_getSeriesBasedOnCollapsedState",
      value: function (t) {
        var e = this.w;
        return e.globals.axisCharts ? t.forEach(function (i, a) {
          e.globals.collapsedSeriesIndices.indexOf(a) > -1 && (t[a].data = []);
        }) : t.forEach(function (i, a) {
          e.globals.collapsedSeriesIndices.indexOf(a) > -1 && (t[a] = 0);
        }), t;
      }
    }]), t;
  }(),
  lt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this), this.isBarsDistributed = "bar" === this.w.config.chart.type && this.w.config.plotOptions.bar.distributed && 1 === this.w.config.series.length, this.legendHelpers = new nt(this);
    }
    return r(t, [{
      key: "init",
      value: function () {
        var t = this.w,
          e = t.globals,
          i = t.config;
        if ((i.legend.showForSingleSeries && 1 === e.series.length || this.isBarsDistributed || e.series.length > 1 || !e.axisCharts) && i.legend.show) {
          for (; e.dom.elLegendWrap.firstChild;) e.dom.elLegendWrap.removeChild(e.dom.elLegendWrap.firstChild);
          this.drawLegends(), x.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(), "bottom" === i.legend.position || "top" === i.legend.position ? this.legendAlignHorizontal() : "right" !== i.legend.position && "left" !== i.legend.position || this.legendAlignVertical();
        }
      }
    }, {
      key: "drawLegends",
      value: function () {
        var t = this,
          e = this.w,
          i = e.config.legend.fontFamily,
          a = e.globals.seriesNames,
          s = e.globals.colors.slice();
        if ("heatmap" === e.config.chart.type) {
          var r = e.config.plotOptions.heatmap.colorScale.ranges;
          a = r.map(function (t) {
            return t.name ? t.name : t.from + " - " + t.to;
          }), s = r.map(function (t) {
            return t.color;
          });
        } else this.isBarsDistributed && (a = e.globals.labels.slice());
        e.config.legend.customLegendItems.length && (a = e.config.legend.customLegendItems);
        for (var o = e.globals.legendFormatter, n = e.config.legend.inverseOrder, l = n ? a.length - 1 : 0; n ? l >= 0 : l <= a.length - 1; n ? l-- : l++) {
          var h,
            c = o(a[l], {
              seriesIndex: l,
              w: e
            }),
            d = !1,
            g = !1;
          if (e.globals.collapsedSeries.length > 0) for (var u = 0; u < e.globals.collapsedSeries.length; u++) e.globals.collapsedSeries[u].index === l && (d = !0);
          if (e.globals.ancillaryCollapsedSeriesIndices.length > 0) for (var p = 0; p < e.globals.ancillaryCollapsedSeriesIndices.length; p++) e.globals.ancillaryCollapsedSeriesIndices[p] === l && (g = !0);
          var f = document.createElement("span");
          f.classList.add("apexcharts-legend-marker");
          var b = e.config.legend.markers.offsetX,
            v = e.config.legend.markers.offsetY,
            w = e.config.legend.markers.height,
            k = e.config.legend.markers.width,
            A = e.config.legend.markers.strokeWidth,
            S = e.config.legend.markers.strokeColor,
            C = e.config.legend.markers.radius,
            L = f.style;
          L.background = s[l], L.color = s[l], L.setProperty("background", s[l], "important"), e.config.legend.markers.fillColors && e.config.legend.markers.fillColors[l] && (L.background = e.config.legend.markers.fillColors[l]), void 0 !== e.globals.seriesColors[l] && (L.background = e.globals.seriesColors[l], L.color = e.globals.seriesColors[l]), L.height = Array.isArray(w) ? parseFloat(w[l]) + "px" : parseFloat(w) + "px", L.width = Array.isArray(k) ? parseFloat(k[l]) + "px" : parseFloat(k) + "px", L.left = (Array.isArray(b) ? parseFloat(b[l]) : parseFloat(b)) + "px", L.top = (Array.isArray(v) ? parseFloat(v[l]) : parseFloat(v)) + "px", L.borderWidth = Array.isArray(A) ? A[l] : A, L.borderColor = Array.isArray(S) ? S[l] : S, L.borderRadius = Array.isArray(C) ? parseFloat(C[l]) + "px" : parseFloat(C) + "px", e.config.legend.markers.customHTML && (Array.isArray(e.config.legend.markers.customHTML) ? e.config.legend.markers.customHTML[l] && (f.innerHTML = e.config.legend.markers.customHTML[l]()) : f.innerHTML = e.config.legend.markers.customHTML()), m.setAttrs(f, {
            rel: l + 1,
            "data:collapsed": d || g
          }), (d || g) && f.classList.add("apexcharts-inactive-legend");
          var P = document.createElement("div"),
            I = document.createElement("span");
          I.classList.add("apexcharts-legend-text"), I.innerHTML = Array.isArray(c) ? c.join(" ") : c;
          var T = e.config.legend.labels.useSeriesColors ? e.globals.colors[l] : Array.isArray(e.config.legend.labels.colors) ? null === (h = e.config.legend.labels.colors) || void 0 === h ? void 0 : h[l] : e.config.legend.labels.colors;
          T || (T = e.config.chart.foreColor), I.style.color = T, I.style.fontSize = parseFloat(e.config.legend.fontSize) + "px", I.style.fontWeight = e.config.legend.fontWeight, I.style.fontFamily = i || e.config.chart.fontFamily, m.setAttrs(I, {
            rel: l + 1,
            i: l,
            "data:default-text": encodeURIComponent(c),
            "data:collapsed": d || g
          }), P.appendChild(f), P.appendChild(I);
          var M = new y(this.ctx);
          if (!e.config.legend.showForZeroSeries) 0 === M.getSeriesTotalByIndex(l) && M.seriesHaveSameValues(l) && !M.isSeriesNull(l) && -1 === e.globals.collapsedSeriesIndices.indexOf(l) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && P.classList.add("apexcharts-hidden-zero-series");
          e.config.legend.showForNullSeries || M.isSeriesNull(l) && -1 === e.globals.collapsedSeriesIndices.indexOf(l) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && P.classList.add("apexcharts-hidden-null-series"), e.globals.dom.elLegendWrap.appendChild(P), e.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(e.config.legend.horizontalAlign)), e.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + e.config.legend.position), P.classList.add("apexcharts-legend-series"), P.style.margin = "".concat(e.config.legend.itemMargin.vertical, "px ").concat(e.config.legend.itemMargin.horizontal, "px"), e.globals.dom.elLegendWrap.style.width = e.config.legend.width ? e.config.legend.width + "px" : "", e.globals.dom.elLegendWrap.style.height = e.config.legend.height ? e.config.legend.height + "px" : "", m.setAttrs(P, {
            rel: l + 1,
            seriesName: x.escapeString(a[l]),
            "data:collapsed": d || g
          }), (d || g) && P.classList.add("apexcharts-inactive-legend"), e.config.legend.onItemClick.toggleDataSeries || P.classList.add("apexcharts-no-click");
        }
        e.globals.dom.elWrap.addEventListener("click", t.onLegendClick, !0), e.config.legend.onItemHover.highlightDataSeries && 0 === e.config.legend.customLegendItems.length && (e.globals.dom.elWrap.addEventListener("mousemove", t.onLegendHovered, !0), e.globals.dom.elWrap.addEventListener("mouseout", t.onLegendHovered, !0));
      }
    }, {
      key: "setLegendWrapXY",
      value: function (t, e) {
        var i = this.w,
          a = i.globals.dom.elLegendWrap,
          s = a.getBoundingClientRect(),
          r = 0,
          o = 0;
        if ("bottom" === i.config.legend.position) o += i.globals.svgHeight - s.height / 2;else if ("top" === i.config.legend.position) {
          var n = new ot(this.ctx),
            l = n.dimHelpers.getTitleSubtitleCoords("title").height,
            h = n.dimHelpers.getTitleSubtitleCoords("subtitle").height;
          o = o + (l > 0 ? l - 10 : 0) + (h > 0 ? h - 10 : 0);
        }
        a.style.position = "absolute", r = r + t + i.config.legend.offsetX, o = o + e + i.config.legend.offsetY, a.style.left = r + "px", a.style.top = o + "px", "bottom" === i.config.legend.position ? (a.style.top = "auto", a.style.bottom = 5 - i.config.legend.offsetY + "px") : "right" === i.config.legend.position && (a.style.left = "auto", a.style.right = 25 + i.config.legend.offsetX + "px");
        ["width", "height"].forEach(function (t) {
          a.style[t] && (a.style[t] = parseInt(i.config.legend[t], 10) + "px");
        });
      }
    }, {
      key: "legendAlignHorizontal",
      value: function () {
        var t = this.w;
        t.globals.dom.elLegendWrap.style.right = 0;
        var e = this.legendHelpers.getLegendBBox(),
          i = new ot(this.ctx),
          a = i.dimHelpers.getTitleSubtitleCoords("title"),
          s = i.dimHelpers.getTitleSubtitleCoords("subtitle"),
          r = 0;
        "bottom" === t.config.legend.position ? r = -e.clwh / 1.8 : "top" === t.config.legend.position && (r = a.height + s.height + t.config.title.margin + t.config.subtitle.margin - 10), this.setLegendWrapXY(20, r);
      }
    }, {
      key: "legendAlignVertical",
      value: function () {
        var t = this.w,
          e = this.legendHelpers.getLegendBBox(),
          i = 0;
        "left" === t.config.legend.position && (i = 20), "right" === t.config.legend.position && (i = t.globals.svgWidth - e.clww - 10), this.setLegendWrapXY(i, 20);
      }
    }, {
      key: "onLegendHovered",
      value: function (t) {
        var e = this.w,
          i = t.target.classList.contains("apexcharts-legend-series") || t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker");
        if ("heatmap" === e.config.chart.type || this.isBarsDistributed) {
          if (i) {
            var a = parseInt(t.target.getAttribute("rel"), 10) - 1;
            this.ctx.events.fireEvent("legendHover", [this.ctx, a, this.w]), new N(this.ctx).highlightRangeInSeries(t, t.target);
          }
        } else !t.target.classList.contains("apexcharts-inactive-legend") && i && new N(this.ctx).toggleSeriesOnHover(t, t.target);
      }
    }, {
      key: "onLegendClick",
      value: function (t) {
        var e = this.w;
        if (!e.config.legend.customLegendItems.length && (t.target.classList.contains("apexcharts-legend-series") || t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker"))) {
          var i = parseInt(t.target.getAttribute("rel"), 10) - 1,
            a = "true" === t.target.getAttribute("data:collapsed"),
            s = this.w.config.chart.events.legendClick;
          "function" == typeof s && s(this.ctx, i, this.w), this.ctx.events.fireEvent("legendClick", [this.ctx, i, this.w]);
          var r = this.w.config.legend.markers.onClick;
          "function" == typeof r && t.target.classList.contains("apexcharts-legend-marker") && (r(this.ctx, i, this.w), this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, i, this.w])), "treemap" !== e.config.chart.type && "heatmap" !== e.config.chart.type && !this.isBarsDistributed && e.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(i, a);
        }
      }
    }]), t;
  }(),
  ht = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
      var i = this.w;
      this.ev = this.w.config.chart.events, this.selectedClass = "apexcharts-selected", this.localeValues = this.w.globals.locale.toolbar, this.minX = i.globals.minX, this.maxX = i.globals.maxX;
    }
    return r(t, [{
      key: "createToolbar",
      value: function () {
        var t = this,
          e = this.w,
          i = function () {
            return document.createElement("div");
          },
          a = i();
        if (a.setAttribute("class", "apexcharts-toolbar"), a.style.top = e.config.chart.toolbar.offsetY + "px", a.style.right = 3 - e.config.chart.toolbar.offsetX + "px", e.globals.dom.elWrap.appendChild(a), this.elZoom = i(), this.elZoomIn = i(), this.elZoomOut = i(), this.elPan = i(), this.elSelection = i(), this.elZoomReset = i(), this.elMenuIcon = i(), this.elMenu = i(), this.elCustomIcons = [], this.t = e.config.chart.toolbar.tools, Array.isArray(this.t.customIcons)) for (var s = 0; s < this.t.customIcons.length; s++) this.elCustomIcons.push(i());
        var r = [],
          o = function (i, a, s) {
            var o = i.toLowerCase();
            t.t[o] && e.config.chart.zoom.enabled && r.push({
              el: a,
              icon: "string" == typeof t.t[o] ? t.t[o] : s,
              title: t.localeValues[i],
              class: "apexcharts-".concat(o, "-icon")
            });
          };
        o("zoomIn", this.elZoomIn, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'), o("zoomOut", this.elZoomOut, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');
        var n = function (i) {
          t.t[i] && e.config.chart[i].enabled && r.push({
            el: "zoom" === i ? t.elZoom : t.elSelection,
            icon: "string" == typeof t.t[i] ? t.t[i] : "zoom" === i ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>' : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',
            title: t.localeValues["zoom" === i ? "selectionZoom" : "selection"],
            class: e.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(i, "-icon")
          });
        };
        n("zoom"), n("selection"), this.t.pan && e.config.chart.zoom.enabled && r.push({
          el: this.elPan,
          icon: "string" == typeof this.t.pan ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',
          title: this.localeValues.pan,
          class: e.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon"
        }), o("reset", this.elZoomReset, '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'), this.t.download && r.push({
          el: this.elMenuIcon,
          icon: "string" == typeof this.t.download ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
          title: this.localeValues.menu,
          class: "apexcharts-menu-icon"
        });
        for (var l = 0; l < this.elCustomIcons.length; l++) r.push({
          el: this.elCustomIcons[l],
          icon: this.t.customIcons[l].icon,
          title: this.t.customIcons[l].title,
          index: this.t.customIcons[l].index,
          class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[l].class
        });
        r.forEach(function (t, e) {
          t.index && x.moveIndexInArray(r, e, t.index);
        });
        for (var h = 0; h < r.length; h++) m.setAttrs(r[h].el, {
          class: r[h].class,
          title: r[h].title
        }), r[h].el.innerHTML = r[h].icon, a.appendChild(r[h].el);
        this._createHamburgerMenu(a), e.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : e.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : e.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass), this.addToolbarEventListeners();
      }
    }, {
      key: "_createHamburgerMenu",
      value: function (t) {
        this.elMenuItems = [], t.appendChild(this.elMenu), m.setAttrs(this.elMenu, {
          class: "apexcharts-menu"
        });
        for (var e = [{
            name: "exportSVG",
            title: this.localeValues.exportToSVG
          }, {
            name: "exportPNG",
            title: this.localeValues.exportToPNG
          }, {
            name: "exportCSV",
            title: this.localeValues.exportToCSV
          }], i = 0; i < e.length; i++) this.elMenuItems.push(document.createElement("div")), this.elMenuItems[i].innerHTML = e[i].title, m.setAttrs(this.elMenuItems[i], {
          class: "apexcharts-menu-item ".concat(e[i].name),
          title: e[i].title
        }), this.elMenu.appendChild(this.elMenuItems[i]);
      }
    }, {
      key: "addToolbarEventListeners",
      value: function () {
        var t = this;
        this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")), this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach(function (e) {
          e.classList.contains("exportSVG") ? e.addEventListener("click", t.handleDownload.bind(t, "svg")) : e.classList.contains("exportPNG") ? e.addEventListener("click", t.handleDownload.bind(t, "png")) : e.classList.contains("exportCSV") && e.addEventListener("click", t.handleDownload.bind(t, "csv"));
        });
        for (var e = 0; e < this.t.customIcons.length; e++) this.elCustomIcons[e].addEventListener("click", this.t.customIcons[e].click.bind(this, this.ctx, this.ctx.w));
      }
    }, {
      key: "toggleZoomSelection",
      value: function (t) {
        this.ctx.getSyncedCharts().forEach(function (e) {
          e.ctx.toolbar.toggleOtherControls();
          var i = "selection" === t ? e.ctx.toolbar.elSelection : e.ctx.toolbar.elZoom,
            a = "selection" === t ? "selectionEnabled" : "zoomEnabled";
          e.w.globals[a] = !e.w.globals[a], i.classList.contains(e.ctx.toolbar.selectedClass) ? i.classList.remove(e.ctx.toolbar.selectedClass) : i.classList.add(e.ctx.toolbar.selectedClass);
        });
      }
    }, {
      key: "getToolbarIconsReference",
      value: function () {
        var t = this.w;
        this.elZoom || (this.elZoom = t.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = t.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = t.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"));
      }
    }, {
      key: "enableZoomPanFromToolbar",
      value: function (t) {
        this.toggleOtherControls(), "pan" === t ? this.w.globals.panEnabled = !0 : this.w.globals.zoomEnabled = !0;
        var e = "pan" === t ? this.elPan : this.elZoom,
          i = "pan" === t ? this.elZoom : this.elPan;
        e && e.classList.add(this.selectedClass), i && i.classList.remove(this.selectedClass);
      }
    }, {
      key: "togglePanning",
      value: function () {
        this.ctx.getSyncedCharts().forEach(function (t) {
          t.ctx.toolbar.toggleOtherControls(), t.w.globals.panEnabled = !t.w.globals.panEnabled, t.ctx.toolbar.elPan.classList.contains(t.ctx.toolbar.selectedClass) ? t.ctx.toolbar.elPan.classList.remove(t.ctx.toolbar.selectedClass) : t.ctx.toolbar.elPan.classList.add(t.ctx.toolbar.selectedClass);
        });
      }
    }, {
      key: "toggleOtherControls",
      value: function () {
        var t = this,
          e = this.w;
        e.globals.panEnabled = !1, e.globals.zoomEnabled = !1, e.globals.selectionEnabled = !1, this.getToolbarIconsReference(), [this.elPan, this.elSelection, this.elZoom].forEach(function (e) {
          e && e.classList.remove(t.selectedClass);
        });
      }
    }, {
      key: "handleZoomIn",
      value: function () {
        var t = this.w;
        t.globals.isRangeBar && (this.minX = t.globals.minY, this.maxX = t.globals.maxY);
        var e = (this.minX + this.maxX) / 2,
          i = (this.minX + e) / 2,
          a = (this.maxX + e) / 2,
          s = this._getNewMinXMaxX(i, a);
        t.globals.disableZoomIn || this.zoomUpdateOptions(s.minX, s.maxX);
      }
    }, {
      key: "handleZoomOut",
      value: function () {
        var t = this.w;
        if (t.globals.isRangeBar && (this.minX = t.globals.minY, this.maxX = t.globals.maxY), !("datetime" === t.config.xaxis.type && new Date(this.minX).getUTCFullYear() < 1e3)) {
          var e = (this.minX + this.maxX) / 2,
            i = this.minX - (e - this.minX),
            a = this.maxX - (e - this.maxX),
            s = this._getNewMinXMaxX(i, a);
          t.globals.disableZoomOut || this.zoomUpdateOptions(s.minX, s.maxX);
        }
      }
    }, {
      key: "_getNewMinXMaxX",
      value: function (t, e) {
        var i = this.w.config.xaxis.convertedCatToNumeric;
        return {
          minX: i ? Math.floor(t) : t,
          maxX: i ? Math.floor(e) : e
        };
      }
    }, {
      key: "zoomUpdateOptions",
      value: function (t, e) {
        var i = this.w;
        if (void 0 !== t || void 0 !== e) {
          if (!(i.config.xaxis.convertedCatToNumeric && (t < 1 && (t = 1, e = i.globals.dataPoints), e - t < 2))) {
            var a = {
                min: t,
                max: e
              },
              s = this.getBeforeZoomRange(a);
            s && (a = s.xaxis);
            var r = {
                xaxis: a
              },
              o = x.clone(i.globals.initialConfig.yaxis);
            if (i.config.chart.zoom.autoScaleYaxis) o = new _(this.ctx).autoScaleY(this.ctx, o, {
              xaxis: a
            });
            i.config.chart.group || (r.yaxis = o), this.w.globals.zoomed = !0, this.ctx.updateHelpers._updateOptions(r, !1, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(a, o);
          }
        } else this.handleZoomReset();
      }
    }, {
      key: "zoomCallback",
      value: function (t, e) {
        "function" == typeof this.ev.zoomed && this.ev.zoomed(this.ctx, {
          xaxis: t,
          yaxis: e
        });
      }
    }, {
      key: "getBeforeZoomRange",
      value: function (t, e) {
        var i = null;
        return "function" == typeof this.ev.beforeZoom && (i = this.ev.beforeZoom(this, {
          xaxis: t,
          yaxis: e
        })), i;
      }
    }, {
      key: "toggleMenu",
      value: function () {
        var t = this;
        window.setTimeout(function () {
          t.elMenu.classList.contains("apexcharts-menu-open") ? t.elMenu.classList.remove("apexcharts-menu-open") : t.elMenu.classList.add("apexcharts-menu-open");
        }, 0);
      }
    }, {
      key: "handleDownload",
      value: function (t) {
        var e = this.w,
          i = new G(this.ctx);
        switch (t) {
          case "svg":
            i.exportToSVG(this.ctx);
            break;
          case "png":
            i.exportToPng(this.ctx);
            break;
          case "csv":
            i.exportToCSV({
              series: e.config.series,
              columnDelimiter: e.config.chart.toolbar.export.csv.columnDelimiter
            });
        }
      }
    }, {
      key: "handleZoomReset",
      value: function (t) {
        this.ctx.getSyncedCharts().forEach(function (t) {
          var e = t.w;
          if (e.globals.lastXAxis.min = e.globals.initialConfig.xaxis.min, e.globals.lastXAxis.max = e.globals.initialConfig.xaxis.max, t.updateHelpers.revertDefaultAxisMinMax(), "function" == typeof e.config.chart.events.beforeResetZoom) {
            var i = e.config.chart.events.beforeResetZoom(t, e);
            i && t.updateHelpers.revertDefaultAxisMinMax(i);
          }
          "function" == typeof e.config.chart.events.zoomed && t.ctx.toolbar.zoomCallback({
            min: e.config.xaxis.min,
            max: e.config.xaxis.max
          }), e.globals.zoomed = !1;
          var a = t.ctx.series.emptyCollapsedSeries(x.clone(e.globals.initialSeries));
          t.updateHelpers._updateSeries(a, e.config.chart.animations.dynamicAnimation.enabled);
        });
      }
    }, {
      key: "destroy",
      value: function () {
        this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null;
      }
    }]), t;
  }(),
  ct = function (t) {
    n(i, ht);
    var e = d(i);
    function i(t) {
      var s;
      return a(this, i), (s = e.call(this, t)).ctx = t, s.w = t.w, s.dragged = !1, s.graphics = new m(s.ctx), s.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], s.clientX = 0, s.clientY = 0, s.startX = 0, s.endX = 0, s.dragX = 0, s.startY = 0, s.endY = 0, s.dragY = 0, s.moveDirection = "none", s;
    }
    return r(i, [{
      key: "init",
      value: function (t) {
        var e = this,
          i = t.xyRatios,
          a = this.w,
          s = this;
        this.xyRatios = i, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = a.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), a.globals.dom.elGraphical.add(this.zoomRect), a.globals.dom.elGraphical.add(this.selectionRect), "x" === a.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
          minX: 0,
          minY: 0,
          maxX: a.globals.gridWidth,
          maxY: a.globals.gridHeight
        }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : "y" === a.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
          minX: 0,
          maxX: a.globals.gridWidth
        }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = a.globals.dom.baseEl.querySelector("".concat(a.globals.chartClass, " .apexcharts-svg")), this.hoverArea.classList.add("apexcharts-zoomable"), this.eventList.forEach(function (t) {
          e.hoverArea.addEventListener(t, s.svgMouseEvents.bind(s, i), {
            capture: !1,
            passive: !0
          });
        });
      }
    }, {
      key: "destroy",
      value: function () {
        this.slDraggableRect && (this.slDraggableRect.draggable(!1), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null;
      }
    }, {
      key: "svgMouseEvents",
      value: function (t, e) {
        var i = this.w,
          a = this,
          s = this.ctx.toolbar,
          r = i.globals.zoomEnabled ? i.config.chart.zoom.type : i.config.chart.selection.type,
          o = i.config.chart.toolbar.autoSelected;
        if (e.shiftKey ? (this.shiftWasPressed = !0, s.enableZoomPanFromToolbar("pan" === o ? "zoom" : "pan")) : this.shiftWasPressed && (s.enableZoomPanFromToolbar(o), this.shiftWasPressed = !1), e.target) {
          var n,
            l = e.target.classList;
          if (e.target.parentNode && null !== e.target.parentNode && (n = e.target.parentNode.classList), !(l.contains("apexcharts-selection-rect") || l.contains("apexcharts-legend-marker") || l.contains("apexcharts-legend-text") || n && n.contains("apexcharts-toolbar"))) {
            if (a.clientX = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientX : "touchend" === e.type ? e.changedTouches[0].clientX : e.clientX, a.clientY = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientY : "touchend" === e.type ? e.changedTouches[0].clientY : e.clientY, "mousedown" === e.type && 1 === e.which) {
              var h = a.gridRect.getBoundingClientRect();
              a.startX = a.clientX - h.left, a.startY = a.clientY - h.top, a.dragged = !1, a.w.globals.mousedown = !0;
            }
            if (("mousemove" === e.type && 1 === e.which || "touchmove" === e.type) && (a.dragged = !0, i.globals.panEnabled ? (i.globals.selection = null, a.w.globals.mousedown && a.panDragging({
              context: a,
              zoomtype: r,
              xyRatios: t
            })) : (a.w.globals.mousedown && i.globals.zoomEnabled || a.w.globals.mousedown && i.globals.selectionEnabled) && (a.selection = a.selectionDrawing({
              context: a,
              zoomtype: r
            }))), "mouseup" === e.type || "touchend" === e.type || "mouseleave" === e.type) {
              var c = a.gridRect.getBoundingClientRect();
              a.w.globals.mousedown && (a.endX = a.clientX - c.left, a.endY = a.clientY - c.top, a.dragX = Math.abs(a.endX - a.startX), a.dragY = Math.abs(a.endY - a.startY), (i.globals.zoomEnabled || i.globals.selectionEnabled) && a.selectionDrawn({
                context: a,
                zoomtype: r
              }), i.globals.panEnabled && i.config.xaxis.convertedCatToNumeric && a.delayedPanScrolled()), i.globals.zoomEnabled && a.hideSelectionRect(this.selectionRect), a.dragged = !1, a.w.globals.mousedown = !1;
            }
            this.makeSelectionRectDraggable();
          }
        }
      }
    }, {
      key: "makeSelectionRectDraggable",
      value: function () {
        var t = this.w;
        if (this.selectionRect) {
          var e = this.selectionRect.node.getBoundingClientRect();
          e.width > 0 && e.height > 0 && this.slDraggableRect.selectize({
            points: "l, r",
            pointSize: 8,
            pointType: "rect"
          }).resize({
            constraint: {
              minX: 0,
              minY: 0,
              maxX: t.globals.gridWidth,
              maxY: t.globals.gridHeight
            }
          }).on("resizing", this.selectionDragging.bind(this, "resizing"));
        }
      }
    }, {
      key: "preselectedSelection",
      value: function () {
        var t = this.w,
          e = this.xyRatios;
        if (!t.globals.zoomEnabled) if (void 0 !== t.globals.selection && null !== t.globals.selection) this.drawSelectionRect(t.globals.selection);else if (void 0 !== t.config.chart.selection.xaxis.min && void 0 !== t.config.chart.selection.xaxis.max) {
          var i = (t.config.chart.selection.xaxis.min - t.globals.minX) / e.xRatio,
            a = t.globals.gridWidth - (t.globals.maxX - t.config.chart.selection.xaxis.max) / e.xRatio - i;
          t.globals.isRangeBar && (i = (t.config.chart.selection.xaxis.min - t.globals.yAxisScale[0].niceMin) / e.invertedYRatio, a = (t.config.chart.selection.xaxis.max - t.config.chart.selection.xaxis.min) / e.invertedYRatio);
          var s = {
            x: i,
            y: 0,
            width: a,
            height: t.globals.gridHeight,
            translateX: 0,
            translateY: 0,
            selectionEnabled: !0
          };
          this.drawSelectionRect(s), this.makeSelectionRectDraggable(), "function" == typeof t.config.chart.events.selection && t.config.chart.events.selection(this.ctx, {
            xaxis: {
              min: t.config.chart.selection.xaxis.min,
              max: t.config.chart.selection.xaxis.max
            },
            yaxis: {}
          });
        }
      }
    }, {
      key: "drawSelectionRect",
      value: function (t) {
        var e = t.x,
          i = t.y,
          a = t.width,
          s = t.height,
          r = t.translateX,
          o = void 0 === r ? 0 : r,
          n = t.translateY,
          l = void 0 === n ? 0 : n,
          h = this.w,
          c = this.zoomRect,
          d = this.selectionRect;
        if (this.dragged || null !== h.globals.selection) {
          var g = {
            transform: "translate(" + o + ", " + l + ")"
          };
          h.globals.zoomEnabled && this.dragged && (a < 0 && (a = 1), c.attr({
            x: e,
            y: i,
            width: a,
            height: s,
            fill: h.config.chart.zoom.zoomedArea.fill.color,
            "fill-opacity": h.config.chart.zoom.zoomedArea.fill.opacity,
            stroke: h.config.chart.zoom.zoomedArea.stroke.color,
            "stroke-width": h.config.chart.zoom.zoomedArea.stroke.width,
            "stroke-opacity": h.config.chart.zoom.zoomedArea.stroke.opacity
          }), m.setAttrs(c.node, g)), h.globals.selectionEnabled && (d.attr({
            x: e,
            y: i,
            width: a > 0 ? a : 0,
            height: s > 0 ? s : 0,
            fill: h.config.chart.selection.fill.color,
            "fill-opacity": h.config.chart.selection.fill.opacity,
            stroke: h.config.chart.selection.stroke.color,
            "stroke-width": h.config.chart.selection.stroke.width,
            "stroke-dasharray": h.config.chart.selection.stroke.dashArray,
            "stroke-opacity": h.config.chart.selection.stroke.opacity
          }), m.setAttrs(d.node, g));
        }
      }
    }, {
      key: "hideSelectionRect",
      value: function (t) {
        t && t.attr({
          x: 0,
          y: 0,
          width: 0,
          height: 0
        });
      }
    }, {
      key: "selectionDrawing",
      value: function (t) {
        var e = t.context,
          i = t.zoomtype,
          a = this.w,
          s = e,
          r = this.gridRect.getBoundingClientRect(),
          o = s.startX - 1,
          n = s.startY,
          l = !1,
          h = !1,
          c = s.clientX - r.left - o,
          d = s.clientY - r.top - n,
          g = {};
        return Math.abs(c + o) > a.globals.gridWidth ? c = a.globals.gridWidth - o : s.clientX - r.left < 0 && (c = o), o > s.clientX - r.left && (l = !0, c = Math.abs(c)), n > s.clientY - r.top && (h = !0, d = Math.abs(d)), g = "x" === i ? {
          x: l ? o - c : o,
          y: 0,
          width: c,
          height: a.globals.gridHeight
        } : "y" === i ? {
          x: 0,
          y: h ? n - d : n,
          width: a.globals.gridWidth,
          height: d
        } : {
          x: l ? o - c : o,
          y: h ? n - d : n,
          width: c,
          height: d
        }, s.drawSelectionRect(g), s.selectionDragging("resizing"), g;
      }
    }, {
      key: "selectionDragging",
      value: function (t, e) {
        var i = this,
          a = this.w,
          s = this.xyRatios,
          r = this.selectionRect,
          o = 0;
        "resizing" === t && (o = 30);
        var n = function (t) {
            return parseFloat(r.node.getAttribute(t));
          },
          l = {
            x: n("x"),
            y: n("y"),
            width: n("width"),
            height: n("height")
          };
        a.globals.selection = l, "function" == typeof a.config.chart.events.selection && a.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout(function () {
          var t,
            e,
            o,
            n,
            l = i.gridRect.getBoundingClientRect(),
            h = r.node.getBoundingClientRect();
          a.globals.isRangeBar ? (t = a.globals.yAxisScale[0].niceMin + (h.left - l.left) * s.invertedYRatio, e = a.globals.yAxisScale[0].niceMin + (h.right - l.left) * s.invertedYRatio, o = 0, n = 1) : (t = a.globals.xAxisScale.niceMin + (h.left - l.left) * s.xRatio, e = a.globals.xAxisScale.niceMin + (h.right - l.left) * s.xRatio, o = a.globals.yAxisScale[0].niceMin + (l.bottom - h.bottom) * s.yRatio[0], n = a.globals.yAxisScale[0].niceMax - (h.top - l.top) * s.yRatio[0]);
          var c = {
            xaxis: {
              min: t,
              max: e
            },
            yaxis: {
              min: o,
              max: n
            }
          };
          a.config.chart.events.selection(i.ctx, c), a.config.chart.brush.enabled && void 0 !== a.config.chart.events.brushScrolled && a.config.chart.events.brushScrolled(i.ctx, c);
        }, o));
      }
    }, {
      key: "selectionDrawn",
      value: function (t) {
        var e = t.context,
          i = t.zoomtype,
          a = this.w,
          s = e,
          r = this.xyRatios,
          o = this.ctx.toolbar;
        if (s.startX > s.endX) {
          var n = s.startX;
          s.startX = s.endX, s.endX = n;
        }
        if (s.startY > s.endY) {
          var l = s.startY;
          s.startY = s.endY, s.endY = l;
        }
        var h = void 0,
          c = void 0;
        a.globals.isRangeBar ? (h = a.globals.yAxisScale[0].niceMin + s.startX * r.invertedYRatio, c = a.globals.yAxisScale[0].niceMin + s.endX * r.invertedYRatio) : (h = a.globals.xAxisScale.niceMin + s.startX * r.xRatio, c = a.globals.xAxisScale.niceMin + s.endX * r.xRatio);
        var d = [],
          g = [];
        if (a.config.yaxis.forEach(function (t, e) {
          d.push(a.globals.yAxisScale[e].niceMax - r.yRatio[e] * s.startY), g.push(a.globals.yAxisScale[e].niceMax - r.yRatio[e] * s.endY);
        }), s.dragged && (s.dragX > 10 || s.dragY > 10) && h !== c) if (a.globals.zoomEnabled) {
          var u = x.clone(a.globals.initialConfig.yaxis),
            p = x.clone(a.globals.initialConfig.xaxis);
          if (a.globals.zoomed = !0, a.config.xaxis.convertedCatToNumeric && (h = Math.floor(h), c = Math.floor(c), h < 1 && (h = 1, c = a.globals.dataPoints), c - h < 2 && (c = h + 1)), "xy" !== i && "x" !== i || (p = {
            min: h,
            max: c
          }), "xy" !== i && "y" !== i || u.forEach(function (t, e) {
            u[e].min = g[e], u[e].max = d[e];
          }), a.config.chart.zoom.autoScaleYaxis) {
            var f = new _(s.ctx);
            u = f.autoScaleY(s.ctx, u, {
              xaxis: p
            });
          }
          if (o) {
            var b = o.getBeforeZoomRange(p, u);
            b && (p = b.xaxis ? b.xaxis : p, u = b.yaxis ? b.yaxis : u);
          }
          var v = {
            xaxis: p
          };
          a.config.chart.group || (v.yaxis = u), s.ctx.updateHelpers._updateOptions(v, !1, s.w.config.chart.animations.dynamicAnimation.enabled), "function" == typeof a.config.chart.events.zoomed && o.zoomCallback(p, u);
        } else if (a.globals.selectionEnabled) {
          var m,
            y = null;
          m = {
            min: h,
            max: c
          }, "xy" !== i && "y" !== i || (y = x.clone(a.config.yaxis)).forEach(function (t, e) {
            y[e].min = g[e], y[e].max = d[e];
          }), a.globals.selection = s.selection, "function" == typeof a.config.chart.events.selection && a.config.chart.events.selection(s.ctx, {
            xaxis: m,
            yaxis: y
          });
        }
      }
    }, {
      key: "panDragging",
      value: function (t) {
        var e = t.context,
          i = this.w,
          a = e;
        if (void 0 !== i.globals.lastClientPosition.x) {
          var s = i.globals.lastClientPosition.x - a.clientX,
            r = i.globals.lastClientPosition.y - a.clientY;
          Math.abs(s) > Math.abs(r) && s > 0 ? this.moveDirection = "left" : Math.abs(s) > Math.abs(r) && s < 0 ? this.moveDirection = "right" : Math.abs(r) > Math.abs(s) && r > 0 ? this.moveDirection = "up" : Math.abs(r) > Math.abs(s) && r < 0 && (this.moveDirection = "down");
        }
        i.globals.lastClientPosition = {
          x: a.clientX,
          y: a.clientY
        };
        var o = i.globals.isRangeBar ? i.globals.minY : i.globals.minX,
          n = i.globals.isRangeBar ? i.globals.maxY : i.globals.maxX;
        i.config.xaxis.convertedCatToNumeric || a.panScrolled(o, n);
      }
    }, {
      key: "delayedPanScrolled",
      value: function () {
        var t = this.w,
          e = t.globals.minX,
          i = t.globals.maxX,
          a = (t.globals.maxX - t.globals.minX) / 2;
        "left" === this.moveDirection ? (e = t.globals.minX + a, i = t.globals.maxX + a) : "right" === this.moveDirection && (e = t.globals.minX - a, i = t.globals.maxX - a), e = Math.floor(e), i = Math.floor(i), this.updateScrolledChart({
          xaxis: {
            min: e,
            max: i
          }
        }, e, i);
      }
    }, {
      key: "panScrolled",
      value: function (t, e) {
        var i = this.w,
          a = this.xyRatios,
          s = x.clone(i.globals.initialConfig.yaxis),
          r = a.xRatio,
          o = i.globals.minX,
          n = i.globals.maxX;
        i.globals.isRangeBar && (r = a.invertedYRatio, o = i.globals.minY, n = i.globals.maxY), "left" === this.moveDirection ? (t = o + i.globals.gridWidth / 15 * r, e = n + i.globals.gridWidth / 15 * r) : "right" === this.moveDirection && (t = o - i.globals.gridWidth / 15 * r, e = n - i.globals.gridWidth / 15 * r), i.globals.isRangeBar || (t < i.globals.initialMinX || e > i.globals.initialMaxX) && (t = o, e = n);
        var l = {
          min: t,
          max: e
        };
        i.config.chart.zoom.autoScaleYaxis && (s = new _(this.ctx).autoScaleY(this.ctx, s, {
          xaxis: l
        }));
        var h = {
          xaxis: {
            min: t,
            max: e
          }
        };
        i.config.chart.group || (h.yaxis = s), this.updateScrolledChart(h, t, e);
      }
    }, {
      key: "updateScrolledChart",
      value: function (t, e, i) {
        var a = this.w;
        this.ctx.updateHelpers._updateOptions(t, !1, !1), "function" == typeof a.config.chart.events.scrolled && a.config.chart.events.scrolled(this.ctx, {
          xaxis: {
            min: e,
            max: i
          }
        });
      }
    }]), i;
  }(),
  dt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.ttCtx = e, this.ctx = e.ctx;
    }
    return r(t, [{
      key: "getNearestValues",
      value: function (t) {
        var e = t.hoverArea,
          i = t.elGrid,
          a = t.clientX,
          s = t.clientY,
          r = this.w,
          o = i.getBoundingClientRect(),
          n = o.width,
          l = o.height,
          h = n / (r.globals.dataPoints - 1),
          c = l / r.globals.dataPoints,
          d = this.hasBars();
        !r.globals.comboCharts && !d || r.config.xaxis.convertedCatToNumeric || (h = n / r.globals.dataPoints);
        var g = a - o.left - r.globals.barPadForNumericAxis,
          u = s - o.top;
        g < 0 || u < 0 || g > n || u > l ? (e.classList.remove("hovering-zoom"), e.classList.remove("hovering-pan")) : r.globals.zoomEnabled ? (e.classList.remove("hovering-pan"), e.classList.add("hovering-zoom")) : r.globals.panEnabled && (e.classList.remove("hovering-zoom"), e.classList.add("hovering-pan"));
        var p = Math.round(g / h),
          f = Math.floor(u / c);
        d && !r.config.xaxis.convertedCatToNumeric && (p = Math.ceil(g / h), p -= 1);
        var b = null,
          v = null,
          m = r.globals.seriesXvalues.map(function (t) {
            return t.filter(function (t) {
              return x.isNumber(t);
            });
          }),
          y = r.globals.seriesYvalues.map(function (t) {
            return t.filter(function (t) {
              return x.isNumber(t);
            });
          });
        if (r.globals.isXNumeric) {
          var w = this.ttCtx.getElGrid().getBoundingClientRect(),
            k = g * (w.width / n),
            A = u * (w.height / l);
          b = (v = this.closestInMultiArray(k, A, m, y)).index, p = v.j, null !== b && (m = r.globals.seriesXvalues[b], p = (v = this.closestInArray(k, m)).index);
        }
        return r.globals.capturedSeriesIndex = null === b ? -1 : b, (!p || p < 1) && (p = 0), r.globals.isBarHorizontal ? r.globals.capturedDataPointIndex = f : r.globals.capturedDataPointIndex = p, {
          capturedSeries: b,
          j: r.globals.isBarHorizontal ? f : p,
          hoverX: g,
          hoverY: u
        };
      }
    }, {
      key: "closestInMultiArray",
      value: function (t, e, i, a) {
        var s = this.w,
          r = 0,
          o = null,
          n = -1;
        s.globals.series.length > 1 ? r = this.getFirstActiveXArray(i) : o = 0;
        var l = i[r][0],
          h = Math.abs(t - l);
        if (i.forEach(function (e) {
          e.forEach(function (e, i) {
            var a = Math.abs(t - e);
            a <= h && (h = a, n = i);
          });
        }), -1 !== n) {
          var c = a[r][n],
            d = Math.abs(e - c);
          o = r, a.forEach(function (t, i) {
            var a = Math.abs(e - t[n]);
            a <= d && (d = a, o = i);
          });
        }
        return {
          index: o,
          j: n
        };
      }
    }, {
      key: "getFirstActiveXArray",
      value: function (t) {
        for (var e = this.w, i = 0, a = t.map(function (t, e) {
            return t.length > 0 ? e : -1;
          }), s = 0; s < a.length; s++) if (-1 !== a[s] && -1 === e.globals.collapsedSeriesIndices.indexOf(s) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(s)) {
          i = a[s];
          break;
        }
        return i;
      }
    }, {
      key: "closestInArray",
      value: function (t, e) {
        for (var i = e[0], a = null, s = Math.abs(t - i), r = 0; r < e.length; r++) {
          var o = Math.abs(t - e[r]);
          o < s && (s = o, a = r);
        }
        return {
          index: a
        };
      }
    }, {
      key: "isXoverlap",
      value: function (t) {
        var e = [],
          i = this.w.globals.seriesX.filter(function (t) {
            return void 0 !== t[0];
          });
        if (i.length > 0) for (var a = 0; a < i.length - 1; a++) void 0 !== i[a][t] && void 0 !== i[a + 1][t] && i[a][t] !== i[a + 1][t] && e.push("unEqual");
        return 0 === e.length;
      }
    }, {
      key: "isInitialSeriesSameLen",
      value: function () {
        for (var t = !0, e = this.w.globals.initialSeries, i = 0; i < e.length - 1; i++) if (e[i].data.length !== e[i + 1].data.length) {
          t = !1;
          break;
        }
        return t;
      }
    }, {
      key: "getBarsHeight",
      value: function (t) {
        return u(t).reduce(function (t, e) {
          return t + e.getBBox().height;
        }, 0);
      }
    }, {
      key: "getElMarkers",
      value: function (t) {
        return "number" == typeof t ? this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:realIndex='".concat(t, "'] .apexcharts-series-markers-wrap > *")) : this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap > *");
      }
    }, {
      key: "getAllMarkers",
      value: function () {
        var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
        (t = u(t)).sort(function (t, e) {
          var i = Number(t.getAttribute("data:realIndex")),
            a = Number(e.getAttribute("data:realIndex"));
          return a < i ? 1 : a > i ? -1 : 0;
        });
        var e = [];
        return t.forEach(function (t) {
          e.push(t.querySelector(".apexcharts-marker"));
        }), e;
      }
    }, {
      key: "hasMarkers",
      value: function (t) {
        return this.getElMarkers(t).length > 0;
      }
    }, {
      key: "getElBars",
      value: function () {
        return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series");
      }
    }, {
      key: "hasBars",
      value: function () {
        return this.getElBars().length > 0;
      }
    }, {
      key: "getHoverMarkerSize",
      value: function (t) {
        var e = this.w,
          i = e.config.markers.hover.size;
        return void 0 === i && (i = e.globals.markers.size[t] + e.config.markers.hover.sizeOffset), i;
      }
    }, {
      key: "toggleAllTooltipSeriesGroups",
      value: function (t) {
        var e = this.w,
          i = this.ttCtx;
        0 === i.allTooltipSeriesGroups.length && (i.allTooltipSeriesGroups = e.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
        for (var a = i.allTooltipSeriesGroups, s = 0; s < a.length; s++) "enable" === t ? (a[s].classList.add("apexcharts-active"), a[s].style.display = e.config.tooltip.items.display) : (a[s].classList.remove("apexcharts-active"), a[s].style.display = "none");
      }
    }]), t;
  }(),
  gt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.ctx = e.ctx, this.ttCtx = e, this.tooltipUtil = new dt(e);
    }
    return r(t, [{
      key: "drawSeriesTexts",
      value: function (t) {
        var e = t.shared,
          i = void 0 === e || e,
          a = t.ttItems,
          s = t.i,
          r = void 0 === s ? 0 : s,
          o = t.j,
          n = void 0 === o ? null : o,
          l = t.y1,
          h = t.y2,
          c = t.e,
          d = this.w;
        void 0 !== d.config.tooltip.custom ? this.handleCustomTooltip({
          i: r,
          j: n,
          y1: l,
          y2: h,
          w: d
        }) : this.toggleActiveInactiveSeries(i);
        var g = this.getValuesToPrint({
          i: r,
          j: n
        });
        this.printLabels({
          i: r,
          j: n,
          values: g,
          ttItems: a,
          shared: i,
          e: c
        });
        var u = this.ttCtx.getElTooltip();
        this.ttCtx.tooltipRect.ttWidth = u.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = u.getBoundingClientRect().height;
      }
    }, {
      key: "printLabels",
      value: function (t) {
        var i,
          a = this,
          s = t.i,
          r = t.j,
          o = t.values,
          n = t.ttItems,
          l = t.shared,
          h = t.e,
          c = this.w,
          d = [],
          g = function (t) {
            return c.globals.seriesGoals[t] && c.globals.seriesGoals[t][r] && Array.isArray(c.globals.seriesGoals[t][r]);
          },
          u = o.xVal,
          p = o.zVal,
          f = o.xAxisTTVal,
          x = "",
          b = c.globals.colors[s];
        null !== r && c.config.plotOptions.bar.distributed && (b = c.globals.colors[r]);
        for (var v = function (t, o) {
            var v = a.getFormatters(s);
            x = a.getSeriesName({
              fn: v.yLbTitleFormatter,
              index: s,
              seriesIndex: s,
              j: r
            }), "treemap" === c.config.chart.type && (x = v.yLbTitleFormatter(String(c.config.series[s].data[r].x), {
              series: c.globals.series,
              seriesIndex: s,
              dataPointIndex: r,
              w: c
            }));
            var m = c.config.tooltip.inverseOrder ? o : t;
            if (c.globals.axisCharts) {
              var y = function (t) {
                var e, i, a, s;
                return c.globals.isRangeData ? v.yLbFormatter(null === (e = c.globals.seriesRangeStart) || void 0 === e || null === (i = e[t]) || void 0 === i ? void 0 : i[r], {
                  series: c.globals.seriesRangeStart,
                  seriesIndex: t,
                  dataPointIndex: r,
                  w: c
                }) + " - " + v.yLbFormatter(null === (a = c.globals.seriesRangeEnd) || void 0 === a || null === (s = a[t]) || void 0 === s ? void 0 : s[r], {
                  series: c.globals.seriesRangeEnd,
                  seriesIndex: t,
                  dataPointIndex: r,
                  w: c
                }) : v.yLbFormatter(c.globals.series[t][r], {
                  series: c.globals.series,
                  seriesIndex: t,
                  dataPointIndex: r,
                  w: c
                });
              };
              if (l) v = a.getFormatters(m), x = a.getSeriesName({
                fn: v.yLbTitleFormatter,
                index: m,
                seriesIndex: s,
                j: r
              }), b = c.globals.colors[m], i = y(m), g(m) && (d = c.globals.seriesGoals[m][r].map(function (t) {
                return {
                  attrs: t,
                  val: v.yLbFormatter(t.value, {
                    seriesIndex: m,
                    dataPointIndex: r,
                    w: c
                  })
                };
              }));else {
                var w,
                  k = null == h || null === (w = h.target) || void 0 === w ? void 0 : w.getAttribute("fill");
                k && (b = -1 !== k.indexOf("url") ? document.querySelector(k.substr(4).slice(0, -1)).childNodes[0].getAttribute("stroke") : k), i = y(s), g(s) && Array.isArray(c.globals.seriesGoals[s][r]) && (d = c.globals.seriesGoals[s][r].map(function (t) {
                  return {
                    attrs: t,
                    val: v.yLbFormatter(t.value, {
                      seriesIndex: s,
                      dataPointIndex: r,
                      w: c
                    })
                  };
                }));
              }
            }
            null === r && (i = v.yLbFormatter(c.globals.series[s], e(e({}, c), {}, {
              seriesIndex: s,
              dataPointIndex: s
            }))), a.DOMHandling({
              i: s,
              t: m,
              j: r,
              ttItems: n,
              values: {
                val: i,
                goalVals: d,
                xVal: u,
                xAxisTTVal: f,
                zVal: p
              },
              seriesName: x,
              shared: l,
              pColor: b
            });
          }, m = 0, y = c.globals.series.length - 1; m < c.globals.series.length; m++, y--) v(m, y);
      }
    }, {
      key: "getFormatters",
      value: function (t) {
        var e,
          i = this.w,
          a = i.globals.yLabelFormatters[t];
        return void 0 !== i.globals.ttVal ? Array.isArray(i.globals.ttVal) ? (a = i.globals.ttVal[t] && i.globals.ttVal[t].formatter, e = i.globals.ttVal[t] && i.globals.ttVal[t].title && i.globals.ttVal[t].title.formatter) : (a = i.globals.ttVal.formatter, "function" == typeof i.globals.ttVal.title.formatter && (e = i.globals.ttVal.title.formatter)) : e = i.config.tooltip.y.title.formatter, "function" != typeof a && (a = i.globals.yLabelFormatters[0] ? i.globals.yLabelFormatters[0] : function (t) {
          return t;
        }), "function" != typeof e && (e = function (t) {
          return t;
        }), {
          yLbFormatter: a,
          yLbTitleFormatter: e
        };
      }
    }, {
      key: "getSeriesName",
      value: function (t) {
        var e = t.fn,
          i = t.index,
          a = t.seriesIndex,
          s = t.j,
          r = this.w;
        return e(String(r.globals.seriesNames[i]), {
          series: r.globals.series,
          seriesIndex: a,
          dataPointIndex: s,
          w: r
        });
      }
    }, {
      key: "DOMHandling",
      value: function (t) {
        t.i;
        var e = t.t,
          i = t.j,
          a = t.ttItems,
          s = t.values,
          r = t.seriesName,
          o = t.shared,
          n = t.pColor,
          l = this.w,
          h = this.ttCtx,
          c = s.val,
          d = s.goalVals,
          g = s.xVal,
          u = s.xAxisTTVal,
          p = s.zVal,
          f = null;
        f = a[e].children, l.config.tooltip.fillSeriesColor && (a[e].style.backgroundColor = n, f[0].style.display = "none"), h.showTooltipTitle && (null === h.tooltipTitle && (h.tooltipTitle = l.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), h.tooltipTitle.innerHTML = g), h.isXAxisTooltipEnabled && (h.xaxisTooltipText.innerHTML = "" !== u ? u : g);
        var x = a[e].querySelector(".apexcharts-tooltip-text-y-label");
        x && (x.innerHTML = r || "");
        var b = a[e].querySelector(".apexcharts-tooltip-text-y-value");
        b && (b.innerHTML = void 0 !== c ? c : ""), f[0] && f[0].classList.contains("apexcharts-tooltip-marker") && (l.config.tooltip.marker.fillColors && Array.isArray(l.config.tooltip.marker.fillColors) && (n = l.config.tooltip.marker.fillColors[e]), f[0].style.backgroundColor = n), l.config.tooltip.marker.show || (f[0].style.display = "none");
        var v = a[e].querySelector(".apexcharts-tooltip-text-goals-label"),
          m = a[e].querySelector(".apexcharts-tooltip-text-goals-value");
        if (d.length && l.globals.seriesGoals[e]) {
          var y = function () {
            var t = "<div >",
              e = "<div>";
            d.forEach(function (i, a) {
              t += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(i.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(i.attrs.name, "</div>"), e += "<div>".concat(i.val, "</div>");
            }), v.innerHTML = t + "</div>", m.innerHTML = e + "</div>";
          };
          o ? l.globals.seriesGoals[e][i] && Array.isArray(l.globals.seriesGoals[e][i]) ? y() : (v.innerHTML = "", m.innerHTML = "") : y();
        } else v.innerHTML = "", m.innerHTML = "";
        null !== p && (a[e].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = l.config.tooltip.z.title, a[e].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = void 0 !== p ? p : "");
        if (o && f[0]) {
          if (l.config.tooltip.hideEmptySeries) {
            var w = a[e].querySelector(".apexcharts-tooltip-marker"),
              k = a[e].querySelector(".apexcharts-tooltip-text");
            0 == parseFloat(c) ? (w.style.display = "none", k.style.display = "none") : (w.style.display = "block", k.style.display = "block");
          }
          null == c || l.globals.ancillaryCollapsedSeriesIndices.indexOf(e) > -1 || l.globals.collapsedSeriesIndices.indexOf(e) > -1 ? f[0].parentNode.style.display = "none" : f[0].parentNode.style.display = l.config.tooltip.items.display;
        }
      }
    }, {
      key: "toggleActiveInactiveSeries",
      value: function (t) {
        var e = this.w;
        if (t) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");else {
          this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
          var i = e.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
          i && (i.classList.add("apexcharts-active"), i.style.display = e.config.tooltip.items.display);
        }
      }
    }, {
      key: "getValuesToPrint",
      value: function (t) {
        var e = t.i,
          i = t.j,
          a = this.w,
          s = this.ctx.series.filteredSeriesX(),
          r = "",
          o = "",
          n = null,
          l = null,
          h = {
            series: a.globals.series,
            seriesIndex: e,
            dataPointIndex: i,
            w: a
          },
          c = a.globals.ttZFormatter;
        null === i ? l = a.globals.series[e] : a.globals.isXNumeric && "treemap" !== a.config.chart.type ? (r = s[e][i], 0 === s[e].length && (r = s[this.tooltipUtil.getFirstActiveXArray(s)][i])) : r = void 0 !== a.globals.labels[i] ? a.globals.labels[i] : "";
        var d = r;
        a.globals.isXNumeric && "datetime" === a.config.xaxis.type ? r = new T(this.ctx).xLabelFormat(a.globals.ttKeyFormatter, d, d, {
          i: void 0,
          dateFormatter: new I(this.ctx).formatDate,
          w: this.w
        }) : r = a.globals.isBarHorizontal ? a.globals.yLabelFormatters[0](d, h) : a.globals.xLabelFormatter(d, h);
        return void 0 !== a.config.tooltip.x.formatter && (r = a.globals.ttKeyFormatter(d, h)), a.globals.seriesZ.length > 0 && a.globals.seriesZ[e].length > 0 && (n = c(a.globals.seriesZ[e][i], a)), o = "function" == typeof a.config.xaxis.tooltip.formatter ? a.globals.xaxisTooltipFormatter(d, h) : r, {
          val: Array.isArray(l) ? l.join(" ") : l,
          xVal: Array.isArray(r) ? r.join(" ") : r,
          xAxisTTVal: Array.isArray(o) ? o.join(" ") : o,
          zVal: n
        };
      }
    }, {
      key: "handleCustomTooltip",
      value: function (t) {
        var e = t.i,
          i = t.j,
          a = t.y1,
          s = t.y2,
          r = t.w,
          o = this.ttCtx.getElTooltip(),
          n = r.config.tooltip.custom;
        Array.isArray(n) && n[e] && (n = n[e]), o.innerHTML = n({
          ctx: this.ctx,
          series: r.globals.series,
          seriesIndex: e,
          dataPointIndex: i,
          y1: a,
          y2: s,
          w: r
        });
      }
    }]), t;
  }(),
  ut = function () {
    function t(e) {
      a(this, t), this.ttCtx = e, this.ctx = e.ctx, this.w = e.w;
    }
    return r(t, [{
      key: "moveXCrosshairs",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
          i = this.ttCtx,
          a = this.w,
          s = i.getElXCrosshairs(),
          r = t - i.xcrosshairsWidth / 2,
          o = a.globals.labels.slice().length;
        if (null !== e && (r = a.globals.gridWidth / o * e), null === s || a.globals.isBarHorizontal || (s.setAttribute("x", r), s.setAttribute("x1", r), s.setAttribute("x2", r), s.setAttribute("y2", a.globals.gridHeight), s.classList.add("apexcharts-active")), r < 0 && (r = 0), r > a.globals.gridWidth && (r = a.globals.gridWidth), i.isXAxisTooltipEnabled) {
          var n = r;
          "tickWidth" !== a.config.xaxis.crosshairs.width && "barWidth" !== a.config.xaxis.crosshairs.width || (n = r + i.xcrosshairsWidth / 2), this.moveXAxisTooltip(n);
        }
      }
    }, {
      key: "moveYCrosshairs",
      value: function (t) {
        var e = this.ttCtx;
        null !== e.ycrosshairs && m.setAttrs(e.ycrosshairs, {
          y1: t,
          y2: t
        }), null !== e.ycrosshairsHidden && m.setAttrs(e.ycrosshairsHidden, {
          y1: t,
          y2: t
        });
      }
    }, {
      key: "moveXAxisTooltip",
      value: function (t) {
        var e = this.w,
          i = this.ttCtx;
        if (null !== i.xaxisTooltip && 0 !== i.xcrosshairsWidth) {
          i.xaxisTooltip.classList.add("apexcharts-active");
          var a = i.xaxisOffY + e.config.xaxis.tooltip.offsetY + e.globals.translateY + 1 + e.config.xaxis.offsetY;
          if (t -= i.xaxisTooltip.getBoundingClientRect().width / 2, !isNaN(t)) {
            t += e.globals.translateX;
            var s;
            s = new m(this.ctx).getTextRects(i.xaxisTooltipText.innerHTML), i.xaxisTooltipText.style.minWidth = s.width + "px", i.xaxisTooltip.style.left = t + "px", i.xaxisTooltip.style.top = a + "px";
          }
        }
      }
    }, {
      key: "moveYAxisTooltip",
      value: function (t) {
        var e = this.w,
          i = this.ttCtx;
        null === i.yaxisTTEls && (i.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
        var a = parseInt(i.ycrosshairsHidden.getAttribute("y1"), 10),
          s = e.globals.translateY + a,
          r = i.yaxisTTEls[t].getBoundingClientRect().height,
          o = e.globals.translateYAxisX[t] - 2;
        e.config.yaxis[t].opposite && (o -= 26), s -= r / 2, -1 === e.globals.ignoreYAxisIndexes.indexOf(t) ? (i.yaxisTTEls[t].classList.add("apexcharts-active"), i.yaxisTTEls[t].style.top = s + "px", i.yaxisTTEls[t].style.left = o + e.config.yaxis[t].tooltip.offsetX + "px") : i.yaxisTTEls[t].classList.remove("apexcharts-active");
      }
    }, {
      key: "moveTooltip",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
          a = this.w,
          s = this.ttCtx,
          r = s.getElTooltip(),
          o = s.tooltipRect,
          n = null !== i ? parseFloat(i) : 1,
          l = parseFloat(t) + n + 5,
          h = parseFloat(e) + n / 2;
        if (l > a.globals.gridWidth / 2 && (l = l - o.ttWidth - n - 10), l > a.globals.gridWidth - o.ttWidth - 10 && (l = a.globals.gridWidth - o.ttWidth), l < -20 && (l = -20), a.config.tooltip.followCursor) {
          var c = s.getElGrid().getBoundingClientRect();
          (l = s.e.clientX - c.left) > a.globals.gridWidth / 2 && (l -= s.tooltipRect.ttWidth), (h = s.e.clientY + a.globals.translateY - c.top) > a.globals.gridHeight / 2 && (h -= s.tooltipRect.ttHeight);
        } else a.globals.isBarHorizontal || o.ttHeight / 2 + h > a.globals.gridHeight && (h = a.globals.gridHeight - o.ttHeight + a.globals.translateY);
        isNaN(l) || (l += a.globals.translateX, r.style.left = l + "px", r.style.top = h + "px");
      }
    }, {
      key: "moveMarkers",
      value: function (t, e) {
        var i = this.w,
          a = this.ttCtx;
        if (i.globals.markers.size[t] > 0) for (var s = i.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(t, "'] .apexcharts-marker")), r = 0; r < s.length; r++) parseInt(s[r].getAttribute("rel"), 10) === e && (a.marker.resetPointsSize(), a.marker.enlargeCurrentPoint(e, s[r]));else a.marker.resetPointsSize(), this.moveDynamicPointOnHover(e, t);
      }
    }, {
      key: "moveDynamicPointOnHover",
      value: function (t, e) {
        var i,
          a,
          s = this.w,
          r = this.ttCtx,
          o = s.globals.pointsArray,
          n = r.tooltipUtil.getHoverMarkerSize(e),
          l = s.config.series[e].type;
        if (!l || "column" !== l && "candlestick" !== l && "boxPlot" !== l) {
          i = o[e][t][0], a = o[e][t][1] ? o[e][t][1] : 0;
          var h = s.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e, "'] .apexcharts-series-markers circle"));
          h && a < s.globals.gridHeight && a > 0 && (h.setAttribute("r", n), h.setAttribute("cx", i), h.setAttribute("cy", a)), this.moveXCrosshairs(i), r.fixedTooltip || this.moveTooltip(i, a, n);
        }
      }
    }, {
      key: "moveDynamicPointsOnHover",
      value: function (t) {
        var e,
          i = this.ttCtx,
          a = i.w,
          s = 0,
          r = 0,
          o = a.globals.pointsArray;
        e = new N(this.ctx).getActiveConfigSeriesIndex("asc", ["line", "area", "scatter", "bubble"]);
        var n = i.tooltipUtil.getHoverMarkerSize(e);
        o[e] && (s = o[e][t][0], r = o[e][t][1]);
        var l = i.tooltipUtil.getAllMarkers();
        if (null !== l) for (var h = 0; h < a.globals.series.length; h++) {
          var c = o[h];
          if (a.globals.comboCharts && void 0 === c && l.splice(h, 0, null), c && c.length) {
            var d = o[h][t][1],
              g = void 0;
            if (l[h].setAttribute("cx", s), "rangeArea" === a.config.chart.type && !a.globals.comboCharts) {
              var u = t + a.globals.series[h].length;
              g = o[h][u][1], d -= Math.abs(d - g) / 2;
            }
            null !== d && !isNaN(d) && d < a.globals.gridHeight + n && d + n > 0 ? (l[h] && l[h].setAttribute("r", n), l[h] && l[h].setAttribute("cy", d)) : l[h] && l[h].setAttribute("r", 0);
          }
        }
        this.moveXCrosshairs(s), i.fixedTooltip || this.moveTooltip(s, r || a.globals.gridHeight, n);
      }
    }, {
      key: "moveStickyTooltipOverBars",
      value: function (t, e) {
        var i = this.w,
          a = this.ttCtx,
          s = i.globals.columnSeries ? i.globals.columnSeries.length : i.globals.series.length,
          r = s >= 2 && s % 2 == 0 ? Math.floor(s / 2) : Math.floor(s / 2) + 1;
        i.globals.isBarHorizontal && (r = new N(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
        var o = i.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(r, "'] path[j='").concat(t, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(r, "'] path[j='").concat(t, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(r, "'] path[j='").concat(t, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(r, "'] path[j='").concat(t, "']"));
        o || "number" != typeof e || (o = i.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[data\\:realIndex='".concat(e, "'] path[j='").concat(t, "'],\n        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='").concat(e, "'] path[j='").concat(t, "'],\n        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='").concat(e, "'] path[j='").concat(t, "'],\n        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='").concat(e, "'] path[j='").concat(t, "']")));
        var n = o ? parseFloat(o.getAttribute("cx")) : 0,
          l = o ? parseFloat(o.getAttribute("cy")) : 0,
          h = o ? parseFloat(o.getAttribute("barWidth")) : 0,
          c = a.getElGrid().getBoundingClientRect(),
          d = o && (o.classList.contains("apexcharts-candlestick-area") || o.classList.contains("apexcharts-boxPlot-area"));
        i.globals.isXNumeric ? (o && !d && (n -= s % 2 != 0 ? h / 2 : 0), o && d && i.globals.comboCharts && (n -= h / 2)) : i.globals.isBarHorizontal || (n = a.xAxisTicksPositions[t - 1] + a.dataPointsDividedWidth / 2, isNaN(n) && (n = a.xAxisTicksPositions[t] - a.dataPointsDividedWidth / 2)), i.globals.isBarHorizontal ? l -= a.tooltipRect.ttHeight : i.config.tooltip.followCursor ? l = a.e.clientY - c.top - a.tooltipRect.ttHeight / 2 : l + a.tooltipRect.ttHeight + 15 > i.globals.gridHeight && (l = i.globals.gridHeight), i.globals.isBarHorizontal || this.moveXCrosshairs(n), a.fixedTooltip || this.moveTooltip(n, l || i.globals.gridHeight);
      }
    }]), t;
  }(),
  pt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.ttCtx = e, this.ctx = e.ctx, this.tooltipPosition = new ut(e);
    }
    return r(t, [{
      key: "drawDynamicPoints",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = new H(this.ctx),
          a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
        a = u(a), t.config.chart.stacked && a.sort(function (t, e) {
          return parseFloat(t.getAttribute("data:realIndex")) - parseFloat(e.getAttribute("data:realIndex"));
        });
        for (var s = 0; s < a.length; s++) {
          var r = a[s].querySelector(".apexcharts-series-markers-wrap");
          if (null !== r) {
            var o = void 0,
              n = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
            "line" !== t.config.chart.type && "area" !== t.config.chart.type || t.globals.comboCharts || t.config.tooltip.intersect || (n += " no-pointer-events");
            var l = i.getMarkerConfig({
              cssClass: n,
              seriesIndex: Number(r.getAttribute("data:realIndex"))
            });
            (o = e.drawMarker(0, 0, l)).node.setAttribute("default-marker-size", 0);
            var h = document.createElementNS(t.globals.SVGNS, "g");
            h.classList.add("apexcharts-series-markers"), h.appendChild(o.node), r.appendChild(h);
          }
        }
      }
    }, {
      key: "enlargeCurrentPoint",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
          s = this.w;
        "bubble" !== s.config.chart.type && this.newPointSize(t, e);
        var r = e.getAttribute("cx"),
          o = e.getAttribute("cy");
        if (null !== i && null !== a && (r = i, o = a), this.tooltipPosition.moveXCrosshairs(r), !this.fixedTooltip) {
          if ("radar" === s.config.chart.type) {
            var n = this.ttCtx.getElGrid().getBoundingClientRect();
            r = this.ttCtx.e.clientX - n.left;
          }
          this.tooltipPosition.moveTooltip(r, o, s.config.markers.hover.size);
        }
      }
    }, {
      key: "enlargePoints",
      value: function (t) {
        for (var e = this.w, i = this, a = this.ttCtx, s = t, r = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), o = e.config.markers.hover.size, n = 0; n < r.length; n++) {
          var l = r[n].getAttribute("rel"),
            h = r[n].getAttribute("index");
          if (void 0 === o && (o = e.globals.markers.size[h] + e.config.markers.hover.sizeOffset), s === parseInt(l, 10)) {
            i.newPointSize(s, r[n]);
            var c = r[n].getAttribute("cx"),
              d = r[n].getAttribute("cy");
            i.tooltipPosition.moveXCrosshairs(c), a.fixedTooltip || i.tooltipPosition.moveTooltip(c, d, o);
          } else i.oldPointSize(r[n]);
        }
      }
    }, {
      key: "newPointSize",
      value: function (t, e) {
        var i = this.w,
          a = i.config.markers.hover.size,
          s = 0 === t ? e.parentNode.firstChild : e.parentNode.lastChild;
        if ("0" !== s.getAttribute("default-marker-size")) {
          var r = parseInt(s.getAttribute("index"), 10);
          void 0 === a && (a = i.globals.markers.size[r] + i.config.markers.hover.sizeOffset), a < 0 && (a = 0), s.setAttribute("r", a);
        }
      }
    }, {
      key: "oldPointSize",
      value: function (t) {
        var e = parseFloat(t.getAttribute("default-marker-size"));
        t.setAttribute("r", e);
      }
    }, {
      key: "resetPointsSize",
      value: function () {
        for (var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), e = 0; e < t.length; e++) {
          var i = parseFloat(t[e].getAttribute("default-marker-size"));
          x.isNumber(i) && i >= 0 ? t[e].setAttribute("r", i) : t[e].setAttribute("r", 0);
        }
      }
    }]), t;
  }(),
  ft = function () {
    function t(e) {
      a(this, t), this.w = e.w;
      var i = this.w;
      this.ttCtx = e, this.isVerticalGroupedRangeBar = !i.globals.isBarHorizontal && "rangeBar" === i.config.chart.type && i.config.plotOptions.bar.rangeBarGroupRows;
    }
    return r(t, [{
      key: "getAttr",
      value: function (t, e) {
        return parseFloat(t.target.getAttribute(e));
      }
    }, {
      key: "handleHeatTreeTooltip",
      value: function (t) {
        var e = t.e,
          i = t.opt,
          a = t.x,
          s = t.y,
          r = t.type,
          o = this.ttCtx,
          n = this.w;
        if (e.target.classList.contains("apexcharts-".concat(r, "-rect"))) {
          var l = this.getAttr(e, "i"),
            h = this.getAttr(e, "j"),
            c = this.getAttr(e, "cx"),
            d = this.getAttr(e, "cy"),
            g = this.getAttr(e, "width"),
            u = this.getAttr(e, "height");
          if (o.tooltipLabels.drawSeriesTexts({
            ttItems: i.ttItems,
            i: l,
            j: h,
            shared: !1,
            e: e
          }), n.globals.capturedSeriesIndex = l, n.globals.capturedDataPointIndex = h, a = c + o.tooltipRect.ttWidth / 2 + g, s = d + o.tooltipRect.ttHeight / 2 - u / 2, o.tooltipPosition.moveXCrosshairs(c + g / 2), a > n.globals.gridWidth / 2 && (a = c - o.tooltipRect.ttWidth / 2 + g), o.w.config.tooltip.followCursor) {
            var p = n.globals.dom.elWrap.getBoundingClientRect();
            a = n.globals.clientX - p.left - (a > n.globals.gridWidth / 2 ? o.tooltipRect.ttWidth : 0), s = n.globals.clientY - p.top - (s > n.globals.gridHeight / 2 ? o.tooltipRect.ttHeight : 0);
          }
        }
        return {
          x: a,
          y: s
        };
      }
    }, {
      key: "handleMarkerTooltip",
      value: function (t) {
        var e,
          i,
          a = t.e,
          s = t.opt,
          r = t.x,
          o = t.y,
          n = this.w,
          l = this.ttCtx;
        if (a.target.classList.contains("apexcharts-marker")) {
          var h = parseInt(s.paths.getAttribute("cx"), 10),
            c = parseInt(s.paths.getAttribute("cy"), 10),
            d = parseFloat(s.paths.getAttribute("val"));
          if (i = parseInt(s.paths.getAttribute("rel"), 10), e = parseInt(s.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1, l.intersect) {
            var g = x.findAncestor(s.paths, "apexcharts-series");
            g && (e = parseInt(g.getAttribute("data:realIndex"), 10));
          }
          if (l.tooltipLabels.drawSeriesTexts({
            ttItems: s.ttItems,
            i: e,
            j: i,
            shared: !l.showOnIntersect && n.config.tooltip.shared,
            e: a
          }), "mouseup" === a.type && l.markerClick(a, e, i), n.globals.capturedSeriesIndex = e, n.globals.capturedDataPointIndex = i, r = h, o = c + n.globals.translateY - 1.4 * l.tooltipRect.ttHeight, l.w.config.tooltip.followCursor) {
            var u = l.getElGrid().getBoundingClientRect();
            o = l.e.clientY + n.globals.translateY - u.top;
          }
          d < 0 && (o = c), l.marker.enlargeCurrentPoint(i, s.paths, r, o);
        }
        return {
          x: r,
          y: o
        };
      }
    }, {
      key: "handleBarTooltip",
      value: function (t) {
        var e,
          i,
          a = t.e,
          s = t.opt,
          r = this.w,
          o = this.ttCtx,
          n = o.getElTooltip(),
          l = 0,
          h = 0,
          c = 0,
          d = this.getBarTooltipXY({
            e: a,
            opt: s
          });
        e = d.i;
        var g = d.barHeight,
          u = d.j;
        r.globals.capturedSeriesIndex = e, r.globals.capturedDataPointIndex = u, r.globals.isBarHorizontal && o.tooltipUtil.hasBars() || !r.config.tooltip.shared ? (h = d.x, c = d.y, i = Array.isArray(r.config.stroke.width) ? r.config.stroke.width[e] : r.config.stroke.width, l = h) : r.globals.comboCharts || r.config.tooltip.shared || (l /= 2), isNaN(c) && (c = r.globals.svgHeight - o.tooltipRect.ttHeight);
        var p = parseInt(s.paths.parentNode.getAttribute("data:realIndex"), 10),
          f = r.globals.isMultipleYAxis ? r.config.yaxis[p] && r.config.yaxis[p].reversed : r.config.yaxis[0].reversed;
        if (h + o.tooltipRect.ttWidth > r.globals.gridWidth && !f ? h -= o.tooltipRect.ttWidth : h < 0 && (h = 0), o.w.config.tooltip.followCursor) {
          var x = o.getElGrid().getBoundingClientRect();
          c = o.e.clientY - x.top;
        }
        null === o.tooltip && (o.tooltip = r.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), r.config.tooltip.shared || (r.globals.comboBarCount > 0 ? o.tooltipPosition.moveXCrosshairs(l + i / 2) : o.tooltipPosition.moveXCrosshairs(l)), !o.fixedTooltip && (!r.config.tooltip.shared || r.globals.isBarHorizontal && o.tooltipUtil.hasBars()) && (f && (h -= o.tooltipRect.ttWidth) < 0 && (h = 0), !f || r.globals.isBarHorizontal && o.tooltipUtil.hasBars() || (c = c + g - 2 * (r.globals.series[e][u] < 0 ? g : 0)), c = c + r.globals.translateY - o.tooltipRect.ttHeight / 2, n.style.left = h + r.globals.translateX + "px", n.style.top = c + "px");
      }
    }, {
      key: "getBarTooltipXY",
      value: function (t) {
        var e = this,
          i = t.e,
          a = t.opt,
          s = this.w,
          r = null,
          o = this.ttCtx,
          n = 0,
          l = 0,
          h = 0,
          c = 0,
          d = 0,
          g = i.target.classList;
        if (g.contains("apexcharts-bar-area") || g.contains("apexcharts-candlestick-area") || g.contains("apexcharts-boxPlot-area") || g.contains("apexcharts-rangebar-area")) {
          var u = i.target,
            p = u.getBoundingClientRect(),
            f = a.elGrid.getBoundingClientRect(),
            x = p.height;
          d = p.height;
          var b = p.width,
            v = parseInt(u.getAttribute("cx"), 10),
            m = parseInt(u.getAttribute("cy"), 10);
          c = parseFloat(u.getAttribute("barWidth"));
          var y = "touchmove" === i.type ? i.touches[0].clientX : i.clientX;
          r = parseInt(u.getAttribute("j"), 10), n = parseInt(u.parentNode.getAttribute("rel"), 10) - 1;
          var w = u.getAttribute("data-range-y1"),
            k = u.getAttribute("data-range-y2");
          s.globals.comboCharts && (n = parseInt(u.parentNode.getAttribute("data:realIndex"), 10));
          var A = function (t) {
              return s.globals.isXNumeric ? v - b / 2 : e.isVerticalGroupedRangeBar ? v + b / 2 : v - o.dataPointsDividedWidth + b / 2;
            },
            S = function () {
              return m - o.dataPointsDividedHeight + x / 2 - o.tooltipRect.ttHeight / 2;
            };
          o.tooltipLabels.drawSeriesTexts({
            ttItems: a.ttItems,
            i: n,
            j: r,
            y1: w ? parseInt(w, 10) : null,
            y2: k ? parseInt(k, 10) : null,
            shared: !o.showOnIntersect && s.config.tooltip.shared,
            e: i
          }), s.config.tooltip.followCursor ? s.globals.isBarHorizontal ? (l = y - f.left + 15, h = S()) : (l = A(), h = i.clientY - f.top - o.tooltipRect.ttHeight / 2 - 15) : s.globals.isBarHorizontal ? ((l = v) < o.xyRatios.baseLineInvertedY && (l = v - o.tooltipRect.ttWidth), h = S()) : (l = A(), h = m);
        }
        return {
          x: l,
          y: h,
          barHeight: d,
          barWidth: c,
          i: n,
          j: r
        };
      }
    }]), t;
  }(),
  xt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.ttCtx = e;
    }
    return r(t, [{
      key: "drawXaxisTooltip",
      value: function () {
        var t = this.w,
          e = this.ttCtx,
          i = "bottom" === t.config.xaxis.position;
        e.xaxisOffY = i ? t.globals.gridHeight + 1 : -t.globals.xAxisHeight - t.config.xaxis.axisTicks.height + 3;
        var a = i ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
          s = t.globals.dom.elWrap;
        e.isXAxisTooltipEnabled && null === t.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") && (e.xaxisTooltip = document.createElement("div"), e.xaxisTooltip.setAttribute("class", a + " apexcharts-theme-" + t.config.tooltip.theme), s.appendChild(e.xaxisTooltip), e.xaxisTooltipText = document.createElement("div"), e.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), e.xaxisTooltipText.style.fontFamily = t.config.xaxis.tooltip.style.fontFamily || t.config.chart.fontFamily, e.xaxisTooltipText.style.fontSize = t.config.xaxis.tooltip.style.fontSize, e.xaxisTooltip.appendChild(e.xaxisTooltipText));
      }
    }, {
      key: "drawYaxisTooltip",
      value: function () {
        for (var t = this.w, e = this.ttCtx, i = function (i) {
            var a = t.config.yaxis[i].opposite || t.config.yaxis[i].crosshairs.opposite;
            e.yaxisOffX = a ? t.globals.gridWidth + 1 : 1;
            var s = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i, a ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left");
            t.globals.yAxisSameScaleIndices.map(function (e, a) {
              e.map(function (e, a) {
                a === i && (s += t.config.yaxis[a].show ? " " : " apexcharts-yaxistooltip-hidden");
              });
            });
            var r = t.globals.dom.elWrap;
            null === t.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i)) && (e.yaxisTooltip = document.createElement("div"), e.yaxisTooltip.setAttribute("class", s + " apexcharts-theme-" + t.config.tooltip.theme), r.appendChild(e.yaxisTooltip), 0 === i && (e.yaxisTooltipText = []), e.yaxisTooltipText[i] = document.createElement("div"), e.yaxisTooltipText[i].classList.add("apexcharts-yaxistooltip-text"), e.yaxisTooltip.appendChild(e.yaxisTooltipText[i]));
          }, a = 0; a < t.config.yaxis.length; a++) i(a);
      }
    }, {
      key: "setXCrosshairWidth",
      value: function () {
        var t = this.w,
          e = this.ttCtx,
          i = e.getElXCrosshairs();
        if (e.xcrosshairsWidth = parseInt(t.config.xaxis.crosshairs.width, 10), t.globals.comboCharts) {
          var a = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
          if (null !== a && "barWidth" === t.config.xaxis.crosshairs.width) {
            var s = parseFloat(a.getAttribute("barWidth"));
            e.xcrosshairsWidth = s;
          } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
            var r = t.globals.labels.length;
            e.xcrosshairsWidth = t.globals.gridWidth / r;
          }
        } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
          var o = t.globals.labels.length;
          e.xcrosshairsWidth = t.globals.gridWidth / o;
        } else if ("barWidth" === t.config.xaxis.crosshairs.width) {
          var n = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
          if (null !== n) {
            var l = parseFloat(n.getAttribute("barWidth"));
            e.xcrosshairsWidth = l;
          } else e.xcrosshairsWidth = 1;
        }
        t.globals.isBarHorizontal && (e.xcrosshairsWidth = 0), null !== i && e.xcrosshairsWidth > 0 && i.setAttribute("width", e.xcrosshairsWidth);
      }
    }, {
      key: "handleYCrosshair",
      value: function () {
        var t = this.w,
          e = this.ttCtx;
        e.ycrosshairs = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), e.ycrosshairsHidden = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden");
      }
    }, {
      key: "drawYaxisTooltipText",
      value: function (t, e, i) {
        var a = this.ttCtx,
          s = this.w,
          r = s.globals.yLabelFormatters[t];
        if (a.yaxisTooltips[t]) {
          var o = a.getElGrid().getBoundingClientRect(),
            n = (e - o.top) * i.yRatio[t],
            l = s.globals.maxYArr[t] - s.globals.minYArr[t],
            h = s.globals.minYArr[t] + (l - n);
          a.tooltipPosition.moveYCrosshairs(e - o.top), a.yaxisTooltipText[t].innerHTML = r(h), a.tooltipPosition.moveYAxisTooltip(t);
        }
      }
    }]), t;
  }(),
  bt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
      var i = this.w;
      this.tConfig = i.config.tooltip, this.tooltipUtil = new dt(this), this.tooltipLabels = new gt(this), this.tooltipPosition = new ut(this), this.marker = new pt(this), this.intersect = new ft(this), this.axesTooltip = new xt(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !i.globals.isBarHorizontal && this.tConfig.shared, this.lastHoverTime = Date.now();
    }
    return r(t, [{
      key: "getElTooltip",
      value: function (t) {
        return t || (t = this), t.w.globals.dom.baseEl ? t.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip") : null;
      }
    }, {
      key: "getElXCrosshairs",
      value: function () {
        return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs");
      }
    }, {
      key: "getElGrid",
      value: function () {
        return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid");
      }
    }, {
      key: "drawTooltip",
      value: function (t) {
        var e = this.w;
        this.xyRatios = t, this.isXAxisTooltipEnabled = e.config.xaxis.tooltip.enabled && e.globals.axisCharts, this.yaxisTooltips = e.config.yaxis.map(function (t, i) {
          return !!(t.show && t.tooltip.enabled && e.globals.axisCharts);
        }), this.allTooltipSeriesGroups = [], e.globals.axisCharts || (this.showTooltipTitle = !1);
        var i = document.createElement("div");
        if (i.classList.add("apexcharts-tooltip"), e.config.tooltip.cssClass && i.classList.add(e.config.tooltip.cssClass), i.classList.add("apexcharts-theme-".concat(this.tConfig.theme)), e.globals.dom.elWrap.appendChild(i), e.globals.axisCharts) {
          this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
          var a = new V(this.ctx);
          this.xAxisTicksPositions = a.getXAxisTicksPositions();
        }
        if (!e.globals.comboCharts && !this.tConfig.intersect && "rangeBar" !== e.config.chart.type || this.tConfig.shared || (this.showOnIntersect = !0), 0 !== e.config.markers.size && 0 !== e.globals.markers.largestSize || this.marker.drawDynamicPoints(this), e.globals.collapsedSeries.length !== e.globals.series.length) {
          this.dataPointsDividedHeight = e.globals.gridHeight / e.globals.dataPoints, this.dataPointsDividedWidth = e.globals.gridWidth / e.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || e.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, i.appendChild(this.tooltipTitle));
          var s = e.globals.series.length;
          (e.globals.xyCharts || e.globals.comboCharts) && this.tConfig.shared && (s = this.showOnIntersect ? 1 : e.globals.series.length), this.legendLabels = e.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"), this.ttItems = this.createTTElements(s), this.addSVGEvents();
        }
      }
    }, {
      key: "createTTElements",
      value: function (t) {
        for (var e = this, i = this.w, a = [], s = this.getElTooltip(), r = function (r) {
            var o = document.createElement("div");
            o.classList.add("apexcharts-tooltip-series-group"), o.style.order = i.config.tooltip.inverseOrder ? t - r : r + 1, e.tConfig.shared && e.tConfig.enabledOnSeries && Array.isArray(e.tConfig.enabledOnSeries) && e.tConfig.enabledOnSeries.indexOf(r) < 0 && o.classList.add("apexcharts-tooltip-series-group-hidden");
            var n = document.createElement("span");
            n.classList.add("apexcharts-tooltip-marker"), n.style.backgroundColor = i.globals.colors[r], o.appendChild(n);
            var l = document.createElement("div");
            l.classList.add("apexcharts-tooltip-text"), l.style.fontFamily = e.tConfig.style.fontFamily || i.config.chart.fontFamily, l.style.fontSize = e.tConfig.style.fontSize, ["y", "goals", "z"].forEach(function (t) {
              var e = document.createElement("div");
              e.classList.add("apexcharts-tooltip-".concat(t, "-group"));
              var i = document.createElement("span");
              i.classList.add("apexcharts-tooltip-text-".concat(t, "-label")), e.appendChild(i);
              var a = document.createElement("span");
              a.classList.add("apexcharts-tooltip-text-".concat(t, "-value")), e.appendChild(a), l.appendChild(e);
            }), o.appendChild(l), s.appendChild(o), a.push(o);
          }, o = 0; o < t; o++) r(o);
        return a;
      }
    }, {
      key: "addSVGEvents",
      value: function () {
        var t = this.w,
          e = t.config.chart.type,
          i = this.getElTooltip(),
          a = !("bar" !== e && "candlestick" !== e && "boxPlot" !== e && "rangeBar" !== e),
          s = "area" === e || "line" === e || "scatter" === e || "bubble" === e || "radar" === e,
          r = t.globals.dom.Paper.node,
          o = this.getElGrid();
        o && (this.seriesBound = o.getBoundingClientRect());
        var n,
          l = [],
          h = [],
          c = {
            hoverArea: r,
            elGrid: o,
            tooltipEl: i,
            tooltipY: l,
            tooltipX: h,
            ttItems: this.ttItems
          };
        if (t.globals.axisCharts && (s ? n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : a ? n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : "heatmap" !== e && "treemap" !== e || (n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")), n && n.length)) for (var d = 0; d < n.length; d++) l.push(n[d].getAttribute("cy")), h.push(n[d].getAttribute("cx"));
        if (t.globals.xyCharts && !this.showOnIntersect || t.globals.comboCharts && !this.showOnIntersect || a && this.tooltipUtil.hasBars() && this.tConfig.shared) this.addPathsEventListeners([r], c);else if (a && !t.globals.comboCharts || s && this.showOnIntersect) this.addDatapointEventsListeners(c);else if (!t.globals.axisCharts || "heatmap" === e || "treemap" === e) {
          var g = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
          this.addPathsEventListeners(g, c);
        }
        if (this.showOnIntersect) {
          var u = t.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
          u.length > 0 && this.addPathsEventListeners(u, c), this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(c);
        }
      }
    }, {
      key: "drawFixedTooltipRect",
      value: function () {
        var t = this.w,
          e = this.getElTooltip(),
          i = e.getBoundingClientRect(),
          a = i.width + 10,
          s = i.height + 10,
          r = this.tConfig.fixed.offsetX,
          o = this.tConfig.fixed.offsetY,
          n = this.tConfig.fixed.position.toLowerCase();
        return n.indexOf("right") > -1 && (r = r + t.globals.svgWidth - a + 10), n.indexOf("bottom") > -1 && (o = o + t.globals.svgHeight - s - 10), e.style.left = r + "px", e.style.top = o + "px", {
          x: r,
          y: o,
          ttWidth: a,
          ttHeight: s
        };
      }
    }, {
      key: "addDatapointEventsListeners",
      value: function (t) {
        var e = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
        this.addPathsEventListeners(e, t);
      }
    }, {
      key: "addPathsEventListeners",
      value: function (t, e) {
        for (var i = this, a = function (a) {
            var s = {
              paths: t[a],
              tooltipEl: e.tooltipEl,
              tooltipY: e.tooltipY,
              tooltipX: e.tooltipX,
              elGrid: e.elGrid,
              hoverArea: e.hoverArea,
              ttItems: e.ttItems
            };
            ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map(function (e) {
              return t[a].addEventListener(e, i.onSeriesHover.bind(i, s), {
                capture: !1,
                passive: !0
              });
            });
          }, s = 0; s < t.length; s++) a(s);
      }
    }, {
      key: "onSeriesHover",
      value: function (t, e) {
        var i = this,
          a = Date.now() - this.lastHoverTime;
        a >= 100 ? this.seriesHover(t, e) : (clearTimeout(this.seriesHoverTimeout), this.seriesHoverTimeout = setTimeout(function () {
          i.seriesHover(t, e);
        }, 100 - a));
      }
    }, {
      key: "seriesHover",
      value: function (t, e) {
        var i = this;
        this.lastHoverTime = Date.now();
        var a = [],
          s = this.w;
        s.config.chart.group && (a = this.ctx.getGroupedCharts()), s.globals.axisCharts && (s.globals.minX === -1 / 0 && s.globals.maxX === 1 / 0 || 0 === s.globals.dataPoints) || (a.length ? a.forEach(function (a) {
          var s = i.getElTooltip(a),
            r = {
              paths: t.paths,
              tooltipEl: s,
              tooltipY: t.tooltipY,
              tooltipX: t.tooltipX,
              elGrid: t.elGrid,
              hoverArea: t.hoverArea,
              ttItems: a.w.globals.tooltip.ttItems
            };
          a.w.globals.minX === i.w.globals.minX && a.w.globals.maxX === i.w.globals.maxX && a.w.globals.tooltip.seriesHoverByContext({
            chartCtx: a,
            ttCtx: a.w.globals.tooltip,
            opt: r,
            e: e
          });
        }) : this.seriesHoverByContext({
          chartCtx: this.ctx,
          ttCtx: this.w.globals.tooltip,
          opt: t,
          e: e
        }));
      }
    }, {
      key: "seriesHoverByContext",
      value: function (t) {
        var e = t.chartCtx,
          i = t.ttCtx,
          a = t.opt,
          s = t.e,
          r = e.w,
          o = this.getElTooltip();
        if (o) {
          if (i.tooltipRect = {
            x: 0,
            y: 0,
            ttWidth: o.getBoundingClientRect().width,
            ttHeight: o.getBoundingClientRect().height
          }, i.e = s, i.tooltipUtil.hasBars() && !r.globals.comboCharts && !i.isBarShared) if (this.tConfig.onDatasetHover.highlightDataSeries) new N(e).toggleSeriesOnHover(s, s.target.parentNode);
          i.fixedTooltip && i.drawFixedTooltipRect(), r.globals.axisCharts ? i.axisChartsTooltips({
            e: s,
            opt: a,
            tooltipRect: i.tooltipRect
          }) : i.nonAxisChartsTooltips({
            e: s,
            opt: a,
            tooltipRect: i.tooltipRect
          });
        }
      }
    }, {
      key: "axisChartsTooltips",
      value: function (t) {
        var e,
          i,
          a = t.e,
          s = t.opt,
          r = this.w,
          o = s.elGrid.getBoundingClientRect(),
          n = "touchmove" === a.type ? a.touches[0].clientX : a.clientX,
          l = "touchmove" === a.type ? a.touches[0].clientY : a.clientY;
        if (this.clientY = l, this.clientX = n, r.globals.capturedSeriesIndex = -1, r.globals.capturedDataPointIndex = -1, l < o.top || l > o.top + o.height) this.handleMouseOut(s);else {
          if (Array.isArray(this.tConfig.enabledOnSeries) && !r.config.tooltip.shared) {
            var h = parseInt(s.paths.getAttribute("index"), 10);
            if (this.tConfig.enabledOnSeries.indexOf(h) < 0) return void this.handleMouseOut(s);
          }
          var c = this.getElTooltip(),
            d = this.getElXCrosshairs(),
            g = r.globals.xyCharts || "bar" === r.config.chart.type && !r.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || r.globals.comboCharts && this.tooltipUtil.hasBars();
          if ("mousemove" === a.type || "touchmove" === a.type || "mouseup" === a.type) {
            if (r.globals.collapsedSeries.length + r.globals.ancillaryCollapsedSeries.length === r.globals.series.length) return;
            null !== d && d.classList.add("apexcharts-active");
            var u = this.yaxisTooltips.filter(function (t) {
              return !0 === t;
            });
            if (null !== this.ycrosshairs && u.length && this.ycrosshairs.classList.add("apexcharts-active"), g && !this.showOnIntersect) this.handleStickyTooltip(a, n, l, s);else if ("heatmap" === r.config.chart.type || "treemap" === r.config.chart.type) {
              var p = this.intersect.handleHeatTreeTooltip({
                e: a,
                opt: s,
                x: e,
                y: i,
                type: r.config.chart.type
              });
              e = p.x, i = p.y, c.style.left = e + "px", c.style.top = i + "px";
            } else this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({
              e: a,
              opt: s
            }), this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({
              e: a,
              opt: s,
              x: e,
              y: i
            });
            if (this.yaxisTooltips.length) for (var f = 0; f < r.config.yaxis.length; f++) this.axesTooltip.drawYaxisTooltipText(f, l, this.xyRatios);
            s.tooltipEl.classList.add("apexcharts-active");
          } else "mouseout" !== a.type && "touchend" !== a.type || this.handleMouseOut(s);
        }
      }
    }, {
      key: "nonAxisChartsTooltips",
      value: function (t) {
        var e = t.e,
          i = t.opt,
          a = t.tooltipRect,
          s = this.w,
          r = i.paths.getAttribute("rel"),
          o = this.getElTooltip(),
          n = s.globals.dom.elWrap.getBoundingClientRect();
        if ("mousemove" === e.type || "touchmove" === e.type) {
          o.classList.add("apexcharts-active"), this.tooltipLabels.drawSeriesTexts({
            ttItems: i.ttItems,
            i: parseInt(r, 10) - 1,
            shared: !1
          });
          var l = s.globals.clientX - n.left - a.ttWidth / 2,
            h = s.globals.clientY - n.top - a.ttHeight - 10;
          if (o.style.left = l + "px", o.style.top = h + "px", s.config.legend.tooltipHoverFormatter) {
            var c = r - 1,
              d = (0, s.config.legend.tooltipHoverFormatter)(this.legendLabels[c].getAttribute("data:default-text"), {
                seriesIndex: c,
                dataPointIndex: c,
                w: s
              });
            this.legendLabels[c].innerHTML = d;
          }
        } else "mouseout" !== e.type && "touchend" !== e.type || (o.classList.remove("apexcharts-active"), s.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function (t) {
          var e = t.getAttribute("data:default-text");
          t.innerHTML = decodeURIComponent(e);
        }));
      }
    }, {
      key: "handleStickyTooltip",
      value: function (t, e, i, a) {
        var s = this.w,
          r = this.tooltipUtil.getNearestValues({
            context: this,
            hoverArea: a.hoverArea,
            elGrid: a.elGrid,
            clientX: e,
            clientY: i
          }),
          o = r.j,
          n = r.capturedSeries;
        s.globals.collapsedSeriesIndices.includes(n) && (n = null);
        var l = a.elGrid.getBoundingClientRect();
        if (r.hoverX < 0 || r.hoverX > l.width) this.handleMouseOut(a);else if (null !== n) this.handleStickyCapturedSeries(t, n, a, o);else if (this.tooltipUtil.isXoverlap(o) || s.globals.isBarHorizontal) {
          var h = s.globals.series.findIndex(function (t, e) {
            return !s.globals.collapsedSeriesIndices.includes(e);
          });
          this.create(t, this, h, o, a.ttItems);
        }
      }
    }, {
      key: "handleStickyCapturedSeries",
      value: function (t, e, i, a) {
        var s = this.w;
        if (!this.tConfig.shared && null === s.globals.series[e][a]) return void this.handleMouseOut(i);
        if (void 0 !== s.globals.series[e][a]) this.tConfig.shared && this.tooltipUtil.isXoverlap(a) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(t, this, e, a, i.ttItems) : this.create(t, this, e, a, i.ttItems, !1);else if (this.tooltipUtil.isXoverlap(a)) {
          var r = s.globals.series.findIndex(function (t, e) {
            return !s.globals.collapsedSeriesIndices.includes(e);
          });
          this.create(t, this, r, a, i.ttItems);
        }
      }
    }, {
      key: "deactivateHoverFilter",
      value: function () {
        for (var t = this.w, e = new m(this.ctx), i = t.globals.dom.Paper.select(".apexcharts-bar-area"), a = 0; a < i.length; a++) e.pathMouseLeave(i[a]);
      }
    }, {
      key: "handleMouseOut",
      value: function (t) {
        var e = this.w,
          i = this.getElXCrosshairs();
        if (t.tooltipEl.classList.remove("apexcharts-active"), this.deactivateHoverFilter(), "bubble" !== e.config.chart.type && this.marker.resetPointsSize(), null !== i && i.classList.remove("apexcharts-active"), null !== this.ycrosshairs && this.ycrosshairs.classList.remove("apexcharts-active"), this.isXAxisTooltipEnabled && this.xaxisTooltip.classList.remove("apexcharts-active"), this.yaxisTooltips.length) {
          null === this.yaxisTTEls && (this.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
          for (var a = 0; a < this.yaxisTTEls.length; a++) this.yaxisTTEls[a].classList.remove("apexcharts-active");
        }
        e.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function (t) {
          var e = t.getAttribute("data:default-text");
          t.innerHTML = decodeURIComponent(e);
        });
      }
    }, {
      key: "markerClick",
      value: function (t, e, i) {
        var a = this.w;
        "function" == typeof a.config.chart.events.markerClick && a.config.chart.events.markerClick(t, this.ctx, {
          seriesIndex: e,
          dataPointIndex: i,
          w: a
        }), this.ctx.events.fireEvent("markerClick", [t, this.ctx, {
          seriesIndex: e,
          dataPointIndex: i,
          w: a
        }]);
      }
    }, {
      key: "create",
      value: function (t, i, a, s, r) {
        var o,
          n,
          l,
          h,
          c,
          d,
          g,
          u,
          p,
          f,
          x,
          b,
          v,
          y,
          w,
          k,
          A = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
          S = this.w,
          C = i;
        "mouseup" === t.type && this.markerClick(t, a, s), null === A && (A = this.tConfig.shared);
        var L = this.tooltipUtil.hasMarkers(a),
          P = this.tooltipUtil.getElBars();
        if (S.config.legend.tooltipHoverFormatter) {
          var I = S.config.legend.tooltipHoverFormatter,
            T = Array.from(this.legendLabels);
          T.forEach(function (t) {
            var e = t.getAttribute("data:default-text");
            t.innerHTML = decodeURIComponent(e);
          });
          for (var M = 0; M < T.length; M++) {
            var z = T[M],
              X = parseInt(z.getAttribute("i"), 10),
              E = decodeURIComponent(z.getAttribute("data:default-text")),
              Y = I(E, {
                seriesIndex: A ? X : a,
                dataPointIndex: s,
                w: S
              });
            if (A) z.innerHTML = S.globals.collapsedSeriesIndices.indexOf(X) < 0 ? Y : E;else if (z.innerHTML = X === a ? Y : E, a === X) break;
          }
        }
        var F = e(e({
          ttItems: r,
          i: a,
          j: s
        }, void 0 !== (null === (o = S.globals.seriesRange) || void 0 === o || null === (n = o[a]) || void 0 === n || null === (l = n[s]) || void 0 === l || null === (h = l.y[0]) || void 0 === h ? void 0 : h.y1) && {
          y1: null === (c = S.globals.seriesRange) || void 0 === c || null === (d = c[a]) || void 0 === d || null === (g = d[s]) || void 0 === g || null === (u = g.y[0]) || void 0 === u ? void 0 : u.y1
        }), void 0 !== (null === (p = S.globals.seriesRange) || void 0 === p || null === (f = p[a]) || void 0 === f || null === (x = f[s]) || void 0 === x || null === (b = x.y[0]) || void 0 === b ? void 0 : b.y2) && {
          y2: null === (v = S.globals.seriesRange) || void 0 === v || null === (y = v[a]) || void 0 === y || null === (w = y[s]) || void 0 === w || null === (k = w.y[0]) || void 0 === k ? void 0 : k.y2
        });
        if (A) {
          if (C.tooltipLabels.drawSeriesTexts(e(e({}, F), {}, {
            shared: !this.showOnIntersect && this.tConfig.shared
          })), L) S.globals.markers.largestSize > 0 ? C.marker.enlargePoints(s) : C.tooltipPosition.moveDynamicPointsOnHover(s);else if (this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(P), this.barSeriesHeight > 0)) {
            var R = new m(this.ctx),
              H = S.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(s, "']"));
            this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(s, a);
            for (var D = 0; D < H.length; D++) R.pathMouseEnter(H[D]);
          }
        } else C.tooltipLabels.drawSeriesTexts(e({
          shared: !1
        }, F)), this.tooltipUtil.hasBars() && C.tooltipPosition.moveStickyTooltipOverBars(s, a), L && C.tooltipPosition.moveMarkers(a, s);
      }
    }]), t;
  }(),
  vt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.barCtx = e, this.totalFormatter = this.w.config.plotOptions.bar.dataLabels.total.formatter, this.totalFormatter || (this.totalFormatter = this.w.config.dataLabels.formatter);
    }
    return r(t, [{
      key: "handleBarDataLabels",
      value: function (t) {
        var e = t.x,
          i = t.y,
          a = t.y1,
          s = t.y2,
          r = t.i,
          o = t.j,
          n = t.realIndex,
          l = t.groupIndex,
          h = t.series,
          c = t.barHeight,
          d = t.barWidth,
          g = t.barXPosition,
          u = t.barYPosition,
          p = t.visibleSeries,
          f = t.renderedPath,
          x = this.w,
          b = new m(this.barCtx.ctx),
          v = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[n] : this.barCtx.strokeWidth,
          y = e + parseFloat(d * p),
          w = i + parseFloat(c * p);
        x.globals.isXNumeric && !x.globals.isBarHorizontal && (y = e + parseFloat(d * (p + 1)), w = i + parseFloat(c * (p + 1)) - v);
        var k,
          A = null,
          S = e,
          C = i,
          L = {},
          P = x.config.dataLabels,
          I = this.barCtx.barOptions.dataLabels,
          T = this.barCtx.barOptions.dataLabels.total;
        void 0 !== u && this.barCtx.isRangeBar && (w = u, C = u), void 0 !== g && this.barCtx.isVerticalGroupedRangeBar && (y = g, S = g);
        var M = P.offsetX,
          z = P.offsetY,
          X = {
            width: 0,
            height: 0
          };
        if (x.config.dataLabels.enabled) {
          var E = this.barCtx.series[r][o];
          X = b.getTextRects(x.globals.yLabelFormatters[0](E), parseFloat(P.style.fontSize));
        }
        var Y = {
          x: e,
          y: i,
          i: r,
          j: o,
          realIndex: n,
          groupIndex: l || -1,
          renderedPath: f,
          bcx: y,
          bcy: w,
          barHeight: c,
          barWidth: d,
          textRects: X,
          strokeWidth: v,
          dataLabelsX: S,
          dataLabelsY: C,
          dataLabelsConfig: P,
          barDataLabelsConfig: I,
          barTotalDataLabelsConfig: T,
          offX: M,
          offY: z
        };
        return L = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(Y) : this.calculateColumnsDataLabelsPosition(Y), f.attr({
          cy: L.bcy,
          cx: L.bcx,
          j: o,
          val: h[r][o],
          barHeight: c,
          barWidth: d
        }), k = this.drawCalculatedDataLabels({
          x: L.dataLabelsX,
          y: L.dataLabelsY,
          val: this.barCtx.isRangeBar ? [a, s] : h[r][o],
          i: n,
          j: o,
          barWidth: d,
          barHeight: c,
          textRects: X,
          dataLabelsConfig: P
        }), x.config.chart.stacked && T.enabled && (A = this.drawTotalDataLabels({
          x: L.totalDataLabelsX,
          y: L.totalDataLabelsY,
          barWidth: d,
          barHeight: c,
          realIndex: n,
          textAnchor: L.totalDataLabelsAnchor,
          val: this.getStackedTotalDataLabel({
            realIndex: n,
            j: o
          }),
          dataLabelsConfig: P,
          barTotalDataLabelsConfig: T
        })), {
          dataLabels: k,
          totalDataLabels: A
        };
      }
    }, {
      key: "getStackedTotalDataLabel",
      value: function (t) {
        var i = t.realIndex,
          a = t.j,
          s = this.w,
          r = this.barCtx.stackedSeriesTotals[a];
        return this.totalFormatter && (r = this.totalFormatter(r, e(e({}, s), {}, {
          seriesIndex: i,
          dataPointIndex: a,
          w: s
        }))), r;
      }
    }, {
      key: "calculateColumnsDataLabelsPosition",
      value: function (t) {
        var e,
          i,
          a = this.w,
          s = t.i,
          r = t.j,
          o = t.realIndex,
          n = t.groupIndex,
          l = t.y,
          h = t.bcx,
          c = t.barWidth,
          d = t.barHeight,
          g = t.textRects,
          u = t.dataLabelsX,
          p = t.dataLabelsY,
          f = t.dataLabelsConfig,
          x = t.barDataLabelsConfig,
          b = t.barTotalDataLabelsConfig,
          v = t.strokeWidth,
          y = t.offX,
          w = t.offY;
        d = Math.abs(d);
        var k = "vertical" === a.config.plotOptions.bar.dataLabels.orientation,
          A = this.barCtx.barHelpers.getZeroValueEncounters({
            i: s,
            j: r
          }).zeroEncounters;
        h = h - v / 2 + (-1 !== n ? n * c : 0);
        var S = a.globals.gridWidth / a.globals.dataPoints;
        if (this.barCtx.isVerticalGroupedRangeBar ? u += c / 2 : (u = a.globals.isXNumeric ? h - c / 2 + y : h - S + c / 2 + y, A > 0 && a.config.plotOptions.bar.hideZeroBarsWhenGrouped && (u -= c * A)), k) {
          u = u + g.height / 2 - v / 2 - 2;
        }
        var C = this.barCtx.series[s][r] < 0,
          L = l;
        switch (this.barCtx.isReversed && (L = l - d + (C ? 2 * d : 0), l -= d), x.position) {
          case "center":
            p = k ? C ? L - d / 2 + w : L + d / 2 - w : C ? L - d / 2 + g.height / 2 + w : L + d / 2 + g.height / 2 - w;
            break;
          case "bottom":
            p = k ? C ? L - d + w : L + d - w : C ? L - d + g.height + v + w : L + d - g.height / 2 + v - w;
            break;
          case "top":
            p = k ? C ? L + w : L - w : C ? L - g.height / 2 - w : L + g.height + w;
        }
        if (this.barCtx.lastActiveBarSerieIndex === o && b.enabled) {
          var P = new m(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({
            realIndex: o,
            j: r
          }), f.fontSize);
          e = C ? L - P.height / 2 - w - b.offsetY + 18 : L + P.height + w + b.offsetY - 18, i = u + b.offsetX;
        }
        return a.config.chart.stacked || (p < 0 ? p = 0 + v : p + g.height / 3 > a.globals.gridHeight && (p = a.globals.gridHeight - v)), {
          bcx: h,
          bcy: l,
          dataLabelsX: u,
          dataLabelsY: p,
          totalDataLabelsX: i,
          totalDataLabelsY: e,
          totalDataLabelsAnchor: "middle"
        };
      }
    }, {
      key: "calculateBarsDataLabelsPosition",
      value: function (t) {
        var e = this.w,
          i = t.x,
          a = t.i,
          s = t.j,
          r = t.realIndex,
          o = t.groupIndex,
          n = t.bcy,
          l = t.barHeight,
          h = t.barWidth,
          c = t.textRects,
          d = t.dataLabelsX,
          g = t.strokeWidth,
          u = t.dataLabelsConfig,
          p = t.barDataLabelsConfig,
          f = t.barTotalDataLabelsConfig,
          x = t.offX,
          b = t.offY,
          v = e.globals.gridHeight / e.globals.dataPoints;
        h = Math.abs(h);
        var y,
          w,
          k = (n += -1 !== o ? o * l : 0) - (this.barCtx.isRangeBar ? 0 : v) + l / 2 + c.height / 2 + b - 3,
          A = "start",
          S = this.barCtx.series[a][s] < 0,
          C = i;
        switch (this.barCtx.isReversed && (C = i + h - (S ? 2 * h : 0), i = e.globals.gridWidth - h), p.position) {
          case "center":
            d = S ? C + h / 2 - x : Math.max(c.width / 2, C - h / 2) + x;
            break;
          case "bottom":
            d = S ? C + h - g - Math.round(c.width / 2) - x : C - h + g + Math.round(c.width / 2) + x;
            break;
          case "top":
            d = S ? C - g + Math.round(c.width / 2) - x : C - g - Math.round(c.width / 2) + x;
        }
        if (this.barCtx.lastActiveBarSerieIndex === r && f.enabled) {
          var L = new m(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({
            realIndex: r,
            j: s
          }), u.fontSize);
          S ? (y = C - g + Math.round(L.width / 2) - x - f.offsetX - 15, A = "end") : y = C - g - Math.round(L.width / 2) + x + f.offsetX + 15, w = k + f.offsetY;
        }
        return e.config.chart.stacked || (d < 0 ? d = d + c.width + g : d + c.width / 2 > e.globals.gridWidth && (d = e.globals.gridWidth - c.width - g)), {
          bcx: i,
          bcy: n,
          dataLabelsX: d,
          dataLabelsY: k,
          totalDataLabelsX: y,
          totalDataLabelsY: w,
          totalDataLabelsAnchor: A
        };
      }
    }, {
      key: "drawCalculatedDataLabels",
      value: function (t) {
        var i = t.x,
          a = t.y,
          s = t.val,
          r = t.i,
          o = t.j,
          n = t.textRects,
          l = t.barHeight,
          h = t.barWidth,
          c = t.dataLabelsConfig,
          d = this.w,
          g = "rotate(0)";
        "vertical" === d.config.plotOptions.bar.dataLabels.orientation && (g = "rotate(-90, ".concat(i, ", ").concat(a, ")"));
        var u = new O(this.barCtx.ctx),
          p = new m(this.barCtx.ctx),
          f = c.formatter,
          x = null,
          b = d.globals.collapsedSeriesIndices.indexOf(r) > -1;
        if (c.enabled && !b) {
          x = p.group({
            class: "apexcharts-data-labels",
            transform: g
          });
          var v = "";
          void 0 !== s && (v = f(s, e(e({}, d), {}, {
            seriesIndex: r,
            dataPointIndex: o,
            w: d
          }))), !s && d.config.plotOptions.bar.hideZeroBarsWhenGrouped && (v = "");
          var y = d.globals.series[r][o] < 0,
            w = d.config.plotOptions.bar.dataLabels.position;
          if ("vertical" === d.config.plotOptions.bar.dataLabels.orientation && ("top" === w && (c.textAnchor = y ? "end" : "start"), "center" === w && (c.textAnchor = "middle"), "bottom" === w && (c.textAnchor = y ? "end" : "start")), this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) h < p.getTextRects(v, parseFloat(c.style.fontSize)).width && (v = "");
          d.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? n.width / 1.6 > Math.abs(h) && (v = "") : n.height / 1.6 > Math.abs(l) && (v = ""));
          var k = e({}, c);
          this.barCtx.isHorizontal && s < 0 && ("start" === c.textAnchor ? k.textAnchor = "end" : "end" === c.textAnchor && (k.textAnchor = "start")), u.plotDataLabelsText({
            x: i,
            y: a,
            text: v,
            i: r,
            j: o,
            parent: x,
            dataLabelsConfig: k,
            alwaysDrawDataLabel: !0,
            offsetCorrection: !0
          });
        }
        return x;
      }
    }, {
      key: "drawTotalDataLabels",
      value: function (t) {
        var e,
          i = t.x,
          a = t.y,
          s = t.val,
          r = t.barWidth,
          o = t.barHeight,
          n = t.realIndex,
          l = t.textAnchor,
          h = t.barTotalDataLabelsConfig,
          c = this.w,
          d = new m(this.barCtx.ctx);
        return h.enabled && void 0 !== i && void 0 !== a && this.barCtx.lastActiveBarSerieIndex === n && (e = d.drawText({
          x: i - (!c.globals.isBarHorizontal && c.globals.seriesGroups.length ? r / c.globals.seriesGroups.length : 0),
          y: a - (c.globals.isBarHorizontal && c.globals.seriesGroups.length ? o / c.globals.seriesGroups.length : 0),
          foreColor: h.style.color,
          text: s,
          textAnchor: l,
          fontFamily: h.style.fontFamily,
          fontSize: h.style.fontSize,
          fontWeight: h.style.fontWeight
        })), e;
      }
    }]), t;
  }(),
  mt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.barCtx = e;
    }
    return r(t, [{
      key: "initVariables",
      value: function (t) {
        var e = this.w;
        this.barCtx.series = t, this.barCtx.totalItems = 0, this.barCtx.seriesLen = 0, this.barCtx.visibleI = -1, this.barCtx.visibleItems = 1;
        for (var i = 0; i < t.length; i++) if (t[i].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1, this.barCtx.totalItems += t[i].length), e.globals.isXNumeric) for (var a = 0; a < t[i].length; a++) e.globals.seriesX[i][a] > e.globals.minX && e.globals.seriesX[i][a] < e.globals.maxX && this.barCtx.visibleItems++;else this.barCtx.visibleItems = e.globals.dataPoints;
        0 === this.barCtx.seriesLen && (this.barCtx.seriesLen = 1), this.barCtx.zeroSerieses = [], e.globals.comboCharts || this.checkZeroSeries({
          series: t
        });
      }
    }, {
      key: "initialPositions",
      value: function () {
        var t,
          e,
          i,
          a,
          s,
          r,
          o,
          n,
          l = this.w,
          h = l.globals.dataPoints;
        this.barCtx.isRangeBar && (h = l.globals.labels.length);
        var c = this.barCtx.seriesLen;
        if (l.config.plotOptions.bar.rangeBarGroupRows && (c = 1), this.barCtx.isHorizontal) s = (i = l.globals.gridHeight / h) / c, l.globals.isXNumeric && (s = (i = l.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen), s = s * parseInt(this.barCtx.barOptions.barHeight, 10) / 100, -1 === String(this.barCtx.barOptions.barHeight).indexOf("%") && (s = parseInt(this.barCtx.barOptions.barHeight, 10)), n = this.barCtx.baseLineInvertedY + l.globals.padHorizontal + (this.barCtx.isReversed ? l.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0), this.barCtx.isFunnel && (n = l.globals.gridWidth / 2), e = (i - s * this.barCtx.seriesLen) / 2;else {
          if (a = l.globals.gridWidth / this.barCtx.visibleItems, l.config.xaxis.convertedCatToNumeric && (a = l.globals.gridWidth / l.globals.dataPoints), r = a / c * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100, l.globals.isXNumeric) {
            var d = this.barCtx.xRatio;
            l.config.xaxis.convertedCatToNumeric && (d = this.barCtx.initialXRatio), l.globals.minXDiff && .5 !== l.globals.minXDiff && l.globals.minXDiff / d > 0 && (a = l.globals.minXDiff / d), (r = a / c * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (r = 1);
          }
          -1 === String(this.barCtx.barOptions.columnWidth).indexOf("%") && (r = parseInt(this.barCtx.barOptions.columnWidth, 10)), o = l.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? l.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex] : 0), t = l.globals.padHorizontal + (a - r * this.barCtx.seriesLen) / 2;
        }
        return l.globals.barHeight = s, l.globals.barWidth = r, {
          x: t,
          y: e,
          yDivision: i,
          xDivision: a,
          barHeight: s,
          barWidth: r,
          zeroH: o,
          zeroW: n
        };
      }
    }, {
      key: "initializeStackedPrevVars",
      value: function (t) {
        var e = t.w;
        e.globals.hasSeriesGroups ? e.globals.seriesGroups.forEach(function (e) {
          t[e] || (t[e] = {}), t[e].prevY = [], t[e].prevX = [], t[e].prevYF = [], t[e].prevXF = [], t[e].prevYVal = [], t[e].prevXVal = [];
        }) : (t.prevY = [], t.prevX = [], t.prevYF = [], t.prevXF = [], t.prevYVal = [], t.prevXVal = []);
      }
    }, {
      key: "initializeStackedXYVars",
      value: function (t) {
        var e = t.w;
        e.globals.hasSeriesGroups ? e.globals.seriesGroups.forEach(function (e) {
          t[e] || (t[e] = {}), t[e].xArrj = [], t[e].xArrjF = [], t[e].xArrjVal = [], t[e].yArrj = [], t[e].yArrjF = [], t[e].yArrjVal = [];
        }) : (t.xArrj = [], t.xArrjF = [], t.xArrjVal = [], t.yArrj = [], t.yArrjF = [], t.yArrjVal = []);
      }
    }, {
      key: "getPathFillColor",
      value: function (t, e, i, a) {
        var s,
          r,
          o,
          n,
          l = this.w,
          h = new R(this.barCtx.ctx),
          c = null,
          d = this.barCtx.barOptions.distributed ? i : e;
        this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map(function (a) {
          t[e][i] >= a.from && t[e][i] <= a.to && (c = a.color);
        });
        return l.config.series[e].data[i] && l.config.series[e].data[i].fillColor && (c = l.config.series[e].data[i].fillColor), h.fillPath({
          seriesNumber: this.barCtx.barOptions.distributed ? d : a,
          dataPointIndex: i,
          color: c,
          value: t[e][i],
          fillConfig: null === (s = l.config.series[e].data[i]) || void 0 === s ? void 0 : s.fill,
          fillType: null !== (r = l.config.series[e].data[i]) && void 0 !== r && null !== (o = r.fill) && void 0 !== o && o.type ? null === (n = l.config.series[e].data[i]) || void 0 === n ? void 0 : n.fill.type : Array.isArray(l.config.fill.type) ? l.config.fill.type[e] : l.config.fill.type
        });
      }
    }, {
      key: "getStrokeWidth",
      value: function (t, e, i) {
        var a = 0,
          s = this.w;
        return this.barCtx.series[t][e] ? this.barCtx.isNullValue = !1 : this.barCtx.isNullValue = !0, s.config.stroke.show && (this.barCtx.isNullValue || (a = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[i] : this.barCtx.strokeWidth)), a;
      }
    }, {
      key: "shouldApplyRadius",
      value: function (t) {
        var e = this.w,
          i = !1;
        return e.config.plotOptions.bar.borderRadius > 0 && (e.config.chart.stacked && "last" === e.config.plotOptions.bar.borderRadiusWhenStacked ? this.barCtx.lastActiveBarSerieIndex === t && (i = !0) : i = !0), i;
      }
    }, {
      key: "barBackground",
      value: function (t) {
        var e = t.j,
          i = t.i,
          a = t.x1,
          s = t.x2,
          r = t.y1,
          o = t.y2,
          n = t.elSeries,
          l = this.w,
          h = new m(this.barCtx.ctx),
          c = new N(this.barCtx.ctx).getActiveConfigSeriesIndex();
        if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && c === i) {
          e >= this.barCtx.barOptions.colors.backgroundBarColors.length && (e %= this.barCtx.barOptions.colors.backgroundBarColors.length);
          var d = this.barCtx.barOptions.colors.backgroundBarColors[e],
            g = h.drawRect(void 0 !== a ? a : 0, void 0 !== r ? r : 0, void 0 !== s ? s : l.globals.gridWidth, void 0 !== o ? o : l.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, d, this.barCtx.barOptions.colors.backgroundBarOpacity);
          n.add(g), g.node.classList.add("apexcharts-backgroundBar");
        }
      }
    }, {
      key: "getColumnPaths",
      value: function (t) {
        var e,
          i = t.barWidth,
          a = t.barXPosition,
          s = t.y1,
          r = t.y2,
          o = t.strokeWidth,
          n = t.seriesGroup,
          l = t.realIndex,
          h = t.i,
          c = t.j,
          d = t.w,
          g = new m(this.barCtx.ctx);
        (o = Array.isArray(o) ? o[l] : o) || (o = 0);
        var u = i,
          p = a;
        null !== (e = d.config.series[l].data[c]) && void 0 !== e && e.columnWidthOffset && (p = a - d.config.series[l].data[c].columnWidthOffset / 2, u = i + d.config.series[l].data[c].columnWidthOffset);
        var f = p,
          x = p + u;
        s += .001, r += .001;
        var b = g.move(f, s),
          v = g.move(f, s),
          y = g.line(x - o, s);
        if (d.globals.previousPaths.length > 0 && (v = this.barCtx.getPreviousPath(l, c, !1)), b = b + g.line(f, r) + g.line(x - o, r) + g.line(x - o, s) + ("around" === d.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), v = v + g.line(f, s) + y + y + y + y + y + g.line(f, s) + ("around" === d.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), this.shouldApplyRadius(l) && (b = g.roundPathCorners(b, d.config.plotOptions.bar.borderRadius)), d.config.chart.stacked) {
          var w = this.barCtx;
          d.globals.hasSeriesGroups && n && (w = this.barCtx[n]), w.yArrj.push(r), w.yArrjF.push(Math.abs(s - r)), w.yArrjVal.push(this.barCtx.series[h][c]);
        }
        return {
          pathTo: b,
          pathFrom: v
        };
      }
    }, {
      key: "getBarpaths",
      value: function (t) {
        var e,
          i = t.barYPosition,
          a = t.barHeight,
          s = t.x1,
          r = t.x2,
          o = t.strokeWidth,
          n = t.seriesGroup,
          l = t.realIndex,
          h = t.i,
          c = t.j,
          d = t.w,
          g = new m(this.barCtx.ctx);
        (o = Array.isArray(o) ? o[l] : o) || (o = 0);
        var u = i,
          p = a;
        null !== (e = d.config.series[l].data[c]) && void 0 !== e && e.barHeightOffset && (u = i - d.config.series[l].data[c].barHeightOffset / 2, p = a + d.config.series[l].data[c].barHeightOffset);
        var f = u,
          x = u + p;
        s += .001, r += .001;
        var b = g.move(s, f),
          v = g.move(s, f);
        d.globals.previousPaths.length > 0 && (v = this.barCtx.getPreviousPath(l, c, !1));
        var y = g.line(s, x - o);
        if (b = b + g.line(r, f) + g.line(r, x - o) + y + ("around" === d.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), v = v + g.line(s, f) + y + y + y + y + y + g.line(s, f) + ("around" === d.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), this.shouldApplyRadius(l) && (b = g.roundPathCorners(b, d.config.plotOptions.bar.borderRadius)), d.config.chart.stacked) {
          var w = this.barCtx;
          d.globals.hasSeriesGroups && n && (w = this.barCtx[n]), w.xArrj.push(r), w.xArrjF.push(Math.abs(s - r)), w.xArrjVal.push(this.barCtx.series[h][c]);
        }
        return {
          pathTo: b,
          pathFrom: v
        };
      }
    }, {
      key: "checkZeroSeries",
      value: function (t) {
        for (var e = t.series, i = this.w, a = 0; a < e.length; a++) {
          for (var s = 0, r = 0; r < e[i.globals.maxValsInArrayIndex].length; r++) s += e[a][r];
          0 === s && this.barCtx.zeroSerieses.push(a);
        }
      }
    }, {
      key: "getXForValue",
      value: function (t, e) {
        var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2] ? e : null;
        return null != t && (i = e + t / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? t / this.barCtx.invertedYRatio : 0)), i;
      }
    }, {
      key: "getYForValue",
      value: function (t, e) {
        var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2] ? e : null;
        return null != t && (i = e - t / this.barCtx.yRatio[this.barCtx.yaxisIndex] + 2 * (this.barCtx.isReversed ? t / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0)), i;
      }
    }, {
      key: "getGoalValues",
      value: function (t, i, a, s, r) {
        var n = this,
          l = this.w,
          h = [],
          c = function (e, s) {
            var r;
            h.push((o(r = {}, t, "x" === t ? n.getXForValue(e, i, !1) : n.getYForValue(e, a, !1)), o(r, "attrs", s), r));
          };
        if (l.globals.seriesGoals[s] && l.globals.seriesGoals[s][r] && Array.isArray(l.globals.seriesGoals[s][r]) && l.globals.seriesGoals[s][r].forEach(function (t) {
          c(t.value, t);
        }), this.barCtx.barOptions.isDumbbell && l.globals.seriesRange.length) {
          var d = this.barCtx.barOptions.dumbbellColors ? this.barCtx.barOptions.dumbbellColors : l.globals.colors,
            g = {
              strokeHeight: "x" === t ? 0 : l.globals.markers.size[s],
              strokeWidth: "x" === t ? l.globals.markers.size[s] : 0,
              strokeDashArray: 0,
              strokeLineCap: "round",
              strokeColor: Array.isArray(d[s]) ? d[s][0] : d[s]
            };
          c(l.globals.seriesRangeStart[s][r], g), c(l.globals.seriesRangeEnd[s][r], e(e({}, g), {}, {
            strokeColor: Array.isArray(d[s]) ? d[s][1] : d[s]
          }));
        }
        return h;
      }
    }, {
      key: "drawGoalLine",
      value: function (t) {
        var e = t.barXPosition,
          i = t.barYPosition,
          a = t.goalX,
          s = t.goalY,
          r = t.barWidth,
          o = t.barHeight,
          n = new m(this.barCtx.ctx),
          l = n.group({
            className: "apexcharts-bar-goals-groups"
          });
        l.node.classList.add("apexcharts-element-hidden"), this.barCtx.w.globals.delayedElements.push({
          el: l.node
        }), l.attr("clip-path", "url(#gridRectMarkerMask".concat(this.barCtx.w.globals.cuid, ")"));
        var h = null;
        return this.barCtx.isHorizontal ? Array.isArray(a) && a.forEach(function (t) {
          var e = void 0 !== t.attrs.strokeHeight ? t.attrs.strokeHeight : o / 2,
            a = i + e + o / 2;
          h = n.drawLine(t.x, a - 2 * e, t.x, a, t.attrs.strokeColor ? t.attrs.strokeColor : void 0, t.attrs.strokeDashArray, t.attrs.strokeWidth ? t.attrs.strokeWidth : 2, t.attrs.strokeLineCap), l.add(h);
        }) : Array.isArray(s) && s.forEach(function (t) {
          var i = void 0 !== t.attrs.strokeWidth ? t.attrs.strokeWidth : r / 2,
            a = e + i + r / 2;
          h = n.drawLine(a - 2 * i, t.y, a, t.y, t.attrs.strokeColor ? t.attrs.strokeColor : void 0, t.attrs.strokeDashArray, t.attrs.strokeHeight ? t.attrs.strokeHeight : 2, t.attrs.strokeLineCap), l.add(h);
        }), l;
      }
    }, {
      key: "drawBarShadow",
      value: function (t) {
        var e = t.prevPaths,
          i = t.currPaths,
          a = t.color,
          s = this.w,
          r = e.x,
          o = e.x1,
          n = e.barYPosition,
          l = i.x,
          h = i.x1,
          c = i.barYPosition,
          d = n + i.barHeight,
          g = new m(this.barCtx.ctx),
          u = new x(),
          p = g.move(o, d) + g.line(r, d) + g.line(l, c) + g.line(h, c) + g.line(o, d) + ("around" === s.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z");
        return g.drawPath({
          d: p,
          fill: u.shadeColor(.5, x.rgb2hex(a)),
          stroke: "none",
          strokeWidth: 0,
          fillOpacity: 1,
          classes: "apexcharts-bar-shadows"
        });
      }
    }, {
      key: "getZeroValueEncounters",
      value: function (t) {
        var e = t.i,
          i = t.j,
          a = this.w,
          s = 0,
          r = 0;
        return a.globals.seriesPercent.forEach(function (t, a) {
          t[i] && s++, a < e && 0 === t[i] && r++;
        }), {
          nonZeroColumns: s,
          zeroEncounters: r
        };
      }
    }]), t;
  }(),
  yt = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.w = e.w;
      var s = this.w;
      this.barOptions = s.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = s.config.stroke.width, this.isNullValue = !1, this.isRangeBar = s.globals.seriesRange.length && this.isHorizontal, this.isVerticalGroupedRangeBar = !s.globals.isBarHorizontal && s.globals.seriesRange.length && s.config.plotOptions.bar.rangeBarGroupRows, this.isFunnel = this.barOptions.isFunnel, this.xyRatios = i, null !== this.xyRatios && (this.xRatio = i.xRatio, this.initialXRatio = i.initialXRatio, this.yRatio = i.yRatio, this.invertedXRatio = i.invertedXRatio, this.invertedYRatio = i.invertedYRatio, this.baseLineY = i.baseLineY, this.baseLineInvertedY = i.baseLineInvertedY), this.yaxisIndex = 0, this.seriesLen = 0, this.pathArr = [];
      var r = new N(this.ctx);
      this.lastActiveBarSerieIndex = r.getActiveConfigSeriesIndex("desc", ["bar", "column"]);
      var o = r.getBarSeriesIndices(),
        n = new y(this.ctx);
      this.stackedSeriesTotals = n.getStackedSeriesTotals(this.w.config.series.map(function (t, e) {
        return -1 === o.indexOf(e) ? e : -1;
      }).filter(function (t) {
        return -1 !== t;
      })), this.barHelpers = new mt(this);
    }
    return r(t, [{
      key: "draw",
      value: function (t, i) {
        var a = this.w,
          s = new m(this.ctx),
          r = new y(this.ctx, a);
        t = r.getLogSeries(t), this.series = t, this.yRatio = r.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t);
        var o = s.group({
          class: "apexcharts-bar-series apexcharts-plot-series"
        });
        a.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts");
        for (var n = 0, l = 0; n < t.length; n++, l++) {
          var h,
            c,
            d,
            g,
            u = void 0,
            p = void 0,
            f = [],
            b = [],
            v = a.globals.comboCharts ? i[n] : n,
            w = s.group({
              class: "apexcharts-series",
              rel: n + 1,
              seriesName: x.escapeString(a.globals.seriesNames[v]),
              "data:realIndex": v
            });
          this.ctx.series.addCollapsedClassToSeries(w, v), t[n].length > 0 && (this.visibleI = this.visibleI + 1);
          var k = 0,
            A = 0;
          this.yRatio.length > 1 && (this.yaxisIndex = v), this.isReversed = a.config.yaxis[this.yaxisIndex] && a.config.yaxis[this.yaxisIndex].reversed;
          var S = this.barHelpers.initialPositions();
          p = S.y, k = S.barHeight, c = S.yDivision, g = S.zeroW, u = S.x, A = S.barWidth, h = S.xDivision, d = S.zeroH, this.horizontal || b.push(u + A / 2);
          var C = s.group({
            class: "apexcharts-datalabels",
            "data:realIndex": v
          });
          a.globals.delayedElements.push({
            el: C.node
          }), C.node.classList.add("apexcharts-element-hidden");
          var L = s.group({
              class: "apexcharts-bar-goals-markers"
            }),
            P = s.group({
              class: "apexcharts-bar-shadows"
            });
          a.globals.delayedElements.push({
            el: P.node
          }), P.node.classList.add("apexcharts-element-hidden");
          for (var I = 0; I < a.globals.dataPoints; I++) {
            var T = this.barHelpers.getStrokeWidth(n, I, v),
              M = null,
              z = {
                indexes: {
                  i: n,
                  j: I,
                  realIndex: v,
                  bc: l
                },
                x: u,
                y: p,
                strokeWidth: T,
                elSeries: w
              };
            this.isHorizontal ? (M = this.drawBarPaths(e(e({}, z), {}, {
              barHeight: k,
              zeroW: g,
              yDivision: c
            })), A = this.series[n][I] / this.invertedYRatio) : (M = this.drawColumnPaths(e(e({}, z), {}, {
              xDivision: h,
              barWidth: A,
              zeroH: d
            })), k = this.series[n][I] / this.yRatio[this.yaxisIndex]);
            var X = this.barHelpers.getPathFillColor(t, n, I, v);
            if (this.isFunnel && this.barOptions.isFunnel3d && this.pathArr.length && I > 0) {
              var E = this.barHelpers.drawBarShadow({
                color: "string" == typeof X && -1 === (null == X ? void 0 : X.indexOf("url")) ? X : x.hexToRgba(a.globals.colors[n]),
                prevPaths: this.pathArr[this.pathArr.length - 1],
                currPaths: M
              });
              E && P.add(E);
            }
            this.pathArr.push(M);
            var Y = this.barHelpers.drawGoalLine({
              barXPosition: M.barXPosition,
              barYPosition: M.barYPosition,
              goalX: M.goalX,
              goalY: M.goalY,
              barHeight: k,
              barWidth: A
            });
            Y && L.add(Y), p = M.y, u = M.x, I > 0 && b.push(u + A / 2), f.push(p), this.renderSeries({
              realIndex: v,
              pathFill: X,
              j: I,
              i: n,
              pathFrom: M.pathFrom,
              pathTo: M.pathTo,
              strokeWidth: T,
              elSeries: w,
              x: u,
              y: p,
              series: t,
              barHeight: M.barHeight ? M.barHeight : k,
              barWidth: M.barWidth ? M.barWidth : A,
              elDataLabelsWrap: C,
              elGoalsMarkers: L,
              elBarShadows: P,
              visibleSeries: this.visibleI,
              type: "bar"
            });
          }
          a.globals.seriesXvalues[v] = b, a.globals.seriesYvalues[v] = f, o.add(w);
        }
        return o;
      }
    }, {
      key: "renderSeries",
      value: function (t) {
        var e = t.realIndex,
          i = t.pathFill,
          a = t.lineFill,
          s = t.j,
          r = t.i,
          o = t.groupIndex,
          n = t.pathFrom,
          l = t.pathTo,
          h = t.strokeWidth,
          c = t.elSeries,
          d = t.x,
          g = t.y,
          u = t.y1,
          p = t.y2,
          f = t.series,
          x = t.barHeight,
          b = t.barWidth,
          y = t.barXPosition,
          w = t.barYPosition,
          k = t.elDataLabelsWrap,
          A = t.elGoalsMarkers,
          S = t.elBarShadows,
          C = t.visibleSeries,
          L = t.type,
          P = this.w,
          I = new m(this.ctx);
        a || (a = this.barOptions.distributed ? P.globals.stroke.colors[s] : P.globals.stroke.colors[e]), P.config.series[r].data[s] && P.config.series[r].data[s].strokeColor && (a = P.config.series[r].data[s].strokeColor), this.isNullValue && (i = "none");
        var T = s / P.config.chart.animations.animateGradually.delay * (P.config.chart.animations.speed / P.globals.dataPoints) / 2.4,
          M = I.renderPaths({
            i: r,
            j: s,
            realIndex: e,
            pathFrom: n,
            pathTo: l,
            stroke: a,
            strokeWidth: h,
            strokeLineCap: P.config.stroke.lineCap,
            fill: i,
            animationDelay: T,
            initialSpeed: P.config.chart.animations.speed,
            dataChangeSpeed: P.config.chart.animations.dynamicAnimation.speed,
            className: "apexcharts-".concat(L, "-area")
          });
        M.attr("clip-path", "url(#gridRectMask".concat(P.globals.cuid, ")"));
        var z = P.config.forecastDataPoints;
        z.count > 0 && s >= P.globals.dataPoints - z.count && (M.node.setAttribute("stroke-dasharray", z.dashArray), M.node.setAttribute("stroke-width", z.strokeWidth), M.node.setAttribute("fill-opacity", z.fillOpacity)), void 0 !== u && void 0 !== p && (M.attr("data-range-y1", u), M.attr("data-range-y2", p)), new v(this.ctx).setSelectionFilter(M, e, s), c.add(M);
        var X = new vt(this).handleBarDataLabels({
          x: d,
          y: g,
          y1: u,
          y2: p,
          i: r,
          j: s,
          series: f,
          realIndex: e,
          groupIndex: o,
          barHeight: x,
          barWidth: b,
          barXPosition: y,
          barYPosition: w,
          renderedPath: M,
          visibleSeries: C
        });
        return null !== X.dataLabels && k.add(X.dataLabels), X.totalDataLabels && k.add(X.totalDataLabels), c.add(k), A && c.add(A), S && c.add(S), c;
      }
    }, {
      key: "drawBarPaths",
      value: function (t) {
        var e,
          i = t.indexes,
          a = t.barHeight,
          s = t.strokeWidth,
          r = t.zeroW,
          o = t.x,
          n = t.y,
          l = t.yDivision,
          h = t.elSeries,
          c = this.w,
          d = i.i,
          g = i.j;
        if (c.globals.isXNumeric) e = (n = (c.globals.seriesX[d][g] - c.globals.minX) / this.invertedXRatio - a) + a * this.visibleI;else if (c.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
          var u = 0,
            p = 0;
          c.globals.seriesPercent.forEach(function (t, e) {
            t[g] && u++, e < d && 0 === t[g] && p++;
          }), u > 0 && (a = this.seriesLen * a / u), e = n + a * this.visibleI, e -= a * p;
        } else e = n + a * this.visibleI;
        this.isFunnel && (r -= (this.barHelpers.getXForValue(this.series[d][g], r) - r) / 2), o = this.barHelpers.getXForValue(this.series[d][g], r);
        var f = this.barHelpers.getBarpaths({
          barYPosition: e,
          barHeight: a,
          x1: r,
          x2: o,
          strokeWidth: s,
          series: this.series,
          realIndex: i.realIndex,
          i: d,
          j: g,
          w: c
        });
        return c.globals.isXNumeric || (n += l), this.barHelpers.barBackground({
          j: g,
          i: d,
          y1: e - a * this.visibleI,
          y2: a * this.seriesLen,
          elSeries: h
        }), {
          pathTo: f.pathTo,
          pathFrom: f.pathFrom,
          x1: r,
          x: o,
          y: n,
          goalX: this.barHelpers.getGoalValues("x", r, null, d, g),
          barYPosition: e,
          barHeight: a
        };
      }
    }, {
      key: "drawColumnPaths",
      value: function (t) {
        var e,
          i = t.indexes,
          a = t.x,
          s = t.y,
          r = t.xDivision,
          o = t.barWidth,
          n = t.zeroH,
          l = t.strokeWidth,
          h = t.elSeries,
          c = this.w,
          d = i.realIndex,
          g = i.i,
          u = i.j,
          p = i.bc;
        if (c.globals.isXNumeric) {
          var f = this.getBarXForNumericXAxis({
            x: a,
            j: u,
            realIndex: d,
            barWidth: o
          });
          a = f.x, e = f.barXPosition;
        } else if (c.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
          var x = this.barHelpers.getZeroValueEncounters({
              i: g,
              j: u
            }),
            b = x.nonZeroColumns,
            v = x.zeroEncounters;
          b > 0 && (o = this.seriesLen * o / b), e = a + o * this.visibleI, e -= o * v;
        } else e = a + o * this.visibleI;
        s = this.barHelpers.getYForValue(this.series[g][u], n);
        var m = this.barHelpers.getColumnPaths({
          barXPosition: e,
          barWidth: o,
          y1: n,
          y2: s,
          strokeWidth: l,
          series: this.series,
          realIndex: i.realIndex,
          i: g,
          j: u,
          w: c
        });
        return c.globals.isXNumeric || (a += r), this.barHelpers.barBackground({
          bc: p,
          j: u,
          i: g,
          x1: e - l / 2 - o * this.visibleI,
          x2: o * this.seriesLen + l / 2,
          elSeries: h
        }), {
          pathTo: m.pathTo,
          pathFrom: m.pathFrom,
          x: a,
          y: s,
          goalY: this.barHelpers.getGoalValues("y", null, n, g, u),
          barXPosition: e,
          barWidth: o
        };
      }
    }, {
      key: "getBarXForNumericXAxis",
      value: function (t) {
        var e = t.x,
          i = t.barWidth,
          a = t.realIndex,
          s = t.j,
          r = this.w,
          o = a;
        return r.globals.seriesX[a].length || (o = r.globals.maxValsInArrayIndex), r.globals.seriesX[o][s] && (e = (r.globals.seriesX[o][s] - r.globals.minX) / this.xRatio - i * this.seriesLen / 2), {
          barXPosition: e + i * this.visibleI,
          x: e
        };
      }
    }, {
      key: "getPreviousPath",
      value: function (t, e) {
        for (var i, a = this.w, s = 0; s < a.globals.previousPaths.length; s++) {
          var r = a.globals.previousPaths[s];
          r.paths && r.paths.length > 0 && parseInt(r.realIndex, 10) === parseInt(t, 10) && void 0 !== a.globals.previousPaths[s].paths[e] && (i = a.globals.previousPaths[s].paths[e].d);
        }
        return i;
      }
    }]), t;
  }(),
  wt = function (t) {
    n(s, yt);
    var i = d(s);
    function s() {
      return a(this, s), i.apply(this, arguments);
    }
    return r(s, [{
      key: "draw",
      value: function (t, i) {
        var a = this,
          s = this.w;
        this.graphics = new m(this.ctx), this.bar = new yt(this.ctx, this.xyRatios);
        var r = new y(this.ctx, s);
        t = r.getLogSeries(t), this.yRatio = r.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t), "100%" === s.config.chart.stackType && (t = s.globals.seriesPercent.slice()), this.series = t, this.barHelpers.initializeStackedPrevVars(this);
        for (var o = this.graphics.group({
            class: "apexcharts-bar-series apexcharts-plot-series"
          }), n = 0, l = 0, h = function (r, h) {
            var c = void 0,
              d = void 0,
              g = void 0,
              u = void 0,
              p = -1;
            a.groupCtx = a, s.globals.seriesGroups.forEach(function (t, e) {
              t.indexOf(s.config.series[r].name) > -1 && (p = e);
            }), -1 !== p && (a.groupCtx = a[s.globals.seriesGroups[p]]);
            var f = [],
              b = [],
              v = s.globals.comboCharts ? i[r] : r;
            a.yRatio.length > 1 && (a.yaxisIndex = v), a.isReversed = s.config.yaxis[a.yaxisIndex] && s.config.yaxis[a.yaxisIndex].reversed;
            var m = a.graphics.group({
              class: "apexcharts-series",
              seriesName: x.escapeString(s.globals.seriesNames[v]),
              rel: r + 1,
              "data:realIndex": v
            });
            a.ctx.series.addCollapsedClassToSeries(m, v);
            var y = a.graphics.group({
                class: "apexcharts-datalabels",
                "data:realIndex": v
              }),
              w = a.graphics.group({
                class: "apexcharts-bar-goals-markers"
              }),
              k = 0,
              A = 0,
              S = a.initialPositions(n, l, c, d, g, u);
            l = S.y, k = S.barHeight, d = S.yDivision, u = S.zeroW, n = S.x, A = S.barWidth, c = S.xDivision, g = S.zeroH, s.globals.barHeight = k, s.globals.barWidth = A, a.barHelpers.initializeStackedXYVars(a), 1 === a.groupCtx.prevY.length && a.groupCtx.prevY[0].every(function (t) {
              return isNaN(t);
            }) && (a.groupCtx.prevY[0] = a.groupCtx.prevY[0].map(function (t) {
              return g;
            }), a.groupCtx.prevYF[0] = a.groupCtx.prevYF[0].map(function (t) {
              return 0;
            }));
            for (var C = 0; C < s.globals.dataPoints; C++) {
              var L = a.barHelpers.getStrokeWidth(r, C, v),
                P = {
                  indexes: {
                    i: r,
                    j: C,
                    realIndex: v,
                    bc: h
                  },
                  strokeWidth: L,
                  x: n,
                  y: l,
                  elSeries: m,
                  groupIndex: p,
                  seriesGroup: s.globals.seriesGroups[p]
                },
                I = null;
              a.isHorizontal ? (I = a.drawStackedBarPaths(e(e({}, P), {}, {
                zeroW: u,
                barHeight: k,
                yDivision: d
              })), A = a.series[r][C] / a.invertedYRatio) : (I = a.drawStackedColumnPaths(e(e({}, P), {}, {
                xDivision: c,
                barWidth: A,
                zeroH: g
              })), k = a.series[r][C] / a.yRatio[a.yaxisIndex]);
              var T = a.barHelpers.drawGoalLine({
                barXPosition: I.barXPosition,
                barYPosition: I.barYPosition,
                goalX: I.goalX,
                goalY: I.goalY,
                barHeight: k,
                barWidth: A
              });
              T && w.add(T), l = I.y, n = I.x, f.push(n), b.push(l);
              var M = a.barHelpers.getPathFillColor(t, r, C, v);
              m = a.renderSeries({
                realIndex: v,
                pathFill: M,
                j: C,
                i: r,
                groupIndex: p,
                pathFrom: I.pathFrom,
                pathTo: I.pathTo,
                strokeWidth: L,
                elSeries: m,
                x: n,
                y: l,
                series: t,
                barHeight: k,
                barWidth: A,
                elDataLabelsWrap: y,
                elGoalsMarkers: w,
                type: "bar",
                visibleSeries: 0
              });
            }
            s.globals.seriesXvalues[v] = f, s.globals.seriesYvalues[v] = b, a.groupCtx.prevY.push(a.groupCtx.yArrj), a.groupCtx.prevYF.push(a.groupCtx.yArrjF), a.groupCtx.prevYVal.push(a.groupCtx.yArrjVal), a.groupCtx.prevX.push(a.groupCtx.xArrj), a.groupCtx.prevXF.push(a.groupCtx.xArrjF), a.groupCtx.prevXVal.push(a.groupCtx.xArrjVal), o.add(m);
          }, c = 0, d = 0; c < t.length; c++, d++) h(c, d);
        return o;
      }
    }, {
      key: "initialPositions",
      value: function (t, e, i, a, s, r) {
        var o,
          n,
          l,
          h,
          c = this.w;
        return this.isHorizontal ? (l = (l = a = c.globals.gridHeight / c.globals.dataPoints) * parseInt(c.config.plotOptions.bar.barHeight, 10) / 100, -1 === String(c.config.plotOptions.bar.barHeight).indexOf("%") && (l = parseInt(c.config.plotOptions.bar.barHeight, 10)), r = this.baseLineInvertedY + c.globals.padHorizontal + (this.isReversed ? c.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), e = (a - l) / 2) : (h = i = c.globals.gridWidth / c.globals.dataPoints, h = c.globals.isXNumeric && c.globals.dataPoints > 1 ? (i = c.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : h * parseInt(c.config.plotOptions.bar.columnWidth, 10) / 100, -1 === String(c.config.plotOptions.bar.columnWidth).indexOf("%") && (h = parseInt(c.config.plotOptions.bar.columnWidth, 10)), s = c.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? c.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), t = c.globals.padHorizontal + (i - h) / 2), {
          x: t,
          y: e,
          yDivision: a,
          xDivision: i,
          barHeight: null !== (o = c.globals.seriesGroups) && void 0 !== o && o.length ? l / c.globals.seriesGroups.length : l,
          barWidth: null !== (n = c.globals.seriesGroups) && void 0 !== n && n.length ? h / c.globals.seriesGroups.length : h,
          zeroH: s,
          zeroW: r
        };
      }
    }, {
      key: "drawStackedBarPaths",
      value: function (t) {
        for (var e, i = t.indexes, a = t.barHeight, s = t.strokeWidth, r = t.zeroW, o = t.x, n = t.y, l = t.groupIndex, h = t.seriesGroup, c = t.yDivision, d = t.elSeries, g = this.w, u = n + (-1 !== l ? l * a : 0), p = i.i, f = i.j, x = 0, b = 0; b < this.groupCtx.prevXF.length; b++) x += this.groupCtx.prevXF[b][f];
        var v = p;
        if (h && (v = h.indexOf(g.config.series[p].name)), v > 0) {
          var m = r;
          this.groupCtx.prevXVal[v - 1][f] < 0 ? m = this.series[p][f] >= 0 ? this.groupCtx.prevX[v - 1][f] + x - 2 * (this.isReversed ? x : 0) : this.groupCtx.prevX[v - 1][f] : this.groupCtx.prevXVal[v - 1][f] >= 0 && (m = this.series[p][f] >= 0 ? this.groupCtx.prevX[v - 1][f] : this.groupCtx.prevX[v - 1][f] - x + 2 * (this.isReversed ? x : 0)), e = m;
        } else e = r;
        o = null === this.series[p][f] ? e : e + this.series[p][f] / this.invertedYRatio - 2 * (this.isReversed ? this.series[p][f] / this.invertedYRatio : 0);
        var y = this.barHelpers.getBarpaths({
          barYPosition: u,
          barHeight: a,
          x1: e,
          x2: o,
          strokeWidth: s,
          series: this.series,
          realIndex: i.realIndex,
          seriesGroup: h,
          i: p,
          j: f,
          w: g
        });
        return this.barHelpers.barBackground({
          j: f,
          i: p,
          y1: u,
          y2: a,
          elSeries: d
        }), n += c, {
          pathTo: y.pathTo,
          pathFrom: y.pathFrom,
          goalX: this.barHelpers.getGoalValues("x", r, null, p, f),
          barYPosition: u,
          x: o,
          y: n
        };
      }
    }, {
      key: "drawStackedColumnPaths",
      value: function (t) {
        var e = t.indexes,
          i = t.x,
          a = t.y,
          s = t.xDivision,
          r = t.barWidth,
          o = t.zeroH,
          n = t.groupIndex,
          l = t.seriesGroup,
          h = t.elSeries,
          c = this.w,
          d = e.i,
          g = e.j,
          u = e.bc;
        if (c.globals.isXNumeric) {
          var p = c.globals.seriesX[d][g];
          p || (p = 0), i = (p - c.globals.minX) / this.xRatio - r / 2, c.globals.seriesGroups.length && (i = (p - c.globals.minX) / this.xRatio - r / 2 * c.globals.seriesGroups.length);
        }
        for (var f, x = i + (-1 !== n ? n * r : 0), b = 0, v = 0; v < this.groupCtx.prevYF.length; v++) b += isNaN(this.groupCtx.prevYF[v][g]) ? 0 : this.groupCtx.prevYF[v][g];
        var m = d;
        if (l && (m = l.indexOf(c.config.series[d].name)), m > 0 && !c.globals.isXNumeric || m > 0 && c.globals.isXNumeric && c.globals.seriesX[d - 1][g] === c.globals.seriesX[d][g]) {
          var y,
            w,
            k,
            A = Math.min(this.yRatio.length + 1, d + 1);
          if (void 0 !== this.groupCtx.prevY[m - 1] && this.groupCtx.prevY[m - 1].length) for (var S = 1; S < A; S++) {
            var C;
            if (!isNaN(null === (C = this.groupCtx.prevY[m - S]) || void 0 === C ? void 0 : C[g])) {
              k = this.groupCtx.prevY[m - S][g];
              break;
            }
          }
          for (var L = 1; L < A; L++) {
            var P, I;
            if ((null === (P = this.groupCtx.prevYVal[m - L]) || void 0 === P ? void 0 : P[g]) < 0) {
              w = this.series[d][g] >= 0 ? k - b + 2 * (this.isReversed ? b : 0) : k;
              break;
            }
            if ((null === (I = this.groupCtx.prevYVal[m - L]) || void 0 === I ? void 0 : I[g]) >= 0) {
              w = this.series[d][g] >= 0 ? k : k + b - 2 * (this.isReversed ? b : 0);
              break;
            }
          }
          void 0 === w && (w = c.globals.gridHeight), f = null !== (y = this.groupCtx.prevYF[0]) && void 0 !== y && y.every(function (t) {
            return 0 === t;
          }) && this.groupCtx.prevYF.slice(1, m).every(function (t) {
            return t.every(function (t) {
              return isNaN(t);
            });
          }) ? o : w;
        } else f = o;
        a = this.series[d][g] ? f - this.series[d][g] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[d][g] / this.yRatio[this.yaxisIndex] : 0) : f;
        var T = this.barHelpers.getColumnPaths({
          barXPosition: x,
          barWidth: r,
          y1: f,
          y2: a,
          yRatio: this.yRatio[this.yaxisIndex],
          strokeWidth: this.strokeWidth,
          series: this.series,
          seriesGroup: l,
          realIndex: e.realIndex,
          i: d,
          j: g,
          w: c
        });
        return this.barHelpers.barBackground({
          bc: u,
          j: g,
          i: d,
          x1: x,
          x2: r,
          elSeries: h
        }), i += s, {
          pathTo: T.pathTo,
          pathFrom: T.pathFrom,
          goalY: this.barHelpers.getGoalValues("y", null, o, d, g),
          barXPosition: x,
          x: c.globals.isXNumeric ? i - s : i,
          y: a
        };
      }
    }]), s;
  }(),
  kt = function (t) {
    n(s, yt);
    var i = d(s);
    function s() {
      return a(this, s), i.apply(this, arguments);
    }
    return r(s, [{
      key: "draw",
      value: function (t, i, a) {
        var s = this,
          r = this.w,
          o = new m(this.ctx),
          n = r.globals.comboCharts ? i : r.config.chart.type,
          l = new R(this.ctx);
        this.candlestickOptions = this.w.config.plotOptions.candlestick, this.boxOptions = this.w.config.plotOptions.boxPlot, this.isHorizontal = r.config.plotOptions.bar.horizontal;
        var h = new y(this.ctx, r);
        t = h.getLogSeries(t), this.series = t, this.yRatio = h.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t);
        for (var c = o.group({
            class: "apexcharts-".concat(n, "-series apexcharts-plot-series")
          }), d = function (i) {
            s.isBoxPlot = "boxPlot" === r.config.chart.type || "boxPlot" === r.config.series[i].type;
            var n,
              h,
              d,
              g,
              u = void 0,
              p = void 0,
              f = [],
              b = [],
              v = r.globals.comboCharts ? a[i] : i,
              m = o.group({
                class: "apexcharts-series",
                seriesName: x.escapeString(r.globals.seriesNames[v]),
                rel: i + 1,
                "data:realIndex": v
              });
            s.ctx.series.addCollapsedClassToSeries(m, v), t[i].length > 0 && (s.visibleI = s.visibleI + 1);
            var y, w;
            s.yRatio.length > 1 && (s.yaxisIndex = v);
            var k = s.barHelpers.initialPositions();
            p = k.y, y = k.barHeight, h = k.yDivision, g = k.zeroW, u = k.x, w = k.barWidth, n = k.xDivision, d = k.zeroH, b.push(u + w / 2);
            for (var A = o.group({
                class: "apexcharts-datalabels",
                "data:realIndex": v
              }), S = function (a) {
                var o = s.barHelpers.getStrokeWidth(i, a, v),
                  c = null,
                  x = {
                    indexes: {
                      i: i,
                      j: a,
                      realIndex: v
                    },
                    x: u,
                    y: p,
                    strokeWidth: o,
                    elSeries: m
                  };
                c = s.isHorizontal ? s.drawHorizontalBoxPaths(e(e({}, x), {}, {
                  yDivision: h,
                  barHeight: y,
                  zeroW: g
                })) : s.drawVerticalBoxPaths(e(e({}, x), {}, {
                  xDivision: n,
                  barWidth: w,
                  zeroH: d
                })), p = c.y, u = c.x, a > 0 && b.push(u + w / 2), f.push(p), c.pathTo.forEach(function (e, n) {
                  var h = !s.isBoxPlot && s.candlestickOptions.wick.useFillColor ? c.color[n] : r.globals.stroke.colors[i],
                    d = l.fillPath({
                      seriesNumber: v,
                      dataPointIndex: a,
                      color: c.color[n],
                      value: t[i][a]
                    });
                  s.renderSeries({
                    realIndex: v,
                    pathFill: d,
                    lineFill: h,
                    j: a,
                    i: i,
                    pathFrom: c.pathFrom,
                    pathTo: e,
                    strokeWidth: o,
                    elSeries: m,
                    x: u,
                    y: p,
                    series: t,
                    barHeight: y,
                    barWidth: w,
                    elDataLabelsWrap: A,
                    visibleSeries: s.visibleI,
                    type: r.config.chart.type
                  });
                });
              }, C = 0; C < r.globals.dataPoints; C++) S(C);
            r.globals.seriesXvalues[v] = b, r.globals.seriesYvalues[v] = f, c.add(m);
          }, g = 0; g < t.length; g++) d(g);
        return c;
      }
    }, {
      key: "drawVerticalBoxPaths",
      value: function (t) {
        var e = t.indexes,
          i = t.x;
        t.y;
        var a = t.xDivision,
          s = t.barWidth,
          r = t.zeroH,
          o = t.strokeWidth,
          n = this.w,
          l = new m(this.ctx),
          h = e.i,
          c = e.j,
          d = !0,
          g = n.config.plotOptions.candlestick.colors.upward,
          u = n.config.plotOptions.candlestick.colors.downward,
          p = "";
        this.isBoxPlot && (p = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
        var f = this.yRatio[this.yaxisIndex],
          x = e.realIndex,
          b = this.getOHLCValue(x, c),
          v = r,
          y = r;
        b.o > b.c && (d = !1);
        var w = Math.min(b.o, b.c),
          k = Math.max(b.o, b.c),
          A = b.m;
        n.globals.isXNumeric && (i = (n.globals.seriesX[x][c] - n.globals.minX) / this.xRatio - s / 2);
        var S = i + s * this.visibleI;
        void 0 === this.series[h][c] || null === this.series[h][c] ? (w = r, k = r) : (w = r - w / f, k = r - k / f, v = r - b.h / f, y = r - b.l / f, A = r - b.m / f);
        var C = l.move(S, r),
          L = l.move(S + s / 2, w);
        return n.globals.previousPaths.length > 0 && (L = this.getPreviousPath(x, c, !0)), C = this.isBoxPlot ? [l.move(S, w) + l.line(S + s / 2, w) + l.line(S + s / 2, v) + l.line(S + s / 4, v) + l.line(S + s - s / 4, v) + l.line(S + s / 2, v) + l.line(S + s / 2, w) + l.line(S + s, w) + l.line(S + s, A) + l.line(S, A) + l.line(S, w + o / 2), l.move(S, A) + l.line(S + s, A) + l.line(S + s, k) + l.line(S + s / 2, k) + l.line(S + s / 2, y) + l.line(S + s - s / 4, y) + l.line(S + s / 4, y) + l.line(S + s / 2, y) + l.line(S + s / 2, k) + l.line(S, k) + l.line(S, A) + "z"] : [l.move(S, k) + l.line(S + s / 2, k) + l.line(S + s / 2, v) + l.line(S + s / 2, k) + l.line(S + s, k) + l.line(S + s, w) + l.line(S + s / 2, w) + l.line(S + s / 2, y) + l.line(S + s / 2, w) + l.line(S, w) + l.line(S, k - o / 2)], L += l.move(S, w), n.globals.isXNumeric || (i += a), {
          pathTo: C,
          pathFrom: L,
          x: i,
          y: k,
          barXPosition: S,
          color: this.isBoxPlot ? p : d ? [g] : [u]
        };
      }
    }, {
      key: "drawHorizontalBoxPaths",
      value: function (t) {
        var e = t.indexes;
        t.x;
        var i = t.y,
          a = t.yDivision,
          s = t.barHeight,
          r = t.zeroW,
          o = t.strokeWidth,
          n = this.w,
          l = new m(this.ctx),
          h = e.i,
          c = e.j,
          d = this.boxOptions.colors.lower;
        this.isBoxPlot && (d = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
        var g = this.invertedYRatio,
          u = e.realIndex,
          p = this.getOHLCValue(u, c),
          f = r,
          x = r,
          b = Math.min(p.o, p.c),
          v = Math.max(p.o, p.c),
          y = p.m;
        n.globals.isXNumeric && (i = (n.globals.seriesX[u][c] - n.globals.minX) / this.invertedXRatio - s / 2);
        var w = i + s * this.visibleI;
        void 0 === this.series[h][c] || null === this.series[h][c] ? (b = r, v = r) : (b = r + b / g, v = r + v / g, f = r + p.h / g, x = r + p.l / g, y = r + p.m / g);
        var k = l.move(r, w),
          A = l.move(b, w + s / 2);
        return n.globals.previousPaths.length > 0 && (A = this.getPreviousPath(u, c, !0)), k = [l.move(b, w) + l.line(b, w + s / 2) + l.line(f, w + s / 2) + l.line(f, w + s / 2 - s / 4) + l.line(f, w + s / 2 + s / 4) + l.line(f, w + s / 2) + l.line(b, w + s / 2) + l.line(b, w + s) + l.line(y, w + s) + l.line(y, w) + l.line(b + o / 2, w), l.move(y, w) + l.line(y, w + s) + l.line(v, w + s) + l.line(v, w + s / 2) + l.line(x, w + s / 2) + l.line(x, w + s - s / 4) + l.line(x, w + s / 4) + l.line(x, w + s / 2) + l.line(v, w + s / 2) + l.line(v, w) + l.line(y, w) + "z"], A += l.move(b, w), n.globals.isXNumeric || (i += a), {
          pathTo: k,
          pathFrom: A,
          x: v,
          y: i,
          barYPosition: w,
          color: d
        };
      }
    }, {
      key: "getOHLCValue",
      value: function (t, e) {
        var i = this.w;
        return {
          o: this.isBoxPlot ? i.globals.seriesCandleH[t][e] : i.globals.seriesCandleO[t][e],
          h: this.isBoxPlot ? i.globals.seriesCandleO[t][e] : i.globals.seriesCandleH[t][e],
          m: i.globals.seriesCandleM[t][e],
          l: this.isBoxPlot ? i.globals.seriesCandleC[t][e] : i.globals.seriesCandleL[t][e],
          c: this.isBoxPlot ? i.globals.seriesCandleL[t][e] : i.globals.seriesCandleC[t][e]
        };
      }
    }]), s;
  }(),
  At = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "checkColorRange",
      value: function () {
        var t = this.w,
          e = !1,
          i = t.config.plotOptions[t.config.chart.type];
        return i.colorScale.ranges.length > 0 && i.colorScale.ranges.map(function (t, i) {
          t.from <= 0 && (e = !0);
        }), e;
      }
    }, {
      key: "getShadeColor",
      value: function (t, e, i, a) {
        var s = this.w,
          r = 1,
          o = s.config.plotOptions[t].shadeIntensity,
          n = this.determineColor(t, e, i);
        s.globals.hasNegs || a ? r = s.config.plotOptions[t].reverseNegativeShade ? n.percent < 0 ? n.percent / 100 * (1.25 * o) : (1 - n.percent / 100) * (1.25 * o) : n.percent <= 0 ? 1 - (1 + n.percent / 100) * o : (1 - n.percent / 100) * o : (r = 1 - n.percent / 100, "treemap" === t && (r = (1 - n.percent / 100) * (1.25 * o)));
        var l = n.color,
          h = new x();
        return s.config.plotOptions[t].enableShades && (l = "dark" === this.w.config.theme.mode ? x.hexToRgba(h.shadeColor(-1 * r, n.color), s.config.fill.opacity) : x.hexToRgba(h.shadeColor(r, n.color), s.config.fill.opacity)), {
          color: l,
          colorProps: n
        };
      }
    }, {
      key: "determineColor",
      value: function (t, e, i) {
        var a = this.w,
          s = a.globals.series[e][i],
          r = a.config.plotOptions[t],
          o = r.colorScale.inverse ? i : e;
        r.distributed && "treemap" === a.config.chart.type && (o = i);
        var n = a.globals.colors[o],
          l = null,
          h = Math.min.apply(Math, u(a.globals.series[e])),
          c = Math.max.apply(Math, u(a.globals.series[e]));
        r.distributed || "heatmap" !== t || (h = a.globals.minY, c = a.globals.maxY), void 0 !== r.colorScale.min && (h = r.colorScale.min < a.globals.minY ? r.colorScale.min : a.globals.minY, c = r.colorScale.max > a.globals.maxY ? r.colorScale.max : a.globals.maxY);
        var d = Math.abs(c) + Math.abs(h),
          g = 100 * s / (0 === d ? d - 1e-6 : d);
        r.colorScale.ranges.length > 0 && r.colorScale.ranges.map(function (t, e) {
          if (s >= t.from && s <= t.to) {
            n = t.color, l = t.foreColor ? t.foreColor : null, h = t.from, c = t.to;
            var i = Math.abs(c) + Math.abs(h);
            g = 100 * s / (0 === i ? i - 1e-6 : i);
          }
        });
        return {
          color: n,
          foreColor: l,
          percent: g
        };
      }
    }, {
      key: "calculateDataLabels",
      value: function (t) {
        var e = t.text,
          i = t.x,
          a = t.y,
          s = t.i,
          r = t.j,
          o = t.colorProps,
          n = t.fontSize,
          l = this.w.config.dataLabels,
          h = new m(this.ctx),
          c = new O(this.ctx),
          d = null;
        if (l.enabled) {
          d = h.group({
            class: "apexcharts-data-labels"
          });
          var g = l.offsetX,
            u = l.offsetY,
            p = i + g,
            f = a + parseFloat(l.style.fontSize) / 3 + u;
          c.plotDataLabelsText({
            x: p,
            y: f,
            text: e,
            i: s,
            j: r,
            color: o.foreColor,
            parent: d,
            fontSize: n,
            dataLabelsConfig: l
          });
        }
        return d;
      }
    }, {
      key: "addListeners",
      value: function (t) {
        var e = new m(this.ctx);
        t.node.addEventListener("mouseenter", e.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseleave", e.pathMouseLeave.bind(this, t)), t.node.addEventListener("mousedown", e.pathMouseDown.bind(this, t));
      }
    }]), t;
  }(),
  St = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.w = e.w, this.xRatio = i.xRatio, this.yRatio = i.yRatio, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.helpers = new At(e), this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0;
    }
    return r(t, [{
      key: "draw",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = i.group({
            class: "apexcharts-heatmap"
          });
        a.attr("clip-path", "url(#gridRectMask".concat(e.globals.cuid, ")"));
        var s = e.globals.gridWidth / e.globals.dataPoints,
          r = e.globals.gridHeight / e.globals.series.length,
          o = 0,
          n = !1;
        this.negRange = this.helpers.checkColorRange();
        var l = t.slice();
        e.config.yaxis[0].reversed && (n = !0, l.reverse());
        for (var h = n ? 0 : l.length - 1; n ? h < l.length : h >= 0; n ? h++ : h--) {
          var c = i.group({
            class: "apexcharts-series apexcharts-heatmap-series",
            seriesName: x.escapeString(e.globals.seriesNames[h]),
            rel: h + 1,
            "data:realIndex": h
          });
          if (this.ctx.series.addCollapsedClassToSeries(c, h), e.config.chart.dropShadow.enabled) {
            var d = e.config.chart.dropShadow;
            new v(this.ctx).dropShadow(c, d, h);
          }
          for (var g = 0, u = e.config.plotOptions.heatmap.shadeIntensity, p = 0; p < l[h].length; p++) {
            var f = this.helpers.getShadeColor(e.config.chart.type, h, p, this.negRange),
              b = f.color,
              y = f.colorProps;
            if ("image" === e.config.fill.type) b = new R(this.ctx).fillPath({
              seriesNumber: h,
              dataPointIndex: p,
              opacity: e.globals.hasNegs ? y.percent < 0 ? 1 - (1 + y.percent / 100) : u + y.percent / 100 : y.percent / 100,
              patternID: x.randomId(),
              width: e.config.fill.image.width ? e.config.fill.image.width : s,
              height: e.config.fill.image.height ? e.config.fill.image.height : r
            });
            var w = this.rectRadius,
              k = i.drawRect(g, o, s, r, w);
            if (k.attr({
              cx: g,
              cy: o
            }), k.node.classList.add("apexcharts-heatmap-rect"), c.add(k), k.attr({
              fill: b,
              i: h,
              index: h,
              j: p,
              val: t[h][p],
              "stroke-width": this.strokeWidth,
              stroke: e.config.plotOptions.heatmap.useFillColorAsStroke ? b : e.globals.stroke.colors[0],
              color: b
            }), this.helpers.addListeners(k), e.config.chart.animations.enabled && !e.globals.dataChanged) {
              var A = 1;
              e.globals.resized || (A = e.config.chart.animations.speed), this.animateHeatMap(k, g, o, s, r, A);
            }
            if (e.globals.dataChanged) {
              var S = 1;
              if (this.dynamicAnim.enabled && e.globals.shouldAnimate) {
                S = this.dynamicAnim.speed;
                var C = e.globals.previousPaths[h] && e.globals.previousPaths[h][p] && e.globals.previousPaths[h][p].color;
                C || (C = "rgba(255, 255, 255, 0)"), this.animateHeatColor(k, x.isColorHex(C) ? C : x.rgb2hex(C), x.isColorHex(b) ? b : x.rgb2hex(b), S);
              }
            }
            var L = (0, e.config.dataLabels.formatter)(e.globals.series[h][p], {
                value: e.globals.series[h][p],
                seriesIndex: h,
                dataPointIndex: p,
                w: e
              }),
              P = this.helpers.calculateDataLabels({
                text: L,
                x: g + s / 2,
                y: o + r / 2,
                i: h,
                j: p,
                colorProps: y,
                series: l
              });
            null !== P && c.add(P), g += s;
          }
          o += r, a.add(c);
        }
        var I = e.globals.yAxisScale[0].result.slice();
        return e.config.yaxis[0].reversed ? I.unshift("") : I.push(""), e.globals.yAxisScale[0].result = I, a;
      }
    }, {
      key: "animateHeatMap",
      value: function (t, e, i, a, s, r) {
        var o = new b(this.ctx);
        o.animateRect(t, {
          x: e + a / 2,
          y: i + s / 2,
          width: 0,
          height: 0
        }, {
          x: e,
          y: i,
          width: a,
          height: s
        }, r, function () {
          o.animationCompleted(t);
        });
      }
    }, {
      key: "animateHeatColor",
      value: function (t, e, i, a) {
        t.attr({
          fill: e
        }).animate(a).attr({
          fill: i
        });
      }
    }]), t;
  }(),
  Ct = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "drawYAxisTexts",
      value: function (t, e, i, a) {
        var s = this.w,
          r = s.config.yaxis[0],
          o = s.globals.yLabelFormatters[0];
        return new m(this.ctx).drawText({
          x: t + r.labels.offsetX,
          y: e + r.labels.offsetY,
          text: o(a, i),
          textAnchor: "middle",
          fontSize: r.labels.style.fontSize,
          fontFamily: r.labels.style.fontFamily,
          foreColor: Array.isArray(r.labels.style.colors) ? r.labels.style.colors[i] : r.labels.style.colors
        });
      }
    }]), t;
  }(),
  Lt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
      var i = this.w;
      this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels, this.lineColorArr = void 0 !== i.globals.stroke.colors ? i.globals.stroke.colors : i.globals.colors, this.defaultSize = Math.min(i.globals.gridWidth, i.globals.gridHeight), this.centerY = this.defaultSize / 2, this.centerX = i.globals.gridWidth / 2, "radialBar" === i.config.chart.type ? this.fullAngle = 360 : this.fullAngle = Math.abs(i.config.plotOptions.pie.endAngle - i.config.plotOptions.pie.startAngle), this.initialAngle = i.config.plotOptions.pie.startAngle % this.fullAngle, i.globals.radialSize = this.defaultSize / 2.05 - i.config.stroke.width - (i.config.chart.sparkline.enabled ? 0 : i.config.chart.dropShadow.blur), this.donutSize = i.globals.radialSize * parseInt(i.config.plotOptions.pie.donut.size, 10) / 100, this.maxY = 0, this.sliceLabels = [], this.sliceSizes = [], this.prevSectorAngleArr = [];
    }
    return r(t, [{
      key: "draw",
      value: function (t) {
        var e = this,
          i = this.w,
          a = new m(this.ctx);
        if (this.ret = a.group({
          class: "apexcharts-pie"
        }), i.globals.noData) return this.ret;
        for (var s = 0, r = 0; r < t.length; r++) s += x.negToZero(t[r]);
        var o = [],
          n = a.group();
        0 === s && (s = 1e-5), t.forEach(function (t) {
          e.maxY = Math.max(e.maxY, t);
        }), i.config.yaxis[0].max && (this.maxY = i.config.yaxis[0].max), "back" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret);
        for (var l = 0; l < t.length; l++) {
          var h = this.fullAngle * x.negToZero(t[l]) / s;
          o.push(h), "polarArea" === this.chartType ? (o[l] = this.fullAngle / t.length, this.sliceSizes.push(i.globals.radialSize * t[l] / this.maxY)) : this.sliceSizes.push(i.globals.radialSize);
        }
        if (i.globals.dataChanged) {
          for (var c, d = 0, g = 0; g < i.globals.previousPaths.length; g++) d += x.negToZero(i.globals.previousPaths[g]);
          for (var u = 0; u < i.globals.previousPaths.length; u++) c = this.fullAngle * x.negToZero(i.globals.previousPaths[u]) / d, this.prevSectorAngleArr.push(c);
        }
        this.donutSize < 0 && (this.donutSize = 0);
        var p = i.config.plotOptions.pie.customScale,
          f = i.globals.gridWidth / 2,
          b = i.globals.gridHeight / 2,
          v = f - i.globals.gridWidth / 2 * p,
          y = b - i.globals.gridHeight / 2 * p;
        if ("donut" === this.chartType) {
          var w = a.drawCircle(this.donutSize);
          w.attr({
            cx: this.centerX,
            cy: this.centerY,
            fill: i.config.plotOptions.pie.donut.background ? i.config.plotOptions.pie.donut.background : "transparent"
          }), n.add(w);
        }
        var k = this.drawArcs(o, t);
        if (this.sliceLabels.forEach(function (t) {
          k.add(t);
        }), n.attr({
          transform: "translate(".concat(v, ", ").concat(y, ") scale(").concat(p, ")")
        }), n.add(k), this.ret.add(n), this.donutDataLabels.show) {
          var A = this.renderInnerDataLabels(this.donutDataLabels, {
            hollowSize: this.donutSize,
            centerX: this.centerX,
            centerY: this.centerY,
            opacity: this.donutDataLabels.show,
            translateX: v,
            translateY: y
          });
          this.ret.add(A);
        }
        return "front" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret), this.ret;
      }
    }, {
      key: "drawArcs",
      value: function (t, e) {
        var i = this.w,
          a = new v(this.ctx),
          s = new m(this.ctx),
          r = new R(this.ctx),
          o = s.group({
            class: "apexcharts-slices"
          }),
          n = this.initialAngle,
          l = this.initialAngle,
          h = this.initialAngle,
          c = this.initialAngle;
        this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0;
        for (var d = 0; d < t.length; d++) {
          var g = s.group({
            class: "apexcharts-series apexcharts-pie-series",
            seriesName: x.escapeString(i.globals.seriesNames[d]),
            rel: d + 1,
            "data:realIndex": d
          });
          o.add(g), l = c, h = (n = h) + t[d], c = l + this.prevSectorAngleArr[d];
          var u = h < n ? this.fullAngle + h - n : h - n,
            p = r.fillPath({
              seriesNumber: d,
              size: this.sliceSizes[d],
              value: e[d]
            }),
            f = this.getChangedPath(l, c),
            b = s.drawPath({
              d: f,
              stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[d] : this.lineColorArr,
              strokeWidth: 0,
              fill: p,
              fillOpacity: i.config.fill.opacity,
              classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(d)
            });
          if (b.attr({
            index: 0,
            j: d
          }), a.setSelectionFilter(b, 0, d), i.config.chart.dropShadow.enabled) {
            var y = i.config.chart.dropShadow;
            a.dropShadow(b, y, d);
          }
          this.addListeners(b, this.donutDataLabels), m.setAttrs(b.node, {
            "data:angle": u,
            "data:startAngle": n,
            "data:strokeWidth": this.strokeWidth,
            "data:value": e[d]
          });
          var w = {
            x: 0,
            y: 0
          };
          "pie" === this.chartType || "polarArea" === this.chartType ? w = x.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize / 1.25 + i.config.plotOptions.pie.dataLabels.offset, (n + u / 2) % this.fullAngle) : "donut" === this.chartType && (w = x.polarToCartesian(this.centerX, this.centerY, (i.globals.radialSize + this.donutSize) / 2 + i.config.plotOptions.pie.dataLabels.offset, (n + u / 2) % this.fullAngle)), g.add(b);
          var k = 0;
          if (!this.initialAnim || i.globals.resized || i.globals.dataChanged ? this.animBeginArr.push(0) : (0 === (k = u / this.fullAngle * i.config.chart.animations.speed) && (k = 1), this.animDur = k + this.animDur, this.animBeginArr.push(this.animDur)), this.dynamicAnim && i.globals.dataChanged ? this.animatePaths(b, {
            size: this.sliceSizes[d],
            endAngle: h,
            startAngle: n,
            prevStartAngle: l,
            prevEndAngle: c,
            animateStartingPos: !0,
            i: d,
            animBeginArr: this.animBeginArr,
            shouldSetPrevPaths: !0,
            dur: i.config.chart.animations.dynamicAnimation.speed
          }) : this.animatePaths(b, {
            size: this.sliceSizes[d],
            endAngle: h,
            startAngle: n,
            i: d,
            totalItems: t.length - 1,
            animBeginArr: this.animBeginArr,
            dur: k
          }), i.config.plotOptions.pie.expandOnClick && "polarArea" !== this.chartType && b.click(this.pieClicked.bind(this, d)), void 0 !== i.globals.selectedDataPoints[0] && i.globals.selectedDataPoints[0].indexOf(d) > -1 && this.pieClicked(d), i.config.dataLabels.enabled) {
            var A = w.x,
              S = w.y,
              C = 100 * u / this.fullAngle + "%";
            if (0 !== u && i.config.plotOptions.pie.dataLabels.minAngleToShowLabel < t[d]) {
              var L = i.config.dataLabels.formatter;
              void 0 !== L && (C = L(i.globals.seriesPercent[d][0], {
                seriesIndex: d,
                w: i
              }));
              var P = i.globals.dataLabels.style.colors[d],
                I = s.group({
                  class: "apexcharts-datalabels"
                }),
                T = s.drawText({
                  x: A,
                  y: S,
                  text: C,
                  textAnchor: "middle",
                  fontSize: i.config.dataLabels.style.fontSize,
                  fontFamily: i.config.dataLabels.style.fontFamily,
                  fontWeight: i.config.dataLabels.style.fontWeight,
                  foreColor: P
                });
              if (I.add(T), i.config.dataLabels.dropShadow.enabled) {
                var M = i.config.dataLabels.dropShadow;
                a.dropShadow(T, M);
              }
              T.node.classList.add("apexcharts-pie-label"), i.config.chart.animations.animate && !1 === i.globals.resized && (T.node.classList.add("apexcharts-pie-label-delay"), T.node.style.animationDelay = i.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(I);
            }
          }
        }
        return o;
      }
    }, {
      key: "addListeners",
      value: function (t, e) {
        var i = new m(this.ctx);
        t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this, t)), t.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this, t)), this.donutDataLabels.total.showAlways || (t.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, t.node, e)));
      }
    }, {
      key: "animatePaths",
      value: function (t, e) {
        var i = this.w,
          a = e.endAngle < e.startAngle ? this.fullAngle + e.endAngle - e.startAngle : e.endAngle - e.startAngle,
          s = a,
          r = e.startAngle,
          o = e.startAngle;
        void 0 !== e.prevStartAngle && void 0 !== e.prevEndAngle && (r = e.prevEndAngle, s = e.prevEndAngle < e.prevStartAngle ? this.fullAngle + e.prevEndAngle - e.prevStartAngle : e.prevEndAngle - e.prevStartAngle), e.i === i.config.series.length - 1 && (a + o > this.fullAngle ? e.endAngle = e.endAngle - (a + o) : a + o < this.fullAngle && (e.endAngle = e.endAngle + (this.fullAngle - (a + o)))), a === this.fullAngle && (a = this.fullAngle - .01), this.animateArc(t, r, o, a, s, e);
      }
    }, {
      key: "animateArc",
      value: function (t, e, i, a, s, r) {
        var o,
          n = this,
          l = this.w,
          h = new b(this.ctx),
          c = r.size;
        (isNaN(e) || isNaN(s)) && (e = i, s = a, r.dur = 0);
        var d = a,
          g = i,
          u = e < i ? this.fullAngle + e - i : e - i;
        l.globals.dataChanged && r.shouldSetPrevPaths && r.prevEndAngle && (o = n.getPiePath({
          me: n,
          startAngle: r.prevStartAngle,
          angle: r.prevEndAngle < r.prevStartAngle ? this.fullAngle + r.prevEndAngle - r.prevStartAngle : r.prevEndAngle - r.prevStartAngle,
          size: c
        }), t.attr({
          d: o
        })), 0 !== r.dur ? t.animate(r.dur, l.globals.easing, r.animBeginArr[r.i]).afterAll(function () {
          "pie" !== n.chartType && "donut" !== n.chartType && "polarArea" !== n.chartType || this.animate(l.config.chart.animations.dynamicAnimation.speed).attr({
            "stroke-width": n.strokeWidth
          }), r.i === l.config.series.length - 1 && h.animationCompleted(t);
        }).during(function (l) {
          d = u + (a - u) * l, r.animateStartingPos && (d = s + (a - s) * l, g = e - s + (i - (e - s)) * l), o = n.getPiePath({
            me: n,
            startAngle: g,
            angle: d,
            size: c
          }), t.node.setAttribute("data:pathOrig", o), t.attr({
            d: o
          });
        }) : (o = n.getPiePath({
          me: n,
          startAngle: g,
          angle: a,
          size: c
        }), r.isTrack || (l.globals.animationEnded = !0), t.node.setAttribute("data:pathOrig", o), t.attr({
          d: o,
          "stroke-width": n.strokeWidth
        }));
      }
    }, {
      key: "pieClicked",
      value: function (t) {
        var e,
          i = this.w,
          a = this,
          s = a.sliceSizes[t] + (i.config.plotOptions.pie.expandOnClick ? 4 : 0),
          r = i.globals.dom.Paper.select(".apexcharts-".concat(a.chartType.toLowerCase(), "-slice-").concat(t)).members[0];
        if ("true" !== r.attr("data:pieClicked")) {
          var o = i.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
          Array.prototype.forEach.call(o, function (t) {
            t.setAttribute("data:pieClicked", "false");
            var e = t.getAttribute("data:pathOrig");
            e && t.setAttribute("d", e);
          }), r.attr("data:pieClicked", "true");
          var n = parseInt(r.attr("data:startAngle"), 10),
            l = parseInt(r.attr("data:angle"), 10);
          e = a.getPiePath({
            me: a,
            startAngle: n,
            angle: l,
            size: s
          }), 360 !== l && r.plot(e);
        } else {
          r.attr({
            "data:pieClicked": "false"
          }), this.revertDataLabelsInner(r.node, this.donutDataLabels);
          var h = r.attr("data:pathOrig");
          r.attr({
            d: h
          });
        }
      }
    }, {
      key: "getChangedPath",
      value: function (t, e) {
        var i = "";
        return this.dynamicAnim && this.w.globals.dataChanged && (i = this.getPiePath({
          me: this,
          startAngle: t,
          angle: e - t,
          size: this.size
        })), i;
      }
    }, {
      key: "getPiePath",
      value: function (t) {
        var e,
          i = t.me,
          a = t.startAngle,
          s = t.angle,
          r = t.size,
          o = new m(this.ctx),
          n = a,
          l = Math.PI * (n - 90) / 180,
          h = s + a;
        Math.ceil(h) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (h = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - .01), Math.ceil(h) > this.fullAngle && (h -= this.fullAngle);
        var c = Math.PI * (h - 90) / 180,
          d = i.centerX + r * Math.cos(l),
          g = i.centerY + r * Math.sin(l),
          u = i.centerX + r * Math.cos(c),
          p = i.centerY + r * Math.sin(c),
          f = x.polarToCartesian(i.centerX, i.centerY, i.donutSize, h),
          b = x.polarToCartesian(i.centerX, i.centerY, i.donutSize, n),
          v = s > 180 ? 1 : 0,
          y = ["M", d, g, "A", r, r, 0, v, 1, u, p];
        return e = "donut" === i.chartType ? [].concat(y, ["L", f.x, f.y, "A", i.donutSize, i.donutSize, 0, v, 0, b.x, b.y, "L", d, g, "z"]).join(" ") : "pie" === i.chartType || "polarArea" === i.chartType ? [].concat(y, ["L", i.centerX, i.centerY, "L", d, g]).join(" ") : [].concat(y).join(" "), o.roundPathCorners(e, 2 * this.strokeWidth);
      }
    }, {
      key: "drawPolarElements",
      value: function (t) {
        var e = this.w,
          i = new _(this.ctx),
          a = new m(this.ctx),
          s = new Ct(this.ctx),
          r = a.group(),
          o = a.group(),
          n = i.niceScale(0, Math.ceil(this.maxY), e.config.yaxis[0].tickAmount, 0, !0),
          l = n.result.reverse(),
          h = n.result.length;
        this.maxY = n.niceMax;
        for (var c = e.globals.radialSize, d = c / (h - 1), g = 0; g < h - 1; g++) {
          var u = a.drawCircle(c);
          if (u.attr({
            cx: this.centerX,
            cy: this.centerY,
            fill: "none",
            "stroke-width": e.config.plotOptions.polarArea.rings.strokeWidth,
            stroke: e.config.plotOptions.polarArea.rings.strokeColor
          }), e.config.yaxis[0].show) {
            var p = s.drawYAxisTexts(this.centerX, this.centerY - c + parseInt(e.config.yaxis[0].labels.style.fontSize, 10) / 2, g, l[g]);
            o.add(p);
          }
          r.add(u), c -= d;
        }
        this.drawSpokes(t), t.add(r), t.add(o);
      }
    }, {
      key: "renderInnerDataLabels",
      value: function (t, e) {
        var i = this.w,
          a = new m(this.ctx),
          s = a.group({
            class: "apexcharts-datalabels-group",
            transform: "translate(".concat(e.translateX ? e.translateX : 0, ", ").concat(e.translateY ? e.translateY : 0, ") scale(").concat(i.config.plotOptions.pie.customScale, ")")
          }),
          r = t.total.show;
        s.node.style.opacity = e.opacity;
        var o,
          n,
          l = e.centerX,
          h = e.centerY;
        o = void 0 === t.name.color ? i.globals.colors[0] : t.name.color;
        var c = t.name.fontSize,
          d = t.name.fontFamily,
          g = t.name.fontWeight;
        n = void 0 === t.value.color ? i.config.chart.foreColor : t.value.color;
        var u = t.value.formatter,
          p = "",
          f = "";
        if (r ? (o = t.total.color, c = t.total.fontSize, d = t.total.fontFamily, g = t.total.fontWeight, f = t.total.label, p = t.total.formatter(i)) : 1 === i.globals.series.length && (p = u(i.globals.series[0], i), f = i.globals.seriesNames[0]), f && (f = t.name.formatter(f, t.total.show, i)), t.name.show) {
          var x = a.drawText({
            x: l,
            y: h + parseFloat(t.name.offsetY),
            text: f,
            textAnchor: "middle",
            foreColor: o,
            fontSize: c,
            fontWeight: g,
            fontFamily: d
          });
          x.node.classList.add("apexcharts-datalabel-label"), s.add(x);
        }
        if (t.value.show) {
          var b = t.name.show ? parseFloat(t.value.offsetY) + 16 : t.value.offsetY,
            v = a.drawText({
              x: l,
              y: h + b,
              text: p,
              textAnchor: "middle",
              foreColor: n,
              fontWeight: t.value.fontWeight,
              fontSize: t.value.fontSize,
              fontFamily: t.value.fontFamily
            });
          v.node.classList.add("apexcharts-datalabel-value"), s.add(v);
        }
        return s;
      }
    }, {
      key: "printInnerLabels",
      value: function (t, e, i, a) {
        var s,
          r = this.w;
        a ? s = void 0 === t.name.color ? r.globals.colors[parseInt(a.parentNode.getAttribute("rel"), 10) - 1] : t.name.color : r.globals.series.length > 1 && t.total.show && (s = t.total.color);
        var o = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),
          n = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
        i = (0, t.value.formatter)(i, r), a || "function" != typeof t.total.formatter || (i = t.total.formatter(r));
        var l = e === t.total.label;
        e = t.name.formatter(e, l, r), null !== o && (o.textContent = e), null !== n && (n.textContent = i), null !== o && (o.style.fill = s);
      }
    }, {
      key: "printDataLabelsInner",
      value: function (t, e) {
        var i = this.w,
          a = t.getAttribute("data:value"),
          s = i.globals.seriesNames[parseInt(t.parentNode.getAttribute("rel"), 10) - 1];
        i.globals.series.length > 1 && this.printInnerLabels(e, s, a, t);
        var r = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
        null !== r && (r.style.opacity = 1);
      }
    }, {
      key: "drawSpokes",
      value: function (t) {
        var e = this,
          i = this.w,
          a = new m(this.ctx),
          s = i.config.plotOptions.polarArea.spokes;
        if (0 !== s.strokeWidth) {
          for (var r = [], o = 360 / i.globals.series.length, n = 0; n < i.globals.series.length; n++) r.push(x.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize, i.config.plotOptions.pie.startAngle + o * n));
          r.forEach(function (i, r) {
            var o = a.drawLine(i.x, i.y, e.centerX, e.centerY, Array.isArray(s.connectorColors) ? s.connectorColors[r] : s.connectorColors);
            t.add(o);
          });
        }
      }
    }, {
      key: "revertDataLabelsInner",
      value: function (t, e, i) {
        var a = this,
          s = this.w,
          r = s.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"),
          o = !1,
          n = s.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"),
          l = function (t) {
            var i = t.makeSliceOut,
              s = t.printLabel;
            Array.prototype.forEach.call(n, function (t) {
              "true" === t.getAttribute("data:pieClicked") && (i && (o = !0), s && a.printDataLabelsInner(t, e));
            });
          };
        if (l({
          makeSliceOut: !0,
          printLabel: !1
        }), e.total.show && s.globals.series.length > 1) o && !e.total.showAlways ? l({
          makeSliceOut: !1,
          printLabel: !0
        }) : this.printInnerLabels(e, e.total.label, e.total.formatter(s));else if (l({
          makeSliceOut: !1,
          printLabel: !0
        }), !o) if (s.globals.selectedDataPoints.length && s.globals.series.length > 1) {
          if (s.globals.selectedDataPoints[0].length > 0) {
            var h = s.globals.selectedDataPoints[0],
              c = s.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(h));
            this.printDataLabelsInner(c, e);
          } else r && s.globals.selectedDataPoints.length && 0 === s.globals.selectedDataPoints[0].length && (r.style.opacity = 0);
        } else r && s.globals.series.length > 1 && (r.style.opacity = 0);
      }
    }]), t;
  }(),
  Pt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
      var i = this.w;
      this.graphics = new m(this.ctx), this.lineColorArr = void 0 !== i.globals.stroke.colors ? i.globals.stroke.colors : i.globals.colors, this.defaultSize = i.globals.svgHeight < i.globals.svgWidth ? i.globals.gridHeight + 1.5 * i.globals.goldenPadding : i.globals.gridWidth, this.isLog = i.config.yaxis[0].logarithmic, this.coreUtils = new y(this.ctx), this.maxValue = this.isLog ? this.coreUtils.getLogVal(i.globals.maxY, 0) : i.globals.maxY, this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : i.globals.minY, this.polygons = i.config.plotOptions.radar.polygons, this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0, this.size = this.defaultSize / 2.1 - this.strokeWidth - i.config.chart.dropShadow.blur, i.config.xaxis.labels.show && (this.size = this.size - i.globals.xAxisLabelsWidth / 1.75), void 0 !== i.config.plotOptions.radar.size && (this.size = i.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = [];
    }
    return r(t, [{
      key: "draw",
      value: function (t) {
        var i = this,
          a = this.w,
          s = new R(this.ctx),
          r = [],
          o = new O(this.ctx);
        t.length && (this.dataPointsLen = t[a.globals.maxValsInArrayIndex].length), this.disAngle = 2 * Math.PI / this.dataPointsLen;
        var n = a.globals.gridWidth / 2,
          l = a.globals.gridHeight / 2,
          h = n + a.config.plotOptions.radar.offsetX,
          c = l + a.config.plotOptions.radar.offsetY,
          d = this.graphics.group({
            class: "apexcharts-radar-series apexcharts-plot-series",
            transform: "translate(".concat(h || 0, ", ").concat(c || 0, ")")
          }),
          g = [],
          u = null,
          p = null;
        if (this.yaxisLabels = this.graphics.group({
          class: "apexcharts-yaxis"
        }), t.forEach(function (t, n) {
          var l = t.length === a.globals.dataPoints,
            h = i.graphics.group().attr({
              class: "apexcharts-series",
              "data:longestSeries": l,
              seriesName: x.escapeString(a.globals.seriesNames[n]),
              rel: n + 1,
              "data:realIndex": n
            });
          i.dataRadiusOfPercent[n] = [], i.dataRadius[n] = [], i.angleArr[n] = [], t.forEach(function (t, e) {
            var a = Math.abs(i.maxValue - i.minValue);
            t += Math.abs(i.minValue), i.isLog && (t = i.coreUtils.getLogVal(t, 0)), i.dataRadiusOfPercent[n][e] = t / a, i.dataRadius[n][e] = i.dataRadiusOfPercent[n][e] * i.size, i.angleArr[n][e] = e * i.disAngle;
          }), g = i.getDataPointsPos(i.dataRadius[n], i.angleArr[n]);
          var c = i.createPaths(g, {
            x: 0,
            y: 0
          });
          u = i.graphics.group({
            class: "apexcharts-series-markers-wrap apexcharts-element-hidden"
          }), p = i.graphics.group({
            class: "apexcharts-datalabels",
            "data:realIndex": n
          }), a.globals.delayedElements.push({
            el: u.node,
            index: n
          });
          var d = {
              i: n,
              realIndex: n,
              animationDelay: n,
              initialSpeed: a.config.chart.animations.speed,
              dataChangeSpeed: a.config.chart.animations.dynamicAnimation.speed,
              className: "apexcharts-radar",
              shouldClipToGrid: !1,
              bindEventsOnPaths: !1,
              stroke: a.globals.stroke.colors[n],
              strokeLineCap: a.config.stroke.lineCap
            },
            f = null;
          a.globals.previousPaths.length > 0 && (f = i.getPreviousPath(n));
          for (var b = 0; b < c.linePathsTo.length; b++) {
            var m = i.graphics.renderPaths(e(e({}, d), {}, {
              pathFrom: null === f ? c.linePathsFrom[b] : f,
              pathTo: c.linePathsTo[b],
              strokeWidth: Array.isArray(i.strokeWidth) ? i.strokeWidth[n] : i.strokeWidth,
              fill: "none",
              drawShadow: !1
            }));
            h.add(m);
            var y = s.fillPath({
                seriesNumber: n
              }),
              w = i.graphics.renderPaths(e(e({}, d), {}, {
                pathFrom: null === f ? c.areaPathsFrom[b] : f,
                pathTo: c.areaPathsTo[b],
                strokeWidth: 0,
                fill: y,
                drawShadow: !1
              }));
            if (a.config.chart.dropShadow.enabled) {
              var k = new v(i.ctx),
                A = a.config.chart.dropShadow;
              k.dropShadow(w, Object.assign({}, A, {
                noUserSpaceOnUse: !0
              }), n);
            }
            h.add(w);
          }
          t.forEach(function (t, s) {
            var r = new H(i.ctx).getMarkerConfig({
                cssClass: "apexcharts-marker",
                seriesIndex: n,
                dataPointIndex: s
              }),
              l = i.graphics.drawMarker(g[s].x, g[s].y, r);
            l.attr("rel", s), l.attr("j", s), l.attr("index", n), l.node.setAttribute("default-marker-size", r.pSize);
            var c = i.graphics.group({
              class: "apexcharts-series-markers"
            });
            c && c.add(l), u.add(c), h.add(u);
            var d = a.config.dataLabels;
            if (d.enabled) {
              var f = d.formatter(a.globals.series[n][s], {
                seriesIndex: n,
                dataPointIndex: s,
                w: a
              });
              o.plotDataLabelsText({
                x: g[s].x,
                y: g[s].y,
                text: f,
                textAnchor: "middle",
                i: n,
                j: n,
                parent: p,
                offsetCorrection: !1,
                dataLabelsConfig: e({}, d)
              });
            }
            h.add(p);
          }), r.push(h);
        }), this.drawPolygons({
          parent: d
        }), a.config.xaxis.labels.show) {
          var f = this.drawXAxisTexts();
          d.add(f);
        }
        return r.forEach(function (t) {
          d.add(t);
        }), d.add(this.yaxisLabels), d;
      }
    }, {
      key: "drawPolygons",
      value: function (t) {
        for (var e = this, i = this.w, a = t.parent, s = new Ct(this.ctx), r = i.globals.yAxisScale[0].result.reverse(), o = r.length, n = [], l = this.size / (o - 1), h = 0; h < o; h++) n[h] = l * h;
        n.reverse();
        var c = [],
          d = [];
        n.forEach(function (t, i) {
          var a = x.getPolygonPos(t, e.dataPointsLen),
            s = "";
          a.forEach(function (t, a) {
            if (0 === i) {
              var r = e.graphics.drawLine(t.x, t.y, 0, 0, Array.isArray(e.polygons.connectorColors) ? e.polygons.connectorColors[a] : e.polygons.connectorColors);
              d.push(r);
            }
            0 === a && e.yaxisLabelsTextsPos.push({
              x: t.x,
              y: t.y
            }), s += t.x + "," + t.y + " ";
          }), c.push(s);
        }), c.forEach(function (t, s) {
          var r = e.polygons.strokeColors,
            o = e.polygons.strokeWidth,
            n = e.graphics.drawPolygon(t, Array.isArray(r) ? r[s] : r, Array.isArray(o) ? o[s] : o, i.globals.radarPolygons.fill.colors[s]);
          a.add(n);
        }), d.forEach(function (t) {
          a.add(t);
        }), i.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach(function (t, i) {
          var a = s.drawYAxisTexts(t.x, t.y, i, r[i]);
          e.yaxisLabels.add(a);
        });
      }
    }, {
      key: "drawXAxisTexts",
      value: function () {
        var t = this,
          i = this.w,
          a = i.config.xaxis.labels,
          s = this.graphics.group({
            class: "apexcharts-xaxis"
          }),
          r = x.getPolygonPos(this.size, this.dataPointsLen);
        return i.globals.labels.forEach(function (o, n) {
          var l = i.config.xaxis.labels.formatter,
            h = new O(t.ctx);
          if (r[n]) {
            var c = t.getTextPos(r[n], t.size),
              d = l(o, {
                seriesIndex: -1,
                dataPointIndex: n,
                w: i
              });
            h.plotDataLabelsText({
              x: c.newX,
              y: c.newY,
              text: d,
              textAnchor: c.textAnchor,
              i: n,
              j: n,
              parent: s,
              color: Array.isArray(a.style.colors) && a.style.colors[n] ? a.style.colors[n] : "#a8a8a8",
              dataLabelsConfig: e({
                textAnchor: c.textAnchor,
                dropShadow: {
                  enabled: !1
                }
              }, a),
              offsetCorrection: !1
            });
          }
        }), s;
      }
    }, {
      key: "createPaths",
      value: function (t, e) {
        var i = this,
          a = [],
          s = [],
          r = [],
          o = [];
        if (t.length) {
          s = [this.graphics.move(e.x, e.y)], o = [this.graphics.move(e.x, e.y)];
          var n = this.graphics.move(t[0].x, t[0].y),
            l = this.graphics.move(t[0].x, t[0].y);
          t.forEach(function (e, a) {
            n += i.graphics.line(e.x, e.y), l += i.graphics.line(e.x, e.y), a === t.length - 1 && (n += "Z", l += "Z");
          }), a.push(n), r.push(l);
        }
        return {
          linePathsFrom: s,
          linePathsTo: a,
          areaPathsFrom: o,
          areaPathsTo: r
        };
      }
    }, {
      key: "getTextPos",
      value: function (t, e) {
        var i = "middle",
          a = t.x,
          s = t.y;
        return Math.abs(t.x) >= 10 ? t.x > 0 ? (i = "start", a += 10) : t.x < 0 && (i = "end", a -= 10) : i = "middle", Math.abs(t.y) >= e - 10 && (t.y < 0 ? s -= 10 : t.y > 0 && (s += 10)), {
          textAnchor: i,
          newX: a,
          newY: s
        };
      }
    }, {
      key: "getPreviousPath",
      value: function (t) {
        for (var e = this.w, i = null, a = 0; a < e.globals.previousPaths.length; a++) {
          var s = e.globals.previousPaths[a];
          s.paths.length > 0 && parseInt(s.realIndex, 10) === parseInt(t, 10) && void 0 !== e.globals.previousPaths[a].paths[0] && (i = e.globals.previousPaths[a].paths[0].d);
        }
        return i;
      }
    }, {
      key: "getDataPointsPos",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.dataPointsLen;
        t = t || [], e = e || [];
        for (var a = [], s = 0; s < i; s++) {
          var r = {};
          r.x = t[s] * Math.sin(e[s]), r.y = -t[s] * Math.cos(e[s]), a.push(r);
        }
        return a;
      }
    }]), t;
  }(),
  It = function (t) {
    n(i, Lt);
    var e = d(i);
    function i(t) {
      var s;
      a(this, i), (s = e.call(this, t)).ctx = t, s.w = t.w, s.animBeginArr = [0], s.animDur = 0;
      var r = s.w;
      return s.startAngle = r.config.plotOptions.radialBar.startAngle, s.endAngle = r.config.plotOptions.radialBar.endAngle, s.totalAngle = Math.abs(r.config.plotOptions.radialBar.endAngle - r.config.plotOptions.radialBar.startAngle), s.trackStartAngle = r.config.plotOptions.radialBar.track.startAngle, s.trackEndAngle = r.config.plotOptions.radialBar.track.endAngle, s.barLabels = s.w.config.plotOptions.radialBar.barLabels, s.donutDataLabels = s.w.config.plotOptions.radialBar.dataLabels, s.radialDataLabels = s.donutDataLabels, s.trackStartAngle || (s.trackStartAngle = s.startAngle), s.trackEndAngle || (s.trackEndAngle = s.endAngle), 360 === s.endAngle && (s.endAngle = 359.99), s.margin = parseInt(r.config.plotOptions.radialBar.track.margin, 10), s.onBarLabelClick = s.onBarLabelClick.bind(c(s)), s;
    }
    return r(i, [{
      key: "draw",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = i.group({
            class: "apexcharts-radialbar"
          });
        if (e.globals.noData) return a;
        var s = i.group(),
          r = this.defaultSize / 2,
          o = e.globals.gridWidth / 2,
          n = this.defaultSize / 2.05;
        e.config.chart.sparkline.enabled || (n = n - e.config.stroke.width - e.config.chart.dropShadow.blur);
        var l = e.globals.fill.colors;
        if (e.config.plotOptions.radialBar.track.show) {
          var h = this.drawTracks({
            size: n,
            centerX: o,
            centerY: r,
            colorArr: l,
            series: t
          });
          s.add(h);
        }
        var c = this.drawArcs({
            size: n,
            centerX: o,
            centerY: r,
            colorArr: l,
            series: t
          }),
          d = 360;
        e.config.plotOptions.radialBar.startAngle < 0 && (d = this.totalAngle);
        var g = (360 - d) / 360;
        if (e.globals.radialSize = n - n * g, this.radialDataLabels.value.show) {
          var u = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
          e.globals.radialSize += u * g;
        }
        return s.add(c.g), "front" === e.config.plotOptions.radialBar.hollow.position && (c.g.add(c.elHollow), c.dataLabels && c.g.add(c.dataLabels)), a.add(s), a;
      }
    }, {
      key: "drawTracks",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = i.group({
            class: "apexcharts-tracks"
          }),
          s = new v(this.ctx),
          r = new R(this.ctx),
          o = this.getStrokeWidth(t);
        t.size = t.size - o / 2;
        for (var n = 0; n < t.series.length; n++) {
          var l = i.group({
            class: "apexcharts-radialbar-track apexcharts-track"
          });
          a.add(l), l.attr({
            rel: n + 1
          }), t.size = t.size - o - this.margin;
          var h = e.config.plotOptions.radialBar.track,
            c = r.fillPath({
              seriesNumber: 0,
              size: t.size,
              fillColors: Array.isArray(h.background) ? h.background[n] : h.background,
              solid: !0
            }),
            d = this.trackStartAngle,
            g = this.trackEndAngle;
          Math.abs(g) + Math.abs(d) >= 360 && (g = 360 - Math.abs(this.startAngle) - .1);
          var u = i.drawPath({
            d: "",
            stroke: c,
            strokeWidth: o * parseInt(h.strokeWidth, 10) / 100,
            fill: "none",
            strokeOpacity: h.opacity,
            classes: "apexcharts-radialbar-area"
          });
          if (h.dropShadow.enabled) {
            var p = h.dropShadow;
            s.dropShadow(u, p);
          }
          l.add(u), u.attr("id", "apexcharts-radialbarTrack-" + n), this.animatePaths(u, {
            centerX: t.centerX,
            centerY: t.centerY,
            endAngle: g,
            startAngle: d,
            size: t.size,
            i: n,
            totalItems: 2,
            animBeginArr: 0,
            dur: 0,
            isTrack: !0,
            easing: e.globals.easing
          });
        }
        return a;
      }
    }, {
      key: "drawArcs",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = new R(this.ctx),
          s = new v(this.ctx),
          r = i.group(),
          o = this.getStrokeWidth(t);
        t.size = t.size - o / 2;
        var n = e.config.plotOptions.radialBar.hollow.background,
          l = t.size - o * t.series.length - this.margin * t.series.length - o * parseInt(e.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2,
          h = l - e.config.plotOptions.radialBar.hollow.margin;
        void 0 !== e.config.plotOptions.radialBar.hollow.image && (n = this.drawHollowImage(t, r, l, n));
        var c = this.drawHollow({
          size: h,
          centerX: t.centerX,
          centerY: t.centerY,
          fill: n || "transparent"
        });
        if (e.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
          var d = e.config.plotOptions.radialBar.hollow.dropShadow;
          s.dropShadow(c, d);
        }
        var g = 1;
        !this.radialDataLabels.total.show && e.globals.series.length > 1 && (g = 0);
        var u = null;
        this.radialDataLabels.show && (u = this.renderInnerDataLabels(this.radialDataLabels, {
          hollowSize: l,
          centerX: t.centerX,
          centerY: t.centerY,
          opacity: g
        })), "back" === e.config.plotOptions.radialBar.hollow.position && (r.add(c), u && r.add(u));
        var p = !1;
        e.config.plotOptions.radialBar.inverseOrder && (p = !0);
        for (var f = p ? t.series.length - 1 : 0; p ? f >= 0 : f < t.series.length; p ? f-- : f++) {
          var b = i.group({
            class: "apexcharts-series apexcharts-radial-series",
            seriesName: x.escapeString(e.globals.seriesNames[f])
          });
          r.add(b), b.attr({
            rel: f + 1,
            "data:realIndex": f
          }), this.ctx.series.addCollapsedClassToSeries(b, f), t.size = t.size - o - this.margin;
          var y = a.fillPath({
              seriesNumber: f,
              size: t.size,
              value: t.series[f]
            }),
            w = this.startAngle,
            k = void 0,
            A = x.negToZero(t.series[f] > 100 ? 100 : t.series[f]) / 100,
            S = Math.round(this.totalAngle * A) + this.startAngle,
            C = void 0;
          e.globals.dataChanged && (k = this.startAngle, C = Math.round(this.totalAngle * x.negToZero(e.globals.previousPaths[f]) / 100) + k), Math.abs(S) + Math.abs(w) >= 360 && (S -= .01), Math.abs(C) + Math.abs(k) >= 360 && (C -= .01);
          var L = S - w,
            P = Array.isArray(e.config.stroke.dashArray) ? e.config.stroke.dashArray[f] : e.config.stroke.dashArray,
            I = i.drawPath({
              d: "",
              stroke: y,
              strokeWidth: o,
              fill: "none",
              fillOpacity: e.config.fill.opacity,
              classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + f,
              strokeDashArray: P
            });
          if (m.setAttrs(I.node, {
            "data:angle": L,
            "data:value": t.series[f]
          }), e.config.chart.dropShadow.enabled) {
            var T = e.config.chart.dropShadow;
            s.dropShadow(I, T, f);
          }
          if (s.setSelectionFilter(I, 0, f), this.addListeners(I, this.radialDataLabels), b.add(I), I.attr({
            index: 0,
            j: f
          }), this.barLabels.enabled) {
            var M = x.polarToCartesian(t.centerX, t.centerY, t.size, w),
              z = this.barLabels.formatter(e.globals.seriesNames[f], {
                seriesIndex: f,
                w: e
              }),
              X = ["apexcharts-radialbar-label"];
            this.barLabels.onClick || X.push("apexcharts-no-click");
            var E = this.barLabels.useSeriesColors ? e.globals.colors[f] : e.config.chart.foreColor;
            E || (E = e.config.chart.foreColor);
            var Y = M.x - this.barLabels.margin,
              F = M.y,
              H = i.drawText({
                x: Y,
                y: F,
                text: z,
                textAnchor: "end",
                dominantBaseline: "middle",
                fontFamily: this.barLabels.fontFamily,
                fontWeight: this.barLabels.fontWeight,
                fontSize: this.barLabels.fontSize,
                foreColor: E,
                cssClass: X.join(" ")
              });
            H.on("click", this.onBarLabelClick), H.attr({
              rel: f + 1
            }), 0 !== w && H.attr({
              "transform-origin": "".concat(Y, " ").concat(F),
              transform: "rotate(".concat(w, " 0 0)")
            }), b.add(H);
          }
          var D = 0;
          !this.initialAnim || e.globals.resized || e.globals.dataChanged || (D = e.config.chart.animations.speed), e.globals.dataChanged && (D = e.config.chart.animations.dynamicAnimation.speed), this.animDur = D / (1.2 * t.series.length) + this.animDur, this.animBeginArr.push(this.animDur), this.animatePaths(I, {
            centerX: t.centerX,
            centerY: t.centerY,
            endAngle: S,
            startAngle: w,
            prevEndAngle: C,
            prevStartAngle: k,
            size: t.size,
            i: f,
            totalItems: 2,
            animBeginArr: this.animBeginArr,
            dur: D,
            shouldSetPrevPaths: !0,
            easing: e.globals.easing
          });
        }
        return {
          g: r,
          elHollow: c,
          dataLabels: u
        };
      }
    }, {
      key: "drawHollow",
      value: function (t) {
        var e = new m(this.ctx).drawCircle(2 * t.size);
        return e.attr({
          class: "apexcharts-radialbar-hollow",
          cx: t.centerX,
          cy: t.centerY,
          r: t.size,
          fill: t.fill
        }), e;
      }
    }, {
      key: "drawHollowImage",
      value: function (t, e, i, a) {
        var s = this.w,
          r = new R(this.ctx),
          o = x.randomId(),
          n = s.config.plotOptions.radialBar.hollow.image;
        if (s.config.plotOptions.radialBar.hollow.imageClipped) r.clippedImgArea({
          width: i,
          height: i,
          image: n,
          patternID: "pattern".concat(s.globals.cuid).concat(o)
        }), a = "url(#pattern".concat(s.globals.cuid).concat(o, ")");else {
          var l = s.config.plotOptions.radialBar.hollow.imageWidth,
            h = s.config.plotOptions.radialBar.hollow.imageHeight;
          if (void 0 === l && void 0 === h) {
            var c = s.globals.dom.Paper.image(n).loaded(function (e) {
              this.move(t.centerX - e.width / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - e.height / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetY);
            });
            e.add(c);
          } else {
            var d = s.globals.dom.Paper.image(n).loaded(function (e) {
              this.move(t.centerX - l / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - h / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(l, h);
            });
            e.add(d);
          }
        }
        return a;
      }
    }, {
      key: "getStrokeWidth",
      value: function (t) {
        var e = this.w;
        return t.size * (100 - parseInt(e.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (t.series.length + 1) - this.margin;
      }
    }, {
      key: "onBarLabelClick",
      value: function (t) {
        var e = parseInt(t.target.getAttribute("rel"), 10) - 1,
          i = this.barLabels.onClick,
          a = this.w;
        i && i(a.globals.seriesNames[e], {
          w: a,
          seriesIndex: e
        });
      }
    }]), i;
  }(),
  Tt = function (t) {
    n(s, yt);
    var i = d(s);
    function s() {
      return a(this, s), i.apply(this, arguments);
    }
    return r(s, [{
      key: "draw",
      value: function (t, i) {
        var a = this.w,
          s = new m(this.ctx);
        this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = t, this.seriesRangeStart = a.globals.seriesRangeStart, this.seriesRangeEnd = a.globals.seriesRangeEnd, this.barHelpers.initVariables(t);
        for (var r = s.group({
            class: "apexcharts-rangebar-series apexcharts-plot-series"
          }), n = 0; n < t.length; n++) {
          var l,
            h,
            c,
            d,
            g = void 0,
            u = void 0,
            p = a.globals.comboCharts ? i[n] : n,
            f = s.group({
              class: "apexcharts-series",
              seriesName: x.escapeString(a.globals.seriesNames[p]),
              rel: n + 1,
              "data:realIndex": p
            });
          this.ctx.series.addCollapsedClassToSeries(f, p), t[n].length > 0 && (this.visibleI = this.visibleI + 1);
          var b = 0,
            v = 0;
          this.yRatio.length > 1 && (this.yaxisIndex = p);
          var y = this.barHelpers.initialPositions();
          u = y.y, d = y.zeroW, g = y.x, v = y.barWidth, b = y.barHeight, l = y.xDivision, h = y.yDivision, c = y.zeroH;
          for (var w = s.group({
              class: "apexcharts-datalabels",
              "data:realIndex": p
            }), k = s.group({
              class: "apexcharts-rangebar-goals-markers"
            }), A = 0; A < a.globals.dataPoints; A++) {
            var S,
              C = this.barHelpers.getStrokeWidth(n, A, p),
              L = this.seriesRangeStart[n][A],
              P = this.seriesRangeEnd[n][A],
              I = null,
              T = null,
              M = null,
              z = {
                x: g,
                y: u,
                strokeWidth: C,
                elSeries: f
              },
              X = this.seriesLen;
            if (a.config.plotOptions.bar.rangeBarGroupRows && (X = 1), void 0 === a.config.series[n].data[A]) break;
            if (this.isHorizontal) {
              M = u + b * this.visibleI;
              var E = (h - b * X) / 2;
              if (a.config.series[n].data[A].x) {
                var Y = this.detectOverlappingBars({
                  i: n,
                  j: A,
                  barYPosition: M,
                  srty: E,
                  barHeight: b,
                  yDivision: h,
                  initPositions: y
                });
                b = Y.barHeight, M = Y.barYPosition;
              }
              v = (I = this.drawRangeBarPaths(e({
                indexes: {
                  i: n,
                  j: A,
                  realIndex: p
                },
                barHeight: b,
                barYPosition: M,
                zeroW: d,
                yDivision: h,
                y1: L,
                y2: P
              }, z))).barWidth;
            } else {
              a.globals.isXNumeric && (g = (a.globals.seriesX[n][A] - a.globals.minX) / this.xRatio - v / 2), T = g + v * this.visibleI;
              var F = (l - v * X) / 2;
              if (a.config.series[n].data[A].x) {
                var R = this.detectOverlappingBars({
                  i: n,
                  j: A,
                  barXPosition: T,
                  srtx: F,
                  barWidth: v,
                  xDivision: l,
                  initPositions: y
                });
                v = R.barWidth, T = R.barXPosition;
              }
              b = (I = this.drawRangeColumnPaths(e({
                indexes: {
                  i: n,
                  j: A,
                  realIndex: p
                },
                barWidth: v,
                barXPosition: T,
                zeroH: c,
                xDivision: l
              }, z))).barHeight;
            }
            var H = this.barHelpers.drawGoalLine({
              barXPosition: I.barXPosition,
              barYPosition: M,
              goalX: I.goalX,
              goalY: I.goalY,
              barHeight: b,
              barWidth: v
            });
            H && k.add(H), u = I.y, g = I.x;
            var D = this.barHelpers.getPathFillColor(t, n, A, p),
              O = a.globals.stroke.colors[p];
            this.renderSeries((o(S = {
              realIndex: p,
              pathFill: D,
              lineFill: O,
              j: A,
              i: n,
              x: g,
              y: u,
              y1: L,
              y2: P,
              pathFrom: I.pathFrom,
              pathTo: I.pathTo,
              strokeWidth: C,
              elSeries: f,
              series: t,
              barHeight: b,
              barWidth: v,
              barXPosition: T,
              barYPosition: M
            }, "barWidth", v), o(S, "elDataLabelsWrap", w), o(S, "elGoalsMarkers", k), o(S, "visibleSeries", this.visibleI), o(S, "type", "rangebar"), S));
          }
          r.add(f);
        }
        return r;
      }
    }, {
      key: "detectOverlappingBars",
      value: function (t) {
        var e = t.i,
          i = t.j,
          a = t.barYPosition,
          s = t.barXPosition,
          r = t.srty,
          o = t.srtx,
          n = t.barHeight,
          l = t.barWidth,
          h = t.yDivision,
          c = t.xDivision,
          d = t.initPositions,
          g = this.w,
          u = [],
          p = g.config.series[e].data[i].rangeName,
          f = g.config.series[e].data[i].x,
          x = Array.isArray(f) ? f.join(" ") : f,
          b = g.globals.labels.map(function (t) {
            return Array.isArray(t) ? t.join(" ") : t;
          }).indexOf(x),
          v = g.globals.seriesRange[e].findIndex(function (t) {
            return t.x === x && t.overlaps.length > 0;
          });
        return this.isHorizontal ? (a = g.config.plotOptions.bar.rangeBarGroupRows ? r + h * b : r + n * this.visibleI + h * b, v > -1 && !g.config.plotOptions.bar.rangeBarOverlap && (u = g.globals.seriesRange[e][v].overlaps).indexOf(p) > -1 && (a = (n = d.barHeight / u.length) * this.visibleI + h * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + n * (this.visibleI + u.indexOf(p)) + h * b)) : (b > -1 && (s = g.config.plotOptions.bar.rangeBarGroupRows ? o + c * b : o + l * this.visibleI + c * b), v > -1 && !g.config.plotOptions.bar.rangeBarOverlap && (u = g.globals.seriesRange[e][v].overlaps).indexOf(p) > -1 && (s = (l = d.barWidth / u.length) * this.visibleI + c * (100 - parseInt(this.barOptions.barWidth, 10)) / 100 / 2 + l * (this.visibleI + u.indexOf(p)) + c * b)), {
          barYPosition: a,
          barXPosition: s,
          barHeight: n,
          barWidth: l
        };
      }
    }, {
      key: "drawRangeColumnPaths",
      value: function (t) {
        var e = t.indexes,
          i = t.x,
          a = t.xDivision,
          s = t.barWidth,
          r = t.barXPosition,
          o = t.zeroH,
          n = this.w,
          l = e.i,
          h = e.j,
          c = this.yRatio[this.yaxisIndex],
          d = e.realIndex,
          g = this.getRangeValue(d, h),
          u = Math.min(g.start, g.end),
          p = Math.max(g.start, g.end);
        void 0 === this.series[l][h] || null === this.series[l][h] ? u = o : (u = o - u / c, p = o - p / c);
        var f = Math.abs(p - u),
          x = this.barHelpers.getColumnPaths({
            barXPosition: r,
            barWidth: s,
            y1: u,
            y2: p,
            strokeWidth: this.strokeWidth,
            series: this.seriesRangeEnd,
            realIndex: e.realIndex,
            i: d,
            j: h,
            w: n
          });
        if (n.globals.isXNumeric) {
          var b = this.getBarXForNumericXAxis({
            x: i,
            j: h,
            realIndex: d,
            barWidth: s
          });
          i = b.x, r = b.barXPosition;
        } else i += a;
        return {
          pathTo: x.pathTo,
          pathFrom: x.pathFrom,
          barHeight: f,
          x: i,
          y: p,
          goalY: this.barHelpers.getGoalValues("y", null, o, l, h),
          barXPosition: r
        };
      }
    }, {
      key: "drawRangeBarPaths",
      value: function (t) {
        var e = t.indexes,
          i = t.y,
          a = t.y1,
          s = t.y2,
          r = t.yDivision,
          o = t.barHeight,
          n = t.barYPosition,
          l = t.zeroW,
          h = this.w,
          c = l + a / this.invertedYRatio,
          d = l + s / this.invertedYRatio,
          g = Math.abs(d - c),
          u = this.barHelpers.getBarpaths({
            barYPosition: n,
            barHeight: o,
            x1: c,
            x2: d,
            strokeWidth: this.strokeWidth,
            series: this.seriesRangeEnd,
            i: e.realIndex,
            realIndex: e.realIndex,
            j: e.j,
            w: h
          });
        return h.globals.isXNumeric || (i += r), {
          pathTo: u.pathTo,
          pathFrom: u.pathFrom,
          barWidth: g,
          x: d,
          goalX: this.barHelpers.getGoalValues("x", l, null, e.realIndex, e.j),
          y: i
        };
      }
    }, {
      key: "getRangeValue",
      value: function (t, e) {
        var i = this.w;
        return {
          start: i.globals.seriesRangeStart[t][e],
          end: i.globals.seriesRangeEnd[t][e]
        };
      }
    }]), s;
  }(),
  Mt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.lineCtx = e;
    }
    return r(t, [{
      key: "sameValueSeriesFix",
      value: function (t, e) {
        var i = this.w;
        if (("gradient" === i.config.fill.type || "gradient" === i.config.fill.type[t]) && new y(this.lineCtx.ctx, i).seriesHaveSameValues(t)) {
          var a = e[t].slice();
          a[a.length - 1] = a[a.length - 1] + 1e-6, e[t] = a;
        }
        return e;
      }
    }, {
      key: "calculatePoints",
      value: function (t) {
        var e = t.series,
          i = t.realIndex,
          a = t.x,
          s = t.y,
          r = t.i,
          o = t.j,
          n = t.prevY,
          l = this.w,
          h = [],
          c = [];
        if (0 === o) {
          var d = this.lineCtx.categoryAxisCorrection + l.config.markers.offsetX;
          l.globals.isXNumeric && (d = (l.globals.seriesX[i][0] - l.globals.minX) / this.lineCtx.xRatio + l.config.markers.offsetX), h.push(d), c.push(x.isNumber(e[r][0]) ? n + l.config.markers.offsetY : null), h.push(a + l.config.markers.offsetX), c.push(x.isNumber(e[r][o + 1]) ? s + l.config.markers.offsetY : null);
        } else h.push(a + l.config.markers.offsetX), c.push(x.isNumber(e[r][o + 1]) ? s + l.config.markers.offsetY : null);
        return {
          x: h,
          y: c
        };
      }
    }, {
      key: "checkPreviousPaths",
      value: function (t) {
        for (var e = t.pathFromLine, i = t.pathFromArea, a = t.realIndex, s = this.w, r = 0; r < s.globals.previousPaths.length; r++) {
          var o = s.globals.previousPaths[r];
          ("line" === o.type || "area" === o.type) && o.paths.length > 0 && parseInt(o.realIndex, 10) === parseInt(a, 10) && ("line" === o.type ? (this.lineCtx.appendPathFrom = !1, e = s.globals.previousPaths[r].paths[0].d) : "area" === o.type && (this.lineCtx.appendPathFrom = !1, i = s.globals.previousPaths[r].paths[0].d, s.config.stroke.show && s.globals.previousPaths[r].paths[1] && (e = s.globals.previousPaths[r].paths[1].d)));
        }
        return {
          pathFromLine: e,
          pathFromArea: i
        };
      }
    }, {
      key: "determineFirstPrevY",
      value: function (t) {
        var e,
          i,
          a = t.i,
          s = t.series,
          r = t.prevY,
          o = t.lineYPosition,
          n = this.w,
          l = n.config.chart.stacked && !n.globals.comboCharts || n.config.chart.stacked && n.globals.comboCharts && (!this.w.config.chart.stackOnlyBar || "bar" === (null === (e = this.w.config.series[a]) || void 0 === e ? void 0 : e.type));
        if (void 0 !== (null === (i = s[a]) || void 0 === i ? void 0 : i[0])) r = (o = l && a > 0 ? this.lineCtx.prevSeriesY[a - 1][0] : this.lineCtx.zeroY) - s[a][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + 2 * (this.lineCtx.isReversed ? s[a][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0);else if (l && a > 0 && void 0 === s[a][0]) for (var h = a - 1; h >= 0; h--) if (null !== s[h][0] && void 0 !== s[h][0]) {
          r = o = this.lineCtx.prevSeriesY[h][0];
          break;
        }
        return {
          prevY: r,
          lineYPosition: o
        };
      }
    }]), t;
  }(),
  zt = function (t) {
    for (var e, i, a, s, r = function (t) {
        for (var e = [], i = t[0], a = t[1], s = e[0] = Yt(i, a), r = 1, o = t.length - 1; r < o; r++) i = a, a = t[r + 1], e[r] = .5 * (s + (s = Yt(i, a)));
        return e[r] = s, e;
      }(t), o = t.length - 1, n = [], l = 0; l < o; l++) a = Yt(t[l], t[l + 1]), Math.abs(a) < 1e-6 ? r[l] = r[l + 1] = 0 : (s = (e = r[l] / a) * e + (i = r[l + 1] / a) * i) > 9 && (s = 3 * a / Math.sqrt(s), r[l] = s * e, r[l + 1] = s * i);
    for (var h = 0; h <= o; h++) s = (t[Math.min(o, h + 1)][0] - t[Math.max(0, h - 1)][0]) / (6 * (1 + r[h] * r[h])), n.push([s || 0, r[h] * s || 0]);
    return n;
  },
  Xt = function (t, e) {
    for (var i = "", a = 0; a < t.length; a++) {
      var s = t[a],
        r = t[a - 1],
        o = s.length,
        n = null == r ? void 0 : r.length;
      a > 1 && Math.abs(s[o - 2] - r[n - 2]) < e / 25 ? i += "L".concat(s[2], ", ").concat(s[3]) : o > 4 ? (i += "C".concat(s[0], ", ").concat(s[1]), i += ", ".concat(s[2], ", ").concat(s[3]), i += ", ".concat(s[4], ", ").concat(s[5])) : o > 2 && (i += "S".concat(s[0], ", ").concat(s[1]), i += ", ".concat(s[2], ", ").concat(s[3]));
    }
    return i;
  },
  Et = function (t) {
    var e = zt(t),
      i = t[1],
      a = t[0],
      s = [],
      r = e[1],
      o = e[0];
    s.push(a, [a[0] + o[0], a[1] + o[1], i[0] - r[0], i[1] - r[1], i[0], i[1]]);
    for (var n = 2, l = e.length; n < l; n++) {
      var h = t[n],
        c = e[n];
      s.push([h[0] - c[0], h[1] - c[1], h[0], h[1]]);
    }
    return s;
  };
function Yt(t, e) {
  return (e[1] - t[1]) / (e[0] - t[0]);
}
var Ft = function () {
  function t(e, i, s) {
    a(this, t), this.ctx = e, this.w = e.w, this.xyRatios = i, this.pointsChart = !("bubble" !== this.w.config.chart.type && "scatter" !== this.w.config.chart.type) || s, this.scatter = new D(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.lineHelpers = new Mt(this), this.markers = new H(this.ctx), this.prevSeriesY = [], this.categoryAxisCorrection = 0, this.yaxisIndex = 0;
  }
  return r(t, [{
    key: "draw",
    value: function (t, i, a, s) {
      var r,
        o = this.w,
        n = new m(this.ctx),
        l = o.globals.comboCharts ? i : o.config.chart.type,
        h = n.group({
          class: "apexcharts-".concat(l, "-series apexcharts-plot-series")
        }),
        c = new y(this.ctx, o);
      this.yRatio = this.xyRatios.yRatio, this.zRatio = this.xyRatios.zRatio, this.xRatio = this.xyRatios.xRatio, this.baseLineY = this.xyRatios.baseLineY, t = c.getLogSeries(t), this.yRatio = c.getLogYRatios(this.yRatio);
      for (var d = [], g = 0; g < t.length; g++) {
        t = this.lineHelpers.sameValueSeriesFix(g, t);
        var u = o.globals.comboCharts ? a[g] : g;
        this._initSerieVariables(t, g, u);
        var p = [],
          f = [],
          x = [],
          b = o.globals.padHorizontal + this.categoryAxisCorrection;
        this.ctx.series.addCollapsedClassToSeries(this.elSeries, u), o.globals.isXNumeric && o.globals.seriesX.length > 0 && (b = (o.globals.seriesX[u][0] - o.globals.minX) / this.xRatio), x.push(b);
        var v = b,
          w = this.zeroY,
          k = this.zeroY;
        w = this.lineHelpers.determineFirstPrevY({
          i: g,
          series: t,
          prevY: w,
          lineYPosition: 0
        }).prevY, "smooth" === o.config.stroke.curve && null === t[g][0] ? p.push(null) : p.push(w);
        "rangeArea" === l && (k = this.lineHelpers.determineFirstPrevY({
          i: g,
          series: s,
          prevY: k,
          lineYPosition: 0
        }).prevY, f.push(k));
        var A = {
            type: l,
            series: t,
            realIndex: u,
            i: g,
            x: b,
            y: 1,
            pathsFrom: this._calculatePathsFrom({
              type: l,
              series: t,
              i: g,
              realIndex: u,
              prevX: v,
              prevY: w,
              prevY2: k
            }),
            linePaths: [],
            areaPaths: [],
            seriesIndex: a,
            lineYPosition: 0,
            xArrj: x,
            yArrj: p,
            y2Arrj: f,
            seriesRangeEnd: s
          },
          S = this._iterateOverDataPoints(e(e({}, A), {}, {
            iterations: "rangeArea" === l ? t[g].length - 1 : void 0,
            isRangeStart: !0
          }));
        if ("rangeArea" === l) {
          var C = this._calculatePathsFrom({
              series: s,
              i: g,
              realIndex: u,
              prevX: v,
              prevY: k
            }),
            L = this._iterateOverDataPoints(e(e({}, A), {}, {
              series: s,
              pathsFrom: C,
              iterations: s[g].length - 1,
              isRangeStart: !1
            }));
          S.linePaths[0] = L.linePath + S.linePath, S.pathFromLine = L.pathFromLine + S.pathFromLine;
        }
        this._handlePaths({
          type: l,
          realIndex: u,
          i: g,
          paths: S
        }), this.elSeries.add(this.elPointsMain), this.elSeries.add(this.elDataLabelsWrap), d.push(this.elSeries);
      }
      if (void 0 !== (null === (r = o.config.series[0]) || void 0 === r ? void 0 : r.zIndex) && d.sort(function (t, e) {
        return Number(t.node.getAttribute("zIndex")) - Number(e.node.getAttribute("zIndex"));
      }), o.config.chart.stacked) for (var P = d.length; P > 0; P--) h.add(d[P - 1]);else for (var I = 0; I < d.length; I++) h.add(d[I]);
      return h;
    }
  }, {
    key: "_initSerieVariables",
    value: function (t, e, i) {
      var a = this.w,
        s = new m(this.ctx);
      this.xDivision = a.globals.gridWidth / (a.globals.dataPoints - ("on" === a.config.xaxis.tickPlacement ? 1 : 0)), this.strokeWidth = Array.isArray(a.config.stroke.width) ? a.config.stroke.width[i] : a.config.stroke.width, this.yRatio.length > 1 && (this.yaxisIndex = i), this.isReversed = a.config.yaxis[this.yaxisIndex] && a.config.yaxis[this.yaxisIndex].reversed, this.zeroY = a.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? a.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), this.areaBottomY = this.zeroY, (this.zeroY > a.globals.gridHeight || "end" === a.config.plotOptions.area.fillTo) && (this.areaBottomY = a.globals.gridHeight), this.categoryAxisCorrection = this.xDivision / 2, this.elSeries = s.group({
        class: "apexcharts-series",
        zIndex: void 0 !== a.config.series[i].zIndex ? a.config.series[i].zIndex : i,
        seriesName: x.escapeString(a.globals.seriesNames[i])
      }), this.elPointsMain = s.group({
        class: "apexcharts-series-markers-wrap",
        "data:realIndex": i
      }), this.elDataLabelsWrap = s.group({
        class: "apexcharts-datalabels",
        "data:realIndex": i
      });
      var r = t[e].length === a.globals.dataPoints;
      this.elSeries.attr({
        "data:longestSeries": r,
        rel: e + 1,
        "data:realIndex": i
      }), this.appendPathFrom = !0;
    }
  }, {
    key: "_calculatePathsFrom",
    value: function (t) {
      var e,
        i,
        a,
        s,
        r = t.type,
        o = t.series,
        n = t.i,
        l = t.realIndex,
        h = t.prevX,
        c = t.prevY,
        d = t.prevY2,
        g = this.w,
        u = new m(this.ctx);
      if (null === o[n][0]) {
        for (var p = 0; p < o[n].length; p++) if (null !== o[n][p]) {
          h = this.xDivision * p, c = this.zeroY - o[n][p] / this.yRatio[this.yaxisIndex], e = u.move(h, c), i = u.move(h, this.areaBottomY);
          break;
        }
      } else e = u.move(h, c), "rangeArea" === r && (e = u.move(h, d) + u.line(h, c)), i = u.move(h, this.areaBottomY) + u.line(h, c);
      if (a = u.move(-1, this.zeroY) + u.line(-1, this.zeroY), s = u.move(-1, this.zeroY) + u.line(-1, this.zeroY), g.globals.previousPaths.length > 0) {
        var f = this.lineHelpers.checkPreviousPaths({
          pathFromLine: a,
          pathFromArea: s,
          realIndex: l
        });
        a = f.pathFromLine, s = f.pathFromArea;
      }
      return {
        prevX: h,
        prevY: c,
        linePath: e,
        areaPath: i,
        pathFromLine: a,
        pathFromArea: s
      };
    }
  }, {
    key: "_handlePaths",
    value: function (t) {
      var i = t.type,
        a = t.realIndex,
        s = t.i,
        r = t.paths,
        o = this.w,
        n = new m(this.ctx),
        l = new R(this.ctx);
      this.prevSeriesY.push(r.yArrj), o.globals.seriesXvalues[a] = r.xArrj, o.globals.seriesYvalues[a] = r.yArrj;
      var h = o.config.forecastDataPoints;
      if (h.count > 0 && "rangeArea" !== i) {
        var c = o.globals.seriesXvalues[a][o.globals.seriesXvalues[a].length - h.count - 1],
          d = n.drawRect(c, 0, o.globals.gridWidth, o.globals.gridHeight, 0);
        o.globals.dom.elForecastMask.appendChild(d.node);
        var g = n.drawRect(0, 0, c, o.globals.gridHeight, 0);
        o.globals.dom.elNonForecastMask.appendChild(g.node);
      }
      this.pointsChart || o.globals.delayedElements.push({
        el: this.elPointsMain.node,
        index: a
      });
      var u = {
        i: s,
        realIndex: a,
        animationDelay: s,
        initialSpeed: o.config.chart.animations.speed,
        dataChangeSpeed: o.config.chart.animations.dynamicAnimation.speed,
        className: "apexcharts-".concat(i)
      };
      if ("area" === i) for (var p = l.fillPath({
          seriesNumber: a
        }), f = 0; f < r.areaPaths.length; f++) {
        var x = n.renderPaths(e(e({}, u), {}, {
          pathFrom: r.pathFromArea,
          pathTo: r.areaPaths[f],
          stroke: "none",
          strokeWidth: 0,
          strokeLineCap: null,
          fill: p
        }));
        this.elSeries.add(x);
      }
      if (o.config.stroke.show && !this.pointsChart) {
        var b = null;
        if ("line" === i) b = l.fillPath({
          seriesNumber: a,
          i: s
        });else if ("solid" === o.config.stroke.fill.type) b = o.globals.stroke.colors[a];else {
          var v = o.config.fill;
          o.config.fill = o.config.stroke.fill, b = l.fillPath({
            seriesNumber: a,
            i: s
          }), o.config.fill = v;
        }
        for (var y = 0; y < r.linePaths.length; y++) {
          var w = b;
          "rangeArea" === i && (w = l.fillPath({
            seriesNumber: a
          }));
          var k = e(e({}, u), {}, {
              pathFrom: r.pathFromLine,
              pathTo: r.linePaths[y],
              stroke: b,
              strokeWidth: this.strokeWidth,
              strokeLineCap: o.config.stroke.lineCap,
              fill: "rangeArea" === i ? w : "none"
            }),
            A = n.renderPaths(k);
          if (this.elSeries.add(A), A.attr("fill-rule", "evenodd"), h.count > 0 && "rangeArea" !== i) {
            var S = n.renderPaths(k);
            S.node.setAttribute("stroke-dasharray", h.dashArray), h.strokeWidth && S.node.setAttribute("stroke-width", h.strokeWidth), this.elSeries.add(S), S.attr("clip-path", "url(#forecastMask".concat(o.globals.cuid, ")")), A.attr("clip-path", "url(#nonForecastMask".concat(o.globals.cuid, ")"));
          }
        }
      }
    }
  }, {
    key: "_iterateOverDataPoints",
    value: function (t) {
      var e,
        i = this,
        a = t.type,
        s = t.series,
        r = t.iterations,
        o = t.realIndex,
        n = t.i,
        l = t.x,
        h = t.y,
        c = t.pathsFrom,
        d = t.linePaths,
        g = t.areaPaths,
        u = t.seriesIndex,
        p = t.lineYPosition,
        f = t.xArrj,
        b = t.yArrj,
        v = t.y2Arrj,
        y = t.isRangeStart,
        w = t.seriesRangeEnd,
        k = this.w,
        A = new m(this.ctx),
        S = this.yRatio,
        C = c.prevY,
        L = c.linePath,
        P = c.areaPath,
        I = c.pathFromLine,
        T = c.pathFromArea,
        M = x.isNumber(k.globals.minYArr[o]) ? k.globals.minYArr[o] : k.globals.minY;
      r || (r = k.globals.dataPoints > 1 ? k.globals.dataPoints - 1 : k.globals.dataPoints);
      for (var z = function (t, e) {
          return e - t / S[i.yaxisIndex] + 2 * (i.isReversed ? t / S[i.yaxisIndex] : 0);
        }, X = h, E = k.config.chart.stacked && !k.globals.comboCharts || k.config.chart.stacked && k.globals.comboCharts && (!this.w.config.chart.stackOnlyBar || "bar" === (null === (e = this.w.config.series[o]) || void 0 === e ? void 0 : e.type)), Y = 0; Y < r; Y++) {
        var F = void 0 === s[n][Y + 1] || null === s[n][Y + 1];
        if (k.globals.isXNumeric) {
          var R = k.globals.seriesX[o][Y + 1];
          void 0 === k.globals.seriesX[o][Y + 1] && (R = k.globals.seriesX[o][r - 1]), l = (R - k.globals.minX) / this.xRatio;
        } else l += this.xDivision;
        if (E) {
          if (n > 0 && k.globals.collapsedSeries.length < k.config.series.length - 1) {
            p = this.prevSeriesY[function (t) {
              for (var e = t, i = 0; i < k.globals.series.length; i++) if (k.globals.collapsedSeriesIndices.indexOf(t) > -1) {
                e--;
                break;
              }
              return e >= 0 ? e : 0;
            }(n - 1)][Y + 1];
          } else p = this.zeroY;
        } else p = this.zeroY;
        F ? h = z(M, p) : (h = z(s[n][Y + 1], p), "rangeArea" === a && (X = z(w[n][Y + 1], p))), f.push(l), F && "smooth" === k.config.stroke.curve ? b.push(null) : b.push(h), v.push(X);
        var H = this.lineHelpers.calculatePoints({
            series: s,
            x: l,
            y: h,
            realIndex: o,
            i: n,
            j: Y,
            prevY: C
          }),
          D = this._createPaths({
            type: a,
            series: s,
            i: n,
            realIndex: o,
            j: Y,
            x: l,
            y: h,
            y2: X,
            xArrj: f,
            yArrj: b,
            y2Arrj: v,
            linePath: L,
            areaPath: P,
            linePaths: d,
            areaPaths: g,
            seriesIndex: u,
            isRangeStart: y
          });
        g = D.areaPaths, d = D.linePaths, P = D.areaPath, L = D.linePath, !this.appendPathFrom || "smooth" === k.config.stroke.curve && "rangeArea" === a || (I += A.line(l, this.zeroY), T += A.line(l, this.zeroY)), this.handleNullDataPoints(s, H, n, Y, o), this._handleMarkersAndLabels({
          type: a,
          pointsPos: H,
          i: n,
          j: Y,
          realIndex: o,
          isRangeStart: y
        });
      }
      return {
        yArrj: b,
        xArrj: f,
        pathFromArea: T,
        areaPaths: g,
        pathFromLine: I,
        linePaths: d,
        linePath: L,
        areaPath: P
      };
    }
  }, {
    key: "_handleMarkersAndLabels",
    value: function (t) {
      var e = t.type,
        i = t.pointsPos,
        a = t.isRangeStart,
        s = t.i,
        r = t.j,
        o = t.realIndex,
        n = this.w,
        l = new O(this.ctx);
      if (this.pointsChart) this.scatter.draw(this.elSeries, r, {
        realIndex: o,
        pointsPos: i,
        zRatio: this.zRatio,
        elParent: this.elPointsMain
      });else {
        n.globals.series[s].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
        var h = this.markers.plotChartMarkers(i, o, r + 1);
        null !== h && this.elPointsMain.add(h);
      }
      var c = l.drawDataLabel({
        type: e,
        isRangeStart: a,
        pos: i,
        i: o,
        j: r + 1
      });
      null !== c && this.elDataLabelsWrap.add(c);
    }
  }, {
    key: "_createPaths",
    value: function (t) {
      var e = t.type,
        i = t.series,
        a = t.i,
        s = t.realIndex,
        r = t.j,
        o = t.x,
        n = t.y,
        l = t.xArrj,
        h = t.yArrj,
        c = t.y2,
        d = t.y2Arrj,
        g = t.linePath,
        u = t.areaPath,
        p = t.linePaths,
        f = t.areaPaths,
        x = t.seriesIndex,
        b = t.isRangeStart,
        v = this.w,
        y = new m(this.ctx),
        w = v.config.stroke.curve,
        k = this.areaBottomY;
      if (Array.isArray(v.config.stroke.curve) && (w = Array.isArray(x) ? v.config.stroke.curve[x[a]] : v.config.stroke.curve[a]), "rangeArea" === e && (v.globals.hasNullValues || v.config.forecastDataPoints.count > 0) && "smooth" === w && (w = "straight"), "smooth" === w) {
        var A = "rangeArea" === e ? l.length === v.globals.dataPoints : r === i[a].length - 2,
          S = l.map(function (t, e) {
            return [l[e], h[e]];
          }).filter(function (t) {
            return null !== t[1];
          });
        if (A && S.length > 1) {
          var C = Et(S);
          if (g += Xt(C, v.globals.gridWidth), null === i[a][0] ? u = g : u += Xt(C, v.globals.gridWidth), "rangeArea" === e && b) {
            g += y.line(l[l.length - 1], d[d.length - 1]);
            var L = l.slice().reverse(),
              P = d.slice().reverse(),
              I = L.map(function (t, e) {
                return [L[e], P[e]];
              }),
              T = Et(I);
            u = g += Xt(T, v.globals.gridWidth);
          } else u += y.line(S[S.length - 1][0], k) + y.line(S[0][0], k) + y.move(S[0][0], S[0][1]) + "z";
          p.push(g), f.push(u);
        }
      } else {
        if (null === i[a][r + 1]) {
          g += y.move(o, n);
          var M = v.globals.isXNumeric ? (v.globals.seriesX[s][r] - v.globals.minX) / this.xRatio : o - this.xDivision;
          u = u + y.line(M, k) + y.move(o, n) + "z";
        }
        null === i[a][r] && (g += y.move(o, n), u += y.move(o, k)), "stepline" === w ? (g = g + y.line(o, null, "H") + y.line(null, n, "V"), u = u + y.line(o, null, "H") + y.line(null, n, "V")) : "straight" === w && (g += y.line(o, n), u += y.line(o, n)), r === i[a].length - 2 && (u = u + y.line(o, k) + y.move(o, n) + "z", "rangeArea" === e && b ? g = g + y.line(o, c) + y.move(o, c) + "z" : (p.push(g), f.push(u)));
      }
      return {
        linePaths: p,
        areaPaths: f,
        linePath: g,
        areaPath: u
      };
    }
  }, {
    key: "handleNullDataPoints",
    value: function (t, e, i, a, s) {
      var r = this.w;
      if (null === t[i][a] && r.config.markers.showNullDataPoints || 1 === t[i].length) {
        var o = this.markers.plotChartMarkers(e, s, a + 1, this.strokeWidth - r.config.markers.strokeWidth / 2, !0);
        null !== o && this.elPointsMain.add(o);
      }
    }
  }]), t;
}();
window.TreemapSquared = {}, window.TreemapSquared.generate = function () {
  function t(e, i, a, s) {
    this.xoffset = e, this.yoffset = i, this.height = s, this.width = a, this.shortestEdge = function () {
      return Math.min(this.height, this.width);
    }, this.getCoordinates = function (t) {
      var e,
        i = [],
        a = this.xoffset,
        s = this.yoffset,
        o = r(t) / this.height,
        n = r(t) / this.width;
      if (this.width >= this.height) for (e = 0; e < t.length; e++) i.push([a, s, a + o, s + t[e] / o]), s += t[e] / o;else for (e = 0; e < t.length; e++) i.push([a, s, a + t[e] / n, s + n]), a += t[e] / n;
      return i;
    }, this.cutArea = function (e) {
      var i;
      if (this.width >= this.height) {
        var a = e / this.height,
          s = this.width - a;
        i = new t(this.xoffset + a, this.yoffset, s, this.height);
      } else {
        var r = e / this.width,
          o = this.height - r;
        i = new t(this.xoffset, this.yoffset + r, this.width, o);
      }
      return i;
    };
  }
  function e(e, a, s, o, n) {
    o = void 0 === o ? 0 : o, n = void 0 === n ? 0 : n;
    var l = i(function (t, e) {
      var i,
        a = [],
        s = e / r(t);
      for (i = 0; i < t.length; i++) a[i] = t[i] * s;
      return a;
    }(e, a * s), [], new t(o, n, a, s), []);
    return function (t) {
      var e,
        i,
        a = [];
      for (e = 0; e < t.length; e++) for (i = 0; i < t[e].length; i++) a.push(t[e][i]);
      return a;
    }(l);
  }
  function i(t, e, s, o) {
    var n, l, h;
    if (0 !== t.length) return n = s.shortestEdge(), function (t, e, i) {
      var s;
      if (0 === t.length) return !0;
      (s = t.slice()).push(e);
      var r = a(t, i),
        o = a(s, i);
      return r >= o;
    }(e, l = t[0], n) ? (e.push(l), i(t.slice(1), e, s, o)) : (h = s.cutArea(r(e), o), o.push(s.getCoordinates(e)), i(t, [], h, o)), o;
    o.push(s.getCoordinates(e));
  }
  function a(t, e) {
    var i = Math.min.apply(Math, t),
      a = Math.max.apply(Math, t),
      s = r(t);
    return Math.max(Math.pow(e, 2) * a / Math.pow(s, 2), Math.pow(s, 2) / (Math.pow(e, 2) * i));
  }
  function s(t) {
    return t && t.constructor === Array;
  }
  function r(t) {
    var e,
      i = 0;
    for (e = 0; e < t.length; e++) i += t[e];
    return i;
  }
  function o(t) {
    var e,
      i = 0;
    if (s(t[0])) for (e = 0; e < t.length; e++) i += o(t[e]);else i = r(t);
    return i;
  }
  return function t(i, a, r, n, l) {
    n = void 0 === n ? 0 : n, l = void 0 === l ? 0 : l;
    var h,
      c,
      d = [],
      g = [];
    if (s(i[0])) {
      for (c = 0; c < i.length; c++) d[c] = o(i[c]);
      for (h = e(d, a, r, n, l), c = 0; c < i.length; c++) g.push(t(i[c], h[c][2] - h[c][0], h[c][3] - h[c][1], h[c][0], h[c][1]));
    } else g = e(i, a, r, n, l);
    return g;
  };
}();
var Rt,
  Ht,
  Dt = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.w = e.w, this.strokeWidth = this.w.config.stroke.width, this.helpers = new At(e), this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.labels = [];
    }
    return r(t, [{
      key: "draw",
      value: function (t) {
        var e = this,
          i = this.w,
          a = new m(this.ctx),
          s = new R(this.ctx),
          r = a.group({
            class: "apexcharts-treemap"
          });
        if (i.globals.noData) return r;
        var o = [];
        return t.forEach(function (t) {
          var e = t.map(function (t) {
            return Math.abs(t);
          });
          o.push(e);
        }), this.negRange = this.helpers.checkColorRange(), i.config.series.forEach(function (t, i) {
          t.data.forEach(function (t) {
            Array.isArray(e.labels[i]) || (e.labels[i] = []), e.labels[i].push(t.x);
          });
        }), window.TreemapSquared.generate(o, i.globals.gridWidth, i.globals.gridHeight).forEach(function (o, n) {
          var l = a.group({
            class: "apexcharts-series apexcharts-treemap-series",
            seriesName: x.escapeString(i.globals.seriesNames[n]),
            rel: n + 1,
            "data:realIndex": n
          });
          if (i.config.chart.dropShadow.enabled) {
            var h = i.config.chart.dropShadow;
            new v(e.ctx).dropShadow(r, h, n);
          }
          var c = a.group({
            class: "apexcharts-data-labels"
          });
          o.forEach(function (r, o) {
            var h = r[0],
              c = r[1],
              d = r[2],
              g = r[3],
              u = a.drawRect(h, c, d - h, g - c, 0, "#fff", 1, e.strokeWidth, i.config.plotOptions.treemap.useFillColorAsStroke ? f : i.globals.stroke.colors[n]);
            u.attr({
              cx: h,
              cy: c,
              index: n,
              i: n,
              j: o,
              width: d - h,
              height: g - c
            });
            var p = e.helpers.getShadeColor(i.config.chart.type, n, o, e.negRange),
              f = p.color;
            void 0 !== i.config.series[n].data[o] && i.config.series[n].data[o].fillColor && (f = i.config.series[n].data[o].fillColor);
            var x = s.fillPath({
              color: f,
              seriesNumber: n,
              dataPointIndex: o
            });
            u.node.classList.add("apexcharts-treemap-rect"), u.attr({
              fill: x
            }), e.helpers.addListeners(u);
            var b = {
                x: h + (d - h) / 2,
                y: c + (g - c) / 2,
                width: 0,
                height: 0
              },
              v = {
                x: h,
                y: c,
                width: d - h,
                height: g - c
              };
            if (i.config.chart.animations.enabled && !i.globals.dataChanged) {
              var m = 1;
              i.globals.resized || (m = i.config.chart.animations.speed), e.animateTreemap(u, b, v, m);
            }
            if (i.globals.dataChanged) {
              var y = 1;
              e.dynamicAnim.enabled && i.globals.shouldAnimate && (y = e.dynamicAnim.speed, i.globals.previousPaths[n] && i.globals.previousPaths[n][o] && i.globals.previousPaths[n][o].rect && (b = i.globals.previousPaths[n][o].rect), e.animateTreemap(u, b, v, y));
            }
            var w = e.getFontSize(r),
              k = i.config.dataLabels.formatter(e.labels[n][o], {
                value: i.globals.series[n][o],
                seriesIndex: n,
                dataPointIndex: o,
                w: i
              });
            "truncate" === i.config.plotOptions.treemap.dataLabels.format && (w = parseInt(i.config.dataLabels.style.fontSize, 10), k = e.truncateLabels(k, w, h, c, d, g));
            var A = e.helpers.calculateDataLabels({
              text: k,
              x: (h + d) / 2,
              y: (c + g) / 2 + e.strokeWidth / 2 + w / 3,
              i: n,
              j: o,
              colorProps: p,
              fontSize: w,
              series: t
            });
            i.config.dataLabels.enabled && A && e.rotateToFitLabel(A, w, k, h, c, d, g), l.add(u), null !== A && l.add(A);
          }), l.add(c), r.add(l);
        }), r;
      }
    }, {
      key: "getFontSize",
      value: function (t) {
        var e = this.w;
        var i,
          a,
          s,
          r,
          o = function t(e) {
            var i,
              a = 0;
            if (Array.isArray(e[0])) for (i = 0; i < e.length; i++) a += t(e[i]);else for (i = 0; i < e.length; i++) a += e[i].length;
            return a;
          }(this.labels) / function t(e) {
            var i,
              a = 0;
            if (Array.isArray(e[0])) for (i = 0; i < e.length; i++) a += t(e[i]);else for (i = 0; i < e.length; i++) a += 1;
            return a;
          }(this.labels);
        return i = t[2] - t[0], a = t[3] - t[1], s = i * a, r = Math.pow(s, .5), Math.min(r / o, parseInt(e.config.dataLabels.style.fontSize, 10));
      }
    }, {
      key: "rotateToFitLabel",
      value: function (t, e, i, a, s, r, o) {
        var n = new m(this.ctx),
          l = n.getTextRects(i, e);
        if (l.width + this.w.config.stroke.width + 5 > r - a && l.width <= o - s) {
          var h = n.rotateAroundCenter(t.node);
          t.node.setAttribute("transform", "rotate(-90 ".concat(h.x, " ").concat(h.y, ") translate(").concat(l.height / 3, ")"));
        }
      }
    }, {
      key: "truncateLabels",
      value: function (t, e, i, a, s, r) {
        var o = new m(this.ctx),
          n = o.getTextRects(t, e).width + this.w.config.stroke.width + 5 > s - i && r - a > s - i ? r - a : s - i,
          l = o.getTextBasedOnMaxWidth({
            text: t,
            maxWidth: n,
            fontSize: e
          });
        return t.length !== l.length && n / e < 5 ? "" : l;
      }
    }, {
      key: "animateTreemap",
      value: function (t, e, i, a) {
        var s = new b(this.ctx);
        s.animateRect(t, {
          x: e.x,
          y: e.y,
          width: e.width,
          height: e.height
        }, {
          x: i.x,
          y: i.y,
          width: i.width,
          height: i.height
        }, a, function () {
          s.animationCompleted(t);
        });
      }
    }]), t;
  }(),
  Ot = 86400,
  Nt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.timeScaleArray = [], this.utc = this.w.config.xaxis.labels.datetimeUTC;
    }
    return r(t, [{
      key: "calculateTimeScaleTicks",
      value: function (t, i) {
        var a = this,
          s = this.w;
        if (s.globals.allSeriesCollapsed) return s.globals.labels = [], s.globals.timescaleLabels = [], [];
        var r = new I(this.ctx),
          o = (i - t) / 864e5;
        this.determineInterval(o), s.globals.disableZoomIn = !1, s.globals.disableZoomOut = !1, o < .00011574074074074075 ? s.globals.disableZoomIn = !0 : o > 5e4 && (s.globals.disableZoomOut = !0);
        var n = r.getTimeUnitsfromTimestamp(t, i, this.utc),
          l = s.globals.gridWidth / o,
          h = l / 24,
          c = h / 60,
          d = c / 60,
          g = Math.floor(24 * o),
          u = Math.floor(1440 * o),
          p = Math.floor(o * Ot),
          f = Math.floor(o),
          x = Math.floor(o / 30),
          b = Math.floor(o / 365),
          v = {
            minMillisecond: n.minMillisecond,
            minSecond: n.minSecond,
            minMinute: n.minMinute,
            minHour: n.minHour,
            minDate: n.minDate,
            minMonth: n.minMonth,
            minYear: n.minYear
          },
          m = {
            firstVal: v,
            currentMillisecond: v.minMillisecond,
            currentSecond: v.minSecond,
            currentMinute: v.minMinute,
            currentHour: v.minHour,
            currentMonthDate: v.minDate,
            currentDate: v.minDate,
            currentMonth: v.minMonth,
            currentYear: v.minYear,
            daysWidthOnXAxis: l,
            hoursWidthOnXAxis: h,
            minutesWidthOnXAxis: c,
            secondsWidthOnXAxis: d,
            numberOfSeconds: p,
            numberOfMinutes: u,
            numberOfHours: g,
            numberOfDays: f,
            numberOfMonths: x,
            numberOfYears: b
          };
        switch (this.tickInterval) {
          case "years":
            this.generateYearScale(m);
            break;
          case "months":
          case "half_year":
            this.generateMonthScale(m);
            break;
          case "months_days":
          case "months_fortnight":
          case "days":
          case "week_days":
            this.generateDayScale(m);
            break;
          case "hours":
            this.generateHourScale(m);
            break;
          case "minutes_fives":
          case "minutes":
            this.generateMinuteScale(m);
            break;
          case "seconds_tens":
          case "seconds_fives":
          case "seconds":
            this.generateSecondScale(m);
        }
        var y = this.timeScaleArray.map(function (t) {
          var i = {
            position: t.position,
            unit: t.unit,
            year: t.year,
            day: t.day ? t.day : 1,
            hour: t.hour ? t.hour : 0,
            month: t.month + 1
          };
          return "month" === t.unit ? e(e({}, i), {}, {
            day: 1,
            value: t.value + 1
          }) : "day" === t.unit || "hour" === t.unit ? e(e({}, i), {}, {
            value: t.value
          }) : "minute" === t.unit ? e(e({}, i), {}, {
            value: t.value,
            minute: t.value
          }) : "second" === t.unit ? e(e({}, i), {}, {
            value: t.value,
            minute: t.minute,
            second: t.second
          }) : t;
        });
        return y.filter(function (t) {
          var e = 1,
            i = Math.ceil(s.globals.gridWidth / 120),
            r = t.value;
          void 0 !== s.config.xaxis.tickAmount && (i = s.config.xaxis.tickAmount), y.length > i && (e = Math.floor(y.length / i));
          var o = !1,
            n = !1;
          switch (a.tickInterval) {
            case "years":
              "year" === t.unit && (o = !0);
              break;
            case "half_year":
              e = 7, "year" === t.unit && (o = !0);
              break;
            case "months":
              e = 1, "year" === t.unit && (o = !0);
              break;
            case "months_fortnight":
              e = 15, "year" !== t.unit && "month" !== t.unit || (o = !0), 30 === r && (n = !0);
              break;
            case "months_days":
              e = 10, "month" === t.unit && (o = !0), 30 === r && (n = !0);
              break;
            case "week_days":
              e = 8, "month" === t.unit && (o = !0);
              break;
            case "days":
              e = 1, "month" === t.unit && (o = !0);
              break;
            case "hours":
              "day" === t.unit && (o = !0);
              break;
            case "minutes_fives":
            case "seconds_fives":
              r % 5 != 0 && (n = !0);
              break;
            case "seconds_tens":
              r % 10 != 0 && (n = !0);
          }
          if ("hours" === a.tickInterval || "minutes_fives" === a.tickInterval || "seconds_tens" === a.tickInterval || "seconds_fives" === a.tickInterval) {
            if (!n) return !0;
          } else if ((r % e == 0 || o) && !n) return !0;
        });
      }
    }, {
      key: "recalcDimensionsBasedOnFormat",
      value: function (t, e) {
        var i = this.w,
          a = this.formatDates(t),
          s = this.removeOverlappingTS(a);
        i.globals.timescaleLabels = s.slice(), new ot(this.ctx).plotCoords();
      }
    }, {
      key: "determineInterval",
      value: function (t) {
        var e = 24 * t,
          i = 60 * e;
        switch (!0) {
          case t / 365 > 5:
            this.tickInterval = "years";
            break;
          case t > 800:
            this.tickInterval = "half_year";
            break;
          case t > 180:
            this.tickInterval = "months";
            break;
          case t > 90:
            this.tickInterval = "months_fortnight";
            break;
          case t > 60:
            this.tickInterval = "months_days";
            break;
          case t > 30:
            this.tickInterval = "week_days";
            break;
          case t > 2:
            this.tickInterval = "days";
            break;
          case e > 2.4:
            this.tickInterval = "hours";
            break;
          case i > 15:
            this.tickInterval = "minutes_fives";
            break;
          case i > 5:
            this.tickInterval = "minutes";
            break;
          case i > 1:
            this.tickInterval = "seconds_tens";
            break;
          case 60 * i > 20:
            this.tickInterval = "seconds_fives";
            break;
          default:
            this.tickInterval = "seconds";
        }
      }
    }, {
      key: "generateYearScale",
      value: function (t) {
        var e = t.firstVal,
          i = t.currentMonth,
          a = t.currentYear,
          s = t.daysWidthOnXAxis,
          r = t.numberOfYears,
          o = e.minYear,
          n = 0,
          l = new I(this.ctx),
          h = "year";
        if (e.minDate > 1 || e.minMonth > 0) {
          var c = l.determineRemainingDaysOfYear(e.minYear, e.minMonth, e.minDate);
          n = (l.determineDaysOfYear(e.minYear) - c + 1) * s, o = e.minYear + 1, this.timeScaleArray.push({
            position: n,
            value: o,
            unit: h,
            year: o,
            month: x.monthMod(i + 1)
          });
        } else 1 === e.minDate && 0 === e.minMonth && this.timeScaleArray.push({
          position: n,
          value: o,
          unit: h,
          year: a,
          month: x.monthMod(i + 1)
        });
        for (var d = o, g = n, u = 0; u < r; u++) d++, g = l.determineDaysOfYear(d - 1) * s + g, this.timeScaleArray.push({
          position: g,
          value: d,
          unit: h,
          year: d,
          month: 1
        });
      }
    }, {
      key: "generateMonthScale",
      value: function (t) {
        var e = t.firstVal,
          i = t.currentMonthDate,
          a = t.currentMonth,
          s = t.currentYear,
          r = t.daysWidthOnXAxis,
          o = t.numberOfMonths,
          n = a,
          l = 0,
          h = new I(this.ctx),
          c = "month",
          d = 0;
        if (e.minDate > 1) {
          l = (h.determineDaysOfMonths(a + 1, e.minYear) - i + 1) * r, n = x.monthMod(a + 1);
          var g = s + d,
            u = x.monthMod(n),
            p = n;
          0 === n && (c = "year", p = g, u = 1, g += d += 1), this.timeScaleArray.push({
            position: l,
            value: p,
            unit: c,
            year: g,
            month: u
          });
        } else this.timeScaleArray.push({
          position: l,
          value: n,
          unit: c,
          year: s,
          month: x.monthMod(a)
        });
        for (var f = n + 1, b = l, v = 0, m = 1; v < o; v++, m++) {
          0 === (f = x.monthMod(f)) ? (c = "year", d += 1) : c = "month";
          var y = this._getYear(s, f, d);
          b = h.determineDaysOfMonths(f, y) * r + b;
          var w = 0 === f ? y : f;
          this.timeScaleArray.push({
            position: b,
            value: w,
            unit: c,
            year: y,
            month: 0 === f ? 1 : f
          }), f++;
        }
      }
    }, {
      key: "generateDayScale",
      value: function (t) {
        var e = t.firstVal,
          i = t.currentMonth,
          a = t.currentYear,
          s = t.hoursWidthOnXAxis,
          r = t.numberOfDays,
          o = new I(this.ctx),
          n = "day",
          l = e.minDate + 1,
          h = l,
          c = function (t, e, i) {
            return t > o.determineDaysOfMonths(e + 1, i) ? (h = 1, n = "month", g = e += 1, e) : e;
          },
          d = (24 - e.minHour) * s,
          g = l,
          u = c(h, i, a);
        0 === e.minHour && 1 === e.minDate ? (d = 0, g = x.monthMod(e.minMonth), n = "month", h = e.minDate) : 1 !== e.minDate && 0 === e.minHour && 0 === e.minMinute && (d = 0, l = e.minDate, g = l, u = c(h = l, i, a)), this.timeScaleArray.push({
          position: d,
          value: g,
          unit: n,
          year: this._getYear(a, u, 0),
          month: x.monthMod(u),
          day: h
        });
        for (var p = d, f = 0; f < r; f++) {
          n = "day", u = c(h += 1, u, this._getYear(a, u, 0));
          var b = this._getYear(a, u, 0);
          p = 24 * s + p;
          var v = 1 === h ? x.monthMod(u) : h;
          this.timeScaleArray.push({
            position: p,
            value: v,
            unit: n,
            year: b,
            month: x.monthMod(u),
            day: v
          });
        }
      }
    }, {
      key: "generateHourScale",
      value: function (t) {
        var e = t.firstVal,
          i = t.currentDate,
          a = t.currentMonth,
          s = t.currentYear,
          r = t.minutesWidthOnXAxis,
          o = t.numberOfHours,
          n = new I(this.ctx),
          l = "hour",
          h = function (t, e) {
            return t > n.determineDaysOfMonths(e + 1, s) && (f = 1, e += 1), {
              month: e,
              date: f
            };
          },
          c = function (t, e) {
            return t > n.determineDaysOfMonths(e + 1, s) ? e += 1 : e;
          },
          d = 60 - (e.minMinute + e.minSecond / 60),
          g = d * r,
          u = e.minHour + 1,
          p = u;
        60 === d && (g = 0, p = u = e.minHour);
        var f = i;
        p >= 24 && (p = 0, f += 1, l = "day");
        var b = h(f, a).month;
        b = c(f, b), this.timeScaleArray.push({
          position: g,
          value: u,
          unit: l,
          day: f,
          hour: p,
          year: s,
          month: x.monthMod(b)
        }), p++;
        for (var v = g, m = 0; m < o; m++) {
          if (l = "hour", p >= 24) p = 0, l = "day", b = h(f += 1, b).month, b = c(f, b);
          var y = this._getYear(s, b, 0);
          v = 60 * r + v;
          var w = 0 === p ? f : p;
          this.timeScaleArray.push({
            position: v,
            value: w,
            unit: l,
            hour: p,
            day: f,
            year: y,
            month: x.monthMod(b)
          }), p++;
        }
      }
    }, {
      key: "generateMinuteScale",
      value: function (t) {
        for (var e = t.currentMillisecond, i = t.currentSecond, a = t.currentMinute, s = t.currentHour, r = t.currentDate, o = t.currentMonth, n = t.currentYear, l = t.minutesWidthOnXAxis, h = t.secondsWidthOnXAxis, c = t.numberOfMinutes, d = a + 1, g = r, u = o, p = n, f = s, b = (60 - i - e / 1e3) * h, v = 0; v < c; v++) d >= 60 && (d = 0, 24 === (f += 1) && (f = 0)), this.timeScaleArray.push({
          position: b,
          value: d,
          unit: "minute",
          hour: f,
          minute: d,
          day: g,
          year: this._getYear(p, u, 0),
          month: x.monthMod(u)
        }), b += l, d++;
      }
    }, {
      key: "generateSecondScale",
      value: function (t) {
        for (var e = t.currentMillisecond, i = t.currentSecond, a = t.currentMinute, s = t.currentHour, r = t.currentDate, o = t.currentMonth, n = t.currentYear, l = t.secondsWidthOnXAxis, h = t.numberOfSeconds, c = i + 1, d = a, g = r, u = o, p = n, f = s, b = (1e3 - e) / 1e3 * l, v = 0; v < h; v++) c >= 60 && (c = 0, ++d >= 60 && (d = 0, 24 === ++f && (f = 0))), this.timeScaleArray.push({
          position: b,
          value: c,
          unit: "second",
          hour: f,
          minute: d,
          second: c,
          day: g,
          year: this._getYear(p, u, 0),
          month: x.monthMod(u)
        }), b += l, c++;
      }
    }, {
      key: "createRawDateString",
      value: function (t, e) {
        var i = t.year;
        return 0 === t.month && (t.month = 1), i += "-" + ("0" + t.month.toString()).slice(-2), "day" === t.unit ? i += "day" === t.unit ? "-" + ("0" + e).slice(-2) : "-01" : i += "-" + ("0" + (t.day ? t.day : "1")).slice(-2), "hour" === t.unit ? i += "hour" === t.unit ? "T" + ("0" + e).slice(-2) : "T00" : i += "T" + ("0" + (t.hour ? t.hour : "0")).slice(-2), "minute" === t.unit ? i += ":" + ("0" + e).slice(-2) : i += ":" + (t.minute ? ("0" + t.minute).slice(-2) : "00"), "second" === t.unit ? i += ":" + ("0" + e).slice(-2) : i += ":00", this.utc && (i += ".000Z"), i;
      }
    }, {
      key: "formatDates",
      value: function (t) {
        var e = this,
          i = this.w;
        return t.map(function (t) {
          var a = t.value.toString(),
            s = new I(e.ctx),
            r = e.createRawDateString(t, a),
            o = s.getDate(s.parseDate(r));
          if (e.utc || (o = s.getDate(s.parseDateWithTimezone(r))), void 0 === i.config.xaxis.labels.format) {
            var n = "dd MMM",
              l = i.config.xaxis.labels.datetimeFormatter;
            "year" === t.unit && (n = l.year), "month" === t.unit && (n = l.month), "day" === t.unit && (n = l.day), "hour" === t.unit && (n = l.hour), "minute" === t.unit && (n = l.minute), "second" === t.unit && (n = l.second), a = s.formatDate(o, n);
          } else a = s.formatDate(o, i.config.xaxis.labels.format);
          return {
            dateString: r,
            position: t.position,
            value: a,
            unit: t.unit,
            year: t.year,
            month: t.month
          };
        });
      }
    }, {
      key: "removeOverlappingTS",
      value: function (t) {
        var e,
          i = this,
          a = new m(this.ctx),
          s = !1;
        t.length > 0 && t[0].value && t.every(function (e) {
          return e.value.length === t[0].value.length;
        }) && (s = !0, e = a.getTextRects(t[0].value).width);
        var r = 0,
          o = t.map(function (o, n) {
            if (n > 0 && i.w.config.xaxis.labels.hideOverlappingLabels) {
              var l = s ? e : a.getTextRects(t[r].value).width,
                h = t[r].position;
              return o.position > h + l + 10 ? (r = n, o) : null;
            }
            return o;
          });
        return o = o.filter(function (t) {
          return null !== t;
        });
      }
    }, {
      key: "_getYear",
      value: function (t, e, i) {
        return t + Math.floor(e / 12) + i;
      }
    }]), t;
  }(),
  Wt = function () {
    function t(e, i) {
      a(this, t), this.ctx = i, this.w = i.w, this.el = e;
    }
    return r(t, [{
      key: "setupElements",
      value: function () {
        var t = this.w.globals,
          e = this.w.config,
          i = e.chart.type;
        t.axisCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(i) > -1, t.xyCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(i) > -1, t.isBarHorizontal = ("bar" === e.chart.type || "rangeBar" === e.chart.type || "boxPlot" === e.chart.type) && e.plotOptions.bar.horizontal, t.chartClass = ".apexcharts" + t.chartID, t.dom.baseEl = this.el, t.dom.elWrap = document.createElement("div"), m.setAttrs(t.dom.elWrap, {
          id: t.chartClass.substring(1),
          class: "apexcharts-canvas " + t.chartClass.substring(1)
        }), this.el.appendChild(t.dom.elWrap), t.dom.Paper = new window.SVG.Doc(t.dom.elWrap), t.dom.Paper.attr({
          class: "apexcharts-svg",
          "xmlns:data": "ApexChartsNS",
          transform: "translate(".concat(e.chart.offsetX, ", ").concat(e.chart.offsetY, ")")
        }), t.dom.Paper.node.style.background = "dark" !== e.theme.mode || e.chart.background ? e.chart.background : "rgba(0, 0, 0, 0.8)", this.setSVGDimensions(), t.dom.elLegendForeign = document.createElementNS(t.SVGNS, "foreignObject"), m.setAttrs(t.dom.elLegendForeign, {
          x: 0,
          y: 0,
          width: t.svgWidth,
          height: t.svgHeight
        }), t.dom.elLegendWrap = document.createElement("div"), t.dom.elLegendWrap.classList.add("apexcharts-legend"), t.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), t.dom.elLegendForeign.appendChild(t.dom.elLegendWrap), t.dom.Paper.node.appendChild(t.dom.elLegendForeign), t.dom.elGraphical = t.dom.Paper.group().attr({
          class: "apexcharts-inner apexcharts-graphical"
        }), t.dom.elDefs = t.dom.Paper.defs(), t.dom.Paper.add(t.dom.elGraphical), t.dom.elGraphical.add(t.dom.elDefs);
      }
    }, {
      key: "plotChartType",
      value: function (t, e) {
        var i = this.w,
          a = i.config,
          s = i.globals,
          r = {
            series: [],
            i: []
          },
          o = {
            series: [],
            i: []
          },
          n = {
            series: [],
            i: []
          },
          l = {
            series: [],
            i: []
          },
          h = {
            series: [],
            i: []
          },
          c = {
            series: [],
            i: []
          },
          d = {
            series: [],
            i: []
          },
          g = {
            series: [],
            i: []
          },
          u = {
            series: [],
            seriesRangeEnd: [],
            i: []
          };
        s.series.map(function (e, p) {
          var f = 0;
          void 0 !== t[p].type ? ("column" === t[p].type || "bar" === t[p].type ? (s.series.length > 1 && a.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"), h.series.push(e), h.i.push(p), f++, i.globals.columnSeries = h.series) : "area" === t[p].type ? (o.series.push(e), o.i.push(p), f++) : "line" === t[p].type ? (r.series.push(e), r.i.push(p), f++) : "scatter" === t[p].type ? (n.series.push(e), n.i.push(p)) : "bubble" === t[p].type ? (l.series.push(e), l.i.push(p), f++) : "candlestick" === t[p].type ? (c.series.push(e), c.i.push(p), f++) : "boxPlot" === t[p].type ? (d.series.push(e), d.i.push(p), f++) : "rangeBar" === t[p].type ? (g.series.push(e), g.i.push(p), f++) : "rangeArea" === t[p].type ? (u.series.push(s.seriesRangeStart[p]), u.seriesRangeEnd.push(s.seriesRangeEnd[p]), u.i.push(p), f++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea"), f > 1 && (s.comboCharts = !0)) : (r.series.push(e), r.i.push(p));
        });
        var p = new Ft(this.ctx, e),
          f = new kt(this.ctx, e);
        this.ctx.pie = new Lt(this.ctx);
        var x = new It(this.ctx);
        this.ctx.rangeBar = new Tt(this.ctx, e);
        var b = new Pt(this.ctx),
          v = [];
        if (s.comboCharts) {
          if (o.series.length > 0 && v.push(p.draw(o.series, "area", o.i)), h.series.length > 0) if (i.config.chart.stacked) {
            var m = new wt(this.ctx, e);
            v.push(m.draw(h.series, h.i));
          } else this.ctx.bar = new yt(this.ctx, e), v.push(this.ctx.bar.draw(h.series, h.i));
          if (u.series.length > 0 && v.push(p.draw(u.series, "rangeArea", u.i, u.seriesRangeEnd)), r.series.length > 0 && v.push(p.draw(r.series, "line", r.i)), c.series.length > 0 && v.push(f.draw(c.series, "candlestick", c.i)), d.series.length > 0 && v.push(f.draw(d.series, "boxPlot", d.i)), g.series.length > 0 && v.push(this.ctx.rangeBar.draw(g.series, g.i)), n.series.length > 0) {
            var y = new Ft(this.ctx, e, !0);
            v.push(y.draw(n.series, "scatter", n.i));
          }
          if (l.series.length > 0) {
            var w = new Ft(this.ctx, e, !0);
            v.push(w.draw(l.series, "bubble", l.i));
          }
        } else switch (a.chart.type) {
          case "line":
            v = p.draw(s.series, "line");
            break;
          case "area":
            v = p.draw(s.series, "area");
            break;
          case "bar":
            if (a.chart.stacked) v = new wt(this.ctx, e).draw(s.series);else this.ctx.bar = new yt(this.ctx, e), v = this.ctx.bar.draw(s.series);
            break;
          case "candlestick":
            v = new kt(this.ctx, e).draw(s.series, "candlestick");
            break;
          case "boxPlot":
            v = new kt(this.ctx, e).draw(s.series, a.chart.type);
            break;
          case "rangeBar":
            v = this.ctx.rangeBar.draw(s.series);
            break;
          case "rangeArea":
            v = p.draw(s.seriesRangeStart, "rangeArea", void 0, s.seriesRangeEnd);
            break;
          case "heatmap":
            v = new St(this.ctx, e).draw(s.series);
            break;
          case "treemap":
            v = new Dt(this.ctx, e).draw(s.series);
            break;
          case "pie":
          case "donut":
          case "polarArea":
            v = this.ctx.pie.draw(s.series);
            break;
          case "radialBar":
            v = x.draw(s.series);
            break;
          case "radar":
            v = b.draw(s.series);
            break;
          default:
            v = p.draw(s.series);
        }
        return v;
      }
    }, {
      key: "setSVGDimensions",
      value: function () {
        var t = this.w.globals,
          e = this.w.config;
        t.svgWidth = e.chart.width, t.svgHeight = e.chart.height;
        var i = x.getDimensions(this.el),
          a = e.chart.width.toString().split(/[0-9]+/g).pop();
        "%" === a ? x.isNumber(i[0]) && (0 === i[0].width && (i = x.getDimensions(this.el.parentNode)), t.svgWidth = i[0] * parseInt(e.chart.width, 10) / 100) : "px" !== a && "" !== a || (t.svgWidth = parseInt(e.chart.width, 10));
        var s = e.chart.height.toString().split(/[0-9]+/g).pop();
        if ("auto" !== t.svgHeight && "" !== t.svgHeight) {
          if ("%" === s) {
            var r = x.getDimensions(this.el.parentNode);
            t.svgHeight = r[1] * parseInt(e.chart.height, 10) / 100;
          } else t.svgHeight = parseInt(e.chart.height, 10);
        } else t.axisCharts ? t.svgHeight = t.svgWidth / 1.61 : t.svgHeight = t.svgWidth / 1.2;
        if (t.svgWidth < 0 && (t.svgWidth = 0), t.svgHeight < 0 && (t.svgHeight = 0), m.setAttrs(t.dom.Paper.node, {
          width: t.svgWidth,
          height: t.svgHeight
        }), "%" !== s) {
          var o = e.chart.sparkline.enabled ? 0 : t.axisCharts ? e.chart.parentHeightOffset : 0;
          t.dom.Paper.node.parentNode.parentNode.style.minHeight = t.svgHeight + o + "px";
        }
        t.dom.elWrap.style.width = t.svgWidth + "px", t.dom.elWrap.style.height = t.svgHeight + "px";
      }
    }, {
      key: "shiftGraphPosition",
      value: function () {
        var t = this.w.globals,
          e = t.translateY,
          i = {
            transform: "translate(" + t.translateX + ", " + e + ")"
          };
        m.setAttrs(t.dom.elGraphical.node, i);
      }
    }, {
      key: "resizeNonAxisCharts",
      value: function () {
        var t = this.w,
          e = t.globals,
          i = 0,
          a = t.config.chart.sparkline.enabled ? 1 : 15;
        a += t.config.grid.padding.bottom, "top" !== t.config.legend.position && "bottom" !== t.config.legend.position || !t.config.legend.show || t.config.legend.floating || (i = new lt(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
        var s = t.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"),
          r = 2.05 * t.globals.radialSize;
        if (s && !t.config.chart.sparkline.enabled && 0 !== t.config.plotOptions.radialBar.startAngle) {
          var o = x.getBoundingClientRect(s);
          r = o.bottom;
          var n = o.bottom - o.top;
          r = Math.max(2.05 * t.globals.radialSize, n);
        }
        var l = r + e.translateY + i + a;
        e.dom.elLegendForeign && e.dom.elLegendForeign.setAttribute("height", l), t.config.chart.height && String(t.config.chart.height).indexOf("%") > 0 || (e.dom.elWrap.style.height = l + "px", m.setAttrs(e.dom.Paper.node, {
          height: l
        }), e.dom.Paper.node.parentNode.parentNode.style.minHeight = l + "px");
      }
    }, {
      key: "coreCalculations",
      value: function () {
        new U(this.ctx).init();
      }
    }, {
      key: "resetGlobals",
      value: function () {
        var t = this,
          e = function () {
            return t.w.config.series.map(function (t) {
              return [];
            });
          },
          i = new Y(),
          a = this.w.globals;
        i.initGlobalVars(a), a.seriesXvalues = e(), a.seriesYvalues = e();
      }
    }, {
      key: "isMultipleY",
      value: function () {
        if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) return this.w.globals.isMultipleYAxis = !0, !0;
      }
    }, {
      key: "xySettings",
      value: function () {
        var t = null,
          e = this.w;
        if (e.globals.axisCharts) {
          if ("back" === e.config.xaxis.crosshairs.position) new Q(this.ctx).drawXCrosshairs();
          if ("back" === e.config.yaxis[0].crosshairs.position) new Q(this.ctx).drawYCrosshairs();
          if ("datetime" === e.config.xaxis.type && void 0 === e.config.xaxis.labels.formatter) {
            this.ctx.timeScale = new Nt(this.ctx);
            var i = [];
            isFinite(e.globals.minX) && isFinite(e.globals.maxX) && !e.globals.isBarHorizontal ? i = this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minX, e.globals.maxX) : e.globals.isBarHorizontal && (i = this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minY, e.globals.maxY)), this.ctx.timeScale.recalcDimensionsBasedOnFormat(i);
          }
          t = new y(this.ctx).getCalculatedRatios();
        }
        return t;
      }
    }, {
      key: "updateSourceChart",
      value: function (t) {
        this.ctx.w.globals.selection = void 0, this.ctx.updateHelpers._updateOptions({
          chart: {
            selection: {
              xaxis: {
                min: t.w.globals.minX,
                max: t.w.globals.maxX
              }
            }
          }
        }, !1, !1);
      }
    }, {
      key: "setupBrushHandler",
      value: function () {
        var t = this,
          i = this.w;
        if (i.config.chart.brush.enabled && "function" != typeof i.config.chart.events.selection) {
          var a = Array.isArray(i.config.chart.brush.targets) || [i.config.chart.brush.target];
          a.forEach(function (e) {
            var i = ApexCharts.getChartByID(e);
            i.w.globals.brushSource = t.ctx, "function" != typeof i.w.config.chart.events.zoomed && (i.w.config.chart.events.zoomed = function () {
              t.updateSourceChart(i);
            }), "function" != typeof i.w.config.chart.events.scrolled && (i.w.config.chart.events.scrolled = function () {
              t.updateSourceChart(i);
            });
          }), i.config.chart.events.selection = function (t, s) {
            a.forEach(function (t) {
              var a = ApexCharts.getChartByID(t),
                r = x.clone(i.config.yaxis);
              if (i.config.chart.brush.autoScaleYaxis && 1 === a.w.globals.series.length) {
                var o = new _(a);
                r = o.autoScaleY(a, r, s);
              }
              var n = a.w.config.yaxis.reduce(function (t, i, s) {
                return [].concat(u(t), [e(e({}, a.w.config.yaxis[s]), {}, {
                  min: r[0].min,
                  max: r[0].max
                })]);
              }, []);
              a.ctx.updateHelpers._updateOptions({
                xaxis: {
                  min: s.xaxis.min,
                  max: s.xaxis.max
                },
                yaxis: n
              }, !1, !1, !1, !1);
            });
          };
        }
      }
    }]), t;
  }(),
  Bt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "_updateOptions",
      value: function (t) {
        var e = this,
          a = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          s = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
          r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
          o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
        return new Promise(function (n) {
          var l = [e.ctx];
          r && (l = e.ctx.getSyncedCharts()), e.ctx.w.globals.isExecCalled && (l = [e.ctx], e.ctx.w.globals.isExecCalled = !1), l.forEach(function (r, h) {
            var c = r.w;
            if (c.globals.shouldAnimate = s, a || (c.globals.resized = !0, c.globals.dataChanged = !0, s && r.series.getPreviousPaths()), t && "object" === i(t) && (r.config = new E(t), t = y.extendArrayProps(r.config, t, c), r.w.globals.chartID !== e.ctx.w.globals.chartID && delete t.series, c.config = x.extend(c.config, t), o && (c.globals.lastXAxis = t.xaxis ? x.clone(t.xaxis) : [], c.globals.lastYAxis = t.yaxis ? x.clone(t.yaxis) : [], c.globals.initialConfig = x.extend({}, c.config), c.globals.initialSeries = x.clone(c.config.series), t.series))) {
              for (var d = 0; d < c.globals.collapsedSeriesIndices.length; d++) {
                var g = c.config.series[c.globals.collapsedSeriesIndices[d]];
                c.globals.collapsedSeries[d].data = c.globals.axisCharts ? g.data.slice() : g;
              }
              for (var u = 0; u < c.globals.ancillaryCollapsedSeriesIndices.length; u++) {
                var p = c.config.series[c.globals.ancillaryCollapsedSeriesIndices[u]];
                c.globals.ancillaryCollapsedSeries[u].data = c.globals.axisCharts ? p.data.slice() : p;
              }
              r.series.emptyCollapsedSeries(c.config.series);
            }
            return r.update(t).then(function () {
              h === l.length - 1 && n(r);
            });
          });
        });
      }
    }, {
      key: "_updateSeries",
      value: function (t, e) {
        var i = this,
          a = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return new Promise(function (s) {
          var r,
            o = i.w;
          return o.globals.shouldAnimate = e, o.globals.dataChanged = !0, e && i.ctx.series.getPreviousPaths(), o.globals.axisCharts ? (0 === (r = t.map(function (t, e) {
            return i._extendSeries(t, e);
          })).length && (r = [{
            data: []
          }]), o.config.series = r) : o.config.series = t.slice(), a && (o.globals.initialConfig.series = x.clone(o.config.series), o.globals.initialSeries = x.clone(o.config.series)), i.ctx.update().then(function () {
            s(i.ctx);
          });
        });
      }
    }, {
      key: "_extendSeries",
      value: function (t, i) {
        var a = this.w,
          s = a.config.series[i];
        return e(e({}, a.config.series[i]), {}, {
          name: t.name ? t.name : null == s ? void 0 : s.name,
          color: t.color ? t.color : null == s ? void 0 : s.color,
          type: t.type ? t.type : null == s ? void 0 : s.type,
          group: t.group ? t.group : null == s ? void 0 : s.group,
          data: t.data ? t.data : null == s ? void 0 : s.data,
          zIndex: void 0 !== t.zIndex ? t.zIndex : i
        });
      }
    }, {
      key: "toggleDataPointSelection",
      value: function (t, e) {
        var i = this.w,
          a = null,
          s = ".apexcharts-series[data\\:realIndex='".concat(t, "']");
        return i.globals.axisCharts ? a = i.globals.dom.Paper.select("".concat(s, " path[j='").concat(e, "'], ").concat(s, " circle[j='").concat(e, "'], ").concat(s, " rect[j='").concat(e, "']")).members[0] : void 0 === e && (a = i.globals.dom.Paper.select("".concat(s, " path[j='").concat(t, "']")).members[0], "pie" !== i.config.chart.type && "polarArea" !== i.config.chart.type && "donut" !== i.config.chart.type || this.ctx.pie.pieClicked(t)), a ? (new m(this.ctx).pathMouseDown(a, null), a.node ? a.node : null) : (console.warn("toggleDataPointSelection: Element not found"), null);
      }
    }, {
      key: "forceXAxisUpdate",
      value: function (t) {
        var e = this.w;
        if (["min", "max"].forEach(function (i) {
          void 0 !== t.xaxis[i] && (e.config.xaxis[i] = t.xaxis[i], e.globals.lastXAxis[i] = t.xaxis[i]);
        }), t.xaxis.categories && t.xaxis.categories.length && (e.config.xaxis.categories = t.xaxis.categories), e.config.xaxis.convertedCatToNumeric) {
          var i = new X(t);
          t = i.convertCatToNumericXaxis(t, this.ctx);
        }
        return t;
      }
    }, {
      key: "forceYAxisUpdate",
      value: function (t) {
        return t.chart && t.chart.stacked && "100%" === t.chart.stackType && (Array.isArray(t.yaxis) ? t.yaxis.forEach(function (e, i) {
          t.yaxis[i].min = 0, t.yaxis[i].max = 100;
        }) : (t.yaxis.min = 0, t.yaxis.max = 100)), t;
      }
    }, {
      key: "revertDefaultAxisMinMax",
      value: function (t) {
        var e = this,
          i = this.w,
          a = i.globals.lastXAxis,
          s = i.globals.lastYAxis;
        t && t.xaxis && (a = t.xaxis), t && t.yaxis && (s = t.yaxis), i.config.xaxis.min = a.min, i.config.xaxis.max = a.max;
        var r = function (t) {
          void 0 !== s[t] && (i.config.yaxis[t].min = s[t].min, i.config.yaxis[t].max = s[t].max);
        };
        i.config.yaxis.map(function (t, a) {
          i.globals.zoomed || void 0 !== s[a] ? r(a) : void 0 !== e.ctx.opts.yaxis[a] && (t.min = e.ctx.opts.yaxis[a].min, t.max = e.ctx.opts.yaxis[a].max);
        });
      }
    }]), t;
  }();
Rt = "undefined" != typeof window ? window : void 0, Ht = function (t, e) {
  var a = (void 0 !== this ? this : t).SVG = function (t) {
    if (a.supported) return t = new a.Doc(t), a.parser.draw || a.prepare(), t;
  };
  if (a.ns = "http://www.w3.org/2000/svg", a.xmlns = "http://www.w3.org/2000/xmlns/", a.xlink = "http://www.w3.org/1999/xlink", a.svgjs = "http://svgjs.dev", a.supported = !0, !a.supported) return !1;
  a.did = 1e3, a.eid = function (t) {
    return "Svgjs" + d(t) + a.did++;
  }, a.create = function (t) {
    var i = e.createElementNS(this.ns, t);
    return i.setAttribute("id", this.eid(t)), i;
  }, a.extend = function () {
    var t, e;
    e = (t = [].slice.call(arguments)).pop();
    for (var i = t.length - 1; i >= 0; i--) if (t[i]) for (var s in e) t[i].prototype[s] = e[s];
    a.Set && a.Set.inherit && a.Set.inherit();
  }, a.invent = function (t) {
    var e = "function" == typeof t.create ? t.create : function () {
      this.constructor.call(this, a.create(t.create));
    };
    return t.inherit && (e.prototype = new t.inherit()), t.extend && a.extend(e, t.extend), t.construct && a.extend(t.parent || a.Container, t.construct), e;
  }, a.adopt = function (e) {
    return e ? e.instance ? e.instance : ((i = "svg" == e.nodeName ? e.parentNode instanceof t.SVGElement ? new a.Nested() : new a.Doc() : "linearGradient" == e.nodeName ? new a.Gradient("linear") : "radialGradient" == e.nodeName ? new a.Gradient("radial") : a[d(e.nodeName)] ? new a[d(e.nodeName)]() : new a.Element(e)).type = e.nodeName, i.node = e, e.instance = i, i instanceof a.Doc && i.namespace().defs(), i.setData(JSON.parse(e.getAttribute("svgjs:data")) || {}), i) : null;
    var i;
  }, a.prepare = function () {
    var t = e.getElementsByTagName("body")[0],
      i = (t ? new a.Doc(t) : a.adopt(e.documentElement).nested()).size(2, 0);
    a.parser = {
      body: t || e.documentElement,
      draw: i.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
      poly: i.polyline().node,
      path: i.path().node,
      native: a.create("svg")
    };
  }, a.parser = {
    native: a.create("svg")
  }, e.addEventListener("DOMContentLoaded", function () {
    a.parser.draw || a.prepare();
  }, !1), a.regex = {
    numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
    hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
    rgb: /rgb\((\d+),(\d+),(\d+)\)/,
    reference: /#([a-z0-9\-_]+)/i,
    transforms: /\)\s*,?\s*/,
    whitespace: /\s/g,
    isHex: /^#[a-f0-9]{3,6}$/i,
    isRgb: /^rgb\(/,
    isCss: /[^:]+:[^;]+;?/,
    isBlank: /^(\s+)?$/,
    isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
    isPercent: /^-?[\d\.]+%$/,
    isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
    delimiter: /[\s,]+/,
    hyphen: /([^e])\-/gi,
    pathLetters: /[MLHVCSQTAZ]/gi,
    isPathLetter: /[MLHVCSQTAZ]/i,
    numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
    dots: /\./g
  }, a.utils = {
    map: function (t, e) {
      for (var i = t.length, a = [], s = 0; s < i; s++) a.push(e(t[s]));
      return a;
    },
    filter: function (t, e) {
      for (var i = t.length, a = [], s = 0; s < i; s++) e(t[s]) && a.push(t[s]);
      return a;
    },
    filterSVGElements: function (e) {
      return this.filter(e, function (e) {
        return e instanceof t.SVGElement;
      });
    }
  }, a.defaults = {
    attrs: {
      "fill-opacity": 1,
      "stroke-opacity": 1,
      "stroke-width": 0,
      "stroke-linejoin": "miter",
      "stroke-linecap": "butt",
      fill: "#000000",
      stroke: "#000000",
      opacity: 1,
      x: 0,
      y: 0,
      cx: 0,
      cy: 0,
      width: 0,
      height: 0,
      r: 0,
      rx: 0,
      ry: 0,
      offset: 0,
      "stop-opacity": 1,
      "stop-color": "#000000",
      "font-size": 16,
      "font-family": "Helvetica, Arial, sans-serif",
      "text-anchor": "start"
    }
  }, a.Color = function (t) {
    var e, s;
    this.r = 0, this.g = 0, this.b = 0, t && ("string" == typeof t ? a.regex.isRgb.test(t) ? (e = a.regex.rgb.exec(t.replace(a.regex.whitespace, "")), this.r = parseInt(e[1]), this.g = parseInt(e[2]), this.b = parseInt(e[3])) : a.regex.isHex.test(t) && (e = a.regex.hex.exec(4 == (s = t).length ? ["#", s.substring(1, 2), s.substring(1, 2), s.substring(2, 3), s.substring(2, 3), s.substring(3, 4), s.substring(3, 4)].join("") : s), this.r = parseInt(e[1], 16), this.g = parseInt(e[2], 16), this.b = parseInt(e[3], 16)) : "object" === i(t) && (this.r = t.r, this.g = t.g, this.b = t.b));
  }, a.extend(a.Color, {
    toString: function () {
      return this.toHex();
    },
    toHex: function () {
      return "#" + g(this.r) + g(this.g) + g(this.b);
    },
    toRgb: function () {
      return "rgb(" + [this.r, this.g, this.b].join() + ")";
    },
    brightness: function () {
      return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11;
    },
    morph: function (t) {
      return this.destination = new a.Color(t), this;
    },
    at: function (t) {
      return this.destination ? (t = t < 0 ? 0 : t > 1 ? 1 : t, new a.Color({
        r: ~~(this.r + (this.destination.r - this.r) * t),
        g: ~~(this.g + (this.destination.g - this.g) * t),
        b: ~~(this.b + (this.destination.b - this.b) * t)
      })) : this;
    }
  }), a.Color.test = function (t) {
    return t += "", a.regex.isHex.test(t) || a.regex.isRgb.test(t);
  }, a.Color.isRgb = function (t) {
    return t && "number" == typeof t.r && "number" == typeof t.g && "number" == typeof t.b;
  }, a.Color.isColor = function (t) {
    return a.Color.isRgb(t) || a.Color.test(t);
  }, a.Array = function (t, e) {
    0 == (t = (t || []).valueOf()).length && e && (t = e.valueOf()), this.value = this.parse(t);
  }, a.extend(a.Array, {
    toString: function () {
      return this.value.join(" ");
    },
    valueOf: function () {
      return this.value;
    },
    parse: function (t) {
      return t = t.valueOf(), Array.isArray(t) ? t : this.split(t);
    }
  }), a.PointArray = function (t, e) {
    a.Array.call(this, t, e || [[0, 0]]);
  }, a.PointArray.prototype = new a.Array(), a.PointArray.prototype.constructor = a.PointArray;
  for (var s = {
      M: function (t, e, i) {
        return e.x = i.x = t[0], e.y = i.y = t[1], ["M", e.x, e.y];
      },
      L: function (t, e) {
        return e.x = t[0], e.y = t[1], ["L", t[0], t[1]];
      },
      H: function (t, e) {
        return e.x = t[0], ["H", t[0]];
      },
      V: function (t, e) {
        return e.y = t[0], ["V", t[0]];
      },
      C: function (t, e) {
        return e.x = t[4], e.y = t[5], ["C", t[0], t[1], t[2], t[3], t[4], t[5]];
      },
      Q: function (t, e) {
        return e.x = t[2], e.y = t[3], ["Q", t[0], t[1], t[2], t[3]];
      },
      S: function (t, e) {
        return e.x = t[2], e.y = t[3], ["S", t[0], t[1], t[2], t[3]];
      },
      Z: function (t, e, i) {
        return e.x = i.x, e.y = i.y, ["Z"];
      }
    }, r = "mlhvqtcsaz".split(""), o = 0, n = r.length; o < n; ++o) s[r[o]] = function (t) {
    return function (e, i, a) {
      if ("H" == t) e[0] = e[0] + i.x;else if ("V" == t) e[0] = e[0] + i.y;else if ("A" == t) e[5] = e[5] + i.x, e[6] = e[6] + i.y;else for (var r = 0, o = e.length; r < o; ++r) e[r] = e[r] + (r % 2 ? i.y : i.x);
      if (s && "function" == typeof s[t]) return s[t](e, i, a);
    };
  }(r[o].toUpperCase());
  a.PathArray = function (t, e) {
    a.Array.call(this, t, e || [["M", 0, 0]]);
  }, a.PathArray.prototype = new a.Array(), a.PathArray.prototype.constructor = a.PathArray, a.extend(a.PathArray, {
    toString: function () {
      return function (t) {
        for (var e = 0, i = t.length, a = ""; e < i; e++) a += t[e][0], null != t[e][1] && (a += t[e][1], null != t[e][2] && (a += " ", a += t[e][2], null != t[e][3] && (a += " ", a += t[e][3], a += " ", a += t[e][4], null != t[e][5] && (a += " ", a += t[e][5], a += " ", a += t[e][6], null != t[e][7] && (a += " ", a += t[e][7])))));
        return a + " ";
      }(this.value);
    },
    move: function (t, e) {
      var i = this.bbox();
      return i.x, i.y, this;
    },
    at: function (t) {
      if (!this.destination) return this;
      for (var e = this.value, i = this.destination.value, s = [], r = new a.PathArray(), o = 0, n = e.length; o < n; o++) {
        s[o] = [e[o][0]];
        for (var l = 1, h = e[o].length; l < h; l++) s[o][l] = e[o][l] + (i[o][l] - e[o][l]) * t;
        "A" === s[o][0] && (s[o][4] = +(0 != s[o][4]), s[o][5] = +(0 != s[o][5]));
      }
      return r.value = s, r;
    },
    parse: function (t) {
      if (t instanceof a.PathArray) return t.valueOf();
      var e,
        i = {
          M: 2,
          L: 2,
          H: 1,
          V: 1,
          C: 6,
          S: 4,
          Q: 4,
          T: 2,
          A: 7,
          Z: 0
        };
      t = "string" == typeof t ? t.replace(a.regex.numbersWithDots, h).replace(a.regex.pathLetters, " $& ").replace(a.regex.hyphen, "$1 -").trim().split(a.regex.delimiter) : t.reduce(function (t, e) {
        return [].concat.call(t, e);
      }, []);
      var r = [],
        o = new a.Point(),
        n = new a.Point(),
        l = 0,
        c = t.length;
      do {
        a.regex.isPathLetter.test(t[l]) ? (e = t[l], ++l) : "M" == e ? e = "L" : "m" == e && (e = "l"), r.push(s[e].call(null, t.slice(l, l += i[e.toUpperCase()]).map(parseFloat), o, n));
      } while (c > l);
      return r;
    },
    bbox: function () {
      return a.parser.draw || a.prepare(), a.parser.path.setAttribute("d", this.toString()), a.parser.path.getBBox();
    }
  }), a.Number = a.invent({
    create: function (t, e) {
      this.value = 0, this.unit = e || "", "number" == typeof t ? this.value = isNaN(t) ? 0 : isFinite(t) ? t : t < 0 ? -34e37 : 34e37 : "string" == typeof t ? (e = t.match(a.regex.numberAndUnit)) && (this.value = parseFloat(e[1]), "%" == e[5] ? this.value /= 100 : "s" == e[5] && (this.value *= 1e3), this.unit = e[5]) : t instanceof a.Number && (this.value = t.valueOf(), this.unit = t.unit);
    },
    extend: {
      toString: function () {
        return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit;
      },
      toJSON: function () {
        return this.toString();
      },
      valueOf: function () {
        return this.value;
      },
      plus: function (t) {
        return t = new a.Number(t), new a.Number(this + t, this.unit || t.unit);
      },
      minus: function (t) {
        return t = new a.Number(t), new a.Number(this - t, this.unit || t.unit);
      },
      times: function (t) {
        return t = new a.Number(t), new a.Number(this * t, this.unit || t.unit);
      },
      divide: function (t) {
        return t = new a.Number(t), new a.Number(this / t, this.unit || t.unit);
      },
      to: function (t) {
        var e = new a.Number(this);
        return "string" == typeof t && (e.unit = t), e;
      },
      morph: function (t) {
        return this.destination = new a.Number(t), t.relative && (this.destination.value += this.value), this;
      },
      at: function (t) {
        return this.destination ? new a.Number(this.destination).minus(this).times(t).plus(this) : this;
      }
    }
  }), a.Element = a.invent({
    create: function (t) {
      this._stroke = a.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = t) && (this.type = t.nodeName, this.node.instance = this, this._stroke = t.getAttribute("stroke") || this._stroke);
    },
    extend: {
      x: function (t) {
        return this.attr("x", t);
      },
      y: function (t) {
        return this.attr("y", t);
      },
      cx: function (t) {
        return null == t ? this.x() + this.width() / 2 : this.x(t - this.width() / 2);
      },
      cy: function (t) {
        return null == t ? this.y() + this.height() / 2 : this.y(t - this.height() / 2);
      },
      move: function (t, e) {
        return this.x(t).y(e);
      },
      center: function (t, e) {
        return this.cx(t).cy(e);
      },
      width: function (t) {
        return this.attr("width", t);
      },
      height: function (t) {
        return this.attr("height", t);
      },
      size: function (t, e) {
        var i = u(this, t, e);
        return this.width(new a.Number(i.width)).height(new a.Number(i.height));
      },
      clone: function (t) {
        this.writeDataToDom();
        var e = x(this.node.cloneNode(!0));
        return t ? t.add(e) : this.after(e), e;
      },
      remove: function () {
        return this.parent() && this.parent().removeElement(this), this;
      },
      replace: function (t) {
        return this.after(t).remove(), t;
      },
      addTo: function (t) {
        return t.put(this);
      },
      putIn: function (t) {
        return t.add(this);
      },
      id: function (t) {
        return this.attr("id", t);
      },
      show: function () {
        return this.style("display", "");
      },
      hide: function () {
        return this.style("display", "none");
      },
      visible: function () {
        return "none" != this.style("display");
      },
      toString: function () {
        return this.attr("id");
      },
      classes: function () {
        var t = this.attr("class");
        return null == t ? [] : t.trim().split(a.regex.delimiter);
      },
      hasClass: function (t) {
        return -1 != this.classes().indexOf(t);
      },
      addClass: function (t) {
        if (!this.hasClass(t)) {
          var e = this.classes();
          e.push(t), this.attr("class", e.join(" "));
        }
        return this;
      },
      removeClass: function (t) {
        return this.hasClass(t) && this.attr("class", this.classes().filter(function (e) {
          return e != t;
        }).join(" ")), this;
      },
      toggleClass: function (t) {
        return this.hasClass(t) ? this.removeClass(t) : this.addClass(t);
      },
      reference: function (t) {
        return a.get(this.attr(t));
      },
      parent: function (e) {
        var i = this;
        if (!i.node.parentNode) return null;
        if (i = a.adopt(i.node.parentNode), !e) return i;
        for (; i && i.node instanceof t.SVGElement;) {
          if ("string" == typeof e ? i.matches(e) : i instanceof e) return i;
          if (!i.node.parentNode || "#document" == i.node.parentNode.nodeName) return null;
          i = a.adopt(i.node.parentNode);
        }
      },
      doc: function () {
        return this instanceof a.Doc ? this : this.parent(a.Doc);
      },
      parents: function (t) {
        var e = [],
          i = this;
        do {
          if (!(i = i.parent(t)) || !i.node) break;
          e.push(i);
        } while (i.parent);
        return e;
      },
      matches: function (t) {
        return function (t, e) {
          return (t.matches || t.matchesSelector || t.msMatchesSelector || t.mozMatchesSelector || t.webkitMatchesSelector || t.oMatchesSelector).call(t, e);
        }(this.node, t);
      },
      native: function () {
        return this.node;
      },
      svg: function (t) {
        var i = e.createElement("svg");
        if (!(t && this instanceof a.Parent)) return i.appendChild(t = e.createElement("svg")), this.writeDataToDom(), t.appendChild(this.node.cloneNode(!0)), i.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
        i.innerHTML = "<svg>" + t.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
        for (var s = 0, r = i.firstChild.childNodes.length; s < r; s++) this.node.appendChild(i.firstChild.firstChild);
        return this;
      },
      writeDataToDom: function () {
        return (this.each || this.lines) && (this.each ? this : this.lines()).each(function () {
          this.writeDataToDom();
        }), this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this;
      },
      setData: function (t) {
        return this.dom = t, this;
      },
      is: function (t) {
        return function (t, e) {
          return t instanceof e;
        }(this, t);
      }
    }
  }), a.easing = {
    "-": function (t) {
      return t;
    },
    "<>": function (t) {
      return -Math.cos(t * Math.PI) / 2 + .5;
    },
    ">": function (t) {
      return Math.sin(t * Math.PI / 2);
    },
    "<": function (t) {
      return 1 - Math.cos(t * Math.PI / 2);
    }
  }, a.morph = function (t) {
    return function (e, i) {
      return new a.MorphObj(e, i).at(t);
    };
  }, a.Situation = a.invent({
    create: function (t) {
      this.init = !1, this.reversed = !1, this.reversing = !1, this.duration = new a.Number(t.duration).valueOf(), this.delay = new a.Number(t.delay).valueOf(), this.start = +new Date() + this.delay, this.finish = this.start + this.duration, this.ease = t.ease, this.loop = 0, this.loops = !1, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {};
    }
  }), a.FX = a.invent({
    create: function (t) {
      this._target = t, this.situations = [], this.active = !1, this.situation = null, this.paused = !1, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1;
    },
    extend: {
      animate: function (t, e, s) {
        "object" === i(t) && (e = t.ease, s = t.delay, t = t.duration);
        var r = new a.Situation({
          duration: t || 1e3,
          delay: s || 0,
          ease: a.easing[e || "-"] || e
        });
        return this.queue(r), this;
      },
      target: function (t) {
        return t && t instanceof a.Element ? (this._target = t, this) : this._target;
      },
      timeToAbsPos: function (t) {
        return (t - this.situation.start) / (this.situation.duration / this._speed);
      },
      absPosToTime: function (t) {
        return this.situation.duration / this._speed * t + this.situation.start;
      },
      startAnimFrame: function () {
        this.stopAnimFrame(), this.animationFrame = t.requestAnimationFrame(function () {
          this.step();
        }.bind(this));
      },
      stopAnimFrame: function () {
        t.cancelAnimationFrame(this.animationFrame);
      },
      start: function () {
        return !this.active && this.situation && (this.active = !0, this.startCurrent()), this;
      },
      startCurrent: function () {
        return this.situation.start = +new Date() + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step();
      },
      queue: function (t) {
        return ("function" == typeof t || t instanceof a.Situation) && this.situations.push(t), this.situation || (this.situation = this.situations.shift()), this;
      },
      dequeue: function () {
        return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof a.Situation ? this.start() : this.situation.call(this)), this;
      },
      initAnimations: function () {
        var t,
          e = this.situation;
        if (e.init) return this;
        for (var i in e.animations) {
          t = this.target()[i](), Array.isArray(t) || (t = [t]), Array.isArray(e.animations[i]) || (e.animations[i] = [e.animations[i]]);
          for (var s = t.length; s--;) e.animations[i][s] instanceof a.Number && (t[s] = new a.Number(t[s])), e.animations[i][s] = t[s].morph(e.animations[i][s]);
        }
        for (var i in e.attrs) e.attrs[i] = new a.MorphObj(this.target().attr(i), e.attrs[i]);
        for (var i in e.styles) e.styles[i] = new a.MorphObj(this.target().style(i), e.styles[i]);
        return e.initialTransformation = this.target().matrixify(), e.init = !0, this;
      },
      clearQueue: function () {
        return this.situations = [], this;
      },
      clearCurrent: function () {
        return this.situation = null, this;
      },
      stop: function (t, e) {
        var i = this.active;
        return this.active = !1, e && this.clearQueue(), t && this.situation && (!i && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent();
      },
      after: function (t) {
        var e = this.last();
        return this.target().on("finished.fx", function i(a) {
          a.detail.situation == e && (t.call(this, e), this.off("finished.fx", i));
        }), this._callStart();
      },
      during: function (t) {
        var e = this.last(),
          i = function (i) {
            i.detail.situation == e && t.call(this, i.detail.pos, a.morph(i.detail.pos), i.detail.eased, e);
          };
        return this.target().off("during.fx", i).on("during.fx", i), this.after(function () {
          this.off("during.fx", i);
        }), this._callStart();
      },
      afterAll: function (t) {
        var e = function e(i) {
          t.call(this), this.off("allfinished.fx", e);
        };
        return this.target().off("allfinished.fx", e).on("allfinished.fx", e), this._callStart();
      },
      last: function () {
        return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;
      },
      add: function (t, e, i) {
        return this.last()[i || "animations"][t] = e, this._callStart();
      },
      step: function (t) {
        var e, i, a;
        t || (this.absPos = this.timeToAbsPos(+new Date())), !1 !== this.situation.loops ? (e = Math.max(this.absPos, 0), i = Math.floor(e), !0 === this.situation.loops || i < this.situation.loops ? (this.pos = e - i, a = this.situation.loop, this.situation.loop = i) : (this.absPos = this.situation.loops, this.pos = 1, a = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - a) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos), this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
        var s = this.situation.ease(this.pos);
        for (var r in this.situation.once) r > this.lastPos && r <= s && (this.situation.once[r].call(this.target(), this.pos, s), delete this.situation.once[r]);
        return this.active && this.target().fire("during", {
          pos: this.pos,
          eased: s,
          fx: this,
          situation: this.situation
        }), this.situation ? (this.eachAt(), 1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(), this.target().fire("finished", {
          fx: this,
          situation: this.situation
        }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = !1)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = s, this) : this;
      },
      eachAt: function () {
        var t,
          e = this,
          i = this.target(),
          s = this.situation;
        for (var r in s.animations) t = [].concat(s.animations[r]).map(function (t) {
          return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
        }), i[r].apply(i, t);
        for (var r in s.attrs) t = [r].concat(s.attrs[r]).map(function (t) {
          return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
        }), i.attr.apply(i, t);
        for (var r in s.styles) t = [r].concat(s.styles[r]).map(function (t) {
          return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
        }), i.style.apply(i, t);
        if (s.transforms.length) {
          t = s.initialTransformation, r = 0;
          for (var o = s.transforms.length; r < o; r++) {
            var n = s.transforms[r];
            n instanceof a.Matrix ? t = n.relative ? t.multiply(new a.Matrix().morph(n).at(s.ease(this.pos))) : t.morph(n).at(s.ease(this.pos)) : (n.relative || n.undo(t.extract()), t = t.multiply(n.at(s.ease(this.pos))));
          }
          i.matrix(t);
        }
        return this;
      },
      once: function (t, e, i) {
        var a = this.last();
        return i || (t = a.ease(t)), a.once[t] = e, this;
      },
      _callStart: function () {
        return setTimeout(function () {
          this.start();
        }.bind(this), 0), this;
      }
    },
    parent: a.Element,
    construct: {
      animate: function (t, e, i) {
        return (this.fx || (this.fx = new a.FX(this))).animate(t, e, i);
      },
      delay: function (t) {
        return (this.fx || (this.fx = new a.FX(this))).delay(t);
      },
      stop: function (t, e) {
        return this.fx && this.fx.stop(t, e), this;
      },
      finish: function () {
        return this.fx && this.fx.finish(), this;
      }
    }
  }), a.MorphObj = a.invent({
    create: function (t, e) {
      return a.Color.isColor(e) ? new a.Color(t).morph(e) : a.regex.delimiter.test(t) ? a.regex.pathLetters.test(t) ? new a.PathArray(t).morph(e) : new a.Array(t).morph(e) : a.regex.numberAndUnit.test(e) ? new a.Number(t).morph(e) : (this.value = t, void (this.destination = e));
    },
    extend: {
      at: function (t, e) {
        return e < 1 ? this.value : this.destination;
      },
      valueOf: function () {
        return this.value;
      }
    }
  }), a.extend(a.FX, {
    attr: function (t, e, a) {
      if ("object" === i(t)) for (var s in t) this.attr(s, t[s]);else this.add(t, e, "attrs");
      return this;
    },
    plot: function (t, e, i, a) {
      return 4 == arguments.length ? this.plot([t, e, i, a]) : this.add("plot", new (this.target().morphArray)(t));
    }
  }), a.Box = a.invent({
    create: function (t, e, s, r) {
      if (!("object" !== i(t) || t instanceof a.Element)) return a.Box.call(this, null != t.left ? t.left : t.x, null != t.top ? t.top : t.y, t.width, t.height);
      var o;
      4 == arguments.length && (this.x = t, this.y = e, this.width = s, this.height = r), null == (o = this).x && (o.x = 0, o.y = 0, o.width = 0, o.height = 0), o.w = o.width, o.h = o.height, o.x2 = o.x + o.width, o.y2 = o.y + o.height, o.cx = o.x + o.width / 2, o.cy = o.y + o.height / 2;
    }
  }), a.BBox = a.invent({
    create: function (t) {
      if (a.Box.apply(this, [].slice.call(arguments)), t instanceof a.Element) {
        var i;
        try {
          if (!e.documentElement.contains) {
            for (var s = t.node; s.parentNode;) s = s.parentNode;
            if (s != e) throw new Error("Element not in the dom");
          }
          i = t.node.getBBox();
        } catch (e) {
          if (t instanceof a.Shape) {
            a.parser.draw || a.prepare();
            var r = t.clone(a.parser.draw.instance).show();
            r && r.node && "function" == typeof r.node.getBBox && (i = r.node.getBBox()), r && "function" == typeof r.remove && r.remove();
          } else i = {
            x: t.node.clientLeft,
            y: t.node.clientTop,
            width: t.node.clientWidth,
            height: t.node.clientHeight
          };
        }
        a.Box.call(this, i);
      }
    },
    inherit: a.Box,
    parent: a.Element,
    construct: {
      bbox: function () {
        return new a.BBox(this);
      }
    }
  }), a.BBox.prototype.constructor = a.BBox, a.Matrix = a.invent({
    create: function (t) {
      var e = f([1, 0, 0, 1, 0, 0]);
      t = null === t ? e : t instanceof a.Element ? t.matrixify() : "string" == typeof t ? f(t.split(a.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? f([].slice.call(arguments)) : Array.isArray(t) ? f(t) : t && "object" === i(t) ? t : e;
      for (var s = v.length - 1; s >= 0; --s) this[v[s]] = null != t[v[s]] ? t[v[s]] : e[v[s]];
    },
    extend: {
      extract: function () {
        var t = p(this, 0, 1);
        p(this, 1, 0);
        var e = 180 / Math.PI * Math.atan2(t.y, t.x) - 90;
        return {
          x: this.e,
          y: this.f,
          transformedX: (this.e * Math.cos(e * Math.PI / 180) + this.f * Math.sin(e * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
          transformedY: (this.f * Math.cos(e * Math.PI / 180) + this.e * Math.sin(-e * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
          rotation: e,
          a: this.a,
          b: this.b,
          c: this.c,
          d: this.d,
          e: this.e,
          f: this.f,
          matrix: new a.Matrix(this)
        };
      },
      clone: function () {
        return new a.Matrix(this);
      },
      morph: function (t) {
        return this.destination = new a.Matrix(t), this;
      },
      multiply: function (t) {
        return new a.Matrix(this.native().multiply(function (t) {
          return t instanceof a.Matrix || (t = new a.Matrix(t)), t;
        }(t).native()));
      },
      inverse: function () {
        return new a.Matrix(this.native().inverse());
      },
      translate: function (t, e) {
        return new a.Matrix(this.native().translate(t || 0, e || 0));
      },
      native: function () {
        for (var t = a.parser.native.createSVGMatrix(), e = v.length - 1; e >= 0; e--) t[v[e]] = this[v[e]];
        return t;
      },
      toString: function () {
        return "matrix(" + b(this.a) + "," + b(this.b) + "," + b(this.c) + "," + b(this.d) + "," + b(this.e) + "," + b(this.f) + ")";
      }
    },
    parent: a.Element,
    construct: {
      ctm: function () {
        return new a.Matrix(this.node.getCTM());
      },
      screenCTM: function () {
        if (this instanceof a.Nested) {
          var t = this.rect(1, 1),
            e = t.node.getScreenCTM();
          return t.remove(), new a.Matrix(e);
        }
        return new a.Matrix(this.node.getScreenCTM());
      }
    }
  }), a.Point = a.invent({
    create: function (t, e) {
      var a;
      a = Array.isArray(t) ? {
        x: t[0],
        y: t[1]
      } : "object" === i(t) ? {
        x: t.x,
        y: t.y
      } : null != t ? {
        x: t,
        y: null != e ? e : t
      } : {
        x: 0,
        y: 0
      }, this.x = a.x, this.y = a.y;
    },
    extend: {
      clone: function () {
        return new a.Point(this);
      },
      morph: function (t, e) {
        return this.destination = new a.Point(t, e), this;
      }
    }
  }), a.extend(a.Element, {
    point: function (t, e) {
      return new a.Point(t, e).transform(this.screenCTM().inverse());
    }
  }), a.extend(a.Element, {
    attr: function (t, e, s) {
      if (null == t) {
        for (t = {}, s = (e = this.node.attributes).length - 1; s >= 0; s--) t[e[s].nodeName] = a.regex.isNumber.test(e[s].nodeValue) ? parseFloat(e[s].nodeValue) : e[s].nodeValue;
        return t;
      }
      if ("object" === i(t)) for (var r in t) this.attr(r, t[r]);else if (null === e) this.node.removeAttribute(t);else {
        if (null == e) return null == (e = this.node.getAttribute(t)) ? a.defaults.attrs[t] : a.regex.isNumber.test(e) ? parseFloat(e) : e;
        "stroke-width" == t ? this.attr("stroke", parseFloat(e) > 0 ? this._stroke : null) : "stroke" == t && (this._stroke = e), "fill" != t && "stroke" != t || (a.regex.isImage.test(e) && (e = this.doc().defs().image(e, 0, 0)), e instanceof a.Image && (e = this.doc().defs().pattern(0, 0, function () {
          this.add(e);
        }))), "number" == typeof e ? e = new a.Number(e) : a.Color.isColor(e) ? e = new a.Color(e) : Array.isArray(e) && (e = new a.Array(e)), "leading" == t ? this.leading && this.leading(e) : "string" == typeof s ? this.node.setAttributeNS(s, t, e.toString()) : this.node.setAttribute(t, e.toString()), !this.rebuild || "font-size" != t && "x" != t || this.rebuild(t, e);
      }
      return this;
    }
  }), a.extend(a.Element, {
    transform: function (t, e) {
      var s;
      return "object" !== i(t) ? (s = new a.Matrix(this).extract(), "string" == typeof t ? s[t] : s) : (s = new a.Matrix(this), e = !!e || !!t.relative, null != t.a && (s = e ? s.multiply(new a.Matrix(t)) : new a.Matrix(t)), this.attr("transform", s));
    }
  }), a.extend(a.Element, {
    untransform: function () {
      return this.attr("transform", null);
    },
    matrixify: function () {
      return (this.attr("transform") || "").split(a.regex.transforms).slice(0, -1).map(function (t) {
        var e = t.trim().split("(");
        return [e[0], e[1].split(a.regex.delimiter).map(function (t) {
          return parseFloat(t);
        })];
      }).reduce(function (t, e) {
        return "matrix" == e[0] ? t.multiply(f(e[1])) : t[e[0]].apply(t, e[1]);
      }, new a.Matrix());
    },
    toParent: function (t) {
      if (this == t) return this;
      var e = this.screenCTM(),
        i = t.screenCTM().inverse();
      return this.addTo(t).untransform().transform(i.multiply(e)), this;
    },
    toDoc: function () {
      return this.toParent(this.doc());
    }
  }), a.Transformation = a.invent({
    create: function (t, e) {
      if (arguments.length > 1 && "boolean" != typeof e) return this.constructor.call(this, [].slice.call(arguments));
      if (Array.isArray(t)) for (var a = 0, s = this.arguments.length; a < s; ++a) this[this.arguments[a]] = t[a];else if (t && "object" === i(t)) for (a = 0, s = this.arguments.length; a < s; ++a) this[this.arguments[a]] = t[this.arguments[a]];
      this.inversed = !1, !0 === e && (this.inversed = !0);
    }
  }), a.Translate = a.invent({
    parent: a.Matrix,
    inherit: a.Transformation,
    create: function (t, e) {
      this.constructor.apply(this, [].slice.call(arguments));
    },
    extend: {
      arguments: ["transformedX", "transformedY"],
      method: "translate"
    }
  }), a.extend(a.Element, {
    style: function (t, e) {
      if (0 == arguments.length) return this.node.style.cssText || "";
      if (arguments.length < 2) {
        if ("object" === i(t)) for (var s in t) this.style(s, t[s]);else {
          if (!a.regex.isCss.test(t)) return this.node.style[c(t)];
          for (t = t.split(/\s*;\s*/).filter(function (t) {
            return !!t;
          }).map(function (t) {
            return t.split(/\s*:\s*/);
          }); e = t.pop();) this.style(e[0], e[1]);
        }
      } else this.node.style[c(t)] = null === e || a.regex.isBlank.test(e) ? "" : e;
      return this;
    }
  }), a.Parent = a.invent({
    create: function (t) {
      this.constructor.call(this, t);
    },
    inherit: a.Element,
    extend: {
      children: function () {
        return a.utils.map(a.utils.filterSVGElements(this.node.childNodes), function (t) {
          return a.adopt(t);
        });
      },
      add: function (t, e) {
        return null == e ? this.node.appendChild(t.node) : t.node != this.node.childNodes[e] && this.node.insertBefore(t.node, this.node.childNodes[e]), this;
      },
      put: function (t, e) {
        return this.add(t, e), t;
      },
      has: function (t) {
        return this.index(t) >= 0;
      },
      index: function (t) {
        return [].slice.call(this.node.childNodes).indexOf(t.node);
      },
      get: function (t) {
        return a.adopt(this.node.childNodes[t]);
      },
      first: function () {
        return this.get(0);
      },
      last: function () {
        return this.get(this.node.childNodes.length - 1);
      },
      each: function (t, e) {
        for (var i = this.children(), s = 0, r = i.length; s < r; s++) i[s] instanceof a.Element && t.apply(i[s], [s, i]), e && i[s] instanceof a.Container && i[s].each(t, e);
        return this;
      },
      removeElement: function (t) {
        return this.node.removeChild(t.node), this;
      },
      clear: function () {
        for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
        return delete this._defs, this;
      },
      defs: function () {
        return this.doc().defs();
      }
    }
  }), a.extend(a.Parent, {
    ungroup: function (t, e) {
      return 0 === e || this instanceof a.Defs || this.node == a.parser.draw || (t = t || (this instanceof a.Doc ? this : this.parent(a.Parent)), e = e || 1 / 0, this.each(function () {
        return this instanceof a.Defs ? this : this instanceof a.Parent ? this.ungroup(t, e - 1) : this.toParent(t);
      }), this.node.firstChild || this.remove()), this;
    },
    flatten: function (t, e) {
      return this.ungroup(t, e);
    }
  }), a.Container = a.invent({
    create: function (t) {
      this.constructor.call(this, t);
    },
    inherit: a.Parent
  }), a.ViewBox = a.invent({
    parent: a.Container,
    construct: {}
  }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function (t) {
    a.Element.prototype[t] = function (e) {
      return a.on(this.node, t, e), this;
    };
  }), a.listeners = [], a.handlerMap = [], a.listenerId = 0, a.on = function (t, e, i, s, r) {
    var o = i.bind(s || t.instance || t),
      n = (a.handlerMap.indexOf(t) + 1 || a.handlerMap.push(t)) - 1,
      l = e.split(".")[0],
      h = e.split(".")[1] || "*";
    a.listeners[n] = a.listeners[n] || {}, a.listeners[n][l] = a.listeners[n][l] || {}, a.listeners[n][l][h] = a.listeners[n][l][h] || {}, i._svgjsListenerId || (i._svgjsListenerId = ++a.listenerId), a.listeners[n][l][h][i._svgjsListenerId] = o, t.addEventListener(l, o, r || {
      passive: !0
    });
  }, a.off = function (t, e, i) {
    var s = a.handlerMap.indexOf(t),
      r = e && e.split(".")[0],
      o = e && e.split(".")[1],
      n = "";
    if (-1 != s) if (i) {
      if ("function" == typeof i && (i = i._svgjsListenerId), !i) return;
      a.listeners[s][r] && a.listeners[s][r][o || "*"] && (t.removeEventListener(r, a.listeners[s][r][o || "*"][i], !1), delete a.listeners[s][r][o || "*"][i]);
    } else if (o && r) {
      if (a.listeners[s][r] && a.listeners[s][r][o]) {
        for (var l in a.listeners[s][r][o]) a.off(t, [r, o].join("."), l);
        delete a.listeners[s][r][o];
      }
    } else if (o) for (var h in a.listeners[s]) for (var n in a.listeners[s][h]) o === n && a.off(t, [h, o].join("."));else if (r) {
      if (a.listeners[s][r]) {
        for (var n in a.listeners[s][r]) a.off(t, [r, n].join("."));
        delete a.listeners[s][r];
      }
    } else {
      for (var h in a.listeners[s]) a.off(t, h);
      delete a.listeners[s], delete a.handlerMap[s];
    }
  }, a.extend(a.Element, {
    on: function (t, e, i, s) {
      return a.on(this.node, t, e, i, s), this;
    },
    off: function (t, e) {
      return a.off(this.node, t, e), this;
    },
    fire: function (e, i) {
      return e instanceof t.Event ? this.node.dispatchEvent(e) : this.node.dispatchEvent(e = new a.CustomEvent(e, {
        detail: i,
        cancelable: !0
      })), this._event = e, this;
    },
    event: function () {
      return this._event;
    }
  }), a.Defs = a.invent({
    create: "defs",
    inherit: a.Container
  }), a.G = a.invent({
    create: "g",
    inherit: a.Container,
    extend: {
      x: function (t) {
        return null == t ? this.transform("x") : this.transform({
          x: t - this.x()
        }, !0);
      }
    },
    construct: {
      group: function () {
        return this.put(new a.G());
      }
    }
  }), a.Doc = a.invent({
    create: function (t) {
      t && ("svg" == (t = "string" == typeof t ? e.getElementById(t) : t).nodeName ? this.constructor.call(this, t) : (this.constructor.call(this, a.create("svg")), t.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs());
    },
    inherit: a.Container,
    extend: {
      namespace: function () {
        return this.attr({
          xmlns: a.ns,
          version: "1.1"
        }).attr("xmlns:xlink", a.xlink, a.xmlns).attr("xmlns:svgjs", a.svgjs, a.xmlns);
      },
      defs: function () {
        var t;
        return this._defs || ((t = this.node.getElementsByTagName("defs")[0]) ? this._defs = a.adopt(t) : this._defs = new a.Defs(), this.node.appendChild(this._defs.node)), this._defs;
      },
      parent: function () {
        return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null;
      },
      remove: function () {
        return this.parent() && this.parent().removeChild(this.node), this;
      },
      clear: function () {
        for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
        return delete this._defs, a.parser.draw && !a.parser.draw.parentNode && this.node.appendChild(a.parser.draw), this;
      },
      clone: function (t) {
        this.writeDataToDom();
        var e = this.node,
          i = x(e.cloneNode(!0));
        return t ? (t.node || t).appendChild(i.node) : e.parentNode.insertBefore(i.node, e.nextSibling), i;
      }
    }
  }), a.extend(a.Element, {}), a.Gradient = a.invent({
    create: function (t) {
      this.constructor.call(this, a.create(t + "Gradient")), this.type = t;
    },
    inherit: a.Container,
    extend: {
      at: function (t, e, i) {
        return this.put(new a.Stop()).update(t, e, i);
      },
      update: function (t) {
        return this.clear(), "function" == typeof t && t.call(this, this), this;
      },
      fill: function () {
        return "url(#" + this.id() + ")";
      },
      toString: function () {
        return this.fill();
      },
      attr: function (t, e, i) {
        return "transform" == t && (t = "gradientTransform"), a.Container.prototype.attr.call(this, t, e, i);
      }
    },
    construct: {
      gradient: function (t, e) {
        return this.defs().gradient(t, e);
      }
    }
  }), a.extend(a.Gradient, a.FX, {
    from: function (t, e) {
      return "radial" == (this._target || this).type ? this.attr({
        fx: new a.Number(t),
        fy: new a.Number(e)
      }) : this.attr({
        x1: new a.Number(t),
        y1: new a.Number(e)
      });
    },
    to: function (t, e) {
      return "radial" == (this._target || this).type ? this.attr({
        cx: new a.Number(t),
        cy: new a.Number(e)
      }) : this.attr({
        x2: new a.Number(t),
        y2: new a.Number(e)
      });
    }
  }), a.extend(a.Defs, {
    gradient: function (t, e) {
      return this.put(new a.Gradient(t)).update(e);
    }
  }), a.Stop = a.invent({
    create: "stop",
    inherit: a.Element,
    extend: {
      update: function (t) {
        return ("number" == typeof t || t instanceof a.Number) && (t = {
          offset: arguments[0],
          color: arguments[1],
          opacity: arguments[2]
        }), null != t.opacity && this.attr("stop-opacity", t.opacity), null != t.color && this.attr("stop-color", t.color), null != t.offset && this.attr("offset", new a.Number(t.offset)), this;
      }
    }
  }), a.Pattern = a.invent({
    create: "pattern",
    inherit: a.Container,
    extend: {
      fill: function () {
        return "url(#" + this.id() + ")";
      },
      update: function (t) {
        return this.clear(), "function" == typeof t && t.call(this, this), this;
      },
      toString: function () {
        return this.fill();
      },
      attr: function (t, e, i) {
        return "transform" == t && (t = "patternTransform"), a.Container.prototype.attr.call(this, t, e, i);
      }
    },
    construct: {
      pattern: function (t, e, i) {
        return this.defs().pattern(t, e, i);
      }
    }
  }), a.extend(a.Defs, {
    pattern: function (t, e, i) {
      return this.put(new a.Pattern()).update(i).attr({
        x: 0,
        y: 0,
        width: t,
        height: e,
        patternUnits: "userSpaceOnUse"
      });
    }
  }), a.Shape = a.invent({
    create: function (t) {
      this.constructor.call(this, t);
    },
    inherit: a.Element
  }), a.Symbol = a.invent({
    create: "symbol",
    inherit: a.Container,
    construct: {
      symbol: function () {
        return this.put(new a.Symbol());
      }
    }
  }), a.Use = a.invent({
    create: "use",
    inherit: a.Shape,
    extend: {
      element: function (t, e) {
        return this.attr("href", (e || "") + "#" + t, a.xlink);
      }
    },
    construct: {
      use: function (t, e) {
        return this.put(new a.Use()).element(t, e);
      }
    }
  }), a.Rect = a.invent({
    create: "rect",
    inherit: a.Shape,
    construct: {
      rect: function (t, e) {
        return this.put(new a.Rect()).size(t, e);
      }
    }
  }), a.Circle = a.invent({
    create: "circle",
    inherit: a.Shape,
    construct: {
      circle: function (t) {
        return this.put(new a.Circle()).rx(new a.Number(t).divide(2)).move(0, 0);
      }
    }
  }), a.extend(a.Circle, a.FX, {
    rx: function (t) {
      return this.attr("r", t);
    },
    ry: function (t) {
      return this.rx(t);
    }
  }), a.Ellipse = a.invent({
    create: "ellipse",
    inherit: a.Shape,
    construct: {
      ellipse: function (t, e) {
        return this.put(new a.Ellipse()).size(t, e).move(0, 0);
      }
    }
  }), a.extend(a.Ellipse, a.Rect, a.FX, {
    rx: function (t) {
      return this.attr("rx", t);
    },
    ry: function (t) {
      return this.attr("ry", t);
    }
  }), a.extend(a.Circle, a.Ellipse, {
    x: function (t) {
      return null == t ? this.cx() - this.rx() : this.cx(t + this.rx());
    },
    y: function (t) {
      return null == t ? this.cy() - this.ry() : this.cy(t + this.ry());
    },
    cx: function (t) {
      return null == t ? this.attr("cx") : this.attr("cx", t);
    },
    cy: function (t) {
      return null == t ? this.attr("cy") : this.attr("cy", t);
    },
    width: function (t) {
      return null == t ? 2 * this.rx() : this.rx(new a.Number(t).divide(2));
    },
    height: function (t) {
      return null == t ? 2 * this.ry() : this.ry(new a.Number(t).divide(2));
    },
    size: function (t, e) {
      var i = u(this, t, e);
      return this.rx(new a.Number(i.width).divide(2)).ry(new a.Number(i.height).divide(2));
    }
  }), a.Line = a.invent({
    create: "line",
    inherit: a.Shape,
    extend: {
      array: function () {
        return new a.PointArray([[this.attr("x1"), this.attr("y1")], [this.attr("x2"), this.attr("y2")]]);
      },
      plot: function (t, e, i, s) {
        return null == t ? this.array() : (t = void 0 !== e ? {
          x1: t,
          y1: e,
          x2: i,
          y2: s
        } : new a.PointArray(t).toLine(), this.attr(t));
      },
      move: function (t, e) {
        return this.attr(this.array().move(t, e).toLine());
      },
      size: function (t, e) {
        var i = u(this, t, e);
        return this.attr(this.array().size(i.width, i.height).toLine());
      }
    },
    construct: {
      line: function (t, e, i, s) {
        return a.Line.prototype.plot.apply(this.put(new a.Line()), null != t ? [t, e, i, s] : [0, 0, 0, 0]);
      }
    }
  }), a.Polyline = a.invent({
    create: "polyline",
    inherit: a.Shape,
    construct: {
      polyline: function (t) {
        return this.put(new a.Polyline()).plot(t || new a.PointArray());
      }
    }
  }), a.Polygon = a.invent({
    create: "polygon",
    inherit: a.Shape,
    construct: {
      polygon: function (t) {
        return this.put(new a.Polygon()).plot(t || new a.PointArray());
      }
    }
  }), a.extend(a.Polyline, a.Polygon, {
    array: function () {
      return this._array || (this._array = new a.PointArray(this.attr("points")));
    },
    plot: function (t) {
      return null == t ? this.array() : this.clear().attr("points", "string" == typeof t ? t : this._array = new a.PointArray(t));
    },
    clear: function () {
      return delete this._array, this;
    },
    move: function (t, e) {
      return this.attr("points", this.array().move(t, e));
    },
    size: function (t, e) {
      var i = u(this, t, e);
      return this.attr("points", this.array().size(i.width, i.height));
    }
  }), a.extend(a.Line, a.Polyline, a.Polygon, {
    morphArray: a.PointArray,
    x: function (t) {
      return null == t ? this.bbox().x : this.move(t, this.bbox().y);
    },
    y: function (t) {
      return null == t ? this.bbox().y : this.move(this.bbox().x, t);
    },
    width: function (t) {
      var e = this.bbox();
      return null == t ? e.width : this.size(t, e.height);
    },
    height: function (t) {
      var e = this.bbox();
      return null == t ? e.height : this.size(e.width, t);
    }
  }), a.Path = a.invent({
    create: "path",
    inherit: a.Shape,
    extend: {
      morphArray: a.PathArray,
      array: function () {
        return this._array || (this._array = new a.PathArray(this.attr("d")));
      },
      plot: function (t) {
        return null == t ? this.array() : this.clear().attr("d", "string" == typeof t ? t : this._array = new a.PathArray(t));
      },
      clear: function () {
        return delete this._array, this;
      }
    },
    construct: {
      path: function (t) {
        return this.put(new a.Path()).plot(t || new a.PathArray());
      }
    }
  }), a.Image = a.invent({
    create: "image",
    inherit: a.Shape,
    extend: {
      load: function (e) {
        if (!e) return this;
        var i = this,
          s = new t.Image();
        return a.on(s, "load", function () {
          a.off(s);
          var t = i.parent(a.Pattern);
          null !== t && (0 == i.width() && 0 == i.height() && i.size(s.width, s.height), t && 0 == t.width() && 0 == t.height() && t.size(i.width(), i.height()), "function" == typeof i._loaded && i._loaded.call(i, {
            width: s.width,
            height: s.height,
            ratio: s.width / s.height,
            url: e
          }));
        }), a.on(s, "error", function (t) {
          a.off(s), "function" == typeof i._error && i._error.call(i, t);
        }), this.attr("href", s.src = this.src = e, a.xlink);
      },
      loaded: function (t) {
        return this._loaded = t, this;
      },
      error: function (t) {
        return this._error = t, this;
      }
    },
    construct: {
      image: function (t, e, i) {
        return this.put(new a.Image()).load(t).size(e || 0, i || e || 0);
      }
    }
  }), a.Text = a.invent({
    create: function () {
      this.constructor.call(this, a.create("text")), this.dom.leading = new a.Number(1.3), this._rebuild = !0, this._build = !1, this.attr("font-family", a.defaults.attrs["font-family"]);
    },
    inherit: a.Shape,
    extend: {
      x: function (t) {
        return null == t ? this.attr("x") : this.attr("x", t);
      },
      text: function (t) {
        if (void 0 === t) {
          t = "";
          for (var e = this.node.childNodes, i = 0, s = e.length; i < s; ++i) 0 != i && 3 != e[i].nodeType && 1 == a.adopt(e[i]).dom.newLined && (t += "\n"), t += e[i].textContent;
          return t;
        }
        if (this.clear().build(!0), "function" == typeof t) t.call(this, this);else {
          i = 0;
          for (var r = (t = t.split("\n")).length; i < r; i++) this.tspan(t[i]).newLine();
        }
        return this.build(!1).rebuild();
      },
      size: function (t) {
        return this.attr("font-size", t).rebuild();
      },
      leading: function (t) {
        return null == t ? this.dom.leading : (this.dom.leading = new a.Number(t), this.rebuild());
      },
      lines: function () {
        var t = (this.textPath && this.textPath() || this).node,
          e = a.utils.map(a.utils.filterSVGElements(t.childNodes), function (t) {
            return a.adopt(t);
          });
        return new a.Set(e);
      },
      rebuild: function (t) {
        if ("boolean" == typeof t && (this._rebuild = t), this._rebuild) {
          var e = this,
            i = 0,
            s = this.dom.leading * new a.Number(this.attr("font-size"));
          this.lines().each(function () {
            this.dom.newLined && (e.textPath() || this.attr("x", e.attr("x")), "\n" == this.text() ? i += s : (this.attr("dy", s + i), i = 0));
          }), this.fire("rebuild");
        }
        return this;
      },
      build: function (t) {
        return this._build = !!t, this;
      },
      setData: function (t) {
        return this.dom = t, this.dom.leading = new a.Number(t.leading || 1.3), this;
      }
    },
    construct: {
      text: function (t) {
        return this.put(new a.Text()).text(t);
      },
      plain: function (t) {
        return this.put(new a.Text()).plain(t);
      }
    }
  }), a.Tspan = a.invent({
    create: "tspan",
    inherit: a.Shape,
    extend: {
      text: function (t) {
        return null == t ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof t ? t.call(this, this) : this.plain(t), this);
      },
      dx: function (t) {
        return this.attr("dx", t);
      },
      dy: function (t) {
        return this.attr("dy", t);
      },
      newLine: function () {
        var t = this.parent(a.Text);
        return this.dom.newLined = !0, this.dy(t.dom.leading * t.attr("font-size")).attr("x", t.x());
      }
    }
  }), a.extend(a.Text, a.Tspan, {
    plain: function (t) {
      return !1 === this._build && this.clear(), this.node.appendChild(e.createTextNode(t)), this;
    },
    tspan: function (t) {
      var e = (this.textPath && this.textPath() || this).node,
        i = new a.Tspan();
      return !1 === this._build && this.clear(), e.appendChild(i.node), i.text(t);
    },
    clear: function () {
      for (var t = (this.textPath && this.textPath() || this).node; t.hasChildNodes();) t.removeChild(t.lastChild);
      return this;
    },
    length: function () {
      return this.node.getComputedTextLength();
    }
  }), a.TextPath = a.invent({
    create: "textPath",
    inherit: a.Parent,
    parent: a.Text,
    construct: {
      morphArray: a.PathArray,
      array: function () {
        var t = this.track();
        return t ? t.array() : null;
      },
      plot: function (t) {
        var e = this.track(),
          i = null;
        return e && (i = e.plot(t)), null == t ? i : this;
      },
      track: function () {
        var t = this.textPath();
        if (t) return t.reference("href");
      },
      textPath: function () {
        if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName) return a.adopt(this.node.firstChild);
      }
    }
  }), a.Nested = a.invent({
    create: function () {
      this.constructor.call(this, a.create("svg")), this.style("overflow", "visible");
    },
    inherit: a.Container,
    construct: {
      nested: function () {
        return this.put(new a.Nested());
      }
    }
  });
  var l = {
    stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
    fill: ["color", "opacity", "rule"],
    prefix: function (t, e) {
      return "color" == e ? t : t + "-" + e;
    }
  };
  function h(t, e, i, s) {
    return i + s.replace(a.regex.dots, " .");
  }
  function c(t) {
    return t.toLowerCase().replace(/-(.)/g, function (t, e) {
      return e.toUpperCase();
    });
  }
  function d(t) {
    return t.charAt(0).toUpperCase() + t.slice(1);
  }
  function g(t) {
    var e = t.toString(16);
    return 1 == e.length ? "0" + e : e;
  }
  function u(t, e, i) {
    if (null == e || null == i) {
      var a = t.bbox();
      null == e ? e = a.width / a.height * i : null == i && (i = a.height / a.width * e);
    }
    return {
      width: e,
      height: i
    };
  }
  function p(t, e, i) {
    return {
      x: e * t.a + i * t.c + 0,
      y: e * t.b + i * t.d + 0
    };
  }
  function f(t) {
    return {
      a: t[0],
      b: t[1],
      c: t[2],
      d: t[3],
      e: t[4],
      f: t[5]
    };
  }
  function x(e) {
    for (var i = e.childNodes.length - 1; i >= 0; i--) e.childNodes[i] instanceof t.SVGElement && x(e.childNodes[i]);
    return a.adopt(e).id(a.eid(e.nodeName));
  }
  function b(t) {
    return Math.abs(t) > 1e-37 ? t : 0;
  }
  ["fill", "stroke"].forEach(function (t) {
    var e = {};
    e[t] = function (e) {
      if (void 0 === e) return this;
      if ("string" == typeof e || a.Color.isRgb(e) || e && "function" == typeof e.fill) this.attr(t, e);else for (var i = l[t].length - 1; i >= 0; i--) null != e[l[t][i]] && this.attr(l.prefix(t, l[t][i]), e[l[t][i]]);
      return this;
    }, a.extend(a.Element, a.FX, e);
  }), a.extend(a.Element, a.FX, {
    translate: function (t, e) {
      return this.transform({
        x: t,
        y: e
      });
    },
    matrix: function (t) {
      return this.attr("transform", new a.Matrix(6 == arguments.length ? [].slice.call(arguments) : t));
    },
    opacity: function (t) {
      return this.attr("opacity", t);
    },
    dx: function (t) {
      return this.x(new a.Number(t).plus(this instanceof a.FX ? 0 : this.x()), !0);
    },
    dy: function (t) {
      return this.y(new a.Number(t).plus(this instanceof a.FX ? 0 : this.y()), !0);
    }
  }), a.extend(a.Path, {
    length: function () {
      return this.node.getTotalLength();
    },
    pointAt: function (t) {
      return this.node.getPointAtLength(t);
    }
  }), a.Set = a.invent({
    create: function (t) {
      Array.isArray(t) ? this.members = t : this.clear();
    },
    extend: {
      add: function () {
        for (var t = [].slice.call(arguments), e = 0, i = t.length; e < i; e++) this.members.push(t[e]);
        return this;
      },
      remove: function (t) {
        var e = this.index(t);
        return e > -1 && this.members.splice(e, 1), this;
      },
      each: function (t) {
        for (var e = 0, i = this.members.length; e < i; e++) t.apply(this.members[e], [e, this.members]);
        return this;
      },
      clear: function () {
        return this.members = [], this;
      },
      length: function () {
        return this.members.length;
      },
      has: function (t) {
        return this.index(t) >= 0;
      },
      index: function (t) {
        return this.members.indexOf(t);
      },
      get: function (t) {
        return this.members[t];
      },
      first: function () {
        return this.get(0);
      },
      last: function () {
        return this.get(this.members.length - 1);
      },
      valueOf: function () {
        return this.members;
      }
    },
    construct: {
      set: function (t) {
        return new a.Set(t);
      }
    }
  }), a.FX.Set = a.invent({
    create: function (t) {
      this.set = t;
    }
  }), a.Set.inherit = function () {
    var t = [];
    for (var e in a.Shape.prototype) "function" == typeof a.Shape.prototype[e] && "function" != typeof a.Set.prototype[e] && t.push(e);
    for (var e in t.forEach(function (t) {
      a.Set.prototype[t] = function () {
        for (var e = 0, i = this.members.length; e < i; e++) this.members[e] && "function" == typeof this.members[e][t] && this.members[e][t].apply(this.members[e], arguments);
        return "animate" == t ? this.fx || (this.fx = new a.FX.Set(this)) : this;
      };
    }), t = [], a.FX.prototype) "function" == typeof a.FX.prototype[e] && "function" != typeof a.FX.Set.prototype[e] && t.push(e);
    t.forEach(function (t) {
      a.FX.Set.prototype[t] = function () {
        for (var e = 0, i = this.set.members.length; e < i; e++) this.set.members[e].fx[t].apply(this.set.members[e].fx, arguments);
        return this;
      };
    });
  }, a.extend(a.Element, {}), a.extend(a.Element, {
    remember: function (t, e) {
      if ("object" === i(arguments[0])) for (var a in t) this.remember(a, t[a]);else {
        if (1 == arguments.length) return this.memory()[t];
        this.memory()[t] = e;
      }
      return this;
    },
    forget: function () {
      if (0 == arguments.length) this._memory = {};else for (var t = arguments.length - 1; t >= 0; t--) delete this.memory()[arguments[t]];
      return this;
    },
    memory: function () {
      return this._memory || (this._memory = {});
    }
  }), a.get = function (t) {
    var i = e.getElementById(function (t) {
      var e = (t || "").toString().match(a.regex.reference);
      if (e) return e[1];
    }(t) || t);
    return a.adopt(i);
  }, a.select = function (t, i) {
    return new a.Set(a.utils.map((i || e).querySelectorAll(t), function (t) {
      return a.adopt(t);
    }));
  }, a.extend(a.Parent, {
    select: function (t) {
      return a.select(t, this.node);
    }
  });
  var v = "abcdef".split("");
  if ("function" != typeof t.CustomEvent) {
    var m = function (t, i) {
      i = i || {
        bubbles: !1,
        cancelable: !1,
        detail: void 0
      };
      var a = e.createEvent("CustomEvent");
      return a.initCustomEvent(t, i.bubbles, i.cancelable, i.detail), a;
    };
    m.prototype = t.Event.prototype, a.CustomEvent = m;
  } else a.CustomEvent = t.CustomEvent;
  return a;
},  true ? !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
  return Ht(Rt, Rt.document);
}).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0,
/*! svg.filter.js - v2.0.2 - 2016-02-24
* https://github.com/wout/svg.filter.js
* Copyright (c) 2016 Wout Fierens; Licensed MIT */
function () {
  SVG.Filter = SVG.invent({
    create: "filter",
    inherit: SVG.Parent,
    extend: {
      source: "SourceGraphic",
      sourceAlpha: "SourceAlpha",
      background: "BackgroundImage",
      backgroundAlpha: "BackgroundAlpha",
      fill: "FillPaint",
      stroke: "StrokePaint",
      autoSetIn: !0,
      put: function (t, e) {
        return this.add(t, e), !t.attr("in") && this.autoSetIn && t.attr("in", this.source), t.attr("result") || t.attr("result", t), t;
      },
      blend: function (t, e, i) {
        return this.put(new SVG.BlendEffect(t, e, i));
      },
      colorMatrix: function (t, e) {
        return this.put(new SVG.ColorMatrixEffect(t, e));
      },
      convolveMatrix: function (t) {
        return this.put(new SVG.ConvolveMatrixEffect(t));
      },
      componentTransfer: function (t) {
        return this.put(new SVG.ComponentTransferEffect(t));
      },
      composite: function (t, e, i) {
        return this.put(new SVG.CompositeEffect(t, e, i));
      },
      flood: function (t, e) {
        return this.put(new SVG.FloodEffect(t, e));
      },
      offset: function (t, e) {
        return this.put(new SVG.OffsetEffect(t, e));
      },
      image: function (t) {
        return this.put(new SVG.ImageEffect(t));
      },
      merge: function () {
        var t = [void 0];
        for (var e in arguments) t.push(arguments[e]);
        return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, t))());
      },
      gaussianBlur: function (t, e) {
        return this.put(new SVG.GaussianBlurEffect(t, e));
      },
      morphology: function (t, e) {
        return this.put(new SVG.MorphologyEffect(t, e));
      },
      diffuseLighting: function (t, e, i) {
        return this.put(new SVG.DiffuseLightingEffect(t, e, i));
      },
      displacementMap: function (t, e, i, a, s) {
        return this.put(new SVG.DisplacementMapEffect(t, e, i, a, s));
      },
      specularLighting: function (t, e, i, a) {
        return this.put(new SVG.SpecularLightingEffect(t, e, i, a));
      },
      tile: function () {
        return this.put(new SVG.TileEffect());
      },
      turbulence: function (t, e, i, a, s) {
        return this.put(new SVG.TurbulenceEffect(t, e, i, a, s));
      },
      toString: function () {
        return "url(#" + this.attr("id") + ")";
      }
    }
  }), SVG.extend(SVG.Defs, {
    filter: function (t) {
      var e = this.put(new SVG.Filter());
      return "function" == typeof t && t.call(e, e), e;
    }
  }), SVG.extend(SVG.Container, {
    filter: function (t) {
      return this.defs().filter(t);
    }
  }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
    filter: function (t) {
      return this.filterer = t instanceof SVG.Element ? t : this.doc().filter(t), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer;
    },
    unfilter: function (t) {
      return this.filterer && !0 === t && this.filterer.remove(), delete this.filterer, this.attr("filter", null);
    }
  }), SVG.Effect = SVG.invent({
    create: function () {
      this.constructor.call(this);
    },
    inherit: SVG.Element,
    extend: {
      in: function (t) {
        return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t);
      },
      result: function (t) {
        return null == t ? this.attr("result") : this.attr("result", t);
      },
      toString: function () {
        return this.result();
      }
    }
  }), SVG.ParentEffect = SVG.invent({
    create: function () {
      this.constructor.call(this);
    },
    inherit: SVG.Parent,
    extend: {
      in: function (t) {
        return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t);
      },
      result: function (t) {
        return null == t ? this.attr("result") : this.attr("result", t);
      },
      toString: function () {
        return this.result();
      }
    }
  });
  var t = {
    blend: function (t, e) {
      return this.parent() && this.parent().blend(this, t, e);
    },
    colorMatrix: function (t, e) {
      return this.parent() && this.parent().colorMatrix(t, e).in(this);
    },
    convolveMatrix: function (t) {
      return this.parent() && this.parent().convolveMatrix(t).in(this);
    },
    componentTransfer: function (t) {
      return this.parent() && this.parent().componentTransfer(t).in(this);
    },
    composite: function (t, e) {
      return this.parent() && this.parent().composite(this, t, e);
    },
    flood: function (t, e) {
      return this.parent() && this.parent().flood(t, e);
    },
    offset: function (t, e) {
      return this.parent() && this.parent().offset(t, e).in(this);
    },
    image: function (t) {
      return this.parent() && this.parent().image(t);
    },
    merge: function () {
      return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments));
    },
    gaussianBlur: function (t, e) {
      return this.parent() && this.parent().gaussianBlur(t, e).in(this);
    },
    morphology: function (t, e) {
      return this.parent() && this.parent().morphology(t, e).in(this);
    },
    diffuseLighting: function (t, e, i) {
      return this.parent() && this.parent().diffuseLighting(t, e, i).in(this);
    },
    displacementMap: function (t, e, i, a) {
      return this.parent() && this.parent().displacementMap(this, t, e, i, a);
    },
    specularLighting: function (t, e, i, a) {
      return this.parent() && this.parent().specularLighting(t, e, i, a).in(this);
    },
    tile: function () {
      return this.parent() && this.parent().tile().in(this);
    },
    turbulence: function (t, e, i, a, s) {
      return this.parent() && this.parent().turbulence(t, e, i, a, s).in(this);
    }
  };
  SVG.extend(SVG.Effect, t), SVG.extend(SVG.ParentEffect, t), SVG.ChildEffect = SVG.invent({
    create: function () {
      this.constructor.call(this);
    },
    inherit: SVG.Element,
    extend: {
      in: function (t) {
        this.attr("in", t);
      }
    }
  });
  var e = {
      blend: function (t, e, i) {
        this.attr({
          in: t,
          in2: e,
          mode: i || "normal"
        });
      },
      colorMatrix: function (t, e) {
        "matrix" == t && (e = s(e)), this.attr({
          type: t,
          values: void 0 === e ? null : e
        });
      },
      convolveMatrix: function (t) {
        t = s(t), this.attr({
          order: Math.sqrt(t.split(" ").length),
          kernelMatrix: t
        });
      },
      composite: function (t, e, i) {
        this.attr({
          in: t,
          in2: e,
          operator: i
        });
      },
      flood: function (t, e) {
        this.attr("flood-color", t), null != e && this.attr("flood-opacity", e);
      },
      offset: function (t, e) {
        this.attr({
          dx: t,
          dy: e
        });
      },
      image: function (t) {
        this.attr("href", t, SVG.xlink);
      },
      displacementMap: function (t, e, i, a, s) {
        this.attr({
          in: t,
          in2: e,
          scale: i,
          xChannelSelector: a,
          yChannelSelector: s
        });
      },
      gaussianBlur: function (t, e) {
        null != t || null != e ? this.attr("stdDeviation", function (t) {
          if (!Array.isArray(t)) return t;
          for (var e = 0, i = t.length, a = []; e < i; e++) a.push(t[e]);
          return a.join(" ");
        }(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0");
      },
      morphology: function (t, e) {
        this.attr({
          operator: t,
          radius: e
        });
      },
      tile: function () {},
      turbulence: function (t, e, i, a, s) {
        this.attr({
          numOctaves: e,
          seed: i,
          stitchTiles: a,
          baseFrequency: t,
          type: s
        });
      }
    },
    i = {
      merge: function () {
        var t;
        if (arguments[0] instanceof SVG.Set) {
          var e = this;
          arguments[0].each(function (t) {
            this instanceof SVG.MergeNode ? e.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && e.put(new SVG.MergeNode(this));
          });
        } else {
          t = Array.isArray(arguments[0]) ? arguments[0] : arguments;
          for (var i = 0; i < t.length; i++) t[i] instanceof SVG.MergeNode ? this.put(t[i]) : this.put(new SVG.MergeNode(t[i]));
        }
      },
      componentTransfer: function (t) {
        if (this.rgb = new SVG.Set(), ["r", "g", "b", "a"].forEach(function (t) {
          this[t] = new SVG["Func" + t.toUpperCase()]("identity"), this.rgb.add(this[t]), this.node.appendChild(this[t].node);
        }.bind(this)), t) for (var e in t.rgb && (["r", "g", "b"].forEach(function (e) {
          this[e].attr(t.rgb);
        }.bind(this)), delete t.rgb), t) this[e].attr(t[e]);
      },
      diffuseLighting: function (t, e, i) {
        this.attr({
          surfaceScale: t,
          diffuseConstant: e,
          kernelUnitLength: i
        });
      },
      specularLighting: function (t, e, i, a) {
        this.attr({
          surfaceScale: t,
          diffuseConstant: e,
          specularExponent: i,
          kernelUnitLength: a
        });
      }
    },
    a = {
      distantLight: function (t, e) {
        this.attr({
          azimuth: t,
          elevation: e
        });
      },
      pointLight: function (t, e, i) {
        this.attr({
          x: t,
          y: e,
          z: i
        });
      },
      spotLight: function (t, e, i, a, s, r) {
        this.attr({
          x: t,
          y: e,
          z: i,
          pointsAtX: a,
          pointsAtY: s,
          pointsAtZ: r
        });
      },
      mergeNode: function (t) {
        this.attr("in", t);
      }
    };
  function s(t) {
    return Array.isArray(t) && (t = new SVG.Array(t)), t.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ");
  }
  function r() {
    var t = function () {};
    for (var e in "function" == typeof arguments[arguments.length - 1] && (t = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments) for (var i in arguments[e]) t(arguments[e][i], i, arguments[e]);
  }
  ["r", "g", "b", "a"].forEach(function (t) {
    a["Func" + t.toUpperCase()] = function (t) {
      switch (this.attr("type", t), t) {
        case "table":
          this.attr("tableValues", arguments[1]);
          break;
        case "linear":
          this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
          break;
        case "gamma":
          this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2]);
      }
    };
  }), r(e, function (t, e) {
    var i = e.charAt(0).toUpperCase() + e.slice(1);
    SVG[i + "Effect"] = SVG.invent({
      create: function () {
        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out");
      },
      inherit: SVG.Effect,
      extend: {}
    });
  }), r(i, function (t, e) {
    var i = e.charAt(0).toUpperCase() + e.slice(1);
    SVG[i + "Effect"] = SVG.invent({
      create: function () {
        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out");
      },
      inherit: SVG.ParentEffect,
      extend: {}
    });
  }), r(a, function (t, e) {
    var i = e.charAt(0).toUpperCase() + e.slice(1);
    SVG[i] = SVG.invent({
      create: function () {
        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments);
      },
      inherit: SVG.ChildEffect,
      extend: {}
    });
  }), SVG.extend(SVG.MergeEffect, {
    in: function (t) {
      return t instanceof SVG.MergeNode ? this.add(t, 0) : this.add(new SVG.MergeNode(t), 0), this;
    }
  }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {
    in2: function (t) {
      return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", t);
    }
  }), SVG.filter = {
    sepiatone: [.343, .669, .119, 0, 0, .249, .626, .13, 0, 0, .172, .334, .111, 0, 0, 0, 0, 0, 1, 0]
  };
}.call(void 0), function () {
  function t(t, s, r, o, n, l, h) {
    for (var c = t.slice(s, r || h), d = o.slice(n, l || h), g = 0, u = {
        pos: [0, 0],
        start: [0, 0]
      }, p = {
        pos: [0, 0],
        start: [0, 0]
      };;) {
      if (c[g] = e.call(u, c[g]), d[g] = e.call(p, d[g]), c[g][0] != d[g][0] || "M" == c[g][0] || "A" == c[g][0] && (c[g][4] != d[g][4] || c[g][5] != d[g][5]) ? (Array.prototype.splice.apply(c, [g, 1].concat(a.call(u, c[g]))), Array.prototype.splice.apply(d, [g, 1].concat(a.call(p, d[g])))) : (c[g] = i.call(u, c[g]), d[g] = i.call(p, d[g])), ++g == c.length && g == d.length) break;
      g == c.length && c.push(["C", u.pos[0], u.pos[1], u.pos[0], u.pos[1], u.pos[0], u.pos[1]]), g == d.length && d.push(["C", p.pos[0], p.pos[1], p.pos[0], p.pos[1], p.pos[0], p.pos[1]]);
    }
    return {
      start: c,
      dest: d
    };
  }
  function e(t) {
    switch (t[0]) {
      case "z":
      case "Z":
        t[0] = "L", t[1] = this.start[0], t[2] = this.start[1];
        break;
      case "H":
        t[0] = "L", t[2] = this.pos[1];
        break;
      case "V":
        t[0] = "L", t[2] = t[1], t[1] = this.pos[0];
        break;
      case "T":
        t[0] = "Q", t[3] = t[1], t[4] = t[2], t[1] = this.reflection[1], t[2] = this.reflection[0];
        break;
      case "S":
        t[0] = "C", t[6] = t[4], t[5] = t[3], t[4] = t[2], t[3] = t[1], t[2] = this.reflection[1], t[1] = this.reflection[0];
    }
    return t;
  }
  function i(t) {
    var e = t.length;
    return this.pos = [t[e - 2], t[e - 1]], -1 != "SCQT".indexOf(t[0]) && (this.reflection = [2 * this.pos[0] - t[e - 4], 2 * this.pos[1] - t[e - 3]]), t;
  }
  function a(t) {
    var e = [t];
    switch (t[0]) {
      case "M":
        return this.pos = this.start = [t[1], t[2]], e;
      case "L":
        t[5] = t[3] = t[1], t[6] = t[4] = t[2], t[1] = this.pos[0], t[2] = this.pos[1];
        break;
      case "Q":
        t[6] = t[4], t[5] = t[3], t[4] = 1 * t[4] / 3 + 2 * t[2] / 3, t[3] = 1 * t[3] / 3 + 2 * t[1] / 3, t[2] = 1 * this.pos[1] / 3 + 2 * t[2] / 3, t[1] = 1 * this.pos[0] / 3 + 2 * t[1] / 3;
        break;
      case "A":
        e = function (t, e) {
          var i,
            a,
            s,
            r,
            o,
            n,
            l,
            h,
            c,
            d,
            g,
            u,
            p,
            f,
            x,
            b,
            v,
            m,
            y,
            w,
            k,
            A,
            S,
            C,
            L,
            P,
            I = Math.abs(e[1]),
            T = Math.abs(e[2]),
            M = e[3] % 360,
            z = e[4],
            X = e[5],
            E = e[6],
            Y = e[7],
            F = new SVG.Point(t),
            R = new SVG.Point(E, Y),
            H = [];
          if (0 === I || 0 === T || F.x === R.x && F.y === R.y) return [["C", F.x, F.y, R.x, R.y, R.x, R.y]];
          i = new SVG.Point((F.x - R.x) / 2, (F.y - R.y) / 2).transform(new SVG.Matrix().rotate(M)), (a = i.x * i.x / (I * I) + i.y * i.y / (T * T)) > 1 && (I *= a = Math.sqrt(a), T *= a);
          s = new SVG.Matrix().rotate(M).scale(1 / I, 1 / T).rotate(-M), F = F.transform(s), R = R.transform(s), r = [R.x - F.x, R.y - F.y], n = r[0] * r[0] + r[1] * r[1], o = Math.sqrt(n), r[0] /= o, r[1] /= o, l = n < 4 ? Math.sqrt(1 - n / 4) : 0, z === X && (l *= -1);
          h = new SVG.Point((R.x + F.x) / 2 + l * -r[1], (R.y + F.y) / 2 + l * r[0]), c = new SVG.Point(F.x - h.x, F.y - h.y), d = new SVG.Point(R.x - h.x, R.y - h.y), g = Math.acos(c.x / Math.sqrt(c.x * c.x + c.y * c.y)), c.y < 0 && (g *= -1);
          u = Math.acos(d.x / Math.sqrt(d.x * d.x + d.y * d.y)), d.y < 0 && (u *= -1);
          X && g > u && (u += 2 * Math.PI);
          !X && g < u && (u -= 2 * Math.PI);
          for (f = Math.ceil(2 * Math.abs(g - u) / Math.PI), b = [], v = g, p = (u - g) / f, x = 4 * Math.tan(p / 4) / 3, k = 0; k <= f; k++) y = Math.cos(v), m = Math.sin(v), w = new SVG.Point(h.x + y, h.y + m), b[k] = [new SVG.Point(w.x + x * m, w.y - x * y), w, new SVG.Point(w.x - x * m, w.y + x * y)], v += p;
          for (b[0][0] = b[0][1].clone(), b[b.length - 1][2] = b[b.length - 1][1].clone(), s = new SVG.Matrix().rotate(M).scale(I, T).rotate(-M), k = 0, A = b.length; k < A; k++) b[k][0] = b[k][0].transform(s), b[k][1] = b[k][1].transform(s), b[k][2] = b[k][2].transform(s);
          for (k = 1, A = b.length; k < A; k++) S = (w = b[k - 1][2]).x, C = w.y, L = (w = b[k][0]).x, P = w.y, E = (w = b[k][1]).x, Y = w.y, H.push(["C", S, C, L, P, E, Y]);
          return H;
        }(this.pos, t), t = e[0];
    }
    return t[0] = "C", this.pos = [t[5], t[6]], this.reflection = [2 * t[5] - t[3], 2 * t[6] - t[4]], e;
  }
  function s(t, e) {
    if (!1 === e) return !1;
    for (var i = e, a = t.length; i < a; ++i) if ("M" == t[i][0]) return i;
    return !1;
  }
  SVG.extend(SVG.PathArray, {
    morph: function (e) {
      for (var i = this.value, a = this.parse(e), r = 0, o = 0, n = !1, l = !1; !1 !== r || !1 !== o;) {
        var h;
        n = s(i, !1 !== r && r + 1), l = s(a, !1 !== o && o + 1), !1 === r && (r = 0 == (h = new SVG.PathArray(c.start).bbox()).height || 0 == h.width ? i.push(i[0]) - 1 : i.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1), !1 === o && (o = 0 == (h = new SVG.PathArray(c.dest).bbox()).height || 0 == h.width ? a.push(a[0]) - 1 : a.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1);
        var c = t(i, r, n, a, o, l);
        i = i.slice(0, r).concat(c.start, !1 === n ? [] : i.slice(n)), a = a.slice(0, o).concat(c.dest, !1 === l ? [] : a.slice(l)), r = !1 !== n && r + c.start.length, o = !1 !== l && o + c.dest.length;
      }
      return this.value = i, this.destination = new SVG.PathArray(), this.destination.value = a, this;
    }
  });
}(),
/*! svg.draggable.js - v2.2.2 - 2019-01-08
* https://github.com/svgdotjs/svg.draggable.js
* Copyright (c) 2019 Wout Fierens; Licensed MIT */
function () {
  function t(t) {
    t.remember("_draggable", this), this.el = t;
  }
  t.prototype.init = function (t, e) {
    var i = this;
    this.constraint = t, this.value = e, this.el.on("mousedown.drag", function (t) {
      i.start(t);
    }), this.el.on("touchstart.drag", function (t) {
      i.start(t);
    });
  }, t.prototype.transformPoint = function (t, e) {
    var i = (t = t || window.event).changedTouches && t.changedTouches[0] || t;
    return this.p.x = i.clientX - (e || 0), this.p.y = i.clientY, this.p.matrixTransform(this.m);
  }, t.prototype.getBBox = function () {
    var t = this.el.bbox();
    return this.el instanceof SVG.Nested && (t = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (t.x = this.el.x(), t.y = this.el.y()), t;
  }, t.prototype.start = function (t) {
    if ("click" != t.type && "mousedown" != t.type && "mousemove" != t.type || 1 == (t.which || t.buttons)) {
      var e = this;
      if (this.el.fire("beforedrag", {
        event: t,
        handler: this
      }), !this.el.event().defaultPrevented) {
        t.preventDefault(), t.stopPropagation(), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
        var i,
          a = this.getBBox();
        if (this.el instanceof SVG.Text) switch (i = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
          case "middle":
            i /= 2;
            break;
          case "start":
            i = 0;
        }
        this.startPoints = {
          point: this.transformPoint(t, i),
          box: a,
          transform: this.el.transform()
        }, SVG.on(window, "mousemove.drag", function (t) {
          e.drag(t);
        }), SVG.on(window, "touchmove.drag", function (t) {
          e.drag(t);
        }), SVG.on(window, "mouseup.drag", function (t) {
          e.end(t);
        }), SVG.on(window, "touchend.drag", function (t) {
          e.end(t);
        }), this.el.fire("dragstart", {
          event: t,
          p: this.startPoints.point,
          m: this.m,
          handler: this
        });
      }
    }
  }, t.prototype.drag = function (t) {
    var e = this.getBBox(),
      i = this.transformPoint(t),
      a = this.startPoints.box.x + i.x - this.startPoints.point.x,
      s = this.startPoints.box.y + i.y - this.startPoints.point.y,
      r = this.constraint,
      o = i.x - this.startPoints.point.x,
      n = i.y - this.startPoints.point.y;
    if (this.el.fire("dragmove", {
      event: t,
      p: i,
      m: this.m,
      handler: this
    }), this.el.event().defaultPrevented) return i;
    if ("function" == typeof r) {
      var l = r.call(this.el, a, s, this.m);
      "boolean" == typeof l && (l = {
        x: l,
        y: l
      }), !0 === l.x ? this.el.x(a) : !1 !== l.x && this.el.x(l.x), !0 === l.y ? this.el.y(s) : !1 !== l.y && this.el.y(l.y);
    } else "object" == typeof r && (null != r.minX && a < r.minX ? o = (a = r.minX) - this.startPoints.box.x : null != r.maxX && a > r.maxX - e.width && (o = (a = r.maxX - e.width) - this.startPoints.box.x), null != r.minY && s < r.minY ? n = (s = r.minY) - this.startPoints.box.y : null != r.maxY && s > r.maxY - e.height && (n = (s = r.maxY - e.height) - this.startPoints.box.y), null != r.snapToGrid && (a -= a % r.snapToGrid, s -= s % r.snapToGrid, o -= o % r.snapToGrid, n -= n % r.snapToGrid), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({
      x: o,
      y: n
    }, !0) : this.el.move(a, s));
    return i;
  }, t.prototype.end = function (t) {
    var e = this.drag(t);
    this.el.fire("dragend", {
      event: t,
      p: e,
      m: this.m,
      handler: this
    }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag");
  }, SVG.extend(SVG.Element, {
    draggable: function (e, i) {
      "function" != typeof e && "object" != typeof e || (i = e, e = !0);
      var a = this.remember("_draggable") || new t(this);
      return (e = void 0 === e || e) ? a.init(i || {}, e) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this;
    }
  });
}.call(void 0), function () {
  function t(t) {
    this.el = t, t.remember("_selectHandler", this), this.pointSelection = {
      isSelected: !1
    }, this.rectSelection = {
      isSelected: !1
    }, this.pointsList = {
      lt: [0, 0],
      rt: ["width", 0],
      rb: ["width", "height"],
      lb: [0, "height"],
      t: ["width", 0],
      r: ["width", "height"],
      b: ["width", "height"],
      l: [0, "height"]
    }, this.pointCoord = function (t, e, i) {
      var a = "string" != typeof t ? t : e[t];
      return i ? a / 2 : a;
    }, this.pointCoords = function (t, e) {
      var i = this.pointsList[t];
      return {
        x: this.pointCoord(i[0], e, "t" === t || "b" === t),
        y: this.pointCoord(i[1], e, "r" === t || "l" === t)
      };
    };
  }
  t.prototype.init = function (t, e) {
    var i = this.el.bbox();
    this.options = {};
    var a = this.el.selectize.defaults.points;
    for (var s in this.el.selectize.defaults) this.options[s] = this.el.selectize.defaults[s], void 0 !== e[s] && (this.options[s] = e[s]);
    var r = ["points", "pointsExclude"];
    for (var s in r) {
      var o = this.options[r[s]];
      "string" == typeof o ? o = o.length > 0 ? o.split(/\s*,\s*/i) : [] : "boolean" == typeof o && "points" === r[s] && (o = o ? a : []), this.options[r[s]] = o;
    }
    this.options.points = [a, this.options.points].reduce(function (t, e) {
      return t.filter(function (t) {
        return e.indexOf(t) > -1;
      });
    }), this.options.points = [this.options.points, this.options.pointsExclude].reduce(function (t, e) {
      return t.filter(function (t) {
        return e.indexOf(t) < 0;
      });
    }), this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(i.x, i.y)), this.options.deepSelect && -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type) ? this.selectPoints(t) : this.selectRect(t), this.observe(), this.cleanup();
  }, t.prototype.selectPoints = function (t) {
    return this.pointSelection.isSelected = t, this.pointSelection.set || (this.pointSelection.set = this.parent.set(), this.drawPoints()), this;
  }, t.prototype.getPointArray = function () {
    var t = this.el.bbox();
    return this.el.array().valueOf().map(function (e) {
      return [e[0] - t.x, e[1] - t.y];
    });
  }, t.prototype.drawPoints = function () {
    for (var t = this, e = this.getPointArray(), i = 0, a = e.length; i < a; ++i) {
      var s = function (e) {
          return function (i) {
            (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
            var a = i.pageX || i.touches[0].pageX,
              s = i.pageY || i.touches[0].pageY;
            t.el.fire("point", {
              x: a,
              y: s,
              i: e,
              event: i
            });
          };
        }(i),
        r = this.drawPoint(e[i][0], e[i][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", s).on("mousedown", s);
      this.pointSelection.set.add(r);
    }
  }, t.prototype.drawPoint = function (t, e) {
    var i = this.options.pointType;
    switch (i) {
      case "circle":
        return this.drawCircle(t, e);
      case "rect":
        return this.drawRect(t, e);
      default:
        if ("function" == typeof i) return i.call(this, t, e);
        throw new Error("Unknown " + i + " point type!");
    }
  }, t.prototype.drawCircle = function (t, e) {
    return this.nested.circle(this.options.pointSize).center(t, e);
  }, t.prototype.drawRect = function (t, e) {
    return this.nested.rect(this.options.pointSize, this.options.pointSize).center(t, e);
  }, t.prototype.updatePointSelection = function () {
    var t = this.getPointArray();
    this.pointSelection.set.each(function (e) {
      this.cx() === t[e][0] && this.cy() === t[e][1] || this.center(t[e][0], t[e][1]);
    });
  }, t.prototype.updateRectSelection = function () {
    var t = this,
      e = this.el.bbox();
    if (this.rectSelection.set.get(0).attr({
      width: e.width,
      height: e.height
    }), this.options.points.length && this.options.points.map(function (i, a) {
      var s = t.pointCoords(i, e);
      t.rectSelection.set.get(a + 1).center(s.x, s.y);
    }), this.options.rotationPoint) {
      var i = this.rectSelection.set.length();
      this.rectSelection.set.get(i - 1).center(e.width / 2, 20);
    }
  }, t.prototype.selectRect = function (t) {
    var e = this,
      i = this.el.bbox();
    function a(t) {
      return function (i) {
        (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
        var a = i.pageX || i.touches[0].pageX,
          s = i.pageY || i.touches[0].pageY;
        e.el.fire(t, {
          x: a,
          y: s,
          event: i
        });
      };
    }
    if (this.rectSelection.isSelected = t, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(i.width, i.height).addClass(this.options.classRect)), this.options.points.length && this.rectSelection.set.length() < 2) {
      this.options.points.map(function (t, s) {
        var r = e.pointCoords(t, i),
          o = e.drawPoint(r.x, r.y).attr("class", e.options.classPoints + "_" + t).on("mousedown", a(t)).on("touchstart", a(t));
        e.rectSelection.set.add(o);
      }), this.rectSelection.set.each(function () {
        this.addClass(e.options.classPoints);
      });
    }
    if (this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
      var s = function (t) {
          (t = t || window.event).preventDefault ? t.preventDefault() : t.returnValue = !1, t.stopPropagation();
          var i = t.pageX || t.touches[0].pageX,
            a = t.pageY || t.touches[0].pageY;
          e.el.fire("rot", {
            x: i,
            y: a,
            event: t
          });
        },
        r = this.drawPoint(i.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", s).on("mousedown", s);
      this.rectSelection.set.add(r);
    }
  }, t.prototype.handler = function () {
    var t = this.el.bbox();
    this.nested.matrix(new SVG.Matrix(this.el).translate(t.x, t.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection();
  }, t.prototype.observe = function () {
    var t = this;
    if (MutationObserver) {
      if (this.rectSelection.isSelected || this.pointSelection.isSelected) this.observerInst = this.observerInst || new MutationObserver(function () {
        t.handler();
      }), this.observerInst.observe(this.el.node, {
        attributes: !0
      });else try {
        this.observerInst.disconnect(), delete this.observerInst;
      } catch (t) {}
    } else this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", function () {
      t.handler();
    });
  }, t.prototype.cleanup = function () {
    !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each(function () {
      this.remove();
    }), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each(function () {
      this.remove();
    }), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested);
  }, SVG.extend(SVG.Element, {
    selectize: function (e, i) {
      return "object" == typeof e && (i = e, e = !0), (this.remember("_selectHandler") || new t(this)).init(void 0 === e || e, i || {}), this;
    }
  }), SVG.Element.prototype.selectize.defaults = {
    points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
    pointsExclude: [],
    classRect: "svg_select_boundingRect",
    classPoints: "svg_select_points",
    pointSize: 7,
    rotationPoint: !0,
    deepSelect: !1,
    pointType: "circle"
  };
}(), function () {
  (function () {
    function t(t) {
      t.remember("_resizeHandler", this), this.el = t, this.parameters = {}, this.lastUpdateCall = null, this.p = t.doc().node.createSVGPoint();
    }
    t.prototype.transformPoint = function (t, e, i) {
      return this.p.x = t - (this.offset.x - window.pageXOffset), this.p.y = e - (this.offset.y - window.pageYOffset), this.p.matrixTransform(i || this.m);
    }, t.prototype._extractPosition = function (t) {
      return {
        x: null != t.clientX ? t.clientX : t.touches[0].clientX,
        y: null != t.clientY ? t.clientY : t.touches[0].clientY
      };
    }, t.prototype.init = function (t) {
      var e = this;
      if (this.stop(), "stop" !== t) {
        for (var i in this.options = {}, this.el.resize.defaults) this.options[i] = this.el.resize.defaults[i], void 0 !== t[i] && (this.options[i] = t[i]);
        this.el.on("lt.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("rt.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("rb.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("lb.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("t.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("r.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("b.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("l.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("rot.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("point.resize", function (t) {
          e.resize(t || window.event);
        }), this.update();
      }
    }, t.prototype.stop = function () {
      return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this;
    }, t.prototype.resize = function (t) {
      var e = this;
      this.m = this.el.node.getScreenCTM().inverse(), this.offset = {
        x: window.pageXOffset,
        y: window.pageYOffset
      };
      var i = this._extractPosition(t.detail.event);
      if (this.parameters = {
        type: this.el.type,
        p: this.transformPoint(i.x, i.y),
        x: t.detail.x,
        y: t.detail.y,
        box: this.el.bbox(),
        rotation: this.el.transform().rotation
      }, "text" === this.el.type && (this.parameters.fontSize = this.el.attr()["font-size"]), void 0 !== t.detail.i) {
        var a = this.el.array().valueOf();
        this.parameters.i = t.detail.i, this.parameters.pointCoords = [a[t.detail.i][0], a[t.detail.i][1]];
      }
      switch (t.type) {
        case "lt":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e);
            if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height - i[1] > 0) {
              if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
              i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y + i[1]).size(this.parameters.box.width - i[0], this.parameters.box.height - i[1]);
            }
          };
          break;
        case "rt":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 2);
            if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height - i[1] > 0) {
              if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
              i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).size(this.parameters.box.width + i[0], this.parameters.box.height - i[1]);
            }
          };
          break;
        case "rb":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 0);
            if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height + i[1] > 0) {
              if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
              i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + i[0], this.parameters.box.height + i[1]);
            }
          };
          break;
        case "lb":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 1);
            if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height + i[1] > 0) {
              if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
              i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).size(this.parameters.box.width - i[0], this.parameters.box.height + i[1]);
            }
          };
          break;
        case "t":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 2);
            if (this.parameters.box.height - i[1] > 0) {
              if ("text" === this.parameters.type) return;
              this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).height(this.parameters.box.height - i[1]);
            }
          };
          break;
        case "r":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 0);
            if (this.parameters.box.width + i[0] > 0) {
              if ("text" === this.parameters.type) return;
              this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + i[0]);
            }
          };
          break;
        case "b":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 0);
            if (this.parameters.box.height + i[1] > 0) {
              if ("text" === this.parameters.type) return;
              this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + i[1]);
            }
          };
          break;
        case "l":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 1);
            if (this.parameters.box.width - i[0] > 0) {
              if ("text" === this.parameters.type) return;
              this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).width(this.parameters.box.width - i[0]);
            }
          };
          break;
        case "rot":
          this.calc = function (t, e) {
            var i = t + this.parameters.p.x,
              a = e + this.parameters.p.y,
              s = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2),
              r = Math.atan2(a - this.parameters.box.y - this.parameters.box.height / 2, i - this.parameters.box.x - this.parameters.box.width / 2),
              o = this.parameters.rotation + 180 * (r - s) / Math.PI + this.options.snapToAngle / 2;
            this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(o - o % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy);
          };
          break;
        case "point":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, this.parameters.pointCoords[0], this.parameters.pointCoords[1]),
              a = this.el.array().valueOf();
            a[this.parameters.i][0] = this.parameters.pointCoords[0] + i[0], a[this.parameters.i][1] = this.parameters.pointCoords[1] + i[1], this.el.plot(a);
          };
      }
      this.el.fire("resizestart", {
        dx: this.parameters.x,
        dy: this.parameters.y,
        event: t
      }), SVG.on(window, "touchmove.resize", function (t) {
        e.update(t || window.event);
      }), SVG.on(window, "touchend.resize", function () {
        e.done();
      }), SVG.on(window, "mousemove.resize", function (t) {
        e.update(t || window.event);
      }), SVG.on(window, "mouseup.resize", function () {
        e.done();
      });
    }, t.prototype.update = function (t) {
      if (t) {
        var e = this._extractPosition(t),
          i = this.transformPoint(e.x, e.y),
          a = i.x - this.parameters.p.x,
          s = i.y - this.parameters.p.y;
        this.lastUpdateCall = [a, s], this.calc(a, s), this.el.fire("resizing", {
          dx: a,
          dy: s,
          event: t
        });
      } else this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
    }, t.prototype.done = function () {
      this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone");
    }, t.prototype.snapToGrid = function (t, e, i, a) {
      var s;
      return void 0 !== a ? s = [(i + t) % this.options.snapToGrid, (a + e) % this.options.snapToGrid] : (i = null == i ? 3 : i, s = [(this.parameters.box.x + t + (1 & i ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + e + (2 & i ? 0 : this.parameters.box.height)) % this.options.snapToGrid]), t < 0 && (s[0] -= this.options.snapToGrid), e < 0 && (s[1] -= this.options.snapToGrid), t -= Math.abs(s[0]) < this.options.snapToGrid / 2 ? s[0] : s[0] - (t < 0 ? -this.options.snapToGrid : this.options.snapToGrid), e -= Math.abs(s[1]) < this.options.snapToGrid / 2 ? s[1] : s[1] - (e < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(t, e, i, a);
    }, t.prototype.constraintToBox = function (t, e, i, a) {
      var s,
        r,
        o = this.options.constraint || {};
      return void 0 !== a ? (s = i, r = a) : (s = this.parameters.box.x + (1 & i ? 0 : this.parameters.box.width), r = this.parameters.box.y + (2 & i ? 0 : this.parameters.box.height)), void 0 !== o.minX && s + t < o.minX && (t = o.minX - s), void 0 !== o.maxX && s + t > o.maxX && (t = o.maxX - s), void 0 !== o.minY && r + e < o.minY && (e = o.minY - r), void 0 !== o.maxY && r + e > o.maxY && (e = o.maxY - r), [t, e];
    }, t.prototype.checkAspectRatio = function (t, e) {
      if (!this.options.saveAspectRatio) return t;
      var i = t.slice(),
        a = this.parameters.box.width / this.parameters.box.height,
        s = this.parameters.box.width + t[0],
        r = this.parameters.box.height - t[1],
        o = s / r;
      return o < a ? (i[1] = s / a - this.parameters.box.height, e && (i[1] = -i[1])) : o > a && (i[0] = this.parameters.box.width - r * a, e && (i[0] = -i[0])), i;
    }, SVG.extend(SVG.Element, {
      resize: function (e) {
        return (this.remember("_resizeHandler") || new t(this)).init(e || {}), this;
      }
    }), SVG.Element.prototype.resize.defaults = {
      snapToAngle: .1,
      snapToGrid: 1,
      constraint: {},
      saveAspectRatio: !1
    };
  }).call(this);
}(), void 0 === window.Apex && (window.Apex = {});
var Gt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "initModules",
      value: function () {
        this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "isSeriesHidden", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "exportToCSV", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"], this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"], this.ctx.animations = new b(this.ctx), this.ctx.axes = new J(this.ctx), this.ctx.core = new Wt(this.ctx.el, this.ctx), this.ctx.config = new E({}), this.ctx.data = new W(this.ctx), this.ctx.grid = new j(this.ctx), this.ctx.graphics = new m(this.ctx), this.ctx.coreUtils = new y(this.ctx), this.ctx.crosshairs = new Q(this.ctx), this.ctx.events = new Z(this.ctx), this.ctx.exports = new G(this.ctx), this.ctx.localization = new $(this.ctx), this.ctx.options = new L(), this.ctx.responsive = new K(this.ctx), this.ctx.series = new N(this.ctx), this.ctx.theme = new tt(this.ctx), this.ctx.formatters = new T(this.ctx), this.ctx.titleSubtitle = new et(this.ctx), this.ctx.legend = new lt(this.ctx), this.ctx.toolbar = new ht(this.ctx), this.ctx.tooltip = new bt(this.ctx), this.ctx.dimensions = new ot(this.ctx), this.ctx.updateHelpers = new Bt(this.ctx), this.ctx.zoomPanSelection = new ct(this.ctx), this.ctx.w.globals.tooltip = new bt(this.ctx);
      }
    }]), t;
  }(),
  Vt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "clear",
      value: function (t) {
        var e = t.isUpdating;
        this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(), this.ctx.toolbar && this.ctx.toolbar.destroy(), this.ctx.animations = null, this.ctx.axes = null, this.ctx.annotations = null, this.ctx.core = null, this.ctx.data = null, this.ctx.grid = null, this.ctx.series = null, this.ctx.responsive = null, this.ctx.theme = null, this.ctx.formatters = null, this.ctx.titleSubtitle = null, this.ctx.legend = null, this.ctx.dimensions = null, this.ctx.options = null, this.ctx.crosshairs = null, this.ctx.zoomPanSelection = null, this.ctx.updateHelpers = null, this.ctx.toolbar = null, this.ctx.localization = null, this.ctx.w.globals.tooltip = null, this.clearDomElements({
          isUpdating: e
        });
      }
    }, {
      key: "killSVG",
      value: function (t) {
        t.each(function (t, e) {
          this.removeClass("*"), this.off(), this.stop();
        }, !0), t.ungroup(), t.clear();
      }
    }, {
      key: "clearDomElements",
      value: function (t) {
        var e = this,
          i = t.isUpdating,
          a = this.w.globals.dom.Paper.node;
        a.parentNode && a.parentNode.parentNode && !i && (a.parentNode.parentNode.style.minHeight = "unset");
        var s = this.w.globals.dom.baseEl;
        s && this.ctx.eventList.forEach(function (t) {
          s.removeEventListener(t, e.ctx.events.documentEvent);
        });
        var r = this.w.globals.dom;
        if (null !== this.ctx.el) for (; this.ctx.el.firstChild;) this.ctx.el.removeChild(this.ctx.el.firstChild);
        this.killSVG(r.Paper), r.Paper.remove(), r.elWrap = null, r.elGraphical = null, r.elLegendWrap = null, r.elLegendForeign = null, r.baseEl = null, r.elGridRect = null, r.elGridRectMask = null, r.elGridRectMarkerMask = null, r.elForecastMask = null, r.elNonForecastMask = null, r.elDefs = null;
      }
    }]), t;
  }(),
  jt = new WeakMap();
var _t = function () {
  function t(e, i) {
    a(this, t), this.opts = i, this.ctx = this, this.w = new F(i).init(), this.el = e, this.w.globals.cuid = x.randomId(), this.w.globals.chartID = this.w.config.chart.id ? x.escapeString(this.w.config.chart.id) : this.w.globals.cuid, new Gt(this).initModules(), this.create = x.bind(this.create, this), this.windowResizeHandler = this._windowResizeHandler.bind(this), this.parentResizeHandler = this._parentResizeCallback.bind(this);
  }
  return r(t, [{
    key: "render",
    value: function () {
      var t = this;
      return new Promise(function (e, i) {
        if (null !== t.el) {
          void 0 === Apex._chartInstances && (Apex._chartInstances = []), t.w.config.chart.id && Apex._chartInstances.push({
            id: t.w.globals.chartID,
            group: t.w.config.chart.group,
            chart: t
          }), t.setLocale(t.w.config.chart.defaultLocale);
          var a = t.w.config.chart.events.beforeMount;
          if ("function" == typeof a && a(t, t.w), t.events.fireEvent("beforeMount", [t, t.w]), window.addEventListener("resize", t.windowResizeHandler), function (t, e) {
            var i = !1;
            if (t.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
              var a = t.getBoundingClientRect();
              "none" !== t.style.display && 0 !== a.width || (i = !0);
            }
            var s = new ResizeObserver(function (a) {
              i && e.call(t, a), i = !0;
            });
            t.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? Array.from(t.children).forEach(function (t) {
              return s.observe(t);
            }) : s.observe(t), jt.set(e, s);
          }(t.el.parentNode, t.parentResizeHandler), !t.css) {
            var s = t.el.getRootNode && t.el.getRootNode(),
              r = x.is("ShadowRoot", s),
              o = t.el.ownerDocument,
              n = o.getElementById("apexcharts-css");
            if (r || !n) {
              var l;
              t.css = document.createElement("style"), t.css.id = "apexcharts-css", t.css.textContent = '@keyframes opaque {\n  0% {\n      opacity: 0\n  }\n\n  to {\n      opacity: 1\n  }\n}\n\n@keyframes resizeanim {\n  0%,to {\n      opacity: 0\n  }\n}\n\n.apexcharts-canvas {\n  position: relative;\n  user-select: none\n}\n\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0,0,0,.5);\n  box-shadow: 0 0 1px rgba(255,255,255,.5);\n  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)\n}\n\n.apexcharts-inner {\n  position: relative\n}\n\n.apexcharts-text tspan {\n  font-family: inherit\n}\n\n.legend-mouseover-inactive {\n  transition: .15s ease all;\n  opacity: .2\n}\n\n.apexcharts-legend-text {\n  padding-left: 15px;\n  margin-left: -15px;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255,255,255,.96)\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30,30,30,.8)\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit\n}\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #eceff1;\n  border-bottom: 1px solid #ddd\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0,0,0,.7);\n  border-bottom: 1px solid #333\n}\n\n.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  margin-left: 5px;\n  font-weight: 600\n}\n\n.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {\n  display: none\n}\n\n.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px\n}\n\n.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {\n  display: flex\n}\n\n.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0;\n  margin-right: 10px;\n  border-radius: 50%\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0!important\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px\n}\n\n.apexcharts-custom-tooltip,.apexcharts-tooltip-box {\n  padding: 4px 8px\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: 700\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: 700;\n  display: block;\n  margin-bottom: 5px\n}\n\n.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {\n  opacity: 0;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #eceff1;\n  border: 1px solid #90a4ae\n}\n\n.apexcharts-xaxistooltip {\n  padding: 9px 10px;\n  transition: .15s ease all\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0,0,0,.7);\n  border: 1px solid rgba(0,0,0,.5);\n  color: #fff\n}\n\n.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-left: -6px\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-left: -7px\n}\n\n.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%\n}\n\n.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {\n  top: 100%\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-yaxistooltip {\n  padding: 4px 10px\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0,0,0,.7);\n  border: 1px solid rgba(0,0,0,.5);\n  color: #fff\n}\n\n.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-top: -6px\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-top: -7px\n}\n\n.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {\n  left: 100%\n}\n\n.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {\n  right: 100%\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none\n}\n\n.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: .15s ease all\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0\n}\n\n.apexcharts-selection-rect {\n  cursor: move\n}\n\n.svg_select_boundingRect,.svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6e8192;\n  text-align: center\n}\n\n.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {\n  fill: #6e8192\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(.76)\n}\n\n.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {\n  fill: #f3f4f5\n}\n\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {\n  fill: #008ffb\n}\n\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {\n  fill: #333\n}\n\n.apexcharts-menu-icon,.apexcharts-selection-icon {\n  position: relative\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px\n}\n\n.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {\n  transform: scale(.85)\n}\n\n.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {\n  transform: scale(.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px\n}\n\n.apexcharts-pan-icon {\n  transform: scale(.62);\n  position: relative;\n  left: 1px;\n  top: 0\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6e8192;\n  stroke-width: 2\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008ffb\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0 6px 2px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: .15s ease all;\n  pointer-events: none\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: .15s ease all\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0,0,0,.7);\n  color: #fff\n}\n\n@media screen and (min-width:768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n      opacity: 1\n  }\n}\n\n.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {\n  opacity: 0\n}\n\n.apexcharts-hidden-element-shown {\n  opacity: 1;\n  transition: 0.25s ease all;\n}\n.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {\n  cursor: default;\n  pointer-events: none\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: .3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease\n}\n\n.apexcharts-radialbar-label {\n  cursor: pointer;\n}\n\n.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {\n  pointer-events: none\n}\n\n.apexcharts-marker {\n  transition: .15s ease all\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden\n}\n\n.contract-trigger:before,.resize-triggers,.resize-triggers>div {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0\n}\n\n.resize-triggers>div {\n  height: 100%;\n  width: 100%;\n  background: #eee;\n  overflow: auto\n}\n\n.contract-trigger:before {\n  overflow: hidden;\n  width: 200%;\n  height: 200%\n}\n\n.apexcharts-bar-goals-markers{\n  pointer-events: none\n}\n\n.apexcharts-bar-shadows{\n  pointer-events: none\n}\n\n.apexcharts-rangebar-goals-markers{\n  pointer-events: none\n}';
              var h = (null === (l = t.opts.chart) || void 0 === l ? void 0 : l.nonce) || t.w.config.chart.nonce;
              h && t.css.setAttribute("nonce", h), r ? s.prepend(t.css) : o.head.appendChild(t.css);
            }
          }
          var c = t.create(t.w.config.series, {});
          if (!c) return e(t);
          t.mount(c).then(function () {
            "function" == typeof t.w.config.chart.events.mounted && t.w.config.chart.events.mounted(t, t.w), t.events.fireEvent("mounted", [t, t.w]), e(c);
          }).catch(function (t) {
            i(t);
          });
        } else i(new Error("Element not found"));
      });
    }
  }, {
    key: "create",
    value: function (t, e) {
      var i = this.w;
      new Gt(this).initModules();
      var a = this.w.globals;
      (a.noData = !1, a.animationEnded = !1, this.responsive.checkResponsiveConfig(e), i.config.xaxis.convertedCatToNumeric) && new X(i.config).convertCatToNumericXaxis(i.config, this.ctx);
      if (null === this.el) return a.animationEnded = !0, null;
      if (this.core.setupElements(), "treemap" === i.config.chart.type && (i.config.grid.show = !1, i.config.yaxis[0].show = !1), 0 === a.svgWidth) return a.animationEnded = !0, null;
      var s = y.checkComboSeries(t);
      a.comboCharts = s.comboCharts, a.comboBarCount = s.comboBarCount;
      var r = t.every(function (t) {
        return t.data && 0 === t.data.length;
      });
      (0 === t.length || r) && this.series.handleNoData(), this.events.setupEventHandlers(), this.data.parseData(t), this.theme.init(), new H(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), a.noData && a.collapsedSeries.length !== a.series.length && !i.config.legend.showForSingleSeries || this.legend.init(), this.series.hasAllSeriesEqualX(), a.axisCharts && (this.core.coreCalculations(), "category" !== i.config.xaxis.type && this.formatters.setLabelFormatters(), this.ctx.toolbar.minX = i.globals.minX, this.ctx.toolbar.maxX = i.globals.maxX), this.formatters.heatmapLabelFormatters(), new y(this).getLargestMarkerSize(), this.dimensions.plotCoords();
      var o = this.core.xySettings();
      this.grid.createGridMask();
      var n = this.core.plotChartType(t, o),
        l = new O(this);
      return l.bringForward(), i.config.dataLabels.background.enabled && l.dataLabelsBackground(), this.core.shiftGraphPosition(), {
        elGraph: n,
        xyRatios: o,
        dimensions: {
          plot: {
            left: i.globals.translateX,
            top: i.globals.translateY,
            width: i.globals.gridWidth,
            height: i.globals.gridHeight
          }
        }
      };
    }
  }, {
    key: "mount",
    value: function () {
      var t = this,
        e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
        i = this,
        a = i.w;
      return new Promise(function (s, r) {
        if (null === i.el) return r(new Error("Not enough data to display or target element not found"));
        (null === e || a.globals.allSeriesCollapsed) && i.series.handleNoData(), i.grid = new j(i);
        var o,
          n,
          l = i.grid.drawGrid();
        (i.annotations = new P(i), i.annotations.drawImageAnnos(), i.annotations.drawTextAnnos(), "back" === a.config.grid.position) && (l && a.globals.dom.elGraphical.add(l.el), null != l && null !== (o = l.elGridBorders) && void 0 !== o && o.node && a.globals.dom.elGraphical.add(l.elGridBorders));
        if (Array.isArray(e.elGraph)) for (var h = 0; h < e.elGraph.length; h++) a.globals.dom.elGraphical.add(e.elGraph[h]);else a.globals.dom.elGraphical.add(e.elGraph);
        "front" === a.config.grid.position && (l && a.globals.dom.elGraphical.add(l.el), null != l && null !== (n = l.elGridBorders) && void 0 !== n && n.node && a.globals.dom.elGraphical.add(l.elGridBorders));
        "front" === a.config.xaxis.crosshairs.position && i.crosshairs.drawXCrosshairs(), "front" === a.config.yaxis[0].crosshairs.position && i.crosshairs.drawYCrosshairs(), "treemap" !== a.config.chart.type && i.axes.drawAxis(a.config.chart.type, l);
        var c = new V(t.ctx, l),
          d = new q(t.ctx, l);
        if (null !== l && (c.xAxisLabelCorrections(l.xAxisTickWidth), d.setYAxisTextAlignments(), a.config.yaxis.map(function (t, e) {
          -1 === a.globals.ignoreYAxisIndexes.indexOf(e) && d.yAxisTitleRotate(e, t.opposite);
        })), i.annotations.drawAxesAnnotations(), !a.globals.noData) {
          if (a.config.tooltip.enabled && !a.globals.noData && i.w.globals.tooltip.drawTooltip(e.xyRatios), a.globals.axisCharts && (a.globals.isXNumeric || a.config.xaxis.convertedCatToNumeric || a.globals.isRangeBar)) (a.config.chart.zoom.enabled || a.config.chart.selection && a.config.chart.selection.enabled || a.config.chart.pan && a.config.chart.pan.enabled) && i.zoomPanSelection.init({
            xyRatios: e.xyRatios
          });else {
            var g = a.config.chart.toolbar.tools;
            ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach(function (t) {
              g[t] = !1;
            });
          }
          a.config.chart.toolbar.show && !a.globals.allSeriesCollapsed && i.toolbar.createToolbar();
        }
        a.globals.memory.methodsToExec.length > 0 && a.globals.memory.methodsToExec.forEach(function (t) {
          t.method(t.params, !1, t.context);
        }), a.globals.axisCharts || a.globals.noData || i.core.resizeNonAxisCharts(), s(i);
      });
    }
  }, {
    key: "destroy",
    value: function () {
      var t, e;
      window.removeEventListener("resize", this.windowResizeHandler), this.el.parentNode, t = this.parentResizeHandler, (e = jt.get(t)) && (e.disconnect(), jt.delete(t));
      var i = this.w.config.chart.id;
      i && Apex._chartInstances.forEach(function (t, e) {
        t.id === x.escapeString(i) && Apex._chartInstances.splice(e, 1);
      }), new Vt(this.ctx).clear({
        isUpdating: !1
      });
    }
  }, {
    key: "updateOptions",
    value: function (t) {
      var e = this,
        i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
        a = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
        s = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
        r = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
        o = this.w;
      return o.globals.selection = void 0, t.series && (this.series.resetSeries(!1, !0, !1), t.series.length && t.series[0].data && (t.series = t.series.map(function (t, i) {
        return e.updateHelpers._extendSeries(t, i);
      })), this.updateHelpers.revertDefaultAxisMinMax()), t.xaxis && (t = this.updateHelpers.forceXAxisUpdate(t)), t.yaxis && (t = this.updateHelpers.forceYAxisUpdate(t)), o.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(), t.theme && (t = this.theme.updateThemeOptions(t)), this.updateHelpers._updateOptions(t, i, a, s, r);
    }
  }, {
    key: "updateSeries",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
        e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
      return this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(t, e, i);
    }
  }, {
    key: "appendSeries",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
        a = this.w.config.series.slice();
      return a.push(t), this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(a, e, i);
    }
  }, {
    key: "appendData",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = this;
      i.w.globals.dataChanged = !0, i.series.getPreviousPaths();
      for (var a = i.w.config.series.slice(), s = 0; s < a.length; s++) if (null !== t[s] && void 0 !== t[s]) for (var r = 0; r < t[s].data.length; r++) a[s].data.push(t[s].data[r]);
      return i.w.config.series = a, e && (i.w.globals.initialSeries = x.clone(i.w.config.series)), this.update();
    }
  }, {
    key: "update",
    value: function (t) {
      var e = this;
      return new Promise(function (i, a) {
        new Vt(e.ctx).clear({
          isUpdating: !0
        });
        var s = e.create(e.w.config.series, t);
        if (!s) return i(e);
        e.mount(s).then(function () {
          "function" == typeof e.w.config.chart.events.updated && e.w.config.chart.events.updated(e, e.w), e.events.fireEvent("updated", [e, e.w]), e.w.globals.isDirty = !0, i(e);
        }).catch(function (t) {
          a(t);
        });
      });
    }
  }, {
    key: "getSyncedCharts",
    value: function () {
      var t = this.getGroupedCharts(),
        e = [this];
      return t.length && (e = [], t.forEach(function (t) {
        e.push(t);
      })), e;
    }
  }, {
    key: "getGroupedCharts",
    value: function () {
      var t = this;
      return Apex._chartInstances.filter(function (t) {
        if (t.group) return !0;
      }).map(function (e) {
        return t.w.config.chart.group === e.group ? e.chart : t;
      });
    }
  }, {
    key: "toggleSeries",
    value: function (t) {
      return this.series.toggleSeries(t);
    }
  }, {
    key: "highlightSeriesOnLegendHover",
    value: function (t, e) {
      return this.series.toggleSeriesOnHover(t, e);
    }
  }, {
    key: "showSeries",
    value: function (t) {
      this.series.showSeries(t);
    }
  }, {
    key: "hideSeries",
    value: function (t) {
      this.series.hideSeries(t);
    }
  }, {
    key: "isSeriesHidden",
    value: function (t) {
      this.series.isSeriesHidden(t);
    }
  }, {
    key: "resetSeries",
    value: function () {
      var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
        e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
      this.series.resetSeries(t, e);
    }
  }, {
    key: "addEventListener",
    value: function (t, e) {
      this.events.addEventListener(t, e);
    }
  }, {
    key: "removeEventListener",
    value: function (t, e) {
      this.events.removeEventListener(t, e);
    }
  }, {
    key: "addXaxisAnnotation",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
        a = this;
      i && (a = i), a.annotations.addXaxisAnnotationExternal(t, e, a);
    }
  }, {
    key: "addYaxisAnnotation",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
        a = this;
      i && (a = i), a.annotations.addYaxisAnnotationExternal(t, e, a);
    }
  }, {
    key: "addPointAnnotation",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
        a = this;
      i && (a = i), a.annotations.addPointAnnotationExternal(t, e, a);
    }
  }, {
    key: "clearAnnotations",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0,
        e = this;
      t && (e = t), e.annotations.clearAnnotations(e);
    }
  }, {
    key: "removeAnnotation",
    value: function (t) {
      var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
        i = this;
      e && (i = e), i.annotations.removeAnnotation(i, t);
    }
  }, {
    key: "getChartArea",
    value: function () {
      return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner");
    }
  }, {
    key: "getSeriesTotalXRange",
    value: function (t, e) {
      return this.coreUtils.getSeriesTotalsXRange(t, e);
    }
  }, {
    key: "getHighestValueInSeries",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
      return new U(this.ctx).getMinYMaxY(t).highestY;
    }
  }, {
    key: "getLowestValueInSeries",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
      return new U(this.ctx).getMinYMaxY(t).lowestY;
    }
  }, {
    key: "getSeriesTotal",
    value: function () {
      return this.w.globals.seriesTotals;
    }
  }, {
    key: "toggleDataPointSelection",
    value: function (t, e) {
      return this.updateHelpers.toggleDataPointSelection(t, e);
    }
  }, {
    key: "zoomX",
    value: function (t, e) {
      this.ctx.toolbar.zoomUpdateOptions(t, e);
    }
  }, {
    key: "setLocale",
    value: function (t) {
      this.localization.setCurrentLocaleValues(t);
    }
  }, {
    key: "dataURI",
    value: function (t) {
      return new G(this.ctx).dataURI(t);
    }
  }, {
    key: "exportToCSV",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      return new G(this.ctx).exportToCSV(t);
    }
  }, {
    key: "paper",
    value: function () {
      return this.w.globals.dom.Paper;
    }
  }, {
    key: "_parentResizeCallback",
    value: function () {
      this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize();
    }
  }, {
    key: "_windowResize",
    value: function () {
      var t = this;
      clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout(function () {
        t.w.globals.resized = !0, t.w.globals.dataChanged = !1, t.ctx.update();
      }, 150);
    }
  }, {
    key: "_windowResizeHandler",
    value: function () {
      var t = this.w.config.chart.redrawOnWindowResize;
      "function" == typeof t && (t = t()), t && this._windowResize();
    }
  }], [{
    key: "getChartByID",
    value: function (t) {
      var e = x.escapeString(t);
      if (Apex._chartInstances) {
        var i = Apex._chartInstances.filter(function (t) {
          return t.id === e;
        })[0];
        return i && i.chart;
      }
    }
  }, {
    key: "initOnLoad",
    value: function () {
      for (var e = document.querySelectorAll("[data-apexcharts]"), i = 0; i < e.length; i++) {
        new t(e[i], JSON.parse(e[i].getAttribute("data-options"))).render();
      }
    }
  }, {
    key: "exec",
    value: function (t, e) {
      var i = this.getChartByID(t);
      if (i) {
        i.w.globals.isExecCalled = !0;
        var a = null;
        if (-1 !== i.publicMethods.indexOf(e)) {
          for (var s = arguments.length, r = new Array(s > 2 ? s - 2 : 0), o = 2; o < s; o++) r[o - 2] = arguments[o];
          a = i[e].apply(i, r);
        }
        return a;
      }
    }
  }, {
    key: "merge",
    value: function (t, e) {
      return x.extend(t, e);
    }
  }]), t;
}();
module.exports = _t;

/***/ }),

/***/ 65226:
/*!*******************************************************!*\
  !*** ./node_modules/file-saver/dist/FileSaver.min.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (a, b) {
  if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  "use strict";

  function b(a, b) {
    return "undefined" == typeof b ? b = {
      autoBom: !1
    } : "object" != typeof b && (console.warn("Deprecated: Expected third argument to be a object"), b = {
      autoBom: !b
    }), b.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type) ? new Blob(["\uFEFF", a], {
      type: a.type
    }) : a;
  }
  function c(a, b, c) {
    var d = new XMLHttpRequest();
    d.open("GET", a), d.responseType = "blob", d.onload = function () {
      g(d.response, b, c);
    }, d.onerror = function () {
      console.error("could not download file");
    }, d.send();
  }
  function d(a) {
    var b = new XMLHttpRequest();
    b.open("HEAD", a, !1);
    try {
      b.send();
    } catch (a) {}
    return 200 <= b.status && 299 >= b.status;
  }
  function e(a) {
    try {
      a.dispatchEvent(new MouseEvent("click"));
    } catch (c) {
      var b = document.createEvent("MouseEvents");
      b.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), a.dispatchEvent(b);
    }
  }
  var f = "object" == typeof window && window.window === window ? window : "object" == typeof self && self.self === self ? self : "object" == typeof global && global.global === global ? global : void 0,
    a = f.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent),
    g = f.saveAs || ("object" != typeof window || window !== f ? function () {} : "download" in HTMLAnchorElement.prototype && !a ? function (b, g, h) {
      var i = f.URL || f.webkitURL,
        j = document.createElement("a");
      g = g || b.name || "download", j.download = g, j.rel = "noopener", "string" == typeof b ? (j.href = b, j.origin === location.origin ? e(j) : d(j.href) ? c(b, g, h) : e(j, j.target = "_blank")) : (j.href = i.createObjectURL(b), setTimeout(function () {
        i.revokeObjectURL(j.href);
      }, 4E4), setTimeout(function () {
        e(j);
      }, 0));
    } : "msSaveOrOpenBlob" in navigator ? function (f, g, h) {
      if (g = g || f.name || "download", "string" != typeof f) navigator.msSaveOrOpenBlob(b(f, h), g);else if (d(f)) c(f, g, h);else {
        var i = document.createElement("a");
        i.href = f, i.target = "_blank", setTimeout(function () {
          e(i);
        });
      }
    } : function (b, d, e, g) {
      if (g = g || open("", "_blank"), g && (g.document.title = g.document.body.innerText = "downloading..."), "string" == typeof b) return c(b, d, e);
      var h = "application/octet-stream" === b.type,
        i = /constructor/i.test(f.HTMLElement) || f.safari,
        j = /CriOS\/[\d]+/.test(navigator.userAgent);
      if ((j || h && i || a) && "undefined" != typeof FileReader) {
        var k = new FileReader();
        k.onloadend = function () {
          var a = k.result;
          a = j ? a : a.replace(/^data:[^;]*;/, "data:attachment/file;"), g ? g.location.href = a : location = a, g = null;
        }, k.readAsDataURL(b);
      } else {
        var l = f.URL || f.webkitURL,
          m = l.createObjectURL(b);
        g ? g.location = m : location.href = m, g = null, setTimeout(function () {
          l.revokeObjectURL(m);
        }, 4E4);
      }
    });
  f.saveAs = g.saveAs = g,  true && (module.exports = g);
});

/***/ }),

/***/ 67650:
/*!*************************************************************************************************************!*\
  !*** ./src/app/features/providers-management/add-edit-provider/add-edit-provider.component.scss?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.pwdActions {\n  gap: 10px;\n}\n\n.page-header {\n  margin-top: 64px;\n  margin-bottom: 40px;\n  row-gap: 1rem;\n}\n.page-header h2 {\n  margin: 0;\n  color: #24398A;\n  font-weight: 700;\n}\n.page-header div {\n  row-gap: 1rem;\n}\n\n.panel-title {\n  font-size: 1.5rem;\n  color: #24398A;\n  font-weight: 600;\n}\n\n.panel-subtitle {\n  font-weight: 400;\n  font-size: 16px;\n  color: #231F20;\n}\n\nh2 {\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 20px;\n  color: #24398A;\n}\n\n.mat-icon.material-icons.mat-icon-no-color {\n  color: var(--secondary-background);\n}\n\n.location-card button {\n  width: 40px;\n}\n.location-card button.x-button-location {\n  border-top-right-radius: 8px;\n  color: white;\n  border: transparent;\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n}\n.location-card button.edit-button-location {\n  background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;\n  border-bottom-right-radius: 8px;\n  color: white;\n  border: transparent;\n}\n\n.image-container {\n  position: relative;\n  width: 100%;\n  min-height: 7.5rem;\n  height: 100%;\n  border: 2px solid rgba(36, 57, 138, 0.08);\n  border-radius: 8px;\n  overflow: hidden;\n}\n.image-container .no-image {\n  width: 100%;\n  min-height: inherit;\n  background: rgba(36, 57, 138, 0.04);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #24398A;\n  gap: 0.75rem;\n}\n.image-container .no-image:before {\n  content: \"\\f03e\";\n  font-family: \"Font Awesome 5 Free\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 2.25rem;\n}\n.image-container .no-image:after {\n  font-size: 1rem;\n  content: attr(translatedContent);\n}\n.image-container .btn-gallery {\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(36, 57, 138, 0.16);\n  border-radius: 100%;\n  border: none;\n}\n.image-container .btn-gallery i {\n  color: var(--primary-background);\n  font-weight: 900;\n  font-size: 16px;\n}\n.image-container .btn-gallery {\n  position: absolute;\n  top: 0.875rem;\n  right: 0.875rem;\n}\n\ndiv p i {\n  padding-right: 10px;\n}\n\n.integration-class h5 {\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 140%;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n  /* Title */\n  color: #231F20;\n}\n\n@media only screen and (min-width: 320px) and (max-width: 480px) {\n  div.container.p-6.widget-container.card {\n    padding: 24px !important;\n  }\n  .mat-form-field.w-50.mat-primary.mat-form-field-type-mat-input.mat-form-field-appearance-legacy,\n  .mat-form-field.w-50.mat-form-field-type-mat-select.mat-form-field-appearance-legacy {\n    width: 100% !important;\n  }\n  h2.py-8 {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 20px;\n    color: #24398A;\n    padding: 25 0px;\n  }\n  .location-card.w-25.shadow-sm.px-4.py-2.rounded.position-relative {\n    width: 80% !important;\n  }\n  .col-9 {\n    width: 60% !important;\n  }\n  .col-3 {\n    width: 35% !important;\n  }\n  .btn-long {\n    min-width: 150px !important;\n  }\n  .d-flex.justify-content-center.justify-content-lg-between.align-items-center.flex-wrap {\n    flex-direction: row !important;\n  }\n  .btn-auto.btn-color-outline.w-100 {\n    padding: 0 5px !important;\n  }\n  .btn-auto.btn-color-outline.w-100 i.fas.fa-sync {\n    display: none;\n  }\n}\n@media only screen and (min-width: 481px) and (max-width: 768px) {\n  .mat-form-field.w-50.mat-primary.mat-form-field-type-mat-input.mat-form-field-appearance-legacy,\n  .mat-form-field.w-50.mat-form-field-type-mat-select.mat-form-field-appearance-legacy {\n    width: 100% !important;\n  }\n  h2.py-8 {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 20px;\n    color: #24398A;\n    padding: 25 0px;\n  }\n  .location-card.w-25.shadow-sm.px-4.py-2.rounded.position-relative {\n    width: 90% !important;\n  }\n  .col-9 {\n    width: 60% !important;\n  }\n  .col-3 {\n    width: 40% !important;\n  }\n  .btn-long {\n    min-width: 200px !important;\n  }\n  .d-flex.justify-content-center.justify-content-lg-between.align-items-center.flex-wrap {\n    flex-direction: row !important;\n  }\n}\n@media only screen and (min-width: 769px) and (max-width: 1023px) {\n  .btn-long {\n    min-width: 150px !important;\n  }\n  .col-3 {\n    width: 30% !important;\n  }\n  .btn-auto.btn-color-outline.w-100 {\n    padding: 0 5px !important;\n  }\n  .btn-auto.btn-color-outline.w-100 i.fas.fa-sync {\n    display: none;\n  }\n  .location-card.w-25.shadow-sm.px-4.py-2.rounded.position-relative {\n    width: 45% !important;\n  }\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/add-edit-provider/add-edit-provider.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACE,SAAA;AAkBF;;AAfA;EACI,gBAAA;EACA,mBAAA;EACA,aAAA;AAkBJ;AAhBI;EACE,SAAA;EACA,cDZU;ECaV,gBAAA;AAkBN;AAfI;EACE,aAAA;AAiBN;;AAbE;EACE,iBAAA;EACA,cDvBY;ECwBZ,gBAAA;AAgBJ;;AAbE;EACE,gBAAA;EACA,eAAA;EACA,cDzBQ;ACyCZ;;AAbE;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,cDrCY;ACqDhB;;AAZE;EACE,kCAAA;AAeJ;;AATI;EACE,WAAA;AAYN;AATM;EACE,4BAAA;EACA,YAAA;EACA,mBAAA;EACA,iIAAA;AAWR;AATM;EACG,iKAAA;EACD,+BAAA;EACA,YAAA;EACA,mBAAA;AAWR;;AANE;EACE,kBAAA;EACA,WAAA;EACA,kBAAA;EACA,YAAA;EACA,yCAAA;EACA,kBAAA;EACA,gBAAA;AASJ;AAPI;EACE,WAAA;EACA,mBAAA;EACA,mCAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,cDnFU;ECqFV,YAAA;AAQN;AANM;EACE,gBAAA;EACA,kCAAA;EACA,kBAAA;EACA,gBAAA;EACA,kBAAA;AAQR;AALM;EACE,eAAA;EACA,gCAAA;AAOR;AAFI;EACE,WAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,mCAAA;EACA,mBAAA;EACA,YAAA;AAIN;AAFM;EACE,gCAAA;EACA,gBAAA;EACA,eAAA;AAIR;AAMI;EACE,kBAAA;EACA,aAAA;EACA,eAAA;AAJN;;AAQE;EACE,mBAAA;AALJ;;AAQE;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;EAEA,UAAA;EAEA,cD/IQ;ACuIZ;;AAeE;EAGE;IACE,wBAAA;EAdJ;EAkBE;;IAEE,sBAAA;EAhBJ;EAoBE;IACE,gBAAA;IACA,eAAA;IACA,iBAAA;IACA,cAAA;IACA,eAAA;EAlBJ;EAsBE;IACE,qBAAA;EApBJ;EAwBE;IACE,qBAAA;EAtBJ;EAyBE;IACE,qBAAA;EAvBJ;EA2BE;IACE,2BAAA;EAzBJ;EA4BE;IACE,8BAAA;EA1BJ;EA8BE;IACE,yBAAA;EA5BJ;EA6BI;IACE,aAAA;EA3BN;AACF;AAiCE;EAEE;;IAEE,sBAAA;EAhCJ;EAoCG;IACC,gBAAA;IACA,eAAA;IACA,iBAAA;IACA,cAAA;IACA,eAAA;EAlCJ;EAsCE;IACE,qBAAA;EApCJ;EAwCE;IACE,qBAAA;EAtCJ;EAyCE;IACE,qBAAA;EAvCJ;EA2CG;IACC,2BAAA;EAzCJ;EA4CE;IACE,8BAAA;EA1CJ;AACF;AA6CE;EAEE;IACE,2BAAA;EA5CJ;EA+CE;IACE,qBAAA;EA7CJ;EAgDE;IACE,yBAAA;EA9CJ;EA+CI;IACE,aAAA;EA7CN;EAkDE;IACE,qBAAA;EAhDJ;AACF","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n\n.pwdActions {\n  gap: 10px;\n}\n\n.page-header {\n    margin-top: 64px;\n    margin-bottom: 40px;\n    row-gap: 1rem;\n\n    h2 {\n      margin: 0;\n      color: $primary-color;\n      font-weight: 700;\n    }\n\n    div {\n      row-gap: 1rem;\n    }\n  }\n\n  .panel-title {\n    font-size: 1.5rem;\n    color: $primary-color;\n    font-weight: 600;\n  }\n\n  .panel-subtitle {\n    font-weight: 400;\n    font-size: 16px;\n    color: $paragraph;\n  }\n\n  h2{\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 20px;\n    color: $primary-color;\n  }\n\n  //clear field ficon\n  .mat-icon.material-icons.mat-icon-no-color{\n    color:var(--secondary-background);\n  }\n\n  //location card\n\n  .location-card{\n    button{\n      width:40px;\n    }\n\n      button.x-button-location{\n        border-top-right-radius: 8px;\n        color: white;\n        border:transparent;\n        background:linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, #24398A, #24398A), #FFFFFF;\n      }\n      button.edit-button-location{\n         background: linear-gradient(90deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 50%), linear-gradient(0deg, rgba(36, 57, 138, 0.48), rgba(36, 57, 138, 0.48)), #FFFFFF;;\n        border-bottom-right-radius:8px ;\n        color:white;\n        border:transparent;\n      }\n  }\n\n  //galley\n  .image-container {\n    position: relative;\n    width: 100%;\n    min-height: 7.5rem;\n    height: 100%;\n    border: 2px solid rgba($primary-color, 0.08);\n    border-radius: 8px;\n    overflow: hidden;\n\n    & .no-image {\n      width: 100%;\n      min-height: inherit;\n      background: rgba($primary-color, 0.04);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      color: $primary-color;\n      //cursor: pointer;\n      gap: 0.75rem;\n\n      &:before {\n        content: '\\f03e';\n        font-family: 'Font Awesome 5 Free';\n        font-style: normal;\n        font-weight: 400;\n        font-size: 2.25rem;\n      }\n\n      &:after {\n        font-size: 1rem;\n        content: attr(translatedContent);\n      }\n    }\n\n    // .btn-thumbnail,\n    .btn-gallery {\n      width: 2rem;\n      height: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba($primary-color, 0.16);\n      border-radius: 100%;\n      border: none;\n\n      i {\n        color: var(--primary-background);\n        font-weight: 900;\n        font-size: 16px;\n      }\n    }\n\n    // .btn-thumbnail {\n    //   position: absolute;\n    //   top: 2.125rem;\n    //   right: 2.125rem;\n    // }\n\n    .btn-gallery {\n      position: absolute;\n      top: 0.875rem;\n      right: 0.875rem;\n    }\n  }\n\n  div p i{\n    padding-right: 10px;\n  }\n\n  .integration-class h5{\n    font-weight: 700;\n    font-size: 16px;\n    line-height: 140%;\n\n    display: flex;\n    align-items: center;\n    text-align: center;\n    letter-spacing: -0.02em;\n\n    /* Title */\n\n    color: $paragraph;\n  }\n\n\n  //responsive\n\n  //mobile\n  @media only screen and (min-width:320px) and (max-width: 480px){\n\n    //margin general container\n    div.container.p-6.widget-container.card{\n      padding: 24px!important;\n    }\n\n    //form fields 100% width\n    .mat-form-field.w-50.mat-primary.mat-form-field-type-mat-input.mat-form-field-appearance-legacy,\n    .mat-form-field.w-50.mat-form-field-type-mat-select.mat-form-field-appearance-legacy{\n      width: 100%!important;\n    }\n\n    //title\n    h2.py-8{\n      font-weight: 700;\n      font-size: 24px;\n      line-height: 20px;\n      color: #24398A;\n      padding: 25 0px ;\n    }\n\n    //location card\n    .location-card.w-25.shadow-sm.px-4.py-2.rounded.position-relative{\n      width:80%!important;\n    }\n\n    //cont Bestinform\n    .col-9{\n      width:60%!important;\n    }\n\n    .col-3{\n      width:35%!important;\n    }\n\n    //back /add/ edit buttons\n    .btn-long{\n      min-width: 150px!important;\n    }\n\n    .d-flex.justify-content-center.justify-content-lg-between.align-items-center.flex-wrap{\n      flex-direction: row!important;\n    }\n\n    //generate password button\n    .btn-auto.btn-color-outline.w-100{\n      padding: 0 5px!important;\n      i.fas.fa-sync{\n        display: none;\n      }\n    }\n\n  }\n\n  //tablets\n  @media only screen and (min-width:481px) and (max-width: 768px){\n    //form fields 100% width\n    .mat-form-field.w-50.mat-primary.mat-form-field-type-mat-input.mat-form-field-appearance-legacy,\n    .mat-form-field.w-50.mat-form-field-type-mat-select.mat-form-field-appearance-legacy{\n      width: 100%!important;\n    }\n\n     //title\n     h2.py-8{\n      font-weight: 700;\n      font-size: 24px;\n      line-height: 20px;\n      color: #24398A;\n      padding: 25 0px ;\n    }\n\n    //location card\n    .location-card.w-25.shadow-sm.px-4.py-2.rounded.position-relative{\n      width:90%!important;\n    }\n\n    //cont Bestinform\n    .col-9{\n      width:60%!important;\n    }\n\n    .col-3{\n      width:40%!important;\n    }\n\n     //back /add/ edit buttons\n     .btn-long{\n      min-width: 200px!important;\n    }\n\n    .d-flex.justify-content-center.justify-content-lg-between.align-items-center.flex-wrap{\n      flex-direction: row!important;\n    }\n  }\n\n  @media only screen and (min-width:769px) and (max-width: 1023px){\n    //back /add/ edit buttons\n    .btn-long{\n      min-width: 150px!important;\n    }\n\n    .col-3{\n      width:30%!important;\n    }\n\n    .btn-auto.btn-color-outline.w-100{\n      padding: 0 5px!important;\n      i.fas.fa-sync{\n        display: none;\n      }\n    }\n\n    //location card\n    .location-card.w-25.shadow-sm.px-4.py-2.rounded.position-relative{\n      width:45%!important;\n    }\n  }\n\n\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 81339:
/*!***********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/balance-provider/balance-provider.component.scss?ngResource ***!
  \***********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n:root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.provider-header-container {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n}\n\n.table_container {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.positive-amount {\n  color: rgb(52, 168, 83);\n  display: flex;\n  justify-content: flex-end;\n  padding-right: 50%;\n}\n\n.negative-amount {\n  color: rgb(234, 67, 53);\n  display: flex;\n  justify-content: flex-end;\n  padding-right: 50%;\n}\n\n.view-provider-container {\n  border: 1px solid transparent;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.web-header h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 42px;\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #24398A;\n  margin-right: 10px;\n}\n\n.view-provider-container .balance-class h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 140%;\n  /* identical to box height, or 45px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #24398A;\n}\n.view-provider-container p.align-self-baseline.currency-class {\n  font-weight: 300;\n  font-size: 10px !important;\n  line-height: 12px;\n}\n.view-provider-container .inside_view_container {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n}\n.view-provider-container .inside_view_container div.balance-class {\n  flex-wrap: wrap;\n  column-gap: 24px;\n}\n.view-provider-container .inside_view_container h4 {\n  color: #231F20;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 56px;\n  display: flex;\n  align-items: center;\n}\n.view-provider-container .inside_view_container h6 {\n  color: #24398A;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.view-provider-container .inside_view_container h6 i {\n  margin-right: 10px;\n}\n.view-provider-container .inside_view_container p {\n  color: #231F20;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}\n.view-provider-container .inside_view_container .big-currency-class {\n  font-weight: 500 !important;\n  font-size: 20px !important;\n  line-height: 23px !important;\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label {\n  border: 1px solid var(--secondary-background);\n  border-radius: 30px;\n  padding: 8px;\n  margin-top: 10px;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label .transaction-date p {\n  color: black;\n  font-weight: 300;\n  font-size: 12px;\n  line-height: 14px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label .transaction-date p.number {\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  margin: 2px;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label h5.amount {\n  color: red;\n  font-weight: 300;\n  font-size: 20px;\n  line-height: 140%;\n  /* identical to box height, or 28px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label p {\n  font-weight: 300;\n  font-size: 10px;\n  line-height: 12px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.view-provider-container .transaction-history-container .date-rectangle {\n  background-color: rgba(36, 57, 138, 0.08);\n  padding: 6px 12px;\n  border-radius: 8px;\n}\n.view-provider-container .transaction-history-container .date-rectangle p {\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #24398A;\n  margin-bottom: 0px;\n}\n.view-provider-container .transaction-history-container .date-rectangle p i {\n  margin-left: 10px;\n}\n.view-provider-container .transaction-history-container .blue-percent-rectangle {\n  border-radius: 4px;\n  background-color: #24398A;\n  height: 24px;\n}\n.view-provider-container .transaction-history-container .blue-percent-rectangle p {\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: white;\n}\n.view-provider-container .transaction-history-container .blue-percent-rectangle p i {\n  padding-right: 5px;\n}\n\n.resources-class h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 140%;\n  /* identical to box height, or 45px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #24398A;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.resources-class h4 {\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  text-align: right;\n  letter-spacing: -0.02em;\n  color: #231F20;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis !important;\n}\n.resources-class h4.price-resource-class {\n  color: #24398A;\n}\n.resources-class p {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: rgba(35, 31, 32, 0.5);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis !important;\n}\n.resources-class .resource-card {\n  height: 475px;\n  background: #FFFFFF;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  padding: 25px;\n  /* Inside auto layout */\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n  margin-bottom: 24px;\n}\n.resources-class .resource-card p i {\n  margin-right: 5px;\n}\n.resources-class .resource-card .title-n-location {\n  min-height: 65px;\n}\n.resources-class .resource-card .resource-img {\n  height: 320px;\n}\n.resources-class .resources-cards-row {\n  display: flex;\n  column-gap: 24px;\n}\n\n.payment-request-class h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 140%;\n  /* identical to box height, or 45px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #24398A;\n}\n.payment-request-class h4 {\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  text-align: right;\n  letter-spacing: -0.02em;\n  color: #231F20;\n}\n.payment-request-class p {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: rgba(35, 31, 32, 0.5);\n}\n\n.resources-class img {\n  width: 140px !important;\n  object-fit: cover;\n}\n\n@media only screen and (min-width: 320px) and (max-width: 480px) {\n  .mobile-header {\n    display: block;\n    background-color: var(--primary-background);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  }\n  .web-header {\n    display: none;\n  }\n  .provider-header-container .px-10 {\n    padding-left: 0px;\n    padding-right: 0px;\n  }\n  .container.provider-header-container {\n    background: white;\n    margin-top: 20px !important;\n  }\n  .client-general-box {\n    padding: 0px;\n  }\n  .provider-header-container {\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    border-radius: 0px;\n  }\n}\n@media only screen and (min-width: 481px) and (max-width: 768px) {\n  .mobile-header {\n    display: none !important;\n  }\n  .provider-header-container .px-10 {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n  .applied-jobs-card-class img {\n    display: none;\n  }\n}\n@media only screen and (min-width: 769px) and (max-width: 1023px) {\n  .mobile-header {\n    display: none !important;\n  }\n  .provider-header-container .px-10 {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n  .inside_view_container h4 {\n    font-size: 24px !important;\n    display: flex;\n    align-items: left;\n  }\n  .inside_view_container h6 {\n    text-align: left !important;\n  }\n}\n@media only screen and (min-width: 1024px) and (max-width: 1200px) {\n  .mobile-header {\n    display: none !important;\n  }\n  .inside_view_container h4 {\n    font-size: 40px !important;\n    display: flex;\n    align-items: left;\n  }\n  .inside_view_container h6 {\n    text-align: left !important;\n  }\n}\n@media only screen and (min-width: 1200px) {\n  .mobile-header {\n    display: none !important;\n  }\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/balance-provider/balance-provider.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;ADHA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACMF;;ADHA;EACE,6BAAA;EACA,+BAAA;ACMF;;ADsBA;EACI,oCAAA;ACnBJ;;ADsBA;EACQ,kCAAA;ACnBR;;AAjCA;EACI,2CAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;AAoCJ;;AAhCA;EACI,2CAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;EACA,gBAAA;AAmCJ;;AA/BA;EACI,uBAAA;EACA,aAAA;EACA,yBAAA;EACA,kBAAA;AAkCJ;;AAhCA;EACI,uBAAA;EACA,aAAA;EACA,yBAAA;EACA,kBAAA;AAmCJ;;AA9BA;EACI,6BAAA;EACA,kBAAA;EACA,gBAAA;AAiCJ;;AA7BI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,cDhDQ;ECiDR,kBAAA;AAgCR;;AAxBQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EAEA,cDnEI;AC4FhB;AArBI;EACI,gBAAA;EACA,0BAAA;EACA,iBAAA;AAuBR;AApBI;EACI,2CAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;AAsBR;AApBQ;EACI,eAAA;EACA,gBAAA;AAsBZ;AAnBQ;EACI,cDpFA;ECqFA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;AAqBZ;AAjBQ;EACI,cDnGI;ECoGJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;AAkBZ;AAhBY;EACI,kBAAA;AAkBhB;AAdQ;EACI,cD9GA;EC+GA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AAeZ;AAZQ;EACI,2BAAA;EACA,0BAAA;EACA,4BAAA;EACA,aAAA;EACA,mBAAA;EACA,kBAAA;AAcZ;AALA;EACI,6CAAA;EACA,mBAAA;EACA,YAAA;EACA,gBAAA;AAOJ;AAJM;EAEE,YAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACF,4BAAA;EAEE,aAAA;EACA,mBAAA;EACA,kBAAA;AAIR;AAFM;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,WAAA;AAGR;AAGI;EACE,UAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AAFN;AAII;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;AAHN;AAUI;EACI,yCAAA;EACA,iBAAA;EACA,kBAAA;AARR;AASQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,cDtNI;ECuNJ,kBAAA;AAPZ;AASY;EACI,iBAAA;AAPhB;AAYI;EACI,kBAAA;EACA,yBDjOQ;ECkOR,YAAA;AAVR;AAWS;EACG,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,YAAA;AAVZ;AAYY;EACI,kBAAA;AAVhB;;AAoBI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EAEA,cDnQQ;ECqQR,mBAAA;EACA,gBAAA;EACA,uBAAA;AApBR;AAuBI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,iBAAA;EACA,uBAAA;EACA,cD/QI;ECiRJ,mBAAA;EACA,gBAAA;EACA,kCAAA;AAvBR;AA0BI;EACI,cD5RQ;ACoQhB;AA2BI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,4BAAA;EAEA,mBAAA;EACA,gBAAA;EACA,kCAAA;AA3BR;AA8BI;EAEI,aAAA;EAEA,mBAAA;EACA,yCAAA;EACA,kBAAA;EACA,aAAA;EAEA,uBAAA;EACA,UAAA;EACA,QAAA;EACA,YAAA;EACA,mBAAA;AA/BR;AAiCQ;EACI,iBAAA;AA/BZ;AAkCQ;EACI,gBAAA;AAhCZ;AAoCQ;EACI,aAAA;AAlCZ;AAqCI;EACQ,aAAA;EAEA,gBAAA;AApCZ;;AA2CI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,cD7VQ;ACqThB;AA2CI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EACA,aAAA;EACA,mBAAA;EACA,iBAAA;EACA,uBAAA;EACA,cDpWI;AC2TZ;AA4CI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,4BAAA;AA1CR;;AA+CA;EACI,uBAAA;EACA,iBAAA;AA5CJ;;AAgDA;EACI;IACI,cAAA;IACA,2CAAA;IACA,2CAAA;EA7CN;EA+CE;IACI,aAAA;EA7CN;EAgDE;IACI,iBAAA;IACA,kBAAA;EA9CN;EAiDE;IACI,iBAAA;IACA,2BAAA;EA/CN;EAmDE;IACI,YAAA;EAjDN;EAoDE;IACI,6BAAA;IACA,YAAA;IACA,gBAAA;IACA,kBAAA;EAlDN;AACF;AAuDA;EAEI;IACI,wBAAA;EAtDN;EAyDE;IACI,kBAAA;IACA,mBAAA;EAvDN;EA4DM;IACG,aAAA;EA1DT;AACF;AA+DA;EAEI;IACI,wBAAA;EA9DN;EAiEE;IACI,kBAAA;IACA,mBAAA;EA/DN;EAoEM;IACI,0BAAA;IACA,aAAA;IACA,iBAAA;EAlEV;EAqEM;IACI,2BAAA;EAnEV;AACF;AAwEA;EAEI;IACI,wBAAA;EAvEN;EA4EM;IACI,0BAAA;IACA,aAAA;IACA,iBAAA;EA1EV;EA6EM;IACI,2BAAA;EA3EV;AACF;AAgFA;EAEI;IACI,wBAAA;EA/EN;AACF","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"src/app/theme/styles/components/_colors.scss\";\n//header container\n.provider-header-container{\n    background-color: var(--primary-background);\n    border: 1px solid rgba(36, 57, 138, 0.16);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n    border-radius: 8px;\n}\n\n//white container for table\n.table_container{\n    background-color: var(--primary-background);\n    border: 1px solid rgba(36, 57, 138, 0.16);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n    border-radius: 8px;\n    overflow: hidden;\n\n}\n\n.positive-amount{\n    color: rgba(52, 168, 83, 1);\n    display: flex;\n    justify-content: flex-end;\n    padding-right:50%;\n}\n.negative-amount{\n    color: rgba(234, 67, 53, 1);\n    display: flex;\n    justify-content: flex-end;\n    padding-right:50%;\n\n}\n\n//general content container\n.view-provider-container{\n    border: 1px solid transparent;\n    border-radius: 8px;\n    overflow: hidden;\n}\n\n.web-header{\n    h2{\n        font-weight: 700;\n        font-size: 32px;\n        line-height: 42px;\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n        color: $primary-color;\n        margin-right: 10px;\n    }\n}\n\n\n//general content container\n.view-provider-container{\n    .balance-class{\n        h2{\n            font-weight: 700;\n            font-size: 32px;\n            line-height: 140%;\n            /* identical to box height, or 45px */\n\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.02em;\n\n            color: $primary-color;\n        }\n    }\n\n    p.align-self-baseline.currency-class{\n        font-weight: 300;\n        font-size: 10px!important;\n        line-height: 12px;\n    }\n\n    .inside_view_container{\n        background-color: var(--primary-background);\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n        border-radius: 8px;\n\n        div.balance-class{\n            flex-wrap: wrap;\n            column-gap: 24px;\n        }\n\n        h4{\n            color: $paragraph;\n            font-weight: 700;\n            font-size: 48px;\n            line-height: 56px;\n            display: flex;\n            align-items: center;\n\n        }\n\n        h6{\n            color: $primary-color;\n            font-weight: 600;\n            font-size: 16px;\n            line-height: 19px;\n            /* identical to box height */\n\n            display: flex;\n            align-items: center;\n            text-align: center;\n\n            i{\n                margin-right: 10px;\n            }\n        }\n\n        p{\n            color: $paragraph;\n            font-weight: 300;\n            font-size: 16px;\n            line-height: 140%;\n            /* or 22px */\n\n            display: flex;\n            align-items: center;\n            text-align: center;\n            letter-spacing: -0.02em;\n        }\n        //the currency (ron) rom big prices\n        .big-currency-class{\n            font-weight: 500!important;\n            font-size: 20px!important;\n            line-height: 23px!important;\n            display: flex;\n            align-items: center;\n            text-align: center;\n        }\n\n    }\n\n\n\n.recent-transaction-container{\n    //recent transactions\n.recent-transactions-label{\n    border:1px solid var(--secondary-background);\n    border-radius: 30px;\n    padding:8px;\n    margin-top: 10px;\n\n    .transaction-date{\n      p{\n\n        color: black;\n        font-weight: 300;\n        font-size: 12px;\n        line-height: 14px;\n      /* identical to box height */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n      }\n      p.number{\n        font-weight: 300;\n        font-size: 16px;\n        line-height: 19px;\n        /* identical to box height */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n        margin:2px\n      }\n    }\n\n\n\n    h5.amount{\n      color:red;\n      font-weight: 300;\n      font-size: 20px;\n      line-height: 140%;\n      /* identical to box height, or 28px */\n\n      display: flex;\n      align-items: center;\n      text-align: center;\n      letter-spacing: -0.02em;\n    }\n    p{\n      font-weight: 300;\n      font-size: 10px;\n      line-height: 12px;\n      /* identical to box height */\n\n      display: flex;\n      align-items: center;\n      text-align: center;\n    }\n  }\n}\n\n.transaction-history-container{\n\n    .date-rectangle{\n        background-color: rgba($primary-color, 0.08);\n        padding: 6px 12px;\n        border-radius: 8px;\n        p{\n            font-weight: 700;\n            font-size: 14px;\n            line-height: 16px;\n            display: flex;\n            align-items: center;\n            text-align: center;\n            color: $primary-color;\n            margin-bottom: 0px;\n\n            i{\n                margin-left:10px;\n            }\n        }\n    }\n\n    .blue-percent-rectangle{\n        border-radius: 4px;\n        background-color:$primary-color;\n        height: 24px;\n         p{\n            font-weight: 700;\n            font-size: 16px;\n            line-height: 19px;\n            /* identical to box height */\n\n            display: flex;\n            align-items: center;\n            text-align: center;\n            color:white;\n\n            i{\n                padding-right:5px;\n            }\n         }\n        }\n    }\n}\n\n\n//resources-class-----------------------------------\n.resources-class{\n    h2{\n        font-weight: 700;\n        font-size: 32px;\n        line-height: 140%;\n        /* identical to box height, or 45px */\n\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n\n        color: $primary-color;\n\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    h4{\n        font-weight: 700;\n        font-size: 24px;\n        line-height: 140%;\n        /* identical to box height, or 34px */\n\n        display: flex;\n        align-items: center;\n        text-align: right;\n        letter-spacing: -0.02em;\n        color: $paragraph;\n\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis!important;\n    }\n\n    h4.price-resource-class{\n        color: $primary-color;\n    }\n\n    p{\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 140%;\n        /* or 22px */\n\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n        color:rgba($paragraph,0.5);\n\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis!important;\n    }\n\n    .resource-card{\n        //width:  90%;\n        height: 475px;\n\n        background: #FFFFFF;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        padding:25px;\n\n        /* Inside auto layout */\n        flex: none;\n        order: 0;\n        flex-grow: 0;\n        margin-bottom: 24px;\n\n        p i{\n            margin-right: 5px;\n        }\n\n        .title-n-location{\n            min-height:65px\n        }\n\n        //img\n        .resource-img{\n            height:320px;\n        }\n    }\n    .resources-cards-row{\n            display:flex;\n            // flex-wrap: wrap;\n            column-gap: 24px;\n            // overflow-wrap: break-word;\n        }\n}\n\n//Payment request\n.payment-request-class{\n    h2{\n        font-weight: 700;\n        font-size: 32px;\n        line-height: 140%;\n        /* identical to box height, or 45px */\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n        color: $primary-color;\n    }\n\n    h4{\n        font-weight: 700;\n        font-size: 24px;\n        line-height: 140%;\n        /* identical to box height, or 34px */\n        display: flex;\n        align-items: center;\n        text-align: right;\n        letter-spacing: -0.02em;\n        color: $paragraph;\n    }\n\n    p{\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 140%;\n        /* or 22px */\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n        color:rgba($paragraph,0.5);\n\n    }\n}\n\n.resources-class img {\n    width: 140px !important;\n    object-fit: cover;\n}\n\n\n@media only screen and (min-width:320px) and (max-width: 480px){\n    .mobile-header{\n        display: block;\n        background-color: var(--primary-background);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n    }\n    .web-header{\n        display: none;\n    }\n\n    .provider-header-container .px-10{\n        padding-left: 0px;\n        padding-right: 0px;\n    }\n\n    .container.provider-header-container{\n        background: white;\n        margin-top:20px!important;\n    }\n\n    //no margin/padding for container-fluid\n    .client-general-box{\n        padding:0px;\n    }\n\n    .provider-header-container{\n        background-color: transparent;\n        border: none;\n        box-shadow:none;\n        border-radius: 0px;\n    }\n\n\n}\n\n@media only screen and (min-width:481px) and (max-width: 768px){\n    //hide mobile header for this screen\n    .mobile-header{\n        display: none!important;\n    }\n\n    .provider-header-container .px-10{\n        padding-left: 20px;\n        padding-right: 20px;\n    }\n\n    //applied jobs\n    .applied-jobs-card-class{\n        img{\n           display: none;\n        }\n    }\n\n}\n\n@media only screen and (min-width:769px) and (max-width: 1023px){\n    //hide mobile header for this screen\n    .mobile-header{\n        display: none!important;\n    }\n\n    .provider-header-container .px-10{\n        padding-left: 20px;\n        padding-right: 20px;\n    }\n\n    //big number\n    .inside_view_container{\n        h4{\n            font-size: 24px!important;\n            display: flex;\n            align-items: left;\n        }\n\n        h6{\n            text-align: left!important;\n        }\n\n    }\n}\n\n@media only screen and (min-width:1024px) and (max-width: 1200px){\n    //hide mobile header for this screen\n    .mobile-header{\n        display: none!important;\n    }\n\n    //big number\n    .inside_view_container{\n        h4{\n            font-size: 40px!important;\n            display: flex;\n            align-items: left;\n        }\n\n        h6{\n            text-align: left!important;\n        }\n\n    }\n}\n\n@media only screen and (min-width:1200px){\n    //hide mobile header for this screen\n    .mobile-header{\n        display: none!important;\n    }\n\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 6953:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/features/providers-management/change-status-provider/change-status-provider.component.scss?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_AT_RULE_IMPORT_0___ = __webpack_require__(/*! -!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[0]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[1]!../../../../assets/fonts/font-awesome/css/all.css */ 46337);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n}\n.btn-long span, .btn-long i, .btn-auto span, .btn-auto i {\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-long:hover, .btn-auto:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-long:focus, .btn-long:active, .btn-auto:focus, .btn-auto:active {\n  transition: 0s;\n  outline: none;\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n}\n.btn-round span, .btn-round i {\n  font-size: 12px;\n  margin-right: 0px !important;\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-round:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-round:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  border-radius: 90px;\n}\n.btn-label span, .btn-label i {\n  font-size: 12px;\n  width: 24px;\n  height: 24px;\n  font-size: 16px;\n}\n.btn-label:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-label:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-color-fill {\n  background-color: #24398A;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-color-fill span, .btn-color-fill i {\n  color: var(--primary-background);\n}\n.btn-color-fill:hover {\n  background: rgba(36, 57, 138, 0.72);\n}\n.btn-color-fill:active {\n  background: rgba(36, 57, 138, 0.48);\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: #24398A;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n}\n.btn-white-fill span, .btn-white-fill i {\n  color: #24398A;\n}\n.btn-white-fill:hover {\n  background: rgba(237, 240, 250, 0.72);\n}\n.btn-white-fill:active {\n  background: rgba(237, 240, 250, 0.48);\n}\n\n.btn-like-fill {\n  background-color: #2CCEA7;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-like-fill span, .btn-like-fill i {\n  color: var(--primary-background);\n}\n.btn-like-fill:hover {\n  background: rgba(44, 206, 167, 0.72);\n}\n.btn-like-fill:active {\n  background: rgba(44, 206, 167, 0.48);\n}\n\n.btn-dislike-fill {\n  background-color: #EA4335;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-dislike-fill span, .btn-dislike-fill i {\n  color: var(--primary-background);\n}\n.btn-dislike-fill:hover {\n  background: rgba(234, 67, 53, 0.72);\n}\n.btn-dislike-fill:active {\n  background: rgba(234, 67, 53, 0.48);\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled, .btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-fill:disabled span, .btn-color-fill:disabled i, .btn-white-fill:disabled span, .btn-white-fill:disabled i, .btn-dislike-fill:disabled span, .btn-dislike-fill:disabled i, .btn-like-fill:disabled span, .btn-like-fill:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-fill:disabled:hover, .btn-white-fill:disabled:hover, .btn-dislike-fill:disabled:hover, .btn-like-fill:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-color-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: #24398A;\n}\n.btn-color-outline span, .btn-color-outline i {\n  color: #24398A;\n}\n.btn-color-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-color-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-outline {\n  background: rgba(36, 57, 138, 0);\n  color: var(--primary-background);\n  border-color: #24398A;\n}\n.btn-white-outline span, .btn-white-outline i {\n  color: #24398A;\n}\n.btn-white-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-border-outline {\n  background: rgba(36, 57, 138, 0);\n  color: white;\n  border-color: white;\n}\n.btn-white-border-outline span, .btn-white-border-outline i {\n  color: white;\n}\n.btn-white-border-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-border-outline:focus, .btn-white-border-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  border-color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-outline:disabled span, .btn-color-outline:disabled i, .btn-white-outline:disabled span, .btn-white-outline:disabled i, .btn-white-border-outline:disabled span, .btn-white-border-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-outline:disabled:hover, .btn-white-outline:disabled:hover, .btn-white-border-outline:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-no-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n}\n.btn-no-outline span, .btn-no-outline i {\n  color: #24398A;\n}\n.btn-no-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-no-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-no-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-no-outline:disabled span, .btn-no-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-no-outline:disabled:hover {\n  box-shadow: none;\n}\n.btn-no-outline:disabled:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.active-label-button {\n  background: #34A853;\n  color: white;\n  border-color: transparent;\n}\n.active-label-button span, .active-label-button i {\n  color: white;\n}\n.active-label-button:hover {\n  background: rgba(52, 168, 83, 0.8);\n}\n.active-label-button:focus, .active-label-button:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.inactive-label-button {\n  background: #848484;\n  color: white;\n  border-color: transparent;\n}\n.inactive-label-button span, .inactive-label-button i {\n  color: white;\n}\n.inactive-label-button:hover {\n  background: rgba(132, 132, 132, 0.8);\n}\n.inactive-label-button:focus, .inactive-label-button:active {\n  background: rgba(132, 132, 132, 0.8);\n}\n\n.disabled-label-button {\n  background: #E64335;\n  color: white;\n  border-color: transparent;\n}\n.disabled-label-button span, .disabled-label-button i {\n  color: white;\n}\n.disabled-label-button:hover {\n  background: rgba(230, 67, 53, 0.8);\n}\n.disabled-label-button:focus, .disabled-label-button:active {\n  background: rgba(230, 67, 53, 0.8);\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.container {\n  padding: 32px 52px;\n  border: none;\n}\n\np {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  color: #231F20;\n  opacity: 0.6;\n}\n\n.btn-long {\n  min-width: 274px;\n}\n\n@media screen and (min-width: 1020px) {\n  .container.modal-content {\n    border: none;\n  }\n}\n.modal-header {\n  border: none;\n  max-width: 615.95px;\n}\n.modal-header h4.modal-title {\n  color: #24398A !important;\n  font-size: 24px;\n  font-weight: 600;\n  color: #231F20;\n  line-height: 33.6px;\n  text-align: left;\n}\n\n.modal-body {\n  max-width: 615.95px;\n}\n.modal-body .modal-body-text {\n  font-size: 16px;\n  font-weight: 400;\n  color: #231F20;\n  line-height: 22.4px;\n  text-align: left;\n}\n\n.modal-footer {\n  max-width: 615.95px;\n  border: none;\n}\n.modal-footer button.btn-long {\n  align-items: center;\n  max-width: 303px !important;\n  height: 50px;\n  margin: 0px;\n}\n\n::ng-deep .mat-select-arrow-wrapper.ng-tns-c244-13 {\n  color: #24398A !important;\n}\n\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #24398A !important;\n  opacity: 0.5 !important;\n}\n\n::ng-deep .mat-select-arrow-wrapper.ng-tns-c244-13 {\n  color: #24398A !important;\n}\n\n.mat-error {\n  color: red;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/change-status-provider/change-status-provider.component.scss","webpack://./src/app/theme/styles/components/_fonts.scss","webpack://./src/app/theme/styles/components/_buttons.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACZF;;ADeA;EACE,6BAAA;EACA,+BAAA;ACZF;;ADwCA;EACI,oCAAA;ACrCJ;;ADwCA;EACQ,kCAAA;ACrCR;;ACbA;EACE,iCALiB;ADqBnB;;ACbA;EACE,eAAA;EACA,iBAAA;ADgBF;;ACbA;EACE,gBAAA;EACA,cFfc;AC+BhB;;AE7BA;EACE,gBAAA;AFgCF;;AE7BA;EACE,WAAA;AFgCF;;AE7BA;EACE,qBAAA;EACA,eAAA;EACA,iCDbiB;ECcjB,gBAAA;EACA,SAAA;EACA,oBAAA;EACA,uBAAA;EACA,mBAAA;EACA,eAAA;EACA,YAAA;EACA,iBAAA;EACA,oBAAA;AFgCF;AE7BE;EAEE;oBAAA;AF+BJ;AE3BE;EACE,yCAAA;EACA,4BAAA;AF6BJ;AExBE;EACE,cAAA;EACA,aAAA;AF0BJ;;AEtBA;EACE,WAAA;AFyBF;;AEtBA;EACE,YAAA;EACA,WAAA;EACA,aAAA;EACA,cAAA;EACA,uBAAA;EACA,mBAAA;EACA,oBAAA;EACA,iBAAA;AFyBF;AEvBE;EACE,eAAA;EACA,4BAAA;EACA;oBAAA;AF0BJ;AEtBE;EACE,yCAAA;EACA,4BAAA;AFwBJ;AEpBE;EACE,cAAA;EACA,aAAA;AFsBJ;;AElBA;EACE,mBAAA;EACA,mBAAA;EACA,YAAA;EACA,QAAA;EACA,YAAA;EACA,YAAA;EAEA,mBAAA;AFoBF;AElBE;EACE,eAAA;EACA,WAAA;EACA,YAAA;EACA,eAAA;AFoBJ;AEjBE;EACE,yCAAA;EACA,4BAAA;AFmBJ;AEfG;EACC,cAAA;EACA,aAAA;AFiBJ;;AEVA;EACE,yBH9Gc;EG+Gd,gCAAA;EACA,YAAA;AFaF;AEXE;EACE,gCAAA;AFaJ;AEVE;EACE,mCAAA;AFYJ;AETG;EACC,mCAAA;AFWJ;;AEPA;EACE,2CAAA;EACA,cHjIc;EGkId,YAAA;EACA,yCAAA;AFUF;AERE;EACE,cHtIY;ACgJhB;AEPE;EACE,qCAAA;AFSJ;AEJG;EACC,qCAAA;AFMJ;;AEFA;EACE,yBH9GU;EG+GV,gCAAA;EACA,YAAA;AFKF;AEHE;EACE,gCAAA;AFKJ;AEFE;EACE,oCAAA;AFIJ;AEAE;EACE,oCAAA;AFEJ;;AEEA;EACE,yBHhIc;EGiId,gCAAA;EACA,YAAA;AFCF;AECE;EACE,gCAAA;AFCJ;AEEE;EACE,mCAAA;AFAJ;AEIE;EACE,mCAAA;AFFJ;;AEMA;EACE,6CAAA;EACA,6BAAA;EACA,mBAAA;AFHF;AEKE;EACE,6BAAA;AFHJ;AEME;EACE,gBAAA;AFJJ;;AESA;EACE,gCAAA;EACA,cH3Mc;EG4Md,qBH5Mc;ACsMhB;AEQE;EACE,cH/MY;ACyMhB;AESE;EACE,mCAAA;AFPJ;AEWG;EACC,mCAAA;AFTJ;;AEaA;EACE,gCAAA;EACA,gCAAA;EACA,qBH/Nc;ACqNhB;AEYE;EACE,cHlOY;ACwNhB;AEaE;EACE,mCAAA;AFXJ;AEeE;EACE,mCAAA;AFbJ;;AEiBA;EACE,gCAAA;EACA,YAAA;EACA,mBAAA;AFdF;AEgBE;EACE,YAAA;AFdJ;AEiBE;EACE,mCAAA;AFfJ;AEkBG;EACC,mCAAA;AFhBJ;;AEoBA;EACE,gCAAA;EACA,6BAAA;EACA,oCAAA;EACA,mBAAA;AFjBF;AEmBE;EACE,6BAAA;AFjBJ;AEoBE;EACE,gBAAA;AFlBJ;;AEsBA;EACE,gCAAA;EACA,cHlRc;EGmRd,yBAAA;EACA,WAAA;EACA,YAAA;AFnBF;AEqBE;EACE,cHxRY;ACqQhB;AEsBE;EACE,mCAAA;AFpBJ;AEwBE;EACE,mCAAA;AFtBJ;;AE0BA;EACE,gCAAA;EACA,6BAAA;EACA,mBAAA;AFvBF;AEyBE;EACE,6BAAA;AFvBJ;AE0BE;EACE,gBAAA;AFxBJ;AE0BG;EACC,kCAAA;AFxBJ;;AE4BA;EACE,mBH1QgB;EG2QhB,YAAA;EACA,yBAAA;AFzBF;AE2BE;EACE,YAAA;AFzBJ;AE4BE;EACE,kCAAA;AF1BJ;AE6BE;EACE,kCAAA;AF3BJ;;AE+BA;EACE,mBH3RkB;EG4RlB,YAAA;EACA,yBAAA;AF5BF;AE8BE;EACE,YAAA;AF5BJ;AE+BE;EACE,oCAAA;AF7BJ;AEgCE;EACE,oCAAA;AF9BJ;;AEmCA;EACE,mBAAA;EACA,YAAA;EACA,yBAAA;AFhCF;AEkCE;EACE,YAAA;AFhCJ;AEmCE;EACE,kCAAA;AFjCJ;AEoCG;EACC,kCAAA;AFlCJ;;ACnUA;EACE,iCALiB;AD2UnB;;ACnUA;EACE,eAAA;EACA,iBAAA;ADsUF;;ACnUA;EACE,gBAAA;EACA,cFfc;ACqVhB;;AAzUA;EACE,kBAAA;EACA,YAAA;AA4UF;;AAzUA;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,cDhBU;ECiBV,YAAA;AA4UF;;AAzUA;EACE,gBAAA;AA4UF;;AAzUA;EACE;IAEE,YAAA;EA2UF;AACF;AArUA;EACI,YAAA;EACA,mBAAA;AAuUJ;AArUI;EACA,yBAAA;EACA,eAAA;EACE,gBAAA;EACA,cD1CM;EC2CN,mBAAA;EACA,gBAAA;AAuUN;;AApUA;EACI,mBAAA;AAuUJ;AArUI;EACE,eAAA;EACA,gBAAA;EACA,cDrDM;ECsDN,mBAAA;EACA,gBAAA;AAuUN;;AAjUA;EAEI,mBAAA;EAIA,YAAA;AAgUJ;AAxTI;EACI,mBAAA;EACA,2BAAA;EACA,YAAA;EACA,WAAA;AA0TR;;AA9SA;EACE,yBAAA;AAiTF;;AA7SA;EACE,yBAAA;EACA,uBAAA;AAgTF;;AA5SA;EACE,yBAAA;AA+SF;;AA5SA;EACE,UAAA;AA+SF","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"/src/app/theme/styles/components/buttons\";\n@import \"/src/app/theme/styles/components/fonts\";\n@import \"src/assets/fonts/font-awesome/css/all.css\";\n\n// .modal-content{\n//     max-width:720px;\n//     border-radius: 8px;\n//     padding: 32px 52px;\n//     display: flex;\n//     justify-content: center;\n// }\n\n.container{\n  padding: 32px 52px;\n  border: none;\n}\n\np{\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  color:$paragraph;\n  opacity: .6;\n}\n\n.btn-long{\n  min-width: 274px;\n}\n\n@media screen and (min-width:1020px){\n  .container.modal-content{\n    // min-width: 720px;\n    border: none;\n  }\n  // .container-fluid{\n  //   min-width: 725px;\n  // }\n}\n\n.modal-header{\n    border: none;\n    max-width: 615.95px;\n\n    h4.modal-title{\n    color: $primary-color!important;\n    font-size: 24px;\n      font-weight: 600;\n      color:$paragraph;\n      line-height: 33.6px;\n      text-align:left;\n    }\n}\n.modal-body {\n    max-width: 615.95px;\n\n    .modal-body-text {\n      font-size: 16px;\n      font-weight: 400;\n      color:$paragraph;\n      line-height: 22.4px;\n      text-align:left;\n    }\n  }\n\n\n\n.modal-footer{\n\n    max-width: 615.95px;\n    // display: flex;\n    // justify-content: center;\n    // align-items: center;\n    border: none;\n\n    // .button-wrapper{\n    //     justify-content:space-evenly;\n    //     max-width: 615.95px;\n    //     flex-wrap: wrap;\n    // }\n\n    button.btn-long{\n        align-items: center;\n        max-width: 303px!important;\n        height: 50px;\n        margin:0px;\n    }\n}\n\n//Material input style\n//input outline color\n// ::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n//   color: transparent!important;\n//    opacity: 0.5!important;\n// }\n\n//mat-input carent color\n::ng-deep .mat-select-arrow-wrapper.ng-tns-c244-13{\n  color: $primary-color!important;\n}\n//Material input style\n//input outline color\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: $primary-color!important;\n  opacity: 0.5!important;\n}\n\n// mat-input carent color\n::ng-deep .mat-select-arrow-wrapper.ng-tns-c244-13{\n  color: $primary-color!important;\n}\n\n.mat-error{\n  color:red;\n}\n","\n$main-font-family: 'Roboto', sans-serif;\n\n$secondary-font-family: 'Montserrat', sans-serif;\n\n* {\n  font-family: $main-font-family;\n}\n\nh1{\n  font-size:32px;\n  line-height:140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight:700;\n  color: $primary-color;\n}\n","@import '../components/fonts';\n\n// START: button shapes\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto  {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: $main-font-family;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n\n\n  span, i {\n    //font-size: 12px;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n    //color: #fff;\n  }\n\n\n  &:focus, &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n\n  span, i {\n    font-size: 12px;\n    margin-right: 0px!important;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n  &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  // background: #34A853;\n  border-radius: 90px;\n\n  span, i {\n    font-size: 12px;\n    width: 24px;\n    height: 24px;\n    font-size: 16px;\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n   &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n// END: button shapes\n\n\n// START: button colors\n.btn-color-fill {\n  background-color: $primary-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($primary-color, 72%);\n  }\n\n   &:active {\n    background: rgba($primary-color, 48%);\n  }\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: $primary-color;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($background-secondary, 72%);\n    // border-radius: 50%;\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($background-secondary , 48%);\n  }\n}\n\n.btn-like-fill {\n  background-color: $like-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($like-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($like-color, 48%);\n  }\n}\n\n.btn-dislike-fill {\n  background-color: $dislike-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($dislike-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($dislike-color, 48%);\n  }\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled ,.btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n\n.btn-color-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-outline {\n  background: rgba($primary-color, 0%);\n  color: var(--primary-background);\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-border-outline {\n  background: rgba($primary-color, 0%);\n  color: white;\n  border-color: white;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n   &:focus, &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  border-color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n.btn-no-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-no-outline:disabled{\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n   &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.active-label-button{\n  background: $active-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($active-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.inactive-label-button{\n  background: $inactive-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n}\n\n.disabled-label-button{\n  background: $disabled-btn-color,;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n   &:focus,&:active {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n}\n\n// END: button colors\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 77248:
/*!*********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/delete-provider/delete-provider.component.scss?ngResource ***!
  \*********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_AT_RULE_IMPORT_0___ = __webpack_require__(/*! -!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[0]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[1]!../../../../assets/fonts/font-awesome/css/all.css */ 46337);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n}\n.btn-long span, .btn-long i, .btn-auto span, .btn-auto i {\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-long:hover, .btn-auto:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-long:focus, .btn-long:active, .btn-auto:focus, .btn-auto:active {\n  transition: 0s;\n  outline: none;\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n}\n.btn-round span, .btn-round i {\n  font-size: 12px;\n  margin-right: 0px !important;\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-round:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-round:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  border-radius: 90px;\n}\n.btn-label span, .btn-label i {\n  font-size: 12px;\n  width: 24px;\n  height: 24px;\n  font-size: 16px;\n}\n.btn-label:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-label:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-color-fill {\n  background-color: #24398A;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-color-fill span, .btn-color-fill i {\n  color: var(--primary-background);\n}\n.btn-color-fill:hover {\n  background: rgba(36, 57, 138, 0.72);\n}\n.btn-color-fill:active {\n  background: rgba(36, 57, 138, 0.48);\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: #24398A;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n}\n.btn-white-fill span, .btn-white-fill i {\n  color: #24398A;\n}\n.btn-white-fill:hover {\n  background: rgba(237, 240, 250, 0.72);\n}\n.btn-white-fill:active {\n  background: rgba(237, 240, 250, 0.48);\n}\n\n.btn-like-fill {\n  background-color: #2CCEA7;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-like-fill span, .btn-like-fill i {\n  color: var(--primary-background);\n}\n.btn-like-fill:hover {\n  background: rgba(44, 206, 167, 0.72);\n}\n.btn-like-fill:active {\n  background: rgba(44, 206, 167, 0.48);\n}\n\n.btn-dislike-fill {\n  background-color: #EA4335;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-dislike-fill span, .btn-dislike-fill i {\n  color: var(--primary-background);\n}\n.btn-dislike-fill:hover {\n  background: rgba(234, 67, 53, 0.72);\n}\n.btn-dislike-fill:active {\n  background: rgba(234, 67, 53, 0.48);\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled, .btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-fill:disabled span, .btn-color-fill:disabled i, .btn-white-fill:disabled span, .btn-white-fill:disabled i, .btn-dislike-fill:disabled span, .btn-dislike-fill:disabled i, .btn-like-fill:disabled span, .btn-like-fill:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-fill:disabled:hover, .btn-white-fill:disabled:hover, .btn-dislike-fill:disabled:hover, .btn-like-fill:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-color-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: #24398A;\n}\n.btn-color-outline span, .btn-color-outline i {\n  color: #24398A;\n}\n.btn-color-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-color-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-outline {\n  background: rgba(36, 57, 138, 0);\n  color: var(--primary-background);\n  border-color: #24398A;\n}\n.btn-white-outline span, .btn-white-outline i {\n  color: #24398A;\n}\n.btn-white-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-border-outline {\n  background: rgba(36, 57, 138, 0);\n  color: white;\n  border-color: white;\n}\n.btn-white-border-outline span, .btn-white-border-outline i {\n  color: white;\n}\n.btn-white-border-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-border-outline:focus, .btn-white-border-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  border-color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-outline:disabled span, .btn-color-outline:disabled i, .btn-white-outline:disabled span, .btn-white-outline:disabled i, .btn-white-border-outline:disabled span, .btn-white-border-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-outline:disabled:hover, .btn-white-outline:disabled:hover, .btn-white-border-outline:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-no-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n}\n.btn-no-outline span, .btn-no-outline i {\n  color: #24398A;\n}\n.btn-no-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-no-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-no-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-no-outline:disabled span, .btn-no-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-no-outline:disabled:hover {\n  box-shadow: none;\n}\n.btn-no-outline:disabled:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.active-label-button {\n  background: #34A853;\n  color: white;\n  border-color: transparent;\n}\n.active-label-button span, .active-label-button i {\n  color: white;\n}\n.active-label-button:hover {\n  background: rgba(52, 168, 83, 0.8);\n}\n.active-label-button:focus, .active-label-button:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.inactive-label-button {\n  background: #848484;\n  color: white;\n  border-color: transparent;\n}\n.inactive-label-button span, .inactive-label-button i {\n  color: white;\n}\n.inactive-label-button:hover {\n  background: rgba(132, 132, 132, 0.8);\n}\n.inactive-label-button:focus, .inactive-label-button:active {\n  background: rgba(132, 132, 132, 0.8);\n}\n\n.disabled-label-button {\n  background: #E64335;\n  color: white;\n  border-color: transparent;\n}\n.disabled-label-button span, .disabled-label-button i {\n  color: white;\n}\n.disabled-label-button:hover {\n  background: rgba(230, 67, 53, 0.8);\n}\n.disabled-label-button:focus, .disabled-label-button:active {\n  background: rgba(230, 67, 53, 0.8);\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.container {\n  padding: 32px 52px;\n  border: none;\n}\n\n@media screen and (min-width: 1020px) {\n  .container.modal-content {\n    border: none;\n  }\n}\n.modal-header {\n  border: none;\n  max-width: 615.95px;\n}\n.modal-header h4.modal-title {\n  color: #24398A !important;\n  font-size: 24px;\n  font-weight: 600;\n  color: #231F20;\n  line-height: 33.6px;\n  text-align: left;\n}\n\n.modal-body {\n  max-width: 615.95px;\n}\n.modal-body .modal-body-text {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: rgba(35, 31, 32, 0.5);\n}\n\n.blue-card {\n  max-width: 615.95px;\n  padding: 16px;\n}\n.blue-card img {\n  height: 96px;\n  width: 96px;\n  border-radius: 50%;\n}\n.blue-card div.modal-blue-container {\n  border: solid 1px #24398A;\n  border-radius: 8px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n}\n.blue-card div.modal-blue-container h4 {\n  color: #24398A !important;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container p {\n  color: rgba(36, 57, 138, 0.8);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container h5 {\n  color: #24398A;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n\n.modal-footer {\n  max-width: 615.95px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n}\n.modal-footer .button-wrapper {\n  justify-content: space-evenly;\n  max-width: 615.95px;\n  flex-wrap: wrap;\n}\n.modal-footer button.btn-long {\n  align-items: center;\n  max-width: 303px !important;\n  height: 50px;\n  margin: 0px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/delete-provider/delete-provider.component.scss","webpack://./src/app/theme/styles/components/_fonts.scss","webpack://./src/app/theme/styles/components/_buttons.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACZF;;ADeA;EACE,6BAAA;EACA,+BAAA;ACZF;;ADwCA;EACI,oCAAA;ACrCJ;;ADwCA;EACQ,kCAAA;ACrCR;;ACbA;EACE,iCALiB;ADqBnB;;ACbA;EACE,eAAA;EACA,iBAAA;ADgBF;;ACbA;EACE,gBAAA;EACA,cFfc;AC+BhB;;AE7BA;EACE,gBAAA;AFgCF;;AE7BA;EACE,WAAA;AFgCF;;AE7BA;EACE,qBAAA;EACA,eAAA;EACA,iCDbiB;ECcjB,gBAAA;EACA,SAAA;EACA,oBAAA;EACA,uBAAA;EACA,mBAAA;EACA,eAAA;EACA,YAAA;EACA,iBAAA;EACA,oBAAA;AFgCF;AE7BE;EAEE;oBAAA;AF+BJ;AE3BE;EACE,yCAAA;EACA,4BAAA;AF6BJ;AExBE;EACE,cAAA;EACA,aAAA;AF0BJ;;AEtBA;EACE,WAAA;AFyBF;;AEtBA;EACE,YAAA;EACA,WAAA;EACA,aAAA;EACA,cAAA;EACA,uBAAA;EACA,mBAAA;EACA,oBAAA;EACA,iBAAA;AFyBF;AEvBE;EACE,eAAA;EACA,4BAAA;EACA;oBAAA;AF0BJ;AEtBE;EACE,yCAAA;EACA,4BAAA;AFwBJ;AEpBE;EACE,cAAA;EACA,aAAA;AFsBJ;;AElBA;EACE,mBAAA;EACA,mBAAA;EACA,YAAA;EACA,QAAA;EACA,YAAA;EACA,YAAA;EAEA,mBAAA;AFoBF;AElBE;EACE,eAAA;EACA,WAAA;EACA,YAAA;EACA,eAAA;AFoBJ;AEjBE;EACE,yCAAA;EACA,4BAAA;AFmBJ;AEfG;EACC,cAAA;EACA,aAAA;AFiBJ;;AEVA;EACE,yBH9Gc;EG+Gd,gCAAA;EACA,YAAA;AFaF;AEXE;EACE,gCAAA;AFaJ;AEVE;EACE,mCAAA;AFYJ;AETG;EACC,mCAAA;AFWJ;;AEPA;EACE,2CAAA;EACA,cHjIc;EGkId,YAAA;EACA,yCAAA;AFUF;AERE;EACE,cHtIY;ACgJhB;AEPE;EACE,qCAAA;AFSJ;AEJG;EACC,qCAAA;AFMJ;;AEFA;EACE,yBH9GU;EG+GV,gCAAA;EACA,YAAA;AFKF;AEHE;EACE,gCAAA;AFKJ;AEFE;EACE,oCAAA;AFIJ;AEAE;EACE,oCAAA;AFEJ;;AEEA;EACE,yBHhIc;EGiId,gCAAA;EACA,YAAA;AFCF;AECE;EACE,gCAAA;AFCJ;AEEE;EACE,mCAAA;AFAJ;AEIE;EACE,mCAAA;AFFJ;;AEMA;EACE,6CAAA;EACA,6BAAA;EACA,mBAAA;AFHF;AEKE;EACE,6BAAA;AFHJ;AEME;EACE,gBAAA;AFJJ;;AESA;EACE,gCAAA;EACA,cH3Mc;EG4Md,qBH5Mc;ACsMhB;AEQE;EACE,cH/MY;ACyMhB;AESE;EACE,mCAAA;AFPJ;AEWG;EACC,mCAAA;AFTJ;;AEaA;EACE,gCAAA;EACA,gCAAA;EACA,qBH/Nc;ACqNhB;AEYE;EACE,cHlOY;ACwNhB;AEaE;EACE,mCAAA;AFXJ;AEeE;EACE,mCAAA;AFbJ;;AEiBA;EACE,gCAAA;EACA,YAAA;EACA,mBAAA;AFdF;AEgBE;EACE,YAAA;AFdJ;AEiBE;EACE,mCAAA;AFfJ;AEkBG;EACC,mCAAA;AFhBJ;;AEoBA;EACE,gCAAA;EACA,6BAAA;EACA,oCAAA;EACA,mBAAA;AFjBF;AEmBE;EACE,6BAAA;AFjBJ;AEoBE;EACE,gBAAA;AFlBJ;;AEsBA;EACE,gCAAA;EACA,cHlRc;EGmRd,yBAAA;EACA,WAAA;EACA,YAAA;AFnBF;AEqBE;EACE,cHxRY;ACqQhB;AEsBE;EACE,mCAAA;AFpBJ;AEwBE;EACE,mCAAA;AFtBJ;;AE0BA;EACE,gCAAA;EACA,6BAAA;EACA,mBAAA;AFvBF;AEyBE;EACE,6BAAA;AFvBJ;AE0BE;EACE,gBAAA;AFxBJ;AE0BG;EACC,kCAAA;AFxBJ;;AE4BA;EACE,mBH1QgB;EG2QhB,YAAA;EACA,yBAAA;AFzBF;AE2BE;EACE,YAAA;AFzBJ;AE4BE;EACE,kCAAA;AF1BJ;AE6BE;EACE,kCAAA;AF3BJ;;AE+BA;EACE,mBH3RkB;EG4RlB,YAAA;EACA,yBAAA;AF5BF;AE8BE;EACE,YAAA;AF5BJ;AE+BE;EACE,oCAAA;AF7BJ;AEgCE;EACE,oCAAA;AF9BJ;;AEmCA;EACE,mBAAA;EACA,YAAA;EACA,yBAAA;AFhCF;AEkCE;EACE,YAAA;AFhCJ;AEmCE;EACE,kCAAA;AFjCJ;AEoCG;EACC,kCAAA;AFlCJ;;ACnUA;EACE,iCALiB;AD2UnB;;ACnUA;EACE,eAAA;EACA,iBAAA;ADsUF;;ACnUA;EACE,gBAAA;EACA,cFfc;ACqVhB;;AAjVA;EACE,kBAAA;EACA,YAAA;AAoVF;;AAjVA;EACE;IACE,YAAA;EAoVF;AACF;AA/UA;EACI,YAAA;EACA,mBAAA;AAiVJ;AA/UI;EACA,yBAAA;EACA,eAAA;EACE,gBAAA;EACA,cDpBM;ECqBN,mBAAA;EACA,gBAAA;AAiVN;;AA9UA;EACI,mBAAA;AAiVJ;AA/UI;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,4BAAA;AAgVN;;AA5UE;EACE,mBAAA;EACA,aAAA;AA+UJ;AA7UI;EACE,YAAA;EACA,WAAA;EACA,kBAAA;AA+UN;AA5UQ;EACA,yBAAA;EACA,kBAAA;EACA,4FAAA;AA8UR;AA5UQ;EACI,yBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;AA8UZ;AA5UQ;EACE,6BAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AA6UV;AA3UQ;EACE,cDnFM;ECoFN,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AA4UV;;AAvUA;EAEE,mBAAA;EACE,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,YAAA;AAyUJ;AAvUI;EACI,6BAAA;EACA,mBAAA;EACA,eAAA;AAyUR;AAtUI;EACI,mBAAA;EACA,2BAAA;EACA,YAAA;EACA,WAAA;AAwUR","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"/src/app/theme/styles/components/buttons\";\n@import \"/src/app/theme/styles/components/fonts\";\n@import \"src/assets/fonts/font-awesome/css/all.css\";\n\n.container{\n  padding: 32px 52px;\n  border: none;\n}\n\n@media screen and (min-width:1020px){\n  .container.modal-content{\n    border: none;\n  }\n\n}\n\n\n.modal-header{\n    border: none;\n    max-width: 615.95px;\n\n    h4.modal-title{\n    color: $primary-color!important;\n    font-size: 24px;\n      font-weight: 600;\n      color:$paragraph;\n      line-height: 33.6px;\n      text-align:left;\n    }\n}\n.modal-body {\n    max-width: 615.95px;\n\n    .modal-body-text {\n      font-weight: 400;\n      font-size: 16px;\n      line-height: 140%;\n      /* or 22px */\n\n      display: flex;\n      align-items: center;\n      letter-spacing: -0.02em;\n      color: rgba($paragraph,0.5);\n    }\n  }\n\n  .blue-card{\n    max-width: 615.95px;\n    padding: 16px;\n\n    img{\n      height: 96px;\n      width:96px;\n      border-radius: 50%;\n    }\n\n        div.modal-blue-container{\n        border: solid 1px $primary-color;\n        border-radius: 8px;\n        background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n\n        h4{\n            color: $primary-color!important;\n            font-weight: 700;\n            font-size: 24px;\n            line-height: 140%;\n            /* identical to box height, or 34px */\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.02em;\n        }\n        p{\n          color: rgba($primary-color, 0.8);\n          font-weight: 400;\n          font-size: 16px;\n          line-height: 140%;\n          /* or 22px */\n\n          display: flex;\n          align-items: center;\n          letter-spacing: -0.02em;\n        }\n        h5{\n          color: $primary-color;\n          font-weight: 700;\n          font-size: 16px;\n          line-height: 140%;\n          /* or 22px */\n\n          display: flex;\n          align-items: center;\n          letter-spacing: -0.02em;\n        }\n    }\n  }\n\n.modal-footer{\n\n  max-width: 615.95px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n\n    .button-wrapper{\n        justify-content:space-evenly;\n        max-width: 615.95px;\n        flex-wrap: wrap;\n    }\n\n    button.btn-long{\n        align-items: center;\n        max-width: 303px!important;\n        height: 50px;\n        margin:0px;\n    }\n}\n","\n$main-font-family: 'Roboto', sans-serif;\n\n$secondary-font-family: 'Montserrat', sans-serif;\n\n* {\n  font-family: $main-font-family;\n}\n\nh1{\n  font-size:32px;\n  line-height:140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight:700;\n  color: $primary-color;\n}\n","@import '../components/fonts';\n\n// START: button shapes\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto  {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: $main-font-family;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n\n\n  span, i {\n    //font-size: 12px;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n    //color: #fff;\n  }\n\n\n  &:focus, &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n\n  span, i {\n    font-size: 12px;\n    margin-right: 0px!important;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n  &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  // background: #34A853;\n  border-radius: 90px;\n\n  span, i {\n    font-size: 12px;\n    width: 24px;\n    height: 24px;\n    font-size: 16px;\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n   &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n// END: button shapes\n\n\n// START: button colors\n.btn-color-fill {\n  background-color: $primary-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($primary-color, 72%);\n  }\n\n   &:active {\n    background: rgba($primary-color, 48%);\n  }\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: $primary-color;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($background-secondary, 72%);\n    // border-radius: 50%;\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($background-secondary , 48%);\n  }\n}\n\n.btn-like-fill {\n  background-color: $like-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($like-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($like-color, 48%);\n  }\n}\n\n.btn-dislike-fill {\n  background-color: $dislike-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($dislike-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($dislike-color, 48%);\n  }\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled ,.btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n\n.btn-color-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-outline {\n  background: rgba($primary-color, 0%);\n  color: var(--primary-background);\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-border-outline {\n  background: rgba($primary-color, 0%);\n  color: white;\n  border-color: white;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n   &:focus, &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  border-color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n.btn-no-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-no-outline:disabled{\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n   &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.active-label-button{\n  background: $active-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($active-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.inactive-label-button{\n  background: $inactive-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n}\n\n.disabled-label-button{\n  background: $disabled-btn-color,;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n   &:focus,&:active {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n}\n\n// END: button colors\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 35783:
/*!*******************************************************************************************************!*\
  !*** ./src/app/features/providers-management/list-providers/list-providers.component.scss?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 88833:
/*!*********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/payment-request/payment-request.component.scss?ngResource ***!
  \*********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_AT_RULE_IMPORT_0___ = __webpack_require__(/*! -!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[0]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[1]!../../../../assets/fonts/font-awesome/css/all.css */ 46337);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n}\n.btn-long span, .btn-long i, .btn-auto span, .btn-auto i {\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-long:hover, .btn-auto:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-long:focus, .btn-long:active, .btn-auto:focus, .btn-auto:active {\n  transition: 0s;\n  outline: none;\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n}\n.btn-round span, .btn-round i {\n  font-size: 12px;\n  margin-right: 0px !important;\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-round:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-round:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  border-radius: 90px;\n}\n.btn-label span, .btn-label i {\n  font-size: 12px;\n  width: 24px;\n  height: 24px;\n  font-size: 16px;\n}\n.btn-label:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-label:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-color-fill {\n  background-color: #24398A;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-color-fill span, .btn-color-fill i {\n  color: var(--primary-background);\n}\n.btn-color-fill:hover {\n  background: rgba(36, 57, 138, 0.72);\n}\n.btn-color-fill:active {\n  background: rgba(36, 57, 138, 0.48);\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: #24398A;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n}\n.btn-white-fill span, .btn-white-fill i {\n  color: #24398A;\n}\n.btn-white-fill:hover {\n  background: rgba(237, 240, 250, 0.72);\n}\n.btn-white-fill:active {\n  background: rgba(237, 240, 250, 0.48);\n}\n\n.btn-like-fill {\n  background-color: #2CCEA7;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-like-fill span, .btn-like-fill i {\n  color: var(--primary-background);\n}\n.btn-like-fill:hover {\n  background: rgba(44, 206, 167, 0.72);\n}\n.btn-like-fill:active {\n  background: rgba(44, 206, 167, 0.48);\n}\n\n.btn-dislike-fill {\n  background-color: #EA4335;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-dislike-fill span, .btn-dislike-fill i {\n  color: var(--primary-background);\n}\n.btn-dislike-fill:hover {\n  background: rgba(234, 67, 53, 0.72);\n}\n.btn-dislike-fill:active {\n  background: rgba(234, 67, 53, 0.48);\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled, .btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-fill:disabled span, .btn-color-fill:disabled i, .btn-white-fill:disabled span, .btn-white-fill:disabled i, .btn-dislike-fill:disabled span, .btn-dislike-fill:disabled i, .btn-like-fill:disabled span, .btn-like-fill:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-fill:disabled:hover, .btn-white-fill:disabled:hover, .btn-dislike-fill:disabled:hover, .btn-like-fill:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-color-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: #24398A;\n}\n.btn-color-outline span, .btn-color-outline i {\n  color: #24398A;\n}\n.btn-color-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-color-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-outline {\n  background: rgba(36, 57, 138, 0);\n  color: var(--primary-background);\n  border-color: #24398A;\n}\n.btn-white-outline span, .btn-white-outline i {\n  color: #24398A;\n}\n.btn-white-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-border-outline {\n  background: rgba(36, 57, 138, 0);\n  color: white;\n  border-color: white;\n}\n.btn-white-border-outline span, .btn-white-border-outline i {\n  color: white;\n}\n.btn-white-border-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-border-outline:focus, .btn-white-border-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  border-color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-outline:disabled span, .btn-color-outline:disabled i, .btn-white-outline:disabled span, .btn-white-outline:disabled i, .btn-white-border-outline:disabled span, .btn-white-border-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-outline:disabled:hover, .btn-white-outline:disabled:hover, .btn-white-border-outline:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-no-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n}\n.btn-no-outline span, .btn-no-outline i {\n  color: #24398A;\n}\n.btn-no-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-no-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-no-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-no-outline:disabled span, .btn-no-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-no-outline:disabled:hover {\n  box-shadow: none;\n}\n.btn-no-outline:disabled:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.active-label-button {\n  background: #34A853;\n  color: white;\n  border-color: transparent;\n}\n.active-label-button span, .active-label-button i {\n  color: white;\n}\n.active-label-button:hover {\n  background: rgba(52, 168, 83, 0.8);\n}\n.active-label-button:focus, .active-label-button:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.inactive-label-button {\n  background: #848484;\n  color: white;\n  border-color: transparent;\n}\n.inactive-label-button span, .inactive-label-button i {\n  color: white;\n}\n.inactive-label-button:hover {\n  background: rgba(132, 132, 132, 0.8);\n}\n.inactive-label-button:focus, .inactive-label-button:active {\n  background: rgba(132, 132, 132, 0.8);\n}\n\n.disabled-label-button {\n  background: #E64335;\n  color: white;\n  border-color: transparent;\n}\n.disabled-label-button span, .disabled-label-button i {\n  color: white;\n}\n.disabled-label-button:hover {\n  background: rgba(230, 67, 53, 0.8);\n}\n.disabled-label-button:focus, .disabled-label-button:active {\n  background: rgba(230, 67, 53, 0.8);\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.container {\n  padding: 32px 52px;\n  border: none;\n}\n\n.close {\n  cursor: pointer;\n}\n\n@media screen and (min-width: 1020px) {\n  .container.modal-content {\n    border: none;\n  }\n}\n.modal-header {\n  border: none;\n  max-width: 615.95px;\n}\n.modal-header h4.modal-title {\n  color: #24398A !important;\n  font-size: 24px;\n  font-weight: 700;\n  color: #231F20;\n  line-height: 33.6px;\n  text-align: left;\n}\n.modal-header i {\n  color: #24398A;\n  font-weight: 900;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n\n.modal-body {\n  max-width: 615.95px;\n}\n.modal-body .modal-body-text {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: rgba(35, 31, 32, 0.5);\n}\n\n.blue-card {\n  max-width: 615.95px;\n}\n.blue-card img {\n  height: 96px;\n  width: 96px;\n  border-radius: 50%;\n}\n.blue-card div.modal-blue-container {\n  border: solid 1px #24398A;\n  border-radius: 8px;\n  padding: 16px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n}\n.blue-card div.modal-blue-container .primary-color {\n  color: #24398A;\n}\n.blue-card div.modal-blue-container .paragraph-color {\n  color: #231F20;\n}\n.blue-card div.modal-blue-container h4 {\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container p {\n  font-weight: 400px;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container h6 {\n  color: #24398A;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n\n.modal-footer {\n  max-width: 615.95px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n}\n.modal-footer .button-wrapper {\n  justify-content: space-evenly;\n  max-width: 615.95px;\n  flex-wrap: wrap;\n}\n.modal-footer button.btn-long {\n  align-items: center;\n  max-width: 303px !important;\n  height: 50px;\n  margin: 0px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/payment-request/payment-request.component.scss","webpack://./src/app/theme/styles/components/_fonts.scss","webpack://./src/app/theme/styles/components/_buttons.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACZF;;ADeA;EACE,6BAAA;EACA,+BAAA;ACZF;;ADwCA;EACI,oCAAA;ACrCJ;;ADwCA;EACQ,kCAAA;ACrCR;;ACbA;EACE,iCALiB;ADqBnB;;ACbA;EACE,eAAA;EACA,iBAAA;ADgBF;;ACbA;EACE,gBAAA;EACA,cFfc;AC+BhB;;AE7BA;EACE,gBAAA;AFgCF;;AE7BA;EACE,WAAA;AFgCF;;AE7BA;EACE,qBAAA;EACA,eAAA;EACA,iCDbiB;ECcjB,gBAAA;EACA,SAAA;EACA,oBAAA;EACA,uBAAA;EACA,mBAAA;EACA,eAAA;EACA,YAAA;EACA,iBAAA;EACA,oBAAA;AFgCF;AE7BE;EAEE;oBAAA;AF+BJ;AE3BE;EACE,yCAAA;EACA,4BAAA;AF6BJ;AExBE;EACE,cAAA;EACA,aAAA;AF0BJ;;AEtBA;EACE,WAAA;AFyBF;;AEtBA;EACE,YAAA;EACA,WAAA;EACA,aAAA;EACA,cAAA;EACA,uBAAA;EACA,mBAAA;EACA,oBAAA;EACA,iBAAA;AFyBF;AEvBE;EACE,eAAA;EACA,4BAAA;EACA;oBAAA;AF0BJ;AEtBE;EACE,yCAAA;EACA,4BAAA;AFwBJ;AEpBE;EACE,cAAA;EACA,aAAA;AFsBJ;;AElBA;EACE,mBAAA;EACA,mBAAA;EACA,YAAA;EACA,QAAA;EACA,YAAA;EACA,YAAA;EAEA,mBAAA;AFoBF;AElBE;EACE,eAAA;EACA,WAAA;EACA,YAAA;EACA,eAAA;AFoBJ;AEjBE;EACE,yCAAA;EACA,4BAAA;AFmBJ;AEfG;EACC,cAAA;EACA,aAAA;AFiBJ;;AEVA;EACE,yBH9Gc;EG+Gd,gCAAA;EACA,YAAA;AFaF;AEXE;EACE,gCAAA;AFaJ;AEVE;EACE,mCAAA;AFYJ;AETG;EACC,mCAAA;AFWJ;;AEPA;EACE,2CAAA;EACA,cHjIc;EGkId,YAAA;EACA,yCAAA;AFUF;AERE;EACE,cHtIY;ACgJhB;AEPE;EACE,qCAAA;AFSJ;AEJG;EACC,qCAAA;AFMJ;;AEFA;EACE,yBH9GU;EG+GV,gCAAA;EACA,YAAA;AFKF;AEHE;EACE,gCAAA;AFKJ;AEFE;EACE,oCAAA;AFIJ;AEAE;EACE,oCAAA;AFEJ;;AEEA;EACE,yBHhIc;EGiId,gCAAA;EACA,YAAA;AFCF;AECE;EACE,gCAAA;AFCJ;AEEE;EACE,mCAAA;AFAJ;AEIE;EACE,mCAAA;AFFJ;;AEMA;EACE,6CAAA;EACA,6BAAA;EACA,mBAAA;AFHF;AEKE;EACE,6BAAA;AFHJ;AEME;EACE,gBAAA;AFJJ;;AESA;EACE,gCAAA;EACA,cH3Mc;EG4Md,qBH5Mc;ACsMhB;AEQE;EACE,cH/MY;ACyMhB;AESE;EACE,mCAAA;AFPJ;AEWG;EACC,mCAAA;AFTJ;;AEaA;EACE,gCAAA;EACA,gCAAA;EACA,qBH/Nc;ACqNhB;AEYE;EACE,cHlOY;ACwNhB;AEaE;EACE,mCAAA;AFXJ;AEeE;EACE,mCAAA;AFbJ;;AEiBA;EACE,gCAAA;EACA,YAAA;EACA,mBAAA;AFdF;AEgBE;EACE,YAAA;AFdJ;AEiBE;EACE,mCAAA;AFfJ;AEkBG;EACC,mCAAA;AFhBJ;;AEoBA;EACE,gCAAA;EACA,6BAAA;EACA,oCAAA;EACA,mBAAA;AFjBF;AEmBE;EACE,6BAAA;AFjBJ;AEoBE;EACE,gBAAA;AFlBJ;;AEsBA;EACE,gCAAA;EACA,cHlRc;EGmRd,yBAAA;EACA,WAAA;EACA,YAAA;AFnBF;AEqBE;EACE,cHxRY;ACqQhB;AEsBE;EACE,mCAAA;AFpBJ;AEwBE;EACE,mCAAA;AFtBJ;;AE0BA;EACE,gCAAA;EACA,6BAAA;EACA,mBAAA;AFvBF;AEyBE;EACE,6BAAA;AFvBJ;AE0BE;EACE,gBAAA;AFxBJ;AE0BG;EACC,kCAAA;AFxBJ;;AE4BA;EACE,mBH1QgB;EG2QhB,YAAA;EACA,yBAAA;AFzBF;AE2BE;EACE,YAAA;AFzBJ;AE4BE;EACE,kCAAA;AF1BJ;AE6BE;EACE,kCAAA;AF3BJ;;AE+BA;EACE,mBH3RkB;EG4RlB,YAAA;EACA,yBAAA;AF5BF;AE8BE;EACE,YAAA;AF5BJ;AE+BE;EACE,oCAAA;AF7BJ;AEgCE;EACE,oCAAA;AF9BJ;;AEmCA;EACE,mBAAA;EACA,YAAA;EACA,yBAAA;AFhCF;AEkCE;EACE,YAAA;AFhCJ;AEmCE;EACE,kCAAA;AFjCJ;AEoCG;EACC,kCAAA;AFlCJ;;ACnUA;EACE,iCALiB;AD2UnB;;ACnUA;EACE,eAAA;EACA,iBAAA;ADsUF;;ACnUA;EACE,gBAAA;EACA,cFfc;ACqVhB;;AAjVA;EACE,kBAAA;EACA,YAAA;AAoVF;;AAjVA;EACA,eAAA;AAoVA;;AAjVA;EACE;IACE,YAAA;EAoVF;AACF;AA/UA;EACI,YAAA;EACA,mBAAA;AAiVJ;AA/UI;EACA,yBAAA;EACA,eAAA;EACE,gBAAA;EACA,cDxBM;ECyBN,mBAAA;EACA,gBAAA;AAiVN;AA/UI;EACI,cDlCQ;ECmCR,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AAgVR;;AA7UA;EACI,mBAAA;AAgVJ;AA9UI;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,4BAAA;AA+UN;;AA3UE;EACE,mBAAA;AA8UJ;AA5UI;EACE,YAAA;EACA,WAAA;EACA,kBAAA;AA8UN;AA3UQ;EACA,yBAAA;EACA,kBAAA;EACA,aAAA;EACA,4FAAA;AA6UR;AA3UQ;EACI,cD7EI;AC0ZhB;AA3UQ;EACI,cD3EA;ACwZZ;AA1UQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;AA4UZ;AAzUQ;EACE,kBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AA0UV;AAvUQ;EACE,cDzGM;EC0GN,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AAwUV;;AAnUA;EAEE,mBAAA;EACE,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,YAAA;AAqUJ;AAnUI;EACI,6BAAA;EACA,mBAAA;EACA,eAAA;AAqUR;AAlUI;EACI,mBAAA;EACA,2BAAA;EACA,YAAA;EACA,WAAA;AAoUR","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"/src/app/theme/styles/components/buttons\";\n@import \"/src/app/theme/styles/components/fonts\";\n@import \"src/assets/fonts/font-awesome/css/all.css\";\n\n.container{\n  padding: 32px 52px;\n  border: none;\n}\n\n.close{\ncursor:pointer;\n}\n\n@media screen and (min-width:1020px){\n  .container.modal-content{\n    border: none;\n  }\n\n}\n\n\n.modal-header{\n    border: none;\n    max-width: 615.95px;\n\n    h4.modal-title{\n    color: $primary-color!important;\n    font-size: 24px;\n      font-weight: 700;\n      color:$paragraph;\n      line-height: 33.6px;\n      text-align:left;\n    }\n    i{\n        color: $primary-color;\n        font-weight: 900;\n        font-size: 24px;\n        line-height: 140%;\n        /* identical to box height, or 34px */\n\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n    }\n}\n.modal-body {\n    max-width: 615.95px;\n\n    .modal-body-text {\n      font-weight: 400;\n      font-size: 16px;\n      line-height: 140%;\n      /* or 22px */\n\n      display: flex;\n      align-items: center;\n      letter-spacing: -0.02em;\n      color: rgba($paragraph,0.5);\n    }\n  }\n\n  .blue-card{\n    max-width: 615.95px;\n\n    img{\n      height: 96px;\n      width:96px;\n      border-radius: 50%;\n    }\n\n        div.modal-blue-container{\n        border: solid 1px $primary-color;\n        border-radius: 8px;\n        padding: 16px;\n        background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n\n        .primary-color{\n            color:$primary-color;\n        }\n        .paragraph-color{\n            color:$paragraph;\n        }\n\n        h4{\n            font-weight: 700;\n            font-size: 24px;\n            line-height: 140%;\n            /* identical to box height, or 34px */\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.02em;\n        }\n\n        p{\n          font-weight: 400px;\n          font-size: 16px;\n          line-height: 140%;\n          /* or 22px */\n\n          display: flex;\n          align-items: center;\n          letter-spacing: -0.02em;\n\n        }\n        h6{\n          color: $primary-color;\n          font-weight: 700;\n          font-size: 16px;\n          line-height: 140%;\n          /* or 22px */\n\n          display: flex;\n          align-items: center;\n          letter-spacing: -0.02em;\n        }\n    }\n  }\n\n.modal-footer{\n\n  max-width: 615.95px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n\n    .button-wrapper{\n        justify-content:space-evenly;\n        max-width: 615.95px;\n        flex-wrap: wrap;\n    }\n\n    button.btn-long{\n        align-items: center;\n        max-width: 303px!important;\n        height: 50px;\n        margin:0px;\n    }\n}\n","\n$main-font-family: 'Roboto', sans-serif;\n\n$secondary-font-family: 'Montserrat', sans-serif;\n\n* {\n  font-family: $main-font-family;\n}\n\nh1{\n  font-size:32px;\n  line-height:140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight:700;\n  color: $primary-color;\n}\n","@import '../components/fonts';\n\n// START: button shapes\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto  {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: $main-font-family;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n\n\n  span, i {\n    //font-size: 12px;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n    //color: #fff;\n  }\n\n\n  &:focus, &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n\n  span, i {\n    font-size: 12px;\n    margin-right: 0px!important;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n  &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  // background: #34A853;\n  border-radius: 90px;\n\n  span, i {\n    font-size: 12px;\n    width: 24px;\n    height: 24px;\n    font-size: 16px;\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n   &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n// END: button shapes\n\n\n// START: button colors\n.btn-color-fill {\n  background-color: $primary-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($primary-color, 72%);\n  }\n\n   &:active {\n    background: rgba($primary-color, 48%);\n  }\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: $primary-color;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($background-secondary, 72%);\n    // border-radius: 50%;\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($background-secondary , 48%);\n  }\n}\n\n.btn-like-fill {\n  background-color: $like-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($like-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($like-color, 48%);\n  }\n}\n\n.btn-dislike-fill {\n  background-color: $dislike-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($dislike-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($dislike-color, 48%);\n  }\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled ,.btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n\n.btn-color-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-outline {\n  background: rgba($primary-color, 0%);\n  color: var(--primary-background);\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-border-outline {\n  background: rgba($primary-color, 0%);\n  color: white;\n  border-color: white;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n   &:focus, &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  border-color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n.btn-no-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-no-outline:disabled{\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n   &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.active-label-button{\n  background: $active-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($active-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.inactive-label-button{\n  background: $inactive-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n}\n\n.disabled-label-button{\n  background: $disabled-btn-color,;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n   &:focus,&:active {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n}\n\n// END: button colors\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 88311:
/*!***********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/provider-request/provider-request.component.scss?ngResource ***!
  \***********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_AT_RULE_IMPORT_0___ = __webpack_require__(/*! -!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[0]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[1]!../../../../assets/fonts/font-awesome/css/all.css */ 46337);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n}\n.btn-long span, .btn-long i, .btn-auto span, .btn-auto i {\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-long:hover, .btn-auto:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-long:focus, .btn-long:active, .btn-auto:focus, .btn-auto:active {\n  transition: 0s;\n  outline: none;\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n}\n.btn-round span, .btn-round i {\n  font-size: 12px;\n  margin-right: 0px !important;\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-round:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-round:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  border-radius: 90px;\n}\n.btn-label span, .btn-label i {\n  font-size: 12px;\n  width: 24px;\n  height: 24px;\n  font-size: 16px;\n}\n.btn-label:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-label:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-color-fill {\n  background-color: #24398A;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-color-fill span, .btn-color-fill i {\n  color: var(--primary-background);\n}\n.btn-color-fill:hover {\n  background: rgba(36, 57, 138, 0.72);\n}\n.btn-color-fill:active {\n  background: rgba(36, 57, 138, 0.48);\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: #24398A;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n}\n.btn-white-fill span, .btn-white-fill i {\n  color: #24398A;\n}\n.btn-white-fill:hover {\n  background: rgba(237, 240, 250, 0.72);\n}\n.btn-white-fill:active {\n  background: rgba(237, 240, 250, 0.48);\n}\n\n.btn-like-fill {\n  background-color: #2CCEA7;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-like-fill span, .btn-like-fill i {\n  color: var(--primary-background);\n}\n.btn-like-fill:hover {\n  background: rgba(44, 206, 167, 0.72);\n}\n.btn-like-fill:active {\n  background: rgba(44, 206, 167, 0.48);\n}\n\n.btn-dislike-fill {\n  background-color: #EA4335;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-dislike-fill span, .btn-dislike-fill i {\n  color: var(--primary-background);\n}\n.btn-dislike-fill:hover {\n  background: rgba(234, 67, 53, 0.72);\n}\n.btn-dislike-fill:active {\n  background: rgba(234, 67, 53, 0.48);\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled, .btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-fill:disabled span, .btn-color-fill:disabled i, .btn-white-fill:disabled span, .btn-white-fill:disabled i, .btn-dislike-fill:disabled span, .btn-dislike-fill:disabled i, .btn-like-fill:disabled span, .btn-like-fill:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-fill:disabled:hover, .btn-white-fill:disabled:hover, .btn-dislike-fill:disabled:hover, .btn-like-fill:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-color-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: #24398A;\n}\n.btn-color-outline span, .btn-color-outline i {\n  color: #24398A;\n}\n.btn-color-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-color-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-outline {\n  background: rgba(36, 57, 138, 0);\n  color: var(--primary-background);\n  border-color: #24398A;\n}\n.btn-white-outline span, .btn-white-outline i {\n  color: #24398A;\n}\n.btn-white-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-border-outline {\n  background: rgba(36, 57, 138, 0);\n  color: white;\n  border-color: white;\n}\n.btn-white-border-outline span, .btn-white-border-outline i {\n  color: white;\n}\n.btn-white-border-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-border-outline:focus, .btn-white-border-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  border-color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-outline:disabled span, .btn-color-outline:disabled i, .btn-white-outline:disabled span, .btn-white-outline:disabled i, .btn-white-border-outline:disabled span, .btn-white-border-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-outline:disabled:hover, .btn-white-outline:disabled:hover, .btn-white-border-outline:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-no-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n}\n.btn-no-outline span, .btn-no-outline i {\n  color: #24398A;\n}\n.btn-no-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-no-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-no-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-no-outline:disabled span, .btn-no-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-no-outline:disabled:hover {\n  box-shadow: none;\n}\n.btn-no-outline:disabled:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.active-label-button {\n  background: #34A853;\n  color: white;\n  border-color: transparent;\n}\n.active-label-button span, .active-label-button i {\n  color: white;\n}\n.active-label-button:hover {\n  background: rgba(52, 168, 83, 0.8);\n}\n.active-label-button:focus, .active-label-button:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.inactive-label-button {\n  background: #848484;\n  color: white;\n  border-color: transparent;\n}\n.inactive-label-button span, .inactive-label-button i {\n  color: white;\n}\n.inactive-label-button:hover {\n  background: rgba(132, 132, 132, 0.8);\n}\n.inactive-label-button:focus, .inactive-label-button:active {\n  background: rgba(132, 132, 132, 0.8);\n}\n\n.disabled-label-button {\n  background: #E64335;\n  color: white;\n  border-color: transparent;\n}\n.disabled-label-button span, .disabled-label-button i {\n  color: white;\n}\n.disabled-label-button:hover {\n  background: rgba(230, 67, 53, 0.8);\n}\n.disabled-label-button:focus, .disabled-label-button:active {\n  background: rgba(230, 67, 53, 0.8);\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.container {\n  padding: 48px 52px;\n  border: none;\n}\n\n@media screen and (min-width: 1020px) {\n  .container.modal-content {\n    border: none;\n  }\n}\n.m-header h4, .m-header i {\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 140%;\n  color: #24398A;\n}\n.m-header i.fas.fa-times.col-2 {\n  display: flex;\n  justify-content: flex-end;\n}\n.m-header p {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: rgba(35, 31, 32, 0.5);\n}\n\n.blue-card {\n  border: 1px #24398A solid;\n  border-radius: 8px;\n  padding: 16px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n}\n.blue-card h3 {\n  line-height: 34px;\n  font-size: 24px;\n}\n.blue-card h4 {\n  line-height: 22px;\n  font-size: 16px;\n}\n.blue-card h3, .blue-card h4 {\n  font-weight: 700;\n  color: #24398A;\n}\n.blue-card p {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  color: #24398A;\n  opacity: 0.6;\n  word-break: break-word;\n}\n@media only screen and (min-width: 320px) and (max-width: 768px) {\n  .blue-card .row.d-flex.flex-wrap {\n    flex-direction: column;\n  }\n}\n\n::ng-deep.mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #24398A !important;\n}\n\n::ng-deep.mat-form-field-appearance-outline .mat-form-field-label {\n  color: #24398A !important;\n  opacity: 0.6 !important;\n}\n\ntextarea.mat-input-element {\n  font-weight: 400 !important;\n  font-size: 16px !important;\n  line-height: 22px !important;\n  color: #231F20 !important;\n}\n\n.modal-footer {\n  border: none;\n}\n@media only screen and (min-width: 320px) and (max-width: 480px) {\n  .modal-footer .btn-long {\n    min-width: 100%;\n  }\n}\n@media only screen and (min-width: 481px) and (max-width: 768px) {\n  .modal-footer .d-flex.flex-wrap.justify-content-between.w-100 {\n    justify-content: center !important;\n  }\n}\n@media only screen and (min-width: 769px) and (max-width: 1023px) {\n  .modal-footer .d-flex.flex-wrap.justify-content-between.w-100 {\n    justify-content: center !important;\n  }\n}\n\n.fa-times {\n  cursor: pointer;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/provider-request/provider-request.component.scss","webpack://./src/app/theme/styles/components/_fonts.scss","webpack://./src/app/theme/styles/components/_buttons.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACZF;;ADeA;EACE,6BAAA;EACA,+BAAA;ACZF;;ADwCA;EACI,oCAAA;ACrCJ;;ADwCA;EACQ,kCAAA;ACrCR;;ACbA;EACE,iCALiB;ADqBnB;;ACbA;EACE,eAAA;EACA,iBAAA;ADgBF;;ACbA;EACE,gBAAA;EACA,cFfc;AC+BhB;;AE7BA;EACE,gBAAA;AFgCF;;AE7BA;EACE,WAAA;AFgCF;;AE7BA;EACE,qBAAA;EACA,eAAA;EACA,iCDbiB;ECcjB,gBAAA;EACA,SAAA;EACA,oBAAA;EACA,uBAAA;EACA,mBAAA;EACA,eAAA;EACA,YAAA;EACA,iBAAA;EACA,oBAAA;AFgCF;AE7BE;EAEE;oBAAA;AF+BJ;AE3BE;EACE,yCAAA;EACA,4BAAA;AF6BJ;AExBE;EACE,cAAA;EACA,aAAA;AF0BJ;;AEtBA;EACE,WAAA;AFyBF;;AEtBA;EACE,YAAA;EACA,WAAA;EACA,aAAA;EACA,cAAA;EACA,uBAAA;EACA,mBAAA;EACA,oBAAA;EACA,iBAAA;AFyBF;AEvBE;EACE,eAAA;EACA,4BAAA;EACA;oBAAA;AF0BJ;AEtBE;EACE,yCAAA;EACA,4BAAA;AFwBJ;AEpBE;EACE,cAAA;EACA,aAAA;AFsBJ;;AElBA;EACE,mBAAA;EACA,mBAAA;EACA,YAAA;EACA,QAAA;EACA,YAAA;EACA,YAAA;EAEA,mBAAA;AFoBF;AElBE;EACE,eAAA;EACA,WAAA;EACA,YAAA;EACA,eAAA;AFoBJ;AEjBE;EACE,yCAAA;EACA,4BAAA;AFmBJ;AEfG;EACC,cAAA;EACA,aAAA;AFiBJ;;AEVA;EACE,yBH9Gc;EG+Gd,gCAAA;EACA,YAAA;AFaF;AEXE;EACE,gCAAA;AFaJ;AEVE;EACE,mCAAA;AFYJ;AETG;EACC,mCAAA;AFWJ;;AEPA;EACE,2CAAA;EACA,cHjIc;EGkId,YAAA;EACA,yCAAA;AFUF;AERE;EACE,cHtIY;ACgJhB;AEPE;EACE,qCAAA;AFSJ;AEJG;EACC,qCAAA;AFMJ;;AEFA;EACE,yBH9GU;EG+GV,gCAAA;EACA,YAAA;AFKF;AEHE;EACE,gCAAA;AFKJ;AEFE;EACE,oCAAA;AFIJ;AEAE;EACE,oCAAA;AFEJ;;AEEA;EACE,yBHhIc;EGiId,gCAAA;EACA,YAAA;AFCF;AECE;EACE,gCAAA;AFCJ;AEEE;EACE,mCAAA;AFAJ;AEIE;EACE,mCAAA;AFFJ;;AEMA;EACE,6CAAA;EACA,6BAAA;EACA,mBAAA;AFHF;AEKE;EACE,6BAAA;AFHJ;AEME;EACE,gBAAA;AFJJ;;AESA;EACE,gCAAA;EACA,cH3Mc;EG4Md,qBH5Mc;ACsMhB;AEQE;EACE,cH/MY;ACyMhB;AESE;EACE,mCAAA;AFPJ;AEWG;EACC,mCAAA;AFTJ;;AEaA;EACE,gCAAA;EACA,gCAAA;EACA,qBH/Nc;ACqNhB;AEYE;EACE,cHlOY;ACwNhB;AEaE;EACE,mCAAA;AFXJ;AEeE;EACE,mCAAA;AFbJ;;AEiBA;EACE,gCAAA;EACA,YAAA;EACA,mBAAA;AFdF;AEgBE;EACE,YAAA;AFdJ;AEiBE;EACE,mCAAA;AFfJ;AEkBG;EACC,mCAAA;AFhBJ;;AEoBA;EACE,gCAAA;EACA,6BAAA;EACA,oCAAA;EACA,mBAAA;AFjBF;AEmBE;EACE,6BAAA;AFjBJ;AEoBE;EACE,gBAAA;AFlBJ;;AEsBA;EACE,gCAAA;EACA,cHlRc;EGmRd,yBAAA;EACA,WAAA;EACA,YAAA;AFnBF;AEqBE;EACE,cHxRY;ACqQhB;AEsBE;EACE,mCAAA;AFpBJ;AEwBE;EACE,mCAAA;AFtBJ;;AE0BA;EACE,gCAAA;EACA,6BAAA;EACA,mBAAA;AFvBF;AEyBE;EACE,6BAAA;AFvBJ;AE0BE;EACE,gBAAA;AFxBJ;AE0BG;EACC,kCAAA;AFxBJ;;AE4BA;EACE,mBH1QgB;EG2QhB,YAAA;EACA,yBAAA;AFzBF;AE2BE;EACE,YAAA;AFzBJ;AE4BE;EACE,kCAAA;AF1BJ;AE6BE;EACE,kCAAA;AF3BJ;;AE+BA;EACE,mBH3RkB;EG4RlB,YAAA;EACA,yBAAA;AF5BF;AE8BE;EACE,YAAA;AF5BJ;AE+BE;EACE,oCAAA;AF7BJ;AEgCE;EACE,oCAAA;AF9BJ;;AEmCA;EACE,mBAAA;EACA,YAAA;EACA,yBAAA;AFhCF;AEkCE;EACE,YAAA;AFhCJ;AEmCE;EACE,kCAAA;AFjCJ;AEoCG;EACC,kCAAA;AFlCJ;;ACnUA;EACE,iCALiB;AD2UnB;;ACnUA;EACE,eAAA;EACA,iBAAA;ADsUF;;ACnUA;EACE,gBAAA;EACA,cFfc;ACqVhB;;AAjVA;EACE,kBAAA;EACA,YAAA;AAoVF;;AAjVA;EACE;IACE,YAAA;EAoVF;AACF;AAhVI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,cDpBQ;ACsWhB;AA/UI;EACI,aAAA;EACA,yBAAA;AAiVR;AA9UI;EAEQ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,4BAAA;AA8UZ;;AAvUA;EACI,yBAAA;EACA,kBAAA;EACA,aAAA;EACA,4FAAA;AA0UJ;AAvUI;EACI,iBAAA;EACA,eAAA;AAyUR;AAtUI;EACI,iBAAA;EACA,eAAA;AAwUR;AArUI;EACI,gBAAA;EACA,cDhEQ;ACuYhB;AApUI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,cDvEQ;ECwER,YAAA;EACA,sBAAA;AAsUR;AAnUI;EACI;IACI,sBAAA;EAqUV;AACF;;AA9TA;EACI,yBAAA;AAiUJ;;AA9TA;EACI,yBAAA;EACA,uBAAA;AAiUJ;;AA9TA;EACI,2BAAA;EACA,0BAAA;EACA,4BAAA;EACA,yBAAA;AAiUJ;;AA3TA;EACI,YAAA;AA8TJ;AA5TI;EACI;IACG,eAAA;EA8TT;AACF;AA3TI;EACI;IACI,kCAAA;EA6TV;AACF;AA1TI;EACI;IACI,kCAAA;EA4TV;AACF;;AAvTA;EACI,eAAA;AA0TJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"/src/app/theme/styles/components/buttons\";\n@import \"/src/app/theme/styles/components/fonts\";\n@import \"src/assets/fonts/font-awesome/css/all.css\";\n\n.container{\n  padding: 48px 52px;\n  border: none;\n}\n\n@media screen and (min-width:1020px){\n  .container.modal-content{\n    border: none;\n  }\n}\n\n.m-header{\n    h4, i{\n        font-weight: 600;\n        font-size: 24px;\n        line-height: 140%;\n        color:$primary-color;\n    }\n\n    i.fas.fa-times.col-2{\n        display: flex;\n        justify-content: flex-end;\n    }\n\n    p{\n\n            font-weight: 400;\n            font-size: 16px;\n            line-height: 140%;\n            /* or 22px */\n\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.02em;\n            color: rgba($paragraph,0.5);\n\n    }\n\n}\n\n\n.blue-card{\n    border:1px $primary-color solid;\n    border-radius: 8px;\n    padding:16px;\n    background:linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n\n\n    h3{\n        line-height: 34px;\n        font-size: 24px;\n    }\n\n    h4{\n        line-height: 22px;\n        font-size: 16px;\n    }\n\n    h3,h4{\n        font-weight: 700;\n        color:$primary-color;\n    }\n\n    p{\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 22px;\n        color:$primary-color;\n        opacity: .6;\n        word-break: break-word;\n    }\n\n    @media only screen and (min-width:320px) and (max-width: 768px){\n        .row.d-flex.flex-wrap{\n            flex-direction: column;\n        }\n    }\n\n\n}\n\n//reason text area\n::ng-deep.mat-form-field-appearance-outline .mat-form-field-outline{\n    color:$primary-color!important;\n}\n\n::ng-deep.mat-form-field-appearance-outline .mat-form-field-label{\n    color:$primary-color!important;\n    opacity: .6!important;\n}\n\ntextarea.mat-input-element{\n    font-weight: 400!important;\n    font-size: 16px!important;\n    line-height: 22px!important;\n    color:$paragraph!important;\n}\n\n\n//buttons\n\n.modal-footer{\n    border: none;\n\n    @media only screen and (min-width:320px) and (max-width: 480px){\n        .btn-long{\n           min-width:100%;\n        }\n    }\n\n    @media only screen and (min-width:481px) and (max-width: 768px){\n        .d-flex.flex-wrap.justify-content-between.w-100{\n            justify-content: center!important;\n        }\n    }\n\n    @media only screen and (min-width:769px) and (max-width: 1023px){\n        .d-flex.flex-wrap.justify-content-between.w-100{\n            justify-content: center!important;\n        }\n    }\n\n}\n\n.fa-times{\n    cursor: pointer;\n}\n","\n$main-font-family: 'Roboto', sans-serif;\n\n$secondary-font-family: 'Montserrat', sans-serif;\n\n* {\n  font-family: $main-font-family;\n}\n\nh1{\n  font-size:32px;\n  line-height:140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight:700;\n  color: $primary-color;\n}\n","@import '../components/fonts';\n\n// START: button shapes\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto  {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: $main-font-family;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n\n\n  span, i {\n    //font-size: 12px;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n    //color: #fff;\n  }\n\n\n  &:focus, &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n\n  span, i {\n    font-size: 12px;\n    margin-right: 0px!important;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n  &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  // background: #34A853;\n  border-radius: 90px;\n\n  span, i {\n    font-size: 12px;\n    width: 24px;\n    height: 24px;\n    font-size: 16px;\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n   &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n// END: button shapes\n\n\n// START: button colors\n.btn-color-fill {\n  background-color: $primary-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($primary-color, 72%);\n  }\n\n   &:active {\n    background: rgba($primary-color, 48%);\n  }\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: $primary-color;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($background-secondary, 72%);\n    // border-radius: 50%;\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($background-secondary , 48%);\n  }\n}\n\n.btn-like-fill {\n  background-color: $like-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($like-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($like-color, 48%);\n  }\n}\n\n.btn-dislike-fill {\n  background-color: $dislike-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($dislike-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($dislike-color, 48%);\n  }\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled ,.btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n\n.btn-color-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-outline {\n  background: rgba($primary-color, 0%);\n  color: var(--primary-background);\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-border-outline {\n  background: rgba($primary-color, 0%);\n  color: white;\n  border-color: white;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n   &:focus, &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  border-color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n.btn-no-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-no-outline:disabled{\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n   &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.active-label-button{\n  background: $active-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($active-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.inactive-label-button{\n  background: $inactive-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n}\n\n.disabled-label-button{\n  background: $disabled-btn-color,;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n   &:focus,&:active {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n}\n\n// END: button colors\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 5461:
/*!*********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/status-provider/status-provider.component.scss?ngResource ***!
  \*********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_AT_RULE_IMPORT_0___ = __webpack_require__(/*! -!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[0]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[1]!../../../../assets/fonts/font-awesome/css/all.css */ 46337);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n}\n.btn-long span, .btn-long i, .btn-auto span, .btn-auto i {\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-long:hover, .btn-auto:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-long:focus, .btn-long:active, .btn-auto:focus, .btn-auto:active {\n  transition: 0s;\n  outline: none;\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n}\n.btn-round span, .btn-round i {\n  font-size: 12px;\n  margin-right: 0px !important;\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-round:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-round:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  border-radius: 90px;\n}\n.btn-label span, .btn-label i {\n  font-size: 12px;\n  width: 24px;\n  height: 24px;\n  font-size: 16px;\n}\n.btn-label:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-label:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-color-fill {\n  background-color: #24398A;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-color-fill span, .btn-color-fill i {\n  color: var(--primary-background);\n}\n.btn-color-fill:hover {\n  background: rgba(36, 57, 138, 0.72);\n}\n.btn-color-fill:active {\n  background: rgba(36, 57, 138, 0.48);\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: #24398A;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n}\n.btn-white-fill span, .btn-white-fill i {\n  color: #24398A;\n}\n.btn-white-fill:hover {\n  background: rgba(237, 240, 250, 0.72);\n}\n.btn-white-fill:active {\n  background: rgba(237, 240, 250, 0.48);\n}\n\n.btn-like-fill {\n  background-color: #2CCEA7;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-like-fill span, .btn-like-fill i {\n  color: var(--primary-background);\n}\n.btn-like-fill:hover {\n  background: rgba(44, 206, 167, 0.72);\n}\n.btn-like-fill:active {\n  background: rgba(44, 206, 167, 0.48);\n}\n\n.btn-dislike-fill {\n  background-color: #EA4335;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-dislike-fill span, .btn-dislike-fill i {\n  color: var(--primary-background);\n}\n.btn-dislike-fill:hover {\n  background: rgba(234, 67, 53, 0.72);\n}\n.btn-dislike-fill:active {\n  background: rgba(234, 67, 53, 0.48);\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled, .btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-fill:disabled span, .btn-color-fill:disabled i, .btn-white-fill:disabled span, .btn-white-fill:disabled i, .btn-dislike-fill:disabled span, .btn-dislike-fill:disabled i, .btn-like-fill:disabled span, .btn-like-fill:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-fill:disabled:hover, .btn-white-fill:disabled:hover, .btn-dislike-fill:disabled:hover, .btn-like-fill:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-color-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: #24398A;\n}\n.btn-color-outline span, .btn-color-outline i {\n  color: #24398A;\n}\n.btn-color-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-color-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-outline {\n  background: rgba(36, 57, 138, 0);\n  color: var(--primary-background);\n  border-color: #24398A;\n}\n.btn-white-outline span, .btn-white-outline i {\n  color: #24398A;\n}\n.btn-white-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-border-outline {\n  background: rgba(36, 57, 138, 0);\n  color: white;\n  border-color: white;\n}\n.btn-white-border-outline span, .btn-white-border-outline i {\n  color: white;\n}\n.btn-white-border-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-border-outline:focus, .btn-white-border-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  border-color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-outline:disabled span, .btn-color-outline:disabled i, .btn-white-outline:disabled span, .btn-white-outline:disabled i, .btn-white-border-outline:disabled span, .btn-white-border-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-outline:disabled:hover, .btn-white-outline:disabled:hover, .btn-white-border-outline:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-no-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n}\n.btn-no-outline span, .btn-no-outline i {\n  color: #24398A;\n}\n.btn-no-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-no-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-no-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-no-outline:disabled span, .btn-no-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-no-outline:disabled:hover {\n  box-shadow: none;\n}\n.btn-no-outline:disabled:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.active-label-button {\n  background: #34A853;\n  color: white;\n  border-color: transparent;\n}\n.active-label-button span, .active-label-button i {\n  color: white;\n}\n.active-label-button:hover {\n  background: rgba(52, 168, 83, 0.8);\n}\n.active-label-button:focus, .active-label-button:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.inactive-label-button {\n  background: #848484;\n  color: white;\n  border-color: transparent;\n}\n.inactive-label-button span, .inactive-label-button i {\n  color: white;\n}\n.inactive-label-button:hover {\n  background: rgba(132, 132, 132, 0.8);\n}\n.inactive-label-button:focus, .inactive-label-button:active {\n  background: rgba(132, 132, 132, 0.8);\n}\n\n.disabled-label-button {\n  background: #E64335;\n  color: white;\n  border-color: transparent;\n}\n.disabled-label-button span, .disabled-label-button i {\n  color: white;\n}\n.disabled-label-button:hover {\n  background: rgba(230, 67, 53, 0.8);\n}\n.disabled-label-button:focus, .disabled-label-button:active {\n  background: rgba(230, 67, 53, 0.8);\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.container {\n  padding: 32px 52px;\n  border: none;\n}\n\n@media screen and (min-width: 1020px) {\n  .container.modal-content {\n    border: none;\n  }\n}\n.modal-header {\n  border: none;\n  max-width: 615.95px;\n}\n.modal-header h4.modal-title {\n  color: #24398A !important;\n  font-size: 24px;\n  font-weight: 600;\n  color: #231F20;\n  line-height: 33.6px;\n  text-align: left;\n}\n\n.modal-body {\n  max-width: 615.95px;\n}\n.modal-body .modal-body-text {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: rgba(35, 31, 32, 0.5);\n}\n\n.blue-card {\n  max-width: 615.95px;\n  padding: 16px;\n}\n.blue-card img {\n  height: 96px;\n  width: 96px;\n  border-radius: 50%;\n}\n.blue-card div.modal-blue-container {\n  border: solid 1px #24398A;\n  border-radius: 8px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n}\n.blue-card div.modal-blue-container h4 {\n  color: #24398A !important;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container p {\n  color: rgba(36, 57, 138, 0.8);\n  font-weight: 400px;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container h5 {\n  color: #24398A;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n\n.modal-footer {\n  max-width: 615.95px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n}\n.modal-footer .button-wrapper {\n  justify-content: space-evenly;\n  max-width: 615.95px;\n  flex-wrap: wrap;\n}\n.modal-footer button.btn-long {\n  align-items: center;\n  max-width: 303px !important;\n  height: 50px;\n  margin: 0px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/status-provider/status-provider.component.scss","webpack://./src/app/theme/styles/components/_fonts.scss","webpack://./src/app/theme/styles/components/_buttons.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACZF;;ADeA;EACE,6BAAA;EACA,+BAAA;ACZF;;ADwCA;EACI,oCAAA;ACrCJ;;ADwCA;EACQ,kCAAA;ACrCR;;ACbA;EACE,iCALiB;ADqBnB;;ACbA;EACE,eAAA;EACA,iBAAA;ADgBF;;ACbA;EACE,gBAAA;EACA,cFfc;AC+BhB;;AE7BA;EACE,gBAAA;AFgCF;;AE7BA;EACE,WAAA;AFgCF;;AE7BA;EACE,qBAAA;EACA,eAAA;EACA,iCDbiB;ECcjB,gBAAA;EACA,SAAA;EACA,oBAAA;EACA,uBAAA;EACA,mBAAA;EACA,eAAA;EACA,YAAA;EACA,iBAAA;EACA,oBAAA;AFgCF;AE7BE;EAEE;oBAAA;AF+BJ;AE3BE;EACE,yCAAA;EACA,4BAAA;AF6BJ;AExBE;EACE,cAAA;EACA,aAAA;AF0BJ;;AEtBA;EACE,WAAA;AFyBF;;AEtBA;EACE,YAAA;EACA,WAAA;EACA,aAAA;EACA,cAAA;EACA,uBAAA;EACA,mBAAA;EACA,oBAAA;EACA,iBAAA;AFyBF;AEvBE;EACE,eAAA;EACA,4BAAA;EACA;oBAAA;AF0BJ;AEtBE;EACE,yCAAA;EACA,4BAAA;AFwBJ;AEpBE;EACE,cAAA;EACA,aAAA;AFsBJ;;AElBA;EACE,mBAAA;EACA,mBAAA;EACA,YAAA;EACA,QAAA;EACA,YAAA;EACA,YAAA;EAEA,mBAAA;AFoBF;AElBE;EACE,eAAA;EACA,WAAA;EACA,YAAA;EACA,eAAA;AFoBJ;AEjBE;EACE,yCAAA;EACA,4BAAA;AFmBJ;AEfG;EACC,cAAA;EACA,aAAA;AFiBJ;;AEVA;EACE,yBH9Gc;EG+Gd,gCAAA;EACA,YAAA;AFaF;AEXE;EACE,gCAAA;AFaJ;AEVE;EACE,mCAAA;AFYJ;AETG;EACC,mCAAA;AFWJ;;AEPA;EACE,2CAAA;EACA,cHjIc;EGkId,YAAA;EACA,yCAAA;AFUF;AERE;EACE,cHtIY;ACgJhB;AEPE;EACE,qCAAA;AFSJ;AEJG;EACC,qCAAA;AFMJ;;AEFA;EACE,yBH9GU;EG+GV,gCAAA;EACA,YAAA;AFKF;AEHE;EACE,gCAAA;AFKJ;AEFE;EACE,oCAAA;AFIJ;AEAE;EACE,oCAAA;AFEJ;;AEEA;EACE,yBHhIc;EGiId,gCAAA;EACA,YAAA;AFCF;AECE;EACE,gCAAA;AFCJ;AEEE;EACE,mCAAA;AFAJ;AEIE;EACE,mCAAA;AFFJ;;AEMA;EACE,6CAAA;EACA,6BAAA;EACA,mBAAA;AFHF;AEKE;EACE,6BAAA;AFHJ;AEME;EACE,gBAAA;AFJJ;;AESA;EACE,gCAAA;EACA,cH3Mc;EG4Md,qBH5Mc;ACsMhB;AEQE;EACE,cH/MY;ACyMhB;AESE;EACE,mCAAA;AFPJ;AEWG;EACC,mCAAA;AFTJ;;AEaA;EACE,gCAAA;EACA,gCAAA;EACA,qBH/Nc;ACqNhB;AEYE;EACE,cHlOY;ACwNhB;AEaE;EACE,mCAAA;AFXJ;AEeE;EACE,mCAAA;AFbJ;;AEiBA;EACE,gCAAA;EACA,YAAA;EACA,mBAAA;AFdF;AEgBE;EACE,YAAA;AFdJ;AEiBE;EACE,mCAAA;AFfJ;AEkBG;EACC,mCAAA;AFhBJ;;AEoBA;EACE,gCAAA;EACA,6BAAA;EACA,oCAAA;EACA,mBAAA;AFjBF;AEmBE;EACE,6BAAA;AFjBJ;AEoBE;EACE,gBAAA;AFlBJ;;AEsBA;EACE,gCAAA;EACA,cHlRc;EGmRd,yBAAA;EACA,WAAA;EACA,YAAA;AFnBF;AEqBE;EACE,cHxRY;ACqQhB;AEsBE;EACE,mCAAA;AFpBJ;AEwBE;EACE,mCAAA;AFtBJ;;AE0BA;EACE,gCAAA;EACA,6BAAA;EACA,mBAAA;AFvBF;AEyBE;EACE,6BAAA;AFvBJ;AE0BE;EACE,gBAAA;AFxBJ;AE0BG;EACC,kCAAA;AFxBJ;;AE4BA;EACE,mBH1QgB;EG2QhB,YAAA;EACA,yBAAA;AFzBF;AE2BE;EACE,YAAA;AFzBJ;AE4BE;EACE,kCAAA;AF1BJ;AE6BE;EACE,kCAAA;AF3BJ;;AE+BA;EACE,mBH3RkB;EG4RlB,YAAA;EACA,yBAAA;AF5BF;AE8BE;EACE,YAAA;AF5BJ;AE+BE;EACE,oCAAA;AF7BJ;AEgCE;EACE,oCAAA;AF9BJ;;AEmCA;EACE,mBAAA;EACA,YAAA;EACA,yBAAA;AFhCF;AEkCE;EACE,YAAA;AFhCJ;AEmCE;EACE,kCAAA;AFjCJ;AEoCG;EACC,kCAAA;AFlCJ;;ACnUA;EACE,iCALiB;AD2UnB;;ACnUA;EACE,eAAA;EACA,iBAAA;ADsUF;;ACnUA;EACE,gBAAA;EACA,cFfc;ACqVhB;;AAjVA;EACE,kBAAA;EACA,YAAA;AAoVF;;AAjVA;EACE;IACE,YAAA;EAoVF;AACF;AA/UA;EACI,YAAA;EACA,mBAAA;AAiVJ;AA/UI;EACA,yBAAA;EACA,eAAA;EACE,gBAAA;EACA,cDpBM;ECqBN,mBAAA;EACA,gBAAA;AAiVN;;AA9UA;EACI,mBAAA;AAiVJ;AA/UI;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,4BAAA;AAgVN;;AA5UE;EACE,mBAAA;EACA,aAAA;AA+UJ;AA7UI;EACE,YAAA;EACA,WAAA;EACA,kBAAA;AA+UN;AA5UQ;EACA,yBAAA;EACA,kBAAA;EAEA,4FAAA;AA6UR;AA3UQ;EACI,yBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;AA6UZ;AA3UQ;EACE,6BAAA;EACA,kBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AA4UV;AA1UQ;EACE,cDpFM;ECqFN,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AA2UV;;AAtUA;EAEE,mBAAA;EACE,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,YAAA;AAwUJ;AAtUI;EACI,6BAAA;EACA,mBAAA;EACA,eAAA;AAwUR;AArUI;EACI,mBAAA;EACA,2BAAA;EACA,YAAA;EACA,WAAA;AAuUR","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"/src/app/theme/styles/components/buttons\";\n@import \"/src/app/theme/styles/components/fonts\";\n@import \"src/assets/fonts/font-awesome/css/all.css\";\n\n.container{\n  padding: 32px 52px;\n  border: none;\n}\n\n@media screen and (min-width:1020px){\n  .container.modal-content{\n    border: none;\n  }\n\n}\n\n\n.modal-header{\n    border: none;\n    max-width: 615.95px;\n\n    h4.modal-title{\n    color: $primary-color!important;\n    font-size: 24px;\n      font-weight: 600;\n      color:$paragraph;\n      line-height: 33.6px;\n      text-align:left;\n    }\n}\n.modal-body {\n    max-width: 615.95px;\n\n    .modal-body-text {\n      font-weight: 400;\n      font-size: 16px;\n      line-height: 140%;\n      /* or 22px */\n\n      display: flex;\n      align-items: center;\n      letter-spacing: -0.02em;\n      color: rgba($paragraph,0.5);\n    }\n  }\n\n  .blue-card{\n    max-width: 615.95px;\n    padding: 16px;\n\n    img{\n      height: 96px;\n      width:96px;\n      border-radius: 50%;\n    }\n\n        div.modal-blue-container{\n        border: solid 1px $primary-color;\n        border-radius: 8px;\n\n        background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n\n        h4{\n            color: $primary-color!important;\n            font-weight: 700;\n            font-size: 24px;\n            line-height: 140%;\n            /* identical to box height, or 34px */\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.02em;\n        }\n        p{\n          color: rgba($primary-color, 0.8);\n          font-weight: 400px;\n          font-size: 16px;\n          line-height: 140%;\n          /* or 22px */\n\n          display: flex;\n          align-items: center;\n          letter-spacing: -0.02em;\n        }\n        h5{\n          color: $primary-color;\n          font-weight: 700;\n          font-size: 16px;\n          line-height: 140%;\n          /* or 22px */\n\n          display: flex;\n          align-items: center;\n          letter-spacing: -0.02em;\n        }\n    }\n  }\n\n.modal-footer{\n\n  max-width: 615.95px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n\n    .button-wrapper{\n        justify-content:space-evenly;\n        max-width: 615.95px;\n        flex-wrap: wrap;\n    }\n\n    button.btn-long{\n        align-items: center;\n        max-width: 303px!important;\n        height: 50px;\n        margin:0px;\n    }\n}\n","\n$main-font-family: 'Roboto', sans-serif;\n\n$secondary-font-family: 'Montserrat', sans-serif;\n\n* {\n  font-family: $main-font-family;\n}\n\nh1{\n  font-size:32px;\n  line-height:140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight:700;\n  color: $primary-color;\n}\n","@import '../components/fonts';\n\n// START: button shapes\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto  {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: $main-font-family;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n\n\n  span, i {\n    //font-size: 12px;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n    //color: #fff;\n  }\n\n\n  &:focus, &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n\n  span, i {\n    font-size: 12px;\n    margin-right: 0px!important;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n  &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  // background: #34A853;\n  border-radius: 90px;\n\n  span, i {\n    font-size: 12px;\n    width: 24px;\n    height: 24px;\n    font-size: 16px;\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n   &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n// END: button shapes\n\n\n// START: button colors\n.btn-color-fill {\n  background-color: $primary-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($primary-color, 72%);\n  }\n\n   &:active {\n    background: rgba($primary-color, 48%);\n  }\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: $primary-color;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($background-secondary, 72%);\n    // border-radius: 50%;\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($background-secondary , 48%);\n  }\n}\n\n.btn-like-fill {\n  background-color: $like-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($like-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($like-color, 48%);\n  }\n}\n\n.btn-dislike-fill {\n  background-color: $dislike-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($dislike-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($dislike-color, 48%);\n  }\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled ,.btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n\n.btn-color-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-outline {\n  background: rgba($primary-color, 0%);\n  color: var(--primary-background);\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-border-outline {\n  background: rgba($primary-color, 0%);\n  color: white;\n  border-color: white;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n   &:focus, &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  border-color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n.btn-no-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-no-outline:disabled{\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n   &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.active-label-button{\n  background: $active-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($active-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.inactive-label-button{\n  background: $inactive-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n}\n\n.disabled-label-button{\n  background: $disabled-btn-color,;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n   &:focus,&:active {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n}\n\n// END: button colors\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 71764:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/features/providers-management/view-payment-request/view-payment-request.component.scss?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_AT_RULE_IMPORT_0___ = __webpack_require__(/*! -!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[0]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[1].use[1]!../../../../assets/fonts/font-awesome/css/all.css */ 46337);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n}\n.btn-long span, .btn-long i, .btn-auto span, .btn-auto i {\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-long:hover, .btn-auto:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-long:focus, .btn-long:active, .btn-auto:focus, .btn-auto:active {\n  transition: 0s;\n  outline: none;\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n}\n.btn-round span, .btn-round i {\n  font-size: 12px;\n  margin-right: 0px !important;\n  /*font-family: 'Font Awesome 5 Free';\n  font-weight: 900;*/\n}\n.btn-round:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-round:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  border-radius: 90px;\n}\n.btn-label span, .btn-label i {\n  font-size: 12px;\n  width: 24px;\n  height: 24px;\n  font-size: 16px;\n}\n.btn-label:hover {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  transition: ease-in-out 0.3s;\n}\n.btn-label:active {\n  transition: 0s;\n  outline: none;\n}\n\n.btn-color-fill {\n  background-color: #24398A;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-color-fill span, .btn-color-fill i {\n  color: var(--primary-background);\n}\n.btn-color-fill:hover {\n  background: rgba(36, 57, 138, 0.72);\n}\n.btn-color-fill:active {\n  background: rgba(36, 57, 138, 0.48);\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: #24398A;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n}\n.btn-white-fill span, .btn-white-fill i {\n  color: #24398A;\n}\n.btn-white-fill:hover {\n  background: rgba(237, 240, 250, 0.72);\n}\n.btn-white-fill:active {\n  background: rgba(237, 240, 250, 0.48);\n}\n\n.btn-like-fill {\n  background-color: #2CCEA7;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-like-fill span, .btn-like-fill i {\n  color: var(--primary-background);\n}\n.btn-like-fill:hover {\n  background: rgba(44, 206, 167, 0.72);\n}\n.btn-like-fill:active {\n  background: rgba(44, 206, 167, 0.48);\n}\n\n.btn-dislike-fill {\n  background-color: #EA4335;\n  color: var(--primary-background);\n  border: none;\n}\n.btn-dislike-fill span, .btn-dislike-fill i {\n  color: var(--primary-background);\n}\n.btn-dislike-fill:hover {\n  background: rgba(234, 67, 53, 0.72);\n}\n.btn-dislike-fill:active {\n  background: rgba(234, 67, 53, 0.48);\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled, .btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-fill:disabled span, .btn-color-fill:disabled i, .btn-white-fill:disabled span, .btn-white-fill:disabled i, .btn-dislike-fill:disabled span, .btn-dislike-fill:disabled i, .btn-like-fill:disabled span, .btn-like-fill:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-fill:disabled:hover, .btn-white-fill:disabled:hover, .btn-dislike-fill:disabled:hover, .btn-like-fill:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-color-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: #24398A;\n}\n.btn-color-outline span, .btn-color-outline i {\n  color: #24398A;\n}\n.btn-color-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-color-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-outline {\n  background: rgba(36, 57, 138, 0);\n  color: var(--primary-background);\n  border-color: #24398A;\n}\n.btn-white-outline span, .btn-white-outline i {\n  color: #24398A;\n}\n.btn-white-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-white-border-outline {\n  background: rgba(36, 57, 138, 0);\n  color: white;\n  border-color: white;\n}\n.btn-white-border-outline span, .btn-white-border-outline i {\n  color: white;\n}\n.btn-white-border-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-white-border-outline:focus, .btn-white-border-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  border-color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-color-outline:disabled span, .btn-color-outline:disabled i, .btn-white-outline:disabled span, .btn-white-outline:disabled i, .btn-white-border-outline:disabled span, .btn-white-border-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-color-outline:disabled:hover, .btn-white-outline:disabled:hover, .btn-white-border-outline:disabled:hover {\n  box-shadow: none;\n}\n\n.btn-no-outline {\n  background: rgba(36, 57, 138, 0);\n  color: #24398A;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n}\n.btn-no-outline span, .btn-no-outline i {\n  color: #24398A;\n}\n.btn-no-outline:hover {\n  background: rgba(36, 57, 138, 0.08);\n}\n.btn-no-outline:active {\n  background: rgba(36, 57, 138, 0.24);\n}\n\n.btn-no-outline:disabled {\n  background: rgba(36, 57, 138, 0);\n  color: rgba(35, 31, 32, 0.48);\n  cursor: not-allowed;\n}\n.btn-no-outline:disabled span, .btn-no-outline:disabled i {\n  color: rgba(35, 31, 32, 0.48);\n}\n.btn-no-outline:disabled:hover {\n  box-shadow: none;\n}\n.btn-no-outline:disabled:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.active-label-button {\n  background: #34A853;\n  color: white;\n  border-color: transparent;\n}\n.active-label-button span, .active-label-button i {\n  color: white;\n}\n.active-label-button:hover {\n  background: rgba(52, 168, 83, 0.8);\n}\n.active-label-button:focus, .active-label-button:active {\n  background: rgba(52, 168, 83, 0.8);\n}\n\n.inactive-label-button {\n  background: #848484;\n  color: white;\n  border-color: transparent;\n}\n.inactive-label-button span, .inactive-label-button i {\n  color: white;\n}\n.inactive-label-button:hover {\n  background: rgba(132, 132, 132, 0.8);\n}\n.inactive-label-button:focus, .inactive-label-button:active {\n  background: rgba(132, 132, 132, 0.8);\n}\n\n.disabled-label-button {\n  background: #E64335;\n  color: white;\n  border-color: transparent;\n}\n.disabled-label-button span, .disabled-label-button i {\n  color: white;\n}\n.disabled-label-button:hover {\n  background: rgba(230, 67, 53, 0.8);\n}\n.disabled-label-button:focus, .disabled-label-button:active {\n  background: rgba(230, 67, 53, 0.8);\n}\n\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\nh1 {\n  font-size: 32px;\n  line-height: 140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: #24398A;\n}\n\n.container {\n  padding: 32px 52px;\n  border: none;\n}\n\n@media screen and (min-width: 1020px) {\n  .container.modal-content {\n    border: none;\n  }\n}\n.primary-color {\n  color: #24398A;\n}\n\n.paragraph-color {\n  color: #231F20;\n}\n\n.modal-header {\n  border: none;\n  max-width: 615.95px;\n}\n.modal-header h4.modal-title {\n  color: #24398A !important;\n  font-size: 24px;\n  font-weight: 700;\n  color: #231F20;\n  line-height: 33.6px;\n  text-align: left;\n}\n.modal-header i {\n  color: #24398A;\n  font-weight: 900;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n\n.modal-body {\n  max-width: 615.95px;\n}\n.modal-body .modal-body-text {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: rgba(35, 31, 32, 0.5);\n}\n\n.blue-card {\n  max-width: 615.95px;\n}\n.blue-card div.modal-blue-container {\n  border: solid 1px #24398A;\n  border-radius: 8px;\n  padding: 16px;\n  background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n}\n.blue-card div.modal-blue-container h4 {\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #24398A;\n}\n.blue-card div.modal-blue-container p {\n  font-weight: 400px;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container h6 {\n  color: #24398A;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container .invoice-report-container-class .text h6 {\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container .invoice-report-container-class .text p {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  text-align: right;\n  letter-spacing: -0.02em;\n}\n.blue-card div.modal-blue-container .invoice-report-container-class .text i {\n  margin-right: 10px;\n}\n\n.modal-footer {\n  max-width: 615.95px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n}\n.modal-footer .button-wrapper {\n  justify-content: space-evenly;\n  max-width: 615.95px;\n  flex-wrap: wrap;\n}\n.modal-footer button.btn-long {\n  align-items: center;\n  max-width: 303px !important;\n  height: 50px;\n  margin: 0px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/view-payment-request/view-payment-request.component.scss","webpack://./src/app/theme/styles/components/_fonts.scss","webpack://./src/app/theme/styles/components/_buttons.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACZF;;ADeA;EACE,6BAAA;EACA,+BAAA;ACZF;;ADwCA;EACI,oCAAA;ACrCJ;;ADwCA;EACQ,kCAAA;ACrCR;;ACbA;EACE,iCALiB;ADqBnB;;ACbA;EACE,eAAA;EACA,iBAAA;ADgBF;;ACbA;EACE,gBAAA;EACA,cFfc;AC+BhB;;AE7BA;EACE,gBAAA;AFgCF;;AE7BA;EACE,WAAA;AFgCF;;AE7BA;EACE,qBAAA;EACA,eAAA;EACA,iCDbiB;ECcjB,gBAAA;EACA,SAAA;EACA,oBAAA;EACA,uBAAA;EACA,mBAAA;EACA,eAAA;EACA,YAAA;EACA,iBAAA;EACA,oBAAA;AFgCF;AE7BE;EAEE;oBAAA;AF+BJ;AE3BE;EACE,yCAAA;EACA,4BAAA;AF6BJ;AExBE;EACE,cAAA;EACA,aAAA;AF0BJ;;AEtBA;EACE,WAAA;AFyBF;;AEtBA;EACE,YAAA;EACA,WAAA;EACA,aAAA;EACA,cAAA;EACA,uBAAA;EACA,mBAAA;EACA,oBAAA;EACA,iBAAA;AFyBF;AEvBE;EACE,eAAA;EACA,4BAAA;EACA;oBAAA;AF0BJ;AEtBE;EACE,yCAAA;EACA,4BAAA;AFwBJ;AEpBE;EACE,cAAA;EACA,aAAA;AFsBJ;;AElBA;EACE,mBAAA;EACA,mBAAA;EACA,YAAA;EACA,QAAA;EACA,YAAA;EACA,YAAA;EAEA,mBAAA;AFoBF;AElBE;EACE,eAAA;EACA,WAAA;EACA,YAAA;EACA,eAAA;AFoBJ;AEjBE;EACE,yCAAA;EACA,4BAAA;AFmBJ;AEfG;EACC,cAAA;EACA,aAAA;AFiBJ;;AEVA;EACE,yBH9Gc;EG+Gd,gCAAA;EACA,YAAA;AFaF;AEXE;EACE,gCAAA;AFaJ;AEVE;EACE,mCAAA;AFYJ;AETG;EACC,mCAAA;AFWJ;;AEPA;EACE,2CAAA;EACA,cHjIc;EGkId,YAAA;EACA,yCAAA;AFUF;AERE;EACE,cHtIY;ACgJhB;AEPE;EACE,qCAAA;AFSJ;AEJG;EACC,qCAAA;AFMJ;;AEFA;EACE,yBH9GU;EG+GV,gCAAA;EACA,YAAA;AFKF;AEHE;EACE,gCAAA;AFKJ;AEFE;EACE,oCAAA;AFIJ;AEAE;EACE,oCAAA;AFEJ;;AEEA;EACE,yBHhIc;EGiId,gCAAA;EACA,YAAA;AFCF;AECE;EACE,gCAAA;AFCJ;AEEE;EACE,mCAAA;AFAJ;AEIE;EACE,mCAAA;AFFJ;;AEMA;EACE,6CAAA;EACA,6BAAA;EACA,mBAAA;AFHF;AEKE;EACE,6BAAA;AFHJ;AEME;EACE,gBAAA;AFJJ;;AESA;EACE,gCAAA;EACA,cH3Mc;EG4Md,qBH5Mc;ACsMhB;AEQE;EACE,cH/MY;ACyMhB;AESE;EACE,mCAAA;AFPJ;AEWG;EACC,mCAAA;AFTJ;;AEaA;EACE,gCAAA;EACA,gCAAA;EACA,qBH/Nc;ACqNhB;AEYE;EACE,cHlOY;ACwNhB;AEaE;EACE,mCAAA;AFXJ;AEeE;EACE,mCAAA;AFbJ;;AEiBA;EACE,gCAAA;EACA,YAAA;EACA,mBAAA;AFdF;AEgBE;EACE,YAAA;AFdJ;AEiBE;EACE,mCAAA;AFfJ;AEkBG;EACC,mCAAA;AFhBJ;;AEoBA;EACE,gCAAA;EACA,6BAAA;EACA,oCAAA;EACA,mBAAA;AFjBF;AEmBE;EACE,6BAAA;AFjBJ;AEoBE;EACE,gBAAA;AFlBJ;;AEsBA;EACE,gCAAA;EACA,cHlRc;EGmRd,yBAAA;EACA,WAAA;EACA,YAAA;AFnBF;AEqBE;EACE,cHxRY;ACqQhB;AEsBE;EACE,mCAAA;AFpBJ;AEwBE;EACE,mCAAA;AFtBJ;;AE0BA;EACE,gCAAA;EACA,6BAAA;EACA,mBAAA;AFvBF;AEyBE;EACE,6BAAA;AFvBJ;AE0BE;EACE,gBAAA;AFxBJ;AE0BG;EACC,kCAAA;AFxBJ;;AE4BA;EACE,mBH1QgB;EG2QhB,YAAA;EACA,yBAAA;AFzBF;AE2BE;EACE,YAAA;AFzBJ;AE4BE;EACE,kCAAA;AF1BJ;AE6BE;EACE,kCAAA;AF3BJ;;AE+BA;EACE,mBH3RkB;EG4RlB,YAAA;EACA,yBAAA;AF5BF;AE8BE;EACE,YAAA;AF5BJ;AE+BE;EACE,oCAAA;AF7BJ;AEgCE;EACE,oCAAA;AF9BJ;;AEmCA;EACE,mBAAA;EACA,YAAA;EACA,yBAAA;AFhCF;AEkCE;EACE,YAAA;AFhCJ;AEmCE;EACE,kCAAA;AFjCJ;AEoCG;EACC,kCAAA;AFlCJ;;ACnUA;EACE,iCALiB;AD2UnB;;ACnUA;EACE,eAAA;EACA,iBAAA;ADsUF;;ACnUA;EACE,gBAAA;EACA,cFfc;ACqVhB;;AAjVA;EACE,kBAAA;EACA,YAAA;AAoVF;;AAjVA;EACE;IACE,YAAA;EAoVF;AACF;AA/UA;EACI,cDlBY;ACmWhB;;AA/UA;EACI,cDhBQ;ACkWZ;;AA/UA;EACI,YAAA;EACA,mBAAA;AAkVJ;AAhVI;EACA,yBAAA;EACA,eAAA;EACE,gBAAA;EACA,cD3BM;EC4BN,mBAAA;EACA,gBAAA;AAkVN;AAhVI;EACI,cDrCQ;ECsCR,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AAiVR;;AA9UA;EACI,mBAAA;AAiVJ;AA/UI;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,4BAAA;AAgVN;;AA5UE;EACE,mBAAA;AA+UJ;AA7UQ;EACA,yBAAA;EACA,kBAAA;EACA,aAAA;EACA,4FAAA;AA+UR;AA7UQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,cDjFI;ACgahB;AA5UQ;EACE,kBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AA6UV;AA1UQ;EACE,cDhGM;ECiGN,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AA2UV;AArUY;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AAsUhB;AAnUY;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,iBAAA;EACA,uBAAA;AAoUhB;AAlUY;EACI,kBAAA;AAoUhB;;AA1TA;EAEE,mBAAA;EACE,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,YAAA;AA4TJ;AA1TI;EACI,6BAAA;EACA,mBAAA;EACA,eAAA;AA4TR;AAzTI;EACI,mBAAA;EACA,2BAAA;EACA,YAAA;EACA,WAAA;AA2TR","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"/src/app/theme/styles/components/buttons\";\n@import \"/src/app/theme/styles/components/fonts\";\n@import \"/src/assets/fonts/font-awesome/css/all.css\";\n\n.container{\n  padding: 32px 52px;\n  border: none;\n}\n\n@media screen and (min-width:1020px){\n  .container.modal-content{\n    border: none;\n  }\n\n}\n\n\n.primary-color{\n    color:$primary-color;\n}\n.paragraph-color{\n    color:$paragraph;\n}\n\n.modal-header{\n    border: none;\n    max-width: 615.95px;\n\n    h4.modal-title{\n    color: $primary-color!important;\n    font-size: 24px;\n      font-weight: 700;\n      color:$paragraph;\n      line-height: 33.6px;\n      text-align:left;\n    }\n    i{\n        color: $primary-color;\n        font-weight: 900;\n        font-size: 24px;\n        line-height: 140%;\n        /* identical to box height, or 34px */\n\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n    }\n}\n.modal-body {\n    max-width: 615.95px;\n\n    .modal-body-text {\n      font-weight: 400;\n      font-size: 16px;\n      line-height: 140%;\n      /* or 22px */\n\n      display: flex;\n      align-items: center;\n      letter-spacing: -0.02em;\n      color: rgba($paragraph,0.5);\n    }\n  }\n\n  .blue-card{\n    max-width: 615.95px;\n\n        div.modal-blue-container{\n        border: solid 1px $primary-color;\n        border-radius: 8px;\n        padding: 16px;\n        background: linear-gradient(0deg, rgba(36, 57, 138, 0.08), rgba(36, 57, 138, 0.08)), #FFFFFF;\n\n        h4{\n            font-weight: 700;\n            font-size: 24px;\n            line-height: 140%;\n            /* identical to box height, or 34px */\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.02em;\n            color: $primary-color;\n        }\n\n        p{\n          font-weight: 400px;\n          font-size: 16px;\n          line-height: 140%;\n          /* or 22px */\n\n          display: flex;\n          align-items: center;\n          letter-spacing: -0.02em;\n\n        }\n        h6{\n          color: $primary-color;\n          font-weight: 700;\n          font-size: 16px;\n          line-height: 140%;\n          /* or 22px */\n\n          display: flex;\n          align-items: center;\n          letter-spacing: -0.02em;\n        }\n\n\n    .invoice-report-container-class{\n        .text{\n            h6{\n                font-weight: 700;\n                font-size: 16px;\n                line-height: 140%;\n                /* or 22px */\n\n                display: flex;\n                align-items: center;\n                letter-spacing: -0.02em;\n\n            }\n            p{\n                font-weight: 400;\n                font-size: 16px;\n                line-height: 140%;\n                /* or 22px */\n\n                display: flex;\n                align-items: center;\n                text-align: right;\n                letter-spacing: -0.02em;\n            }\n            i{\n                margin-right: 10px;\n            }\n        }\n    }\n\n}\n  }\n\n\n\n.modal-footer{\n\n  max-width: 615.95px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n\n    .button-wrapper{\n        justify-content:space-evenly;\n        max-width: 615.95px;\n        flex-wrap: wrap;\n    }\n\n    button.btn-long{\n        align-items: center;\n        max-width: 303px!important;\n        height: 50px;\n        margin:0px;\n    }\n}\n","\n$main-font-family: 'Roboto', sans-serif;\n\n$secondary-font-family: 'Montserrat', sans-serif;\n\n* {\n  font-family: $main-font-family;\n}\n\nh1{\n  font-size:32px;\n  line-height:140%;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight:700;\n  color: $primary-color;\n}\n","@import '../components/fonts';\n\n// START: button shapes\n.btn-long {\n  min-width: 200px;\n}\n\n.btn-auto {\n  width: auto;\n}\n\n.btn-long, .btn-auto  {\n  text-decoration: none;\n  font-size: 14px;\n  font-family: $main-font-family;\n  font-weight: 500;\n  gap: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px;\n  height: 50px;\n  border: 1px solid;\n  border-radius: 100px;\n\n\n  span, i {\n    //font-size: 12px;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n    //color: #fff;\n  }\n\n\n  &:focus, &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\na.btn-color-fill:hover {\n  color: #fff;\n}\n\n.btn-round {\n  height: 50px;\n  width: 50px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  border: 1px solid;\n\n  span, i {\n    font-size: 12px;\n    margin-right: 0px!important;\n    /*font-family: 'Font Awesome 5 Free';\n    font-weight: 900;*/\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n  &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n\n.btn-label {\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 100px;\n  height: 32px;\n  // background: #34A853;\n  border-radius: 90px;\n\n  span, i {\n    font-size: 12px;\n    width: 24px;\n    height: 24px;\n    font-size: 16px;\n  }\n\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n    transition: ease-in-out 0.3s;\n  }\n\n  // &:focus,\n   &:active {\n    transition: 0s;\n    outline: none;\n  }\n}\n// END: button shapes\n\n\n// START: button colors\n.btn-color-fill {\n  background-color: $primary-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($primary-color, 72%);\n  }\n\n   &:active {\n    background: rgba($primary-color, 48%);\n  }\n}\n\n.btn-white-fill {\n  background-color: var(--primary-background);\n  color: $primary-color;\n  border: none;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($background-secondary, 72%);\n    // border-radius: 50%;\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($background-secondary , 48%);\n  }\n}\n\n.btn-like-fill {\n  background-color: $like-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($like-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($like-color, 48%);\n  }\n}\n\n.btn-dislike-fill {\n  background-color: $dislike-color;\n  color: var(--primary-background);\n  border: none;\n\n  span, i {\n    color: var(--primary-background);\n  }\n\n  &:hover {\n    background: rgba($dislike-color, 72%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($dislike-color, 48%);\n  }\n}\n\n.btn-color-fill:disabled, .btn-white-fill:disabled, .btn-dislike-fill:disabled ,.btn-like-fill:disabled {\n  background-color: var(--secondary-background);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n\n.btn-color-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n   &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-outline {\n  background: rgba($primary-color, 0%);\n  color: var(--primary-background);\n  border-color: $primary-color;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-white-border-outline {\n  background: rgba($primary-color, 0%);\n  color: white;\n  border-color: white;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n   &:focus, &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-color-outline:disabled, .btn-white-outline:disabled, .btn-white-border-outline:disabled {\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  border-color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n}\n\n.btn-no-outline {\n  background: rgba($primary-color, 0%);\n  color: $primary-color;\n  border-color: transparent;\n  width: 40px;\n  height: 40px;\n\n  span, i {\n    color: $primary-color;\n  }\n\n  &:hover {\n    background: rgba($primary-color, 8%);\n  }\n\n  // &:focus,\n  &:active {\n    background: rgba($primary-color, 24%);\n  }\n}\n\n.btn-no-outline:disabled{\n  background: rgba($primary-color, 0%);\n  color: rgba($paragraph, 48%);\n  cursor: not-allowed;\n\n  span, i {\n    color: rgba($paragraph, 48%);\n  }\n\n  &:hover {\n    box-shadow: none;\n  }\n   &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.active-label-button{\n  background: $active-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($active-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($active-btn-color, 0.8);\n  }\n}\n\n.inactive-label-button{\n  background: $inactive-btn-color;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n  &:focus, &:active {\n    background: rgba($inactive-btn-color, 0.8);\n  }\n\n}\n\n.disabled-label-button{\n  background: $disabled-btn-color,;\n  color: white;\n  border-color: transparent;\n\n  span, i {\n    color: white;\n  }\n\n  &:hover {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n   &:focus,&:active {\n    background: rgba($disabled-btn-color, 0.8);\n  }\n\n}\n\n// END: button colors\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 41622:
/*!*****************************************************************************************************!*\
  !*** ./src/app/features/providers-management/view-provider/view-provider.component.scss?ngResource ***!
  \*****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.provider-header-container {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n}\n\n.view-provider-container {\n  border: 1px solid transparent;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.positive-amount {\n  color: rgb(52, 168, 83);\n}\n\n.negative-amount {\n  color: rgb(234, 67, 53);\n}\n\n.cover-provider {\n  position: relative;\n}\n.cover-provider img {\n  height: 500px;\n  width: 100%;\n  object-fit: cover;\n  object-position: 50% 50%;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n}\n.cover-provider .title-toolbar {\n  position: absolute;\n  bottom: 0px;\n  background: rgba(0, 0, 0, 0.48);\n  color: white;\n}\n.cover-provider .title-toolbar h2 {\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 42px;\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.05em;\n  color: white;\n  margin-right: 10px;\n}\n.cover-provider .title-toolbar p {\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}\n.cover-provider .title-toolbar p i, .cover-provider .title-toolbar p span {\n  padding-right: 10px;\n}\n\n.menu-header-bar h4 {\n  margin-bottom: 0px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 140%;\n  /* identical to box height, or 28px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #24398A;\n}\n.menu-header-bar i {\n  color: #24398A;\n  margin-right: 10px;\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 140%;\n  /* identical to box height, or 28px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n\n.view-provider-container .balance-class h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 140%;\n  /* identical to box height, or 45px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #24398A;\n}\n.view-provider-container p.align-self-baseline.currency-class {\n  font-weight: 300;\n  font-size: 10px !important;\n  line-height: 12px;\n}\n.view-provider-container .inside_view_container {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n}\n.view-provider-container .inside_view_container div.balance-class {\n  flex-wrap: wrap;\n  column-gap: 24px;\n}\n.view-provider-container .inside_view_container h4 {\n  color: #231F20;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 56px;\n  display: flex;\n  align-items: center;\n}\n.view-provider-container .inside_view_container h6 {\n  color: #24398A;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.view-provider-container .inside_view_container h6 i {\n  margin-right: 10px;\n}\n.view-provider-container .inside_view_container p {\n  color: #231F20;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label {\n  border: 1px solid var(--secondary-background);\n  border-radius: 30px;\n  padding: 8px;\n  margin-top: 10px;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label .transaction-date p {\n  color: black;\n  font-weight: 300;\n  font-size: 12px;\n  line-height: 14px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label .transaction-date p.number {\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  margin: 2px;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label h5.amount {\n  color: red;\n  font-weight: 300;\n  font-size: 20px;\n  line-height: 140%;\n  /* identical to box height, or 28px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}\n.view-provider-container .recent-transaction-container .recent-transactions-label p {\n  font-weight: 300;\n  font-size: 10px;\n  line-height: 12px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.view-provider-container .transaction-history-container .date-rectangle {\n  background-color: rgba(36, 57, 138, 0.08);\n  padding: 6px 12px;\n  border-radius: 8px;\n}\n.view-provider-container .transaction-history-container .date-rectangle p {\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #24398A;\n  margin-bottom: 0px;\n}\n.view-provider-container .transaction-history-container .date-rectangle p i {\n  margin-left: 10px;\n}\n.view-provider-container .transaction-history-container .blue-percent-rectangle {\n  border-radius: 4px;\n  background-color: #24398A;\n  height: 24px;\n}\n.view-provider-container .transaction-history-container .blue-percent-rectangle p {\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: white;\n}\n.view-provider-container .transaction-history-container .blue-percent-rectangle p i {\n  padding-right: 5px;\n}\n.view-provider-container .resources-class h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 140%;\n  /* identical to box height, or 45px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #24398A;\n}\n.view-provider-container .resources-class h4 {\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 140%;\n  /* identical to box height, or 34px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: #231F20;\n}\n.view-provider-container .resources-class h4.price-resource-class {\n  color: #24398A;\n}\n.view-provider-container .resources-class p {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n  color: rgba(35, 31, 32, 0.5);\n}\n.view-provider-container .resources-class .resource-card {\n  height: 475px;\n  background: #FFFFFF;\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  padding: 25px;\n  /* Inside auto layout */\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n  margin-bottom: 24px;\n}\n.view-provider-container .resources-class .resource-card p i {\n  margin-right: 5px;\n}\n.view-provider-container .resources-class .resource-card p {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  /* autoprefixer: ignore next */\n  -webkit-box-orient: vertical;\n}\n.view-provider-container .resources-class .resource-card .resource-img {\n  height: 320px;\n}\n.view-provider-container .resources-class .resource-card .title-n-location {\n  min-height: 65px;\n}\n.view-provider-container .resources-class .resource-card .title-n-location h4 {\n  cursor: pointer;\n}\n.view-provider-container .resources-class .resource-card div h4 {\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n.view-provider-container .resources-class .resources-cards-row {\n  display: flex;\n  column-gap: 24px;\n}\n\n@media only screen and (min-width: 320px) and (max-width: 480px) {\n  .mobile-header {\n    display: block;\n    background-color: var(--primary-background);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  }\n  .web-header {\n    display: none;\n  }\n  .provider-header-container .px-10 {\n    padding-left: 0px;\n    padding-right: 0px;\n  }\n  .container.provider-header-container {\n    background: white;\n    margin-top: 20px !important;\n  }\n  .client-general-box {\n    padding: 0px;\n  }\n  .provider-header-container {\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    border-radius: 0px;\n  }\n}\n@media only screen and (min-width: 481px) and (max-width: 768px) {\n  .mobile-header {\n    display: none !important;\n  }\n  .provider-header-container .px-10 {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n  .applied-jobs-card-class img {\n    display: none;\n  }\n}\n@media only screen and (min-width: 769px) and (max-width: 1023px) {\n  .mobile-header {\n    display: none !important;\n  }\n  .provider-header-container .px-10 {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n  .inside_view_container h4 {\n    font-size: 24px !important;\n    display: flex;\n    align-items: left;\n  }\n  .inside_view_container h6 {\n    text-align: left !important;\n  }\n}\n@media only screen and (min-width: 1024px) and (max-width: 1200px) {\n  .mobile-header {\n    display: none !important;\n  }\n  .inside_view_container h4 {\n    font-size: 40px !important;\n    display: flex;\n    align-items: left;\n  }\n  .inside_view_container h6 {\n    text-align: left !important;\n  }\n}\n@media only screen and (min-width: 1200px) {\n  .mobile-header {\n    display: none !important;\n  }\n}\n.resources-class img {\n  width: 140px !important;\n  object-fit: cover;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/features/providers-management/view-provider/view-provider.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;AAfA;EACI,2CAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;AAkBJ;;AAdA;EACI,6BAAA;EACA,kBAAA;EACA,gBAAA;AAiBJ;;AAdA;EACI,uBAAA;AAiBJ;;AAfA;EACI,uBAAA;AAkBJ;;AAdA;EAEI,kBAAA;AAgBJ;AAdI;EACI,aAAA;EACA,WAAA;EACA,iBAAA;EACA,wBAAA;EACA,2BAAA;EACA,4BAAA;AAgBR;AAXI;EACI,kBAAA;EACA,WAAA;EACA,+BAAA;EACA,YAAA;AAaR;AAZQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,YAAA;EACA,kBAAA;AAcZ;AAZQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AAaZ;AAXY;EACI,mBAAA;AAahB;;AALI;EACI,kBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EAEA,cDpFQ;AC0FhB;AAHI;EACI,cDxFQ;ECyFR,kBAAA;EAEA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AAGR;;AAIQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EAEA,cDnHI;ACgHhB;AAQI;EACI,gBAAA;EACA,0BAAA;EACA,iBAAA;AANR;AASI;EACI,2CAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;AAPR;AASQ;EACI,eAAA;EACA,gBAAA;AAPZ;AAUQ;EACI,cDrIA;ECsIA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;AARZ;AAYQ;EACI,cDpJI;ECqJJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;AAXZ;AAaY;EACI,kBAAA;AAXhB;AAeQ;EACI,cD/JA;ECgKA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AAdZ;AAsBA;EACI,6CAAA;EACA,mBAAA;EACA,YAAA;EACA,gBAAA;AApBJ;AAsBM;EAEE,YAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACF,4BAAA;EAEE,aAAA;EACA,mBAAA;EACA,kBAAA;AAtBR;AAwBM;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,WAAA;AAvBR;AA6BI;EACE,UAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AA5BN;AA8BI;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;AA7BN;AAoCI;EACI,yCAAA;EACA,iBAAA;EACA,kBAAA;AAlCR;AAmCQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,cD5PI;EC6PJ,kBAAA;AAjCZ;AAmCY;EACI,iBAAA;AAjChB;AAsCI;EACI,kBAAA;EACA,yBDvQQ;ECwQR,YAAA;AApCR;AAqCQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,YAAA;AApCZ;AAsCY;EACI,kBAAA;AApChB;AA4CI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EAEA,cDvSQ;AC2PhB;AA+CI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EAEA,uBAAA;EACA,cD/SI;ACgQZ;AAkDI;EACI,cDxTQ;ACwQhB;AAmDI;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,4BAAA;AAlDR;AAqDI;EAEI,aAAA;EAEA,mBAAA;EACA,yCAAA;EACA,kBAAA;EACA,aAAA;EAEA,uBAAA;EACA,UAAA;EACA,QAAA;EACA,YAAA;EACA,mBAAA;AAtDR;AAwDQ;EACI,iBAAA;AAtDZ;AAyDQ;EACI,gBAAA;EACA,uBAAA;EACA,oBAAA;EACA,qBAAA;EACA,8BAAA;EACA,4BAAA;AAvDZ;AA2DQ;EACI,aAAA;AAzDZ;AA2DQ;EACI,gBAAA;AAzDZ;AA0DY;EACI,eAAA;AAxDhB;AA4DQ;EACI,oBAAA;EACA,qBAAA;EACA,4BAAA;EACA,gBAAA;AA1DZ;AA6DI;EACQ,aAAA;EAEA,gBAAA;AA5DZ;;AAmEA;EACI;IACI,cAAA;IACA,2CAAA;IACA,2CAAA;EAhEN;EAkEE;IACI,aAAA;EAhEN;EAmEE;IACI,iBAAA;IACA,kBAAA;EAjEN;EAoEE;IACI,iBAAA;IACA,2BAAA;EAlEN;EAsEE;IACI,YAAA;EApEN;EAuEE;IACI,6BAAA;IACA,YAAA;IACA,gBAAA;IACA,kBAAA;EArEN;AACF;AA0EA;EAEI;IACI,wBAAA;EAzEN;EA4EE;IACI,kBAAA;IACA,mBAAA;EA1EN;EA+EM;IACG,aAAA;EA7ET;AACF;AAkFA;EAEI;IACI,wBAAA;EAjFN;EAoFE;IACI,kBAAA;IACA,mBAAA;EAlFN;EAuFM;IACI,0BAAA;IACA,aAAA;IACA,iBAAA;EArFV;EAwFM;IACI,2BAAA;EAtFV;AACF;AA2FA;EAEI;IACI,wBAAA;EA1FN;EA+FM;IACI,0BAAA;IACA,aAAA;IACA,iBAAA;EA7FV;EAgGM;IACI,2BAAA;EA9FV;AACF;AAmGA;EAEI;IACI,wBAAA;EAlGN;AACF;AAsGA;EACI,uBAAA;EACA,iBAAA;AApGJ","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"src/app/theme/styles/components/_colors.scss\";\n//header container\n.provider-header-container{\n    background-color: var(--primary-background);\n    border: 1px solid rgba(36, 57, 138, 0.16);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n    border-radius: 8px;\n}\n\n//general content container\n.view-provider-container{\n    border: 1px solid transparent;\n    border-radius: 8px;\n    overflow: hidden;\n}\n\n.positive-amount{\n    color: rgba(52, 168, 83, 1);\n}\n.negative-amount{\n    color: rgba(234, 67, 53, 1);\n\n}\n\n.cover-provider{\n    // background: linear-gradient(rgba($primary-color,0),rgba($primary-color,0.48));\n    position:relative;\n\n    img{\n        height: 500px;\n        width:100%;\n        object-fit:cover;\n        object-position: 50% 50%;\n        border-top-left-radius: 8px;\n        border-top-right-radius: 8px;\n\n    }\n\n    //transparent toolbar over the header\n    .title-toolbar{\n        position: absolute;\n        bottom:0px;\n        background:rgba(black,0.48);\n        color: white;\n        h2{\n            font-weight: 700;\n            font-size: 36px;\n            line-height: 42px;\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.05em;\n            color: white;\n            margin-right: 10px;\n        }\n        p{\n            font-weight: 700;\n            font-size: 16px;\n            line-height: 140%;\n            /* or 22px */\n\n            display: flex;\n            align-items: center;\n            text-align: center;\n            letter-spacing: -0.02em;\n\n            i,span{\n                padding-right: 10px;\n            }\n        }\n    }\n}\n\n//status, balanta, resurse, setari\n.menu-header-bar{\n    h4{\n        margin-bottom: 0px;\n        font-weight: 700;\n        font-size: 20px;\n        line-height: 140%;\n        /* identical to box height, or 28px */\n\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n\n        color: $primary-color;\n    }\n\n    i{\n        color: $primary-color;\n        margin-right: 10px;\n\n        font-weight: 900;\n        font-size: 20px;\n        line-height: 140%;\n        /* identical to box height, or 28px */\n\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n    }\n}\n\n//general content container\n.view-provider-container{\n    .balance-class{\n        h2{\n            font-weight: 700;\n            font-size: 32px;\n            line-height: 140%;\n            /* identical to box height, or 45px */\n\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.02em;\n\n            color: $primary-color;\n        }\n    }\n\n    //the currency (ron)\n    p.align-self-baseline.currency-class{\n        font-weight: 300;\n        font-size: 10px!important;\n        line-height: 12px;\n    }\n\n    .inside_view_container{\n        background-color: var(--primary-background);\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n        border-radius: 8px;\n\n        div.balance-class{\n            flex-wrap: wrap;\n            column-gap: 24px;\n        }\n\n        h4{\n            color: $paragraph;\n            font-weight: 700;\n            font-size: 48px;\n            line-height: 56px;\n            display: flex;\n            align-items: center;\n\n        }\n\n        h6{\n            color: $primary-color;\n            font-weight: 600;\n            font-size: 16px;\n            line-height: 19px;\n            /* identical to box height */\n\n            display: flex;\n            align-items: center;\n            text-align: center;\n\n            i{\n                margin-right: 10px;\n            }\n        }\n\n        p{\n            color: $paragraph;\n            font-weight: 300;\n            font-size: 16px;\n            line-height: 140%;\n            /* or 22px */\n\n            display: flex;\n            align-items: center;\n            text-align: center;\n            letter-spacing: -0.02em;\n        }\n    }\n\n\n\n.recent-transaction-container{\n    //recent transactions\n.recent-transactions-label{\n    border:1px solid var(--secondary-background);\n    border-radius: 30px;\n    padding:8px;\n    margin-top: 10px;\n    .transaction-date{\n      p{\n\n        color: black;\n        font-weight: 300;\n        font-size: 12px;\n        line-height: 14px;\n      /* identical to box height */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n      }\n      p.number{\n        font-weight: 300;\n        font-size: 16px;\n        line-height: 19px;\n        /* identical to box height */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n        margin:2px\n      }\n    }\n\n\n\n    h5.amount{\n      color:red;\n      font-weight: 300;\n      font-size: 20px;\n      line-height: 140%;\n      /* identical to box height, or 28px */\n\n      display: flex;\n      align-items: center;\n      text-align: center;\n      letter-spacing: -0.02em;\n    }\n    p{\n      font-weight: 300;\n      font-size: 10px;\n      line-height: 12px;\n      /* identical to box height */\n\n      display: flex;\n      align-items: center;\n      text-align: center;\n    }\n  }\n}\n\n.transaction-history-container{\n\n    .date-rectangle{\n        background-color: rgba($primary-color, 0.08);\n        padding: 6px 12px;\n        border-radius: 8px;\n        p{\n            font-weight: 700;\n            font-size: 14px;\n            line-height: 16px;\n            display: flex;\n            align-items: center;\n            text-align: center;\n            color: $primary-color;\n            margin-bottom: 0px;\n\n            i{\n                margin-left:10px;\n            }\n        }\n    }\n\n    .blue-percent-rectangle{\n        border-radius: 4px;\n        background-color:$primary-color;\n        height: 24px;\n        p{\n            font-weight: 700;\n            font-size: 16px;\n            line-height: 19px;\n            /* identical to box height */\n\n            display: flex;\n            align-items: center;\n            text-align: center;\n            color:white;\n\n            i{\n                padding-right:5px;\n            }\n        }\n    }\n}\n\n//resources-class-----------------------------------\n.resources-class{\n    h2{\n        font-weight: 700;\n        font-size: 32px;\n        line-height: 140%;\n        /* identical to box height, or 45px */\n\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n\n        color: $primary-color;\n    }\n\n    h4{\n        font-weight: 700;\n        font-size: 24px;\n        line-height: 140%;\n        /* identical to box height, or 34px */\n\n        display: flex;\n        align-items: center;\n        //text-align: left;\n        letter-spacing: -0.02em;\n        color: $paragraph;\n    }\n\n    h4.price-resource-class{\n        color: $primary-color;\n    }\n\n    p{\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 140%;\n        /* or 22px */\n\n        display: flex;\n        align-items: center;\n        letter-spacing: -0.02em;\n        color:rgba($paragraph,0.5);\n    }\n\n    .resource-card{\n        //width:  90%;\n        height: 475px;\n\n        background: #FFFFFF;\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        padding:25px;\n\n        /* Inside auto layout */\n        flex: none;\n        order: 0;\n        flex-grow: 0;\n        margin-bottom: 24px;\n\n        p i{\n            margin-right: 5px;\n        }\n\n        p{\n            overflow: hidden;\n            text-overflow: ellipsis;\n            display: -webkit-box;\n            -webkit-line-clamp: 1;\n            /* autoprefixer: ignore next */\n            -webkit-box-orient: vertical;\n        }\n\n        //img\n        .resource-img{\n            height:320px;\n        }\n        .title-n-location{\n            min-height: 65px;\n            h4{\n                cursor: pointer;\n            }\n        }\n\n        div h4{\n            display: -webkit-box;\n            -webkit-line-clamp: 1;\n            -webkit-box-orient: vertical;\n            overflow: hidden;\n        }\n    }\n    .resources-cards-row{\n            display:flex;\n            // flex-wrap: wrap;\n            column-gap: 24px;\n            // overflow-wrap: break-word;\n        }\n}\n\n\n}//container view-provider\n@media only screen and (min-width:320px) and (max-width: 480px){\n    .mobile-header{\n        display: block;\n        background-color: var(--primary-background);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n    }\n    .web-header{\n        display: none;\n    }\n\n    .provider-header-container .px-10{\n        padding-left: 0px;\n        padding-right: 0px;\n    }\n\n    .container.provider-header-container{\n        background: white;\n        margin-top:20px!important;\n    }\n\n    //no margin/padding for container-fluid\n    .client-general-box{\n        padding:0px;\n    }\n\n    .provider-header-container{\n        background-color: transparent;\n        border: none;\n        box-shadow:none;\n        border-radius: 0px;\n    }\n\n\n}\n\n@media only screen and (min-width:481px) and (max-width: 768px){\n    //hide mobile header for this screen\n    .mobile-header{\n        display: none!important;\n    }\n\n    .provider-header-container .px-10{\n        padding-left: 20px;\n        padding-right: 20px;\n    }\n\n    //applied jobs\n    .applied-jobs-card-class{\n        img{\n           display: none;\n        }\n    }\n\n}\n\n@media only screen and (min-width:769px) and (max-width: 1023px){\n    //hide mobile header for this screen\n    .mobile-header{\n        display: none!important;\n    }\n\n    .provider-header-container .px-10{\n        padding-left: 20px;\n        padding-right: 20px;\n    }\n\n    //big number\n    .inside_view_container{\n        h4{\n            font-size: 24px!important;\n            display: flex;\n            align-items: left;\n        }\n\n        h6{\n            text-align: left!important;\n        }\n\n    }\n}\n\n@media only screen and (min-width:1024px) and (max-width: 1200px){\n    //hide mobile header for this screen\n    .mobile-header{\n        display: none!important;\n    }\n\n    //big number\n    .inside_view_container{\n        h4{\n            font-size: 40px!important;\n            display: flex;\n            align-items: left;\n        }\n\n        h6{\n            text-align: left!important;\n        }\n\n    }\n}\n\n@media only screen and (min-width:1200px){\n    //hide mobile header for this screen\n    .mobile-header{\n        display: none!important;\n    }\n\n}\n\n.resources-class img {\n    width: 140px !important;\n    object-fit: cover;\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 90341:
/*!***************************************************************************************************************!*\
  !*** ./src/app/standalone-components/available-balance-card/available-balance-card.component.scss?ngResource ***!
  \***************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n:root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.inside_view_container {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n}\n.inside_view_container div.balance-class {\n  flex-wrap: wrap;\n  column-gap: 24px;\n}\n.inside_view_container h4 {\n  color: #231F20;\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 140%;\n  align-items: center;\n  margin-bottom: 0px;\n}\n.inside_view_container h6 {\n  color: #24398A;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n  margin-bottom: 0px;\n}\n.inside_view_container p {\n  color: #231F20;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 126%;\n  margin-bottom: 0px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}\n.inside_view_container .big-currency-class {\n  font-weight: 500 !important;\n  font-size: 20px !important;\n  line-height: 23px !important;\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.inside_view_container .grey-rectangle {\n  background: rgba(36, 57, 138, 0.04);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  border-radius: 8px;\n  padding: 6px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n}\n.inside_view_container h6.align-self-baseline.currency-class {\n  font-weight: 300;\n  font-size: 10px !important;\n  line-height: 12px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/standalone-components/available-balance-card/available-balance-card.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;ADHA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACMF;;ADHA;EACE,6BAAA;EACA,+BAAA;ACMF;;ADsBA;EACI,oCAAA;ACnBJ;;ADsBA;EACQ,kCAAA;ACnBR;;AAjCA;EACI,2CAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;AAoCJ;AAlCI;EACI,eAAA;EACA,gBAAA;AAoCR;AAjCI;EACI,cDTI;ECUJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,mBAAA;EACA,kBAAA;AAmCR;AA/BI;EACI,cDxBQ;ECyBR,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;EACA,kBAAA;AAgCR;AA5BI;EACI,cDlCI;ECmCJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AA8BR;AA3BI;EACI,2BAAA;EACA,0BAAA;EACA,4BAAA;EACA,aAAA;EACA,mBAAA;EACA,kBAAA;AA6BR;AA1BI;EACI,mCAAA;EACA,yCAAA;EACA,kBAAA;EACA,YAAA;EACA,gBAAA;EACA,mBAAA;AA4BR;AA1BI;EACI,gBAAA;EACA,0BAAA;EACA,iBAAA;AA4BR","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"src/app/theme/styles/components/_colors.scss\";\n\n.inside_view_container{\n    background-color: var(--primary-background);\n    border: 1px solid rgba(36, 57, 138, 0.16);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n    border-radius: 8px;\n\n    div.balance-class{\n        flex-wrap: wrap;\n        column-gap: 24px;\n    }\n\n    h4{\n        color: $paragraph;\n        font-weight: 700;\n        font-size: 36px;\n        line-height: 140%;\n        align-items: center;\n        margin-bottom:0px;\n\n    }\n\n    h6{\n        color: $primary-color;\n        font-weight: 700;\n        font-size: 16px;\n        line-height: 140%;\n        /* or 22px */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n        letter-spacing: -0.02em;\n        margin-bottom:0px;\n\n    }\n\n    p{\n        color: $paragraph;\n        font-weight: 400;\n        font-size: 12px;\n        line-height: 126%;\n        margin-bottom: 0px;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        letter-spacing: -0.02em;\n    }\n    //the currency (ron) rom big prices\n    .big-currency-class{\n        font-weight: 500!important;\n        font-size: 20px!important;\n        line-height: 23px!important;\n        display: flex;\n        align-items: center;\n        text-align: center;\n    }\n\n    .grey-rectangle{\n        background: rgba(36, 57, 138, 0.04);\n        border: 1px solid rgba(36, 57, 138, 0.16);\n        border-radius: 8px;\n        padding:6px;\n        margin-top: 12px;\n        margin-bottom: 12px;\n    }\n    h6.align-self-baseline.currency-class{\n        font-weight: 300;\n        font-size: 10px!important;\n        line-height: 12px;\n    }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 20162:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/standalone-components/history-reservation-card/history-reservation-card.component.scss?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n:root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.inside_view_container {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n}\n.inside_view_container div.balance-class {\n  flex-wrap: wrap;\n  column-gap: 24px;\n}\n.inside_view_container h4 {\n  color: #231F20;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 56px;\n  display: flex;\n  align-items: center;\n}\n.inside_view_container h6 {\n  color: #24398A;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.inside_view_container h6 i {\n  margin-right: 10px;\n}\n.inside_view_container p {\n  color: #231F20;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}\n.inside_view_container .big-currency-class {\n  font-weight: 500 !important;\n  font-size: 20px !important;\n  line-height: 23px !important;\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n\n.transaction-history-container .date-rectangle {\n  background-color: rgba(36, 57, 138, 0.08);\n  padding: 6px 12px;\n  border-radius: 8px;\n}\n.transaction-history-container .date-rectangle p {\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #24398A;\n  margin-bottom: 0px;\n}\n.transaction-history-container .date-rectangle p i {\n  margin-left: 10px;\n}\n.transaction-history-container .blue-percent-rectangle {\n  border-radius: 4px;\n  background-color: #24398A;\n  height: 24px;\n}\n.transaction-history-container .blue-percent-rectangle p {\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: white;\n}\n.transaction-history-container .blue-percent-rectangle p i {\n  padding-right: 5px;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/standalone-components/history-reservation-card/history-reservation-card.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;ADHA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACMF;;ADHA;EACE,6BAAA;EACA,+BAAA;ACMF;;ADsBA;EACI,oCAAA;ACnBJ;;ADsBA;EACQ,kCAAA;ACnBR;;AAjCA;EACI,2CAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;AAoCJ;AAlCI;EACI,eAAA;EACA,gBAAA;AAoCR;AAjCI;EACI,cDTI;ECUJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;AAmCR;AA/BI;EACI,cDxBQ;ECyBR,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;AAgCR;AA9BQ;EACI,kBAAA;AAgCZ;AA5BI;EACI,cDnCI;ECoCJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AA6BR;AA1BI;EACI,2BAAA;EACA,0BAAA;EACA,4BAAA;EACA,aAAA;EACA,mBAAA;EACA,kBAAA;AA4BR;;AArBI;EACI,yCAAA;EACA,iBAAA;EACA,kBAAA;AAwBR;AAvBQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,cD5EI;EC6EJ,kBAAA;AAyBZ;AAvBY;EACI,iBAAA;AAyBhB;AApBI;EACI,kBAAA;EACA,yBDvFQ;ECwFR,YAAA;AAsBR;AArBS;EACG,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,YAAA;AAsBZ;AApBY;EACI,kBAAA;AAsBhB","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"src/app/theme/styles/components/_colors.scss\";\n\n.inside_view_container{\n    background-color: var(--primary-background);\n    border: 1px solid rgba(36, 57, 138, 0.16);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n    border-radius: 8px;\n\n    div.balance-class{\n        flex-wrap: wrap;\n        column-gap: 24px;\n    }\n\n    h4{\n        color: $paragraph;\n        font-weight: 700;\n        font-size: 48px;\n        line-height: 56px;\n        display: flex;\n        align-items: center;\n\n    }\n\n    h6{\n        color: $primary-color;\n        font-weight: 600;\n        font-size: 16px;\n        line-height: 19px;\n        /* identical to box height */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n\n        i{\n            margin-right: 10px;\n        }\n    }\n\n    p{\n        color: $paragraph;\n        font-weight: 300;\n        font-size: 16px;\n        line-height: 140%;\n        /* or 22px */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n        letter-spacing: -0.02em;\n    }\n    //the currency (ron) rom big prices\n    .big-currency-class{\n        font-weight: 500!important;\n        font-size: 20px!important;\n        line-height: 23px!important;\n        display: flex;\n        align-items: center;\n        text-align: center;\n    }\n\n}\n\n.transaction-history-container{\n\n    .date-rectangle{\n        background-color: rgba($primary-color, 0.08);\n        padding: 6px 12px;\n        border-radius: 8px;\n        p{\n            font-weight: 700;\n            font-size: 14px;\n            line-height: 16px;\n            display: flex;\n            align-items: center;\n            text-align: center;\n            color: $primary-color;\n            margin-bottom: 0px;\n\n            i{\n                margin-left:10px;\n            }\n        }\n    }\n\n    .blue-percent-rectangle{\n        border-radius: 4px;\n        background-color:$primary-color;\n        height: 24px;\n         p{\n            font-weight: 700;\n            font-size: 16px;\n            line-height: 19px;\n            /* identical to box height */\n\n            display: flex;\n            align-items: center;\n            text-align: center;\n            color:white;\n\n            i{\n                padding-right:5px;\n            }\n         }\n    }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 48724:
/*!*********************************************************************************************************************!*\
  !*** ./src/app/standalone-components/recently-reservation-card/recently-reservation-card.component.scss?ngResource ***!
  \*********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 49579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 60931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n:root {\n  --primary-background: #FFFFFF;\n  --secondary-background: #edf0fa;\n  --header-footer-background: #FFF ;\n}\n\n[data-theme=dark]:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n.positive-amount {\n  color: rgb(105, 201, 140) !important;\n}\n\n.negative-amount {\n  color: rgb(241, 56, 88) !important;\n}\n\n.inside_view_container {\n  background-color: var(--primary-background);\n  border: 1px solid rgba(36, 57, 138, 0.16);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n}\n.inside_view_container div.balance-class {\n  flex-wrap: wrap;\n  column-gap: 24px;\n}\n.inside_view_container h4 {\n  color: #231F20;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 56px;\n  display: flex;\n  align-items: center;\n}\n.inside_view_container h6 {\n  color: #24398A;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  /* identical to box height */\n  display: flex;\n  align-items: center;\n  text-align: center;\n}\n.inside_view_container h6 i {\n  margin-right: 10px;\n}\n.inside_view_container p {\n  color: #231F20;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 140%;\n  /* or 22px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}\n\n.recent-transaction-container .recent-transactions-label {\n  border: 1px solid var(--secondary-background);\n  border-radius: 8px;\n  padding: 8px;\n  margin-top: 10px;\n}\n.recent-transaction-container .recent-transactions-label p {\n  color: #231F20;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 126%;\n  /* identical to box height, or 18px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.recent-transaction-container .recent-transactions-label .d-flex.justify-content-left h5 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 140%;\n  /* identical to box height, or 28px */\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n}\n.recent-transaction-container .recent-transactions-label h5.amount {\n  color: red;\n  font-weight: 300;\n  font-size: 20px;\n  line-height: 140%;\n  /* identical to box height, or 28px */\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: -0.02em;\n}", "",{"version":3,"sources":["webpack://./src/app/theme/styles/components/_colors.scss","webpack://./src/app/standalone-components/recently-reservation-card/recently-reservation-card.component.scss"],"names":[],"mappings":"AAcA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACbF;;ADgBA;EACE,6BAAA;EACA,+BAAA;ACbF;;ADyCA;EACI,oCAAA;ACtCJ;;ADyCA;EACQ,kCAAA;ACtCR;;ADHA;EACE,6BAAA;EACA,+BAAA;EACA,iCAAA;ACMF;;ADHA;EACE,6BAAA;EACA,+BAAA;ACMF;;ADsBA;EACI,oCAAA;ACnBJ;;ADsBA;EACQ,kCAAA;ACnBR;;AAjCA;EACI,2CAAA;EACA,yCAAA;EACA,2CAAA;EACA,kBAAA;AAoCJ;AAlCI;EACI,eAAA;EACA,gBAAA;AAoCR;AAjCI;EACI,cDTI;ECUJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;AAmCR;AA/BI;EACI,cDxBQ;ECyBR,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,4BAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;AAgCR;AA9BQ;EACI,kBAAA;AAgCZ;AA5BI;EACI,cDnCI;ECoCJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AA6BR;;AAbA;EACI,6CAAA;EACA,kBAAA;EACA,YAAA;EACA,gBAAA;AAgBJ;AAdI;EACI,cDnEI;ECoEJ,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EAEA,uBAAA;AAcR;AAVQ;EACI,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,uBAAA;AAWZ;AALI;EACE,UAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EAEA,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;AAMN","sourcesContent":["// theme colors\n$primary-color: #24398A;\n\n$secondary-color: #FFCC29;\n\n$title: #231F20;\n$paragraph: #231F20;\n$link: #0D4494;\n\n$background-primary: #FFFFFF !default;\n$background-secondary: #edf0fa !default;\n\n$header-footer-color: #FFF;\n\n:root {\n  --primary-background: #{$background-primary};\n  --secondary-background: #{$background-secondary};\n  --header-footer-background: #{$header-footer-color}\n}\n\n[data-theme='dark']:root {\n  --primary-background: #EDE9E8;\n  --secondary-background: #EDE9E8;\n}\n\n//label colors\n$active-color:#69C98C;\n$pending-color:#FCCC3D;\n$inactive-color:#858495;\n$draft-color:#2F9DF4;\n$archived-color:#E6536C;\n$inprogress-color:#236BB4;\n\n$bkg-active-color:rgba(105, 201, 140, 0.2);\n$bkg-pending-color:rgba(252, 204, 61, 0.2);\n$bkg-inactive-color:rgba(133, 132, 149, 0.2);\n$bkg-draft-color:rgba(47, 157, 244, 0.2);\n$bkg-archived-color:rgba(230, 83, 108, 0.2);\n$bkg-inprogress-color:rgba(73, 80, 250, 0.2);\n\n$like-color:#2CCEA7;\n$dislike-color: #EA4335;;\n\n\n//label buttons active/inactive/disabled\n\n$active-btn-color:#34A853;\n$inactive-btn-color:#848484;\n$disabled-btn-color:#E64335;\n\n.positive-amount{\n    color:rgba(105, 201, 140, 1)!important;\n}\n\n.negative-amount{\n        color:rgba(241, 56, 88, 1)!important;\n}\n\n","@import \"/src/app/theme/styles/components/colors\";\n@import \"src/app/theme/styles/components/_colors.scss\";\n\n.inside_view_container{\n    background-color: var(--primary-background);\n    border: 1px solid rgba(36, 57, 138, 0.16);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);\n    border-radius: 8px;\n\n    div.balance-class{\n        flex-wrap: wrap;\n        column-gap: 24px;\n    }\n\n    h4{\n        color: $paragraph;\n        font-weight: 700;\n        font-size: 48px;\n        line-height: 56px;\n        display: flex;\n        align-items: center;\n\n    }\n\n    h6{\n        color: $primary-color;\n        font-weight: 600;\n        font-size: 16px;\n        line-height: 19px;\n        /* identical to box height */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n\n        i{\n            margin-right: 10px;\n        }\n    }\n\n    p{\n        color: $paragraph;\n        font-weight: 300;\n        font-size: 16px;\n        line-height: 140%;\n        /* or 22px */\n\n        display: flex;\n        align-items: center;\n        text-align: center;\n        letter-spacing: -0.02em;\n    }\n    //the currency (ron) rom big prices\n    // .big-currency-class{\n    //     font-weight: 500!important;\n    //     font-size: 20px!important;\n    //     line-height: 23px!important;\n    //     display: flex;\n    //     align-items: center;\n    //     text-align: center;\n    // }\n\n}\n\n.recent-transaction-container{\n    //recent transactions\n.recent-transactions-label{\n    border:1px solid var(--secondary-background);\n    border-radius: 8px;\n    padding:8px;\n    margin-top: 10px;\n\n    p{\n        color: $paragraph;\n        font-weight: 700;\n        font-size: 14px;\n        line-height: 126%;\n        /* identical to box height, or 18px */\n\n        display: flex;\n        align-items: center;\n\n        letter-spacing: -0.02em;\n    }\n\n    .d-flex.justify-content-left{\n        h5{\n            font-weight: 700;\n            font-size: 20px;\n            line-height: 140%;\n            /* identical to box height, or 28px */\n\n            display: flex;\n            align-items: center;\n            letter-spacing: -0.02em;\n        }\n    }\n\n\n\n    h5.amount{\n      color:red;\n      font-weight: 300;\n      font-size: 20px;\n      line-height: 140%;\n      /* identical to box height, or 28px */\n\n      display: flex;\n      align-items: center;\n      text-align: center;\n      letter-spacing: -0.02em;\n    }\n\n  }\n}\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 54420:
/*!*************************************************************************************************************!*\
  !*** ./src/app/features/providers-management/add-edit-provider/add-edit-provider.component.html?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"container\">\n    <app-dashboard-header pageTitleOne=\" {{ isEditMode\n                            ? ('PROVIDER.EDIT' | translate)\n                            : ('PROVIDER.ADD' | translate) }}\"\n                          [buttonBackRoute]=\"isEditMode && !isCurrentUser ? '../../../manage-providers/active':\n                                            !isEditMode && !isCurrentUser ? '../../manage-providers/active' :\n                                            isCurrentUser ? '../view' : null\"\n                          (buttonCall)=\"save()\">\n    </app-dashboard-header>\n    <div class=\"container p-6 widget-container card\">\n        <form [formGroup]=\"addEditForm\">\n            <div>\n                <h2 class=\"py-8\"> {{('PROVIDER.IDENTIFICATION_INFORMATION' | translate)}}</h2>\n\n                <!--Name and Status-->\n                <div class=\"row\">\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>Company name</mat-label>\n                        <input matInput formControlName=\"companyName\">\n                        <mat-icon matSuffix (click)=\"clearCompanyName()\">highlight_off</mat-icon>\n                        <mat-error *ngIf=\"addEditForm.controls.companyName.hasError('required')\">\n                            Numele companiei este obligatoriu.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.STATUS' | translate)}}</mat-label>\n                        <mat-select formControlName=\"approvedStatus\" [disabled]=\"isProvider\">\n                            <!-- <mat-option value=\"Opening Partnership\">Opening Partnership</mat-option>\n                            <mat-option value=\"Partnership\">Partnership</mat-option> -->\n\n                            <mat-option value=\"new\" id=\"new\">Nou</mat-option>\n                            <mat-option value=\"draft\" id=\"draft\">{{'STATUS.DRAFT' | translate}}</mat-option>\n                            <mat-option value=\"pending\" id=\"pending\">{{'STATUS.PENDING' | translate}}</mat-option>\n                            <mat-option value=\"active\" id=\"active\">{{'STATUS.ACTIVE' | translate}}</mat-option>\n                            <mat-option value=\"inactive\" id=\"inactive\">{{'STATUS.INACTIVE' | translate}}</mat-option>\n                            <mat-option value=\"archived\" id=\"archived\">{{'STATUS.ARCHIVED' | translate}}</mat-option>\n                            <mat-option value=\"refused\" id=\"refused\">Refuzat</mat-option>\n                        </mat-select>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('approvedStatus').hasError('required')\">{{'ERROR.REQUIRED'|translate}}</mat-error>\n                    </mat-form-field>\n                </div>\n                <!--Email and Telephone-->\n                <div class=\"row\">\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.EMAIL' | translate)}}</mat-label>\n                        <input matInput formControlName=\"email\" [readonly]=\"isEditMode ? 'true' : 'false'\">\n                        <mat-error\n                                *ngIf=\"addEditForm.get('email').hasError('required')\">{{'ERROR.REQUIRED'|translate}}</mat-error>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('email').hasError('email')\">{{'ERROR.EMAIL'|translate}}</mat-error>\n\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.TELEPHONE' | translate)}}</mat-label>\n                        <input matInput formControlName=\"telephone\">\n                        <!--                <mat-error *ngIf=\"addEditForm.controls.telephone.hasError('pattern')\">-->\n                        <!--                    {{'ERROR.TELEPHONE'|translate}}-->\n                        <!--                </mat-error>-->\n                        <mat-error>{{addEditForm.controls.telephone.hasError('pattern') ? ('ERROR.TELEPHONE'|translate) : ('ERROR.TELEPHONE-LEN'|translate) }}</mat-error>\n                        <!--                <mat-error *ngIf=\"addEditForm.controls.telephone.hasError('minlength')\">-->\n                        <!--                    {{'ERROR.TELEPHONE-LEN'|translate}}-->\n                        <!--                </mat-error>-->\n                        <!--                <mat-error *ngIf=\"addEditForm.controls.telephone.hasError('maxlength')\">-->\n                        <!--                    {{'ERROR.TELEPHONE-LEN'|translate}}-->\n                        <!--                </mat-error>-->\n                    </mat-form-field>\n                </div>\n                <!--CUI and Name repr-->\n                <div class=\"row\">\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.CUI' | translate)}}</mat-label>\n                        <input matInput formControlName=\"cui\">\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-25\" appearance=\"legacy\">\n                        <mat-label>Nume reprezentant</mat-label>\n                        <input matInput formControlName=\"lastName\">\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-25\" appearance=\"legacy\">\n                        <mat-label>Prenume reprezentant</mat-label>\n                        <input matInput formControlName=\"firstName\">\n                    </mat-form-field>\n                </div>\n\n                <div>\n                    <h2 class=\"py-8\">{{('PROVIDER.DOMAIN' | translate)}}</h2>\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label> {{('PROVIDER.SELECT_DOMAIN' | translate)}}</mat-label>\n                        <mat-select formControlName=\"domain\">\n                            <mat-option *ngFor=\"let domain of domains\"\n                                        [value]=\"domain?.id\">{{domain?.nameEn}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n            </div>\n\n            <div formGroupName=\"billingAddress\">\n                <h2 class=\"py-8\" >{{('PROVIDER.BILLING_DATA' | translate)}}</h2>\n\n                <!--Name and address-->\n                <div class=\"row\">\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.BILLING_NAME' | translate)}}</mat-label>\n                        <input matInput formControlName=\"name\">\n                        <mat-icon matSuffix>highlight_off</mat-icon>\n                        <mat-error *ngIf=\"addEditForm.get('billingAddress.name').hasError('required')\">\n                            Numele este obligatoriu.\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.BILLING_ADDRESS' | translate)}}</mat-label>\n                        <input matInput formControlName=\"address\">\n                        <mat-icon matSuffix (click)=\"clearAddress()\">highlight_off</mat-icon>\n                    </mat-form-field>\n                </div>\n                <!--City and County-->\n                <div class=\"row\">\n                    <mat-form-field appearance=\"legacy\" class=\"w-50\">\n                        <mat-label>{{'USER.COUNTRY' | translate}}</mat-label>\n                        <mat-select formControlName=\"country\" (selectionChange)=\"getCities($event)\">\n                            <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\n                                {{country}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"legacy\" class=\"w-50\">\n                        <mat-label>{{'USER.CITY' | translate}}</mat-label>\n                        <mat-select formControlName=\"city\">\n                            <mat-option *ngFor=\"let city of cities\" [value]=\"city.name\">\n                                {{city.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!--Iban and Bank name-->\n                <div class=\"row\">\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.IBAN' | translate)}}</mat-label>\n                        <input matInput formControlName=\"iban\">\n                        <mat-icon matSuffix (click)=\"clearIBAN()\">highlight_off</mat-icon>\n                    </mat-form-field>\n\n                    <mat-form-field class=\"w-50\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.BANK' | translate)}}</mat-label>\n                        <input matInput formControlName=\"bankName\">\n                        <mat-icon matSuffix (click)=\"clearBank()\">highlight_off</mat-icon>\n                    </mat-form-field>\n                </div>\n\n            </div>\n\n            <div>\n                <h2 class=\"py-8\" >{{('PROVIDER.PERCENTAGE-COMISSION' | translate)}}</h2>\n\n                <mat-form-field class=\"w-100\" appearance=\"legacy\" matTooltip=\"Această valoarea reprezintă procentul din încasările provider-ului pe care îl va primi Bestinform.\">\n                    <mat-label>{{('PROVIDER.PERCENTAGE-COMISSION' | translate)}}</mat-label>\n                    <input matInput formControlName=\"percentageCommission\" [readonly]=\"isProvider ? 'true' : 'false'\">\n                    <mat-error *ngIf=\"addEditForm.get('percentageCommission').hasError('pattern')\">{{'ERROR.DIGIT-ONLY'|translate}}\n                    </mat-error>\n                    <!-- <mat-icon matSuffix (click)=\"clearPercentage()\">highlight_off</mat-icon> -->\n                </mat-form-field>\n            </div>\n\n            <!--Incarcare contract ascuns-->\n            <!-- <div>\n                <h2 class=\"py-8\">{{('PROVIDER.CONTRACT' | translate)}}</h2>\n\n                <div *ngIf=\"providerData\">\n                    <input #fileInput hidden type=\"file\" (change)=\"onUploadContract($event)\">\n                    <p><i class=\"far fa-file\" *ngIf=\"providerData['contract']\"></i>{{contractTitle}}</p>\n                    <div class=\"w-100\">\n                        <button (click)=\"fileInput.click()\" matTooltip=\"Fisierul existent va fi inlocuit\"\n                                class=\"btn-long btn-color-fill w-100\" type=\"button\">\n                            {{('PROVIDER.CONTRACT_UPLOAD' | translate)}}\n                            <i class=\"fas fa-upload\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div> -->\n\n            <div *ngIf=\"showActions\">\n                <h2 class=\"py-8\">{{('PROVIDER.BESTINFORM_ACCOUNT' | translate)}}</h2>\n\n                <div class=\"row\">\n\n                    <mat-form-field class=\"col-5\" appearance=\"standard\">\n                        <mat-label>{{('PROVIDER.PASSWORD' | translate)}}</mat-label>\n                        <input formControlName=\"password\" matInput [type]=\"showPassword ? 'text' : 'password'\"\n                               name=\"password\" autocomplete=\"new-password\" id=\"password\">\n\n                        <mat-error *ngIf=\"addEditForm.get('password').hasError('required')\">{{'ERROR.REQUIRED'|translate}}</mat-error>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('password').hasError('passMin')\">{{'ERROR.PASS-MIN-LENGTH'|translate}}</mat-error>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('password').hasError('passMax')\">{{'ERROR.PASS-MAX-LENGTH'|translate}}</mat-error>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('password').hasError('specialCharacter')\">{{'ERROR.PASS-SPECIAL-CHAR'|translate}}\n                            .\n                        </mat-error>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('password').hasError('number')\">{{'ERROR.PASS-DIGIT'|translate}}</mat-error>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('password').hasError('upper')\">{{'ERROR.PASS-UPPERCASE'|translate}}</mat-error>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('password').hasError('lower')\">{{'ERROR.PASS-LOWERCASE'|translate}}</mat-error>\n                        <mat-error\n                                *ngIf=\"addEditForm.get('password').hasError('whiteSpace')\">{{'ERROR.PASS-WHITESPACE'|translate}}</mat-error>\n\n                        <button type=\"button\" (click)=\"showPassword = !showPassword\" mat-icon-button matSuffix\n                                id=\"showPwdBtn\">\n                            <mat-icon>{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\n                        </button>\n\n                    </mat-form-field>\n\n                    <mat-form-field class=\"col-5\" appearance=\"standard\">\n                        <mat-label>{{('PROVIDER.CHECK_PASSWORD' | translate)}}</mat-label>\n                        <input formControlName=\"checkPassword\" matInput [type]=\"showPassword ? 'text' : 'password'\"\n                               name=\"password\" autocomplete=\"new-password\" id=\"checkPassword\">\n                        <mat-error *ngIf=\"addEditForm.controls.checkPassword.hasError('mustMatch')\">\n                            Confirmarea parolei nu este corecta.\n                        </mat-error>\n                        <mat-error *ngIf=\"addEditForm.controls.checkPassword.hasError('required')\">\n                            Ați uitat sa rescrieți parola.\n                        </mat-error>\n                        <button type=\"button\" (click)=\"showPassword = !showPassword\" mat-icon-button matSuffix\n                                id=\"showCheckPwdBtn\">\n                            <mat-icon>{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\n                        </button>\n                    </mat-form-field>\n\n\n                    <div class=\"col-2 d-flex justify-content-end pwdActions\">\n                        <button\n                                id=\"generatePwdBtn\"\n                                type=\"button\"\n                                class=\"btn-auto btn-color-outline\"\n                                (click)=\"generatePassword()\">\n                            <i class=\"fas fa-sync\"></i> {{'PROVIDER.GENERATE_PASSWORD' | translate}}\n                        </button>\n\n                        <button *ngIf=\"isEditMode\"\n                                type=\"button\"\n                                id=\"resetPwdBtn\"\n                                class=\"btn-auto btn-color-outline\"\n                                (click)=\"resetPassword()\">\n                            <i class=\"fas fa-save\"></i>\n                        </button>\n\n                    </div>\n                    <!-----Check password-------->\n\n\n\n                </div>\n\n                <div *ngIf=\"!isEditMode\">\n                    <mat-form-field class=\"w-100\" appearance=\"legacy\">\n                        <mat-label>{{('PROVIDER.STATUS' | translate)}}</mat-label>\n                        <mat-select formControlName=\"approvedStatus\" (selectionChange)=\"activateUser($event.value)\">\n                            <mat-option [value]=\"'approved'\">Aprobat</mat-option>\n                            <mat-option [value]=\"'pending'\">In asteptare</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n\n<!--            <div class=\"integration-class\" >-->\n<!--                <h2 class=\"py-8\">{{('PROVIDER.INTEGRATIONS' | translate)}}</h2>-->\n\n<!--                <h5>Channel manager</h5>-->\n<!--                &lt;!&ndash;Channel manager&ndash;&gt;-->\n<!--                <div class=\"row\">-->\n<!--                    <mat-form-field class=\"w-50\" appearance=\"legacy\">-->\n<!--                        <mat-label>{{('PROVIDER.EMAIL' | translate)}}</mat-label>-->\n<!--                        <input matInput>&lt;!&ndash;formControlName=\"email\"&ndash;&gt;-->\n<!--                        <mat-icon matSuffix (click)=\"clearChannelEmail()\">highlight_off</mat-icon>-->\n<!--                    </mat-form-field>-->\n\n<!--                    <mat-form-field class=\"w-50\" appearance=\"legacy\">-->\n<!--                        <mat-label>{{('PROVIDER.TOKEN' | translate)}}</mat-label>-->\n<!--                        <input matInput>&lt;!&ndash;formControlName=\"token\" &ndash;&gt;-->\n<!--                        <mat-icon matSuffix (click)=\"clearToken()\">highlight_off</mat-icon>-->\n<!--                    </mat-form-field>-->\n<!--                </div>-->\n\n<!--                <h5>Channel manager</h5>-->\n<!--                &lt;!&ndash;Channel manager&ndash;&gt;-->\n<!--                <div class=\"row\">-->\n<!--                    <div class=\"w-50\">-->\n<!--                        <input #fileInput hidden type=\"file\" (change)=\"onUploadContract($event)\">-->\n<!--                        <button (click)=\"fileInput.click()\" matTooltip=\"Fisierul existent va fi inlocuit\"-->\n<!--                                class=\"btn-long btn-color-fill w-100\" type=\"button\">-->\n<!--                            <i class=\"fas fa-upload\"></i>-->\n<!--                            Private Key-->\n<!--                        </button>-->\n\n<!--                    </div>-->\n\n<!--                    <div class=\"w-50\">-->\n<!--                        <input #fileInput hidden type=\"file\" (change)=\"onUploadContract($event)\">-->\n<!--                        <button (click)=\"fileInput.click()\" matTooltip=\"Fisierul existent va fi inlocuit\"-->\n<!--                                class=\"btn-long btn-color-fill w-100\" type=\"button\">-->\n<!--                            <i class=\"fas fa-upload\"></i>-->\n<!--                            Public Key-->\n<!--                        </button>-->\n<!--                    </div>-->\n\n<!--                    &lt;!&ndash;semnatura ascunsa&ndash;&gt;-->\n<!--                    &lt;!&ndash; <mat-form-field class=\"w-100 py-4\" appearance=\"legacy\">-->\n<!--                        <mat-label>{{('PROVIDER.SIGNATURE' | translate)}}</mat-label>-->\n<!--                        <input matInput>-->\n<!--                        <mat-icon matSuffix (click)=\"clearSignature()\">highlight_off</mat-icon>-->\n<!--                    </mat-form-field> &ndash;&gt;-->\n\n<!--                </div>-->\n\n\n<!--            </div>-->\n\n<!--            Block and Delete Actions-->\n            <div *ngIf=\"isEditMode && showActions\">\n                <h2 class=\"py-8\">{{('PROVIDER.ACCOUNT_ACTIONS' | translate)}}</h2>\n                <div class=\"row\">\n                    <div class=\"w-50\">\n                        <button (click)=\"blockProvider(providerId)\"\n                                class=\"btn-long btn-color-fill w-100\" type=\"button\">\n                            <i class=\"fas fa-lock\"></i>\n                            BLOCARE CONT\n                        </button>\n\n                    </div>\n\n                    <div class=\"w-50\">\n                        <button (click)=\"deleteProvider(providerId)\"\n                                class=\"btn-long btn-color-fill w-100\" type=\"button\">\n                            <i class=\"fas fa-times\"></i>\n                            STERGERE PROVIDER\n                        </button>\n                    </div>\n\n\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n";

/***/ }),

/***/ 74790:
/*!***********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/balance-provider/balance-provider.component.html?ngResource ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "    <div class=\"container\">\n        <div class=\"row\">\n            <app-dashboard-header pageTitleOne=\"Balanță\"\n                                  [buttonBackRoute]=\" !currentUser ? '../../../manage-providers/view/' + providerId : '../../profile/view'\">\n            </app-dashboard-header>\n        </div>\n    </div>\n\n     <!--Content-->\n    <div class=\"container view-provider-container\">\n            <!--Balanta-->\n            <div class=\"row\">\n\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-3\">\n                    <!--available balance -->\n                    <app-available-balance-card [providerId]=\"providerId\" [currency]=\"currency\"></app-available-balance-card>\n                    <!--recent transactions-->\n                    <app-recently-reservation-card [recentTransactionList]=\"recentTransactionList\" [currency]=\"currency\"></app-recently-reservation-card>\n\n                </div>\n\n\n                <!--transaction history-->\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-9\">\n                    <app-history-reservation-card [providerId]=\"providerId\" [currency]=\"currency\"></app-history-reservation-card>\n                </div>\n            </div>\n\n            <!--Financial transactions-->\n\n                <div class=\"row my-4 \">\n                    <h2 class=\"col-12 col-md-6\">{{\"PROVIDER.RESERVATION\" | translate}}</h2>\n                    <div class=\"col-12 col-md-6 d-flex justify-content-start justify-content-md-end\">\n                        <button class=\"btn-long btn-color-fill\" (click)=\"getTransactionList()\">\n                            Refresh <i class=\"fas fa-sync-alt\"></i>\n                        </button>\n                    </div>\n                </div>\n\n<!--                <app-reservations-list [providerPageId]=\"providerId\"></app-reservations-list>-->\n                <!--Financial transactions table-->\n\n                    <div class=\"filterRow\">\n                        <mat-form-field appearance=\"legacy\" class=\"w-100\">\n                            <input matInput type=\"text\" [formControl]=\"searchTransactionsFilter\" (keydown.enter)=\"getTransactionList()\" placeholder=\"Căutare\">\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"tableContent\">\n\n                    <table mat-table matSort appMatTableResponsive [dataSource]=\"transactionList\" (matSortChange) = \"applyTransactionFilter($event)\" class=\"w-100\">\n                    <!-- ID Column -->\n                    <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> # </th>\n                        <td data-column-name=\"#\" mat-cell *matCellDef=\"let row; let i = index;\"> {{ (i + 1) + sizeTransaction * pageTransaction}} </td>\n                    </ng-container>\n\n                    <!-- Resource Name Column -->\n                    <ng-container matColumnDef=\"title\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PROVIDER.RESOURCE-NAME'|translate}} </th>\n                        <td attr.data-column-name=\"{{'PROVIDER.RESOURCE-NAME'|translate}}\" mat-cell *matCellDef=\"let row\"> {{row.resourceId}} </td>\n\n                    </ng-container>\n\n                    <!-- Domain amount -->\n                    <ng-container matColumnDef=\"client\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PROVIDER.CLIENT'|translate}} </th>\n                        <td attr.data-column-name=\"{{'PROVIDER.CLIENT'|translate}}\" mat-cell *matCellDef=\"let row\"> {{row.userId}} </td>\n                    </ng-container>\n\n                    <!--paymentDate-->\n                    <ng-container matColumnDef=\"date\">\n                         <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PROVIDER.PAYMENT-DATE'|translate}} </th>\n                        <td attr.data-column-name=\"{{'PROVIDER.PAYMENT-DATE'|translate}}\" mat-cell *matCellDef=\"let row\">{{row.date | date:'dd MMM y HH:mm'}}</td>\n                    </ng-container>\n\n                    <!--amount-->\n                    <ng-container matColumnDef=\"totalPrice\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PROVIDER.AMOUNT'|translate}} </th>\n                        <td attr.data-column-name=\"{{'PROVIDER.AMOUNT'|translate}}\" mat-cell *matCellDef=\"let row\"><span\n                            [ngClass]=\"{\n                            'positive-amount' : row.totalPrice > 0 || row.totalPrice === 0,\n                            'negative-amount': row.totalPrice < 0\n                             }\">€ {{row.totalPrice | number: '1.0-2'}} </span>\n                            </td>\n                    </ng-container>\n\n                    <!--Status-->\n                    <ng-container matColumnDef=\"status\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PROVIDER.STATUS'|translate}} </th>\n                        <td attr.data-column-name=\"{{'PROVIDER.STATUS'|translate}}\" mat-cell *matCellDef=\"let row\">\n                            <span class=\"custom-provider-transaction-status-label\"\n                            [ngClass]=\"{\n                                'label-returned' : row.status === 'canceled',\n                                'label-approved' : row.status === 'active',\n                                'label-past' : row.status === 'past'\n                            }\">{{row.status=== 'canceled' ? 'ANULAT' : row.status=== 'active' ? 'ACTIV' : row.status=== 'past' ? 'INCHEIATA': row.status }}\n                        </span></td>\n                        <!-- 'label-rejected' : row.status === 'respins' -->\n\n                    </ng-container>\n\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedTransactionColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedTransactionColumns;\"></tr>\n\n                    <!-- Row shown when there is no matching data. -->\n                     <tr class=\"mat-row\" *matNoDataRow>\n                        <td class=\"mat-cell\" colspan=\"4\">{{'PROVIDER.NO_DATA'|translate}}</td>\n                    </tr>\n                    </table>\n\n                      <!--Pagination-->\n                      <mat-paginator [pageSizeOptions]=\"pageTransactionSizeArray\"\n                                     [length]=\"paginationTransactionInfo?.totalElements\"\n                                     [pageSize]=\"sizeTransaction\"\n                                     (page)=\"pageTransactionChange($event)\"\n                                     >\n                      </mat-paginator>\n\n                </div>\n                <!--End Financial Transactions-->\n\n\n\n            <!--Resursele mele-->\n\n            <div class=\"resources-class\">\n                <div class=\"row flex-wrap d-flex my-4 \">\n                    <h2>{{\"PROVIDER.MY-RESOURCES\" | translate}}</h2>\n                </div>\n\n                <owl-carousel-o [options]=\"customOptions\">\n                    <ng-container *ngFor=\"let resource of finalResourcesList;\" >\n                    <!--start-card-->\n                    <ng-template carouselSlide>\n                        <div class=\"resource-card\">\n                    <div class=\"title-n-location\">\n                        <h4>{{resource?.title}}</h4>\n                        <p *ngIf=\"resource.address\"><i class=\"fas fa-map-marker-alt\"></i> {{resource?.address}}</p>\n                    </div>\n                    <!--IMG-->\n                    <div class=\"resource-img d-flex align-items-center justify-content-center\">\n                        <!-- <i class=\"fas fa-utensils\"></i> -->\n                        <img *ngIf=\"resource.icon\" src=\"{{resource?.icon?.filePath}} \" />\n                    </div>\n                    <!--Price, number of sales -->\n                    <div>\n                        <h4 class=\"price-resource-class justify-content-end\">€ {{resource.price | number: '1.0-2' }}</h4>\n                        <!-- <p class=\"pb-0 d-flex align-items-baseline\"><i class=\"far fa-user\"></i> {{resource.sales}} Vânzări astăzi</p> -->\n                    </div>\n                </div>\n                    </ng-template>\n                </ng-container>\n                </owl-carousel-o>\n            </div><!--resources-class-->\n\n<!-------------------------------------------------------------------------------------------------------------------->\n\n            <!--Cereri de plata-->\n\n            <div class=\"payment-request-class\">\n                <div class=\"row flex-wrap d-flex my-4 \">\n                    <h2 class=\"col-12 col-md-6\">Cereri de plată</h2>\n                    <div class=\"col-12 col-md-6 d-flex justify-content-start justify-content-md-end\">\n                        <button *ngIf=\"!isProvider\" class=\"btn-long btn-color-fill\" (click)=\"paymentRequest(providerId)\">\n                            {{\"PROVIDER.PAYMENT-REQUEST\" | translate}}<i class=\"fas fa-plus\"></i>\n                        </button>\n                    </div>\n                </div>\n\n\n                    <div class=\"filterRow\">\n                        <mat-form-field appearance=\"legacy\" class=\"w-100\">\n                            <input matInput type=\"text\" [formControl]=\"searchPaymentRequestFilter\" (keydown.enter)=\"getPaymentRequestList()\" placeholder=\"Căutare\">\n                        </mat-form-field>\n                    </div>\n\n                <div class=\"tableContent\">\n\n                <table mat-table matSort appMatTableResponsive [dataSource]=\"paymentRequestsList\" (matSortChange) = \"applyPaymentFilter($event)\" class=\"w-100\">\n                    <!-- ID Column -->\n                    <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> # </th>\n                        <td data-column-name=\"#\" mat-cell *matCellDef=\"let row; let i = index;\">{{ (i + 1) + sizePayment * pagePayment}} </td>\n                    </ng-container>\n\n                    <!-- name Column -->\n                    <ng-container matColumnDef=\"title\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'PROVIDER.PROVIDER_NAME'|translate}}</th>\n                        <td attr.data-column-name=\"{{'PROVIDER.PROVIDER_NAME'|translate}}\" mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n\n                    </ng-container>\n\n                    <!-- Domain amount -->\n                    <ng-container matColumnDef=\"amount\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PROVIDER.AMOUNT'|translate}} </th>\n                        <td attr.data-column-name=\"{{'PROVIDER.AMOUNT'|translate}}\" mat-cell *matCellDef=\"let row\">\n                        <span\n                        [ngClass]=\"{\n                        'positive-amount':row.amount >= 0,\n                        'negative-amount': row.amount < 0\n                         }\">€ {{row.amount}} \n                        </span>\n                    </td>\n                    </ng-container>\n\n                    <!--paymentDate-->\n                    <ng-container matColumnDef=\"requestDate\">\n                         <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PROVIDER.DATE-AND-HOUR'|translate}}</th>\n                        <td attr.data-column-name=\"{{'PROVIDER.DATE-AND-HOUR'|translate}}\" mat-cell *matCellDef=\"let row\">{{row.requestDate | date: 'd MMM y, HH:mm'}}</td>\n                    </ng-container>\n\n                    <!--Status-->\n                    <ng-container matColumnDef=\"status\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PROVIDER.STATUS'|translate}} </th>\n                        <td attr.data-column-name=\"{{'PROVIDER.STATUS'|translate}}\" mat-cell *matCellDef=\"let row\">\n                        <span class=\"custom-provider-status-label\"\n                        [ngClass]=\"{\n                            'label-new' : row.status === 'new',\n                            'label-accepted' : row.status === 'approved',\n                            'label-rejected' : row.status === 'rejected',\n                            'label-paid' : row.status === 'paid',\n                            'label-canceled' : row.status === 'cancelled'\n                        }\">{{row.status=== 'new' ? 'NOU' : row.status=== 'approved' ? 'ACCEPTAT' : row.status=== 'rejected' ? 'RESPINS' : row.status=== 'paid' ? 'EFECTUAT': row.status=== 'cancelled' ? 'ANULAT': row.status }}\n                    </span>\n                    </td>\n                    </ng-container>\n\n                    <!-- Actions Column -->\n                    <ng-container matColumnDef=\"actions\" >\n                        <th mat-header-cell *matHeaderCellDef class=\"actions-class\"> {{'PROVIDER.ACTIONS'|translate}}</th>\n                        <td mat-cell *matCellDef=\"let row; let i = index;\">\n                            <div class=\"d-flex actions-container flex-wrap py-2\">\n                                <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Schimbă status\"\n                                (click)=\"viewPaymentRequest(row.id)\">\n                                <i class=\"fas fa-file\"></i>\n                                </button>\n                            </div>\n                        </td>\n                    </ng-container>\n\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedPaymentColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedPaymentColumns;\"></tr>\n\n                    <!-- Row shown when there is no matching data. -->\n                     <tr class=\"mat-row\" *matNoDataRow>\n                        <td class=\"mat-cell\" colspan=\"4\">{{'PROVIDER.NO_DATA'|translate}}</td>\n                    </tr>\n                    </table>\n\n                      <!--Pagination-->\n                      <mat-paginator [pageSizeOptions]=\"pagePaymentSizeArray\"\n                                     [length]=\"paginationPaymentInfo?.totalElements\"\n                                     [pageSize]=\"sizePayment\"\n                                     (page)=\"pagePaymentChanged($event)\">\n                      </mat-paginator>\n\n                <!--End Payment Request-->\n                </div>\n            </div>\n\n\n\n    </div>\n";

/***/ }),

/***/ 67589:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/features/providers-management/change-status-provider/change-status-provider.component.html?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"container-fluid\">\n    <div class=\"container modal-content\">\n\n        <!--Header-->\n        <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Schimbă statusul providerului</h4>\n            <!-- <i class=\"fas fa-times\" (click)=\"closeModal()\"></i> -->\n        </div>\n\n        <!--Body-->\n        <div class=\"modal-body\">\n<!--          <p>Actiunea de schimbare status nu este permanenta si complet irevocabila. Datele cu caracter personal vor fi criptate si arhivate.</p>-->\n          <!--Form - Start-->\n          <form [formGroup]=\"changeProviderStatusForm\">\n            <mat-form-field class=\"w-100\"  appearance=\"outline\">\n              <mat-label>Status</mat-label>\n              <mat-select formControlName=\"status\" id=\"status\">\n\n                <mat-option value=\"new\" id=\"new\">Nou</mat-option>\n                  <mat-option value=\"draft\" id=\"draft\">{{'STATUS.DRAFT' | translate}}</mat-option>\n                  <mat-option value=\"pending\" id=\"pending\">{{'STATUS.PENDING' | translate}}</mat-option>\n                  <mat-option value=\"active\" id=\"active\">{{'STATUS.ACTIVE' | translate}}</mat-option>\n                <mat-option value=\"inactive\" id=\"inactive\">{{'STATUS.INACTIVE' | translate}}</mat-option>\n                <mat-option value=\"archived\" id=\"archived\">{{'STATUS.ARCHIVED' | translate}}</mat-option>\n                <mat-option value=\"refused\" id=\"refused\">Refuzat</mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"changeProviderStatusForm.controls.status.hasError('required')\">\n                Câmpul este obligatoriu.\n              </mat-error>\n            </mat-form-field>\n          </form>\n          <!--Form - End-->\n        </div>\n\n        <!--  Footer-->\n        <div class=\"modal-footer d-flex justify-content-center justify-content-lg-between align-items-center\">\n              <div>\n                <button type=\"button\" class=\"btn-long btn-color-outline\">\n                <i class=\"fas fa-times\"></i>\n                {{ 'BTN.CANCEL' | translate}}\n                <!-- <ng-container *ngIf=\"isStatusChangeLoading === true\">\n                    [disabled]=\"isStatusChangeLoading\"\n                    <span\n                    class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                    ></span>\n                </ng-container> -->\n                </button>\n              </div>\n\n              <div>\n                <button type=\"button\" class=\"btn-long btn-color-fill\" id=\"submitChangeStatus\"\n                (click)=\"changeProviderStatus()\" >\n                    {{ 'BTN.CONFIRM' | translate}}\n                    <i class=\"fa fa-check\"></i>\n\n                    <!-- <ng-container *ngIf=\"isStatusChangeLoading === true\">\n                        [disabled]=\"isStatusChangeLoading\"\n                        <span\n                        class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                        ></span>\n                    </ng-container> -->\n                </button>\n              </div>\n\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 31534:
/*!*********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/delete-provider/delete-provider.component.html?ngResource ***!
  \*********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n\n<div class=\"container-fluid\">\n    <div class=\"container modal-content\">\n      <!--Header-->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">{{'PROVIDER.DELETE_PROVIDER' | translate}}</h4>\n      </div>\n      <!--Body-->\n      <div class=\"modal-body\">\n        <span class=\"modal-body-text\">{{'PROVIDER.MESSAGE.DELETE-PROVIDER-PARAGRAPH' | translate}}</span>\n      </div>\n\n      <!--Info card blue-->\n      <div class=\"blue-card\">\n          <div class=\"modal-blue-container d-flex\">\n              <div class=\"p-3\">\n                <img src=\"{{providerAvatar}}\">\n              </div>\n              <div>\n                <h4>{{providerName}}</h4>\n                <p>{{providerEmail}}</p>\n                <h5>\n                  <i class=\"fas fa-concierge-bell me-2\"></i>\n                  Provider\n                </h5>\n              </div>\n\n          </div>\n      </div>\n      <!--Footer-->\n      <div class=\"p-3\">\n        <div class=\"row gap-2 gap-xl-0\">\n            <div class=\"col-12 col-xl-6\">\n                <button type=\"button\" class=\"btn-long btn-color-outline w-100\"\n                        >\n                    <i class=\"fas fa-times\"></i>\n                    {{ 'BTN.CANCEL' | translate}}\n                    <!-- <ng-container *ngIf=\"isDeleteLoading === true\">\n                      <span\n                        class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                      ></span>\n                    </ng-container>   -->\n                </button>\n            </div>\n\n            <div class=\"col-12 col-xl-6\">\n                <button type=\"button\" class=\"btn-long btn-color-fill w-100\"  id=\"confirmDelete\"\n                        (click)=\"confirmAction()\">\n                    <i class=\"fas fa-check\"></i>\n                    {{ 'BTN.CONFIRM' | translate}}\n                    <!-- <ng-container *ngIf=\"isDeleteLoading === true\">\n                      <span\n                        class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                      ></span>\n                    </ng-container>   -->\n                </button>\n            </div>\n\n        </div>\n      </div>\n    </div>\n    </div>\n";

/***/ }),

/***/ 91493:
/*!*******************************************************************************************************!*\
  !*** ./src/app/features/providers-management/list-providers/list-providers.component.html?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"container\">\n    <app-dashboard-header pageTitleOne=\"{{'PROVIDER.ACTIVE-PROVIDERS' | translate}}\"\n                          pageTitleTwo=\"{{'PROVIDER.PENDING-PROVIDERS' | translate}}\"\n                          routeTitleOne=\"../../manage-providers/active\"\n                          routeTitleTwo=\"../../manage-providers/pending\"\n                          [buttonBackRoute]=\"'../../dashboard'\"\n                          [buttonAddRoute]=\"'../../manage-providers/add'\">\n    </app-dashboard-header>\n\n<div class=\"providers-list\" *ngIf=\"dataLoaded\">\n    <div class=\"row filterRow\">\n        <mat-form-field appearance=\"legacy\" class=\"w-100\">\n            <input matInput type=\"text\" [formControl]=\"searchFilter\" (keydown.enter)=\"filterData()\" placeholder=\"Căutare\">\n        </mat-form-field>\n    </div>\n\n    <div class=\"row tableContent\">\n        <table mat-table matSort appMatTableResponsive [dataSource]=\"providersList\" (matSortChange) = applyFilter($event)>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> # </th>\n                <td data-column-name=\"#\" mat-cell *matCellDef=\"let row; let i = index;\">   {{ (pageNumber) * pageSize + i + 1 }} </td>\n            </ng-container>\n\n            <!-- Company Column -->\n            <ng-container matColumnDef=\"title\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> {{'PROVIDER.PROVIDER_NAME'|translate}} </th>\n                <td attr.data-column-name=\"{{'PROVIDER.PROVIDER_NAME'|translate}}\" mat-cell *matCellDef=\"let row\" routerLink=\"../view/{{row.id}}\"> {{row.companyName}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"email\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Email </th>\n                <td attr.data-column-name=\"email\" mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n            </ng-container>\n\n            <!-- Domain Column -->\n            <ng-container matColumnDef=\"cui\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> CUI </th>\n                <td data-column-name=\"CUI\" mat-cell *matCellDef=\"let row\">\n                    <!-- <span class=\"d-flex justify-content-end me-3\"> </span> -->\n                        <span class=\"d-flex justify-content-end me-4\" >{{row.cui}}</span>\n                    </td>\n            </ng-container>\n\n            <!-- Domain Column -->\n            <ng-container matColumnDef=\"country\">\n                <th mat-header-cell *matHeaderCellDef disableClear>Țară</th>\n                <td data-column-name=\"Țară\" mat-cell *matCellDef=\"let row\">\n                    <!-- <span class=\"d-flex justify-content-end me-3\"> </span> -->\n                    {{row.billingAddress?.country}}\n                </td>\n            </ng-container>\n\n            <!-- Domain Column -->\n            <ng-container matColumnDef=\"city\">\n                <th mat-header-cell *matHeaderCellDef disableClear>Oraș</th>\n                <td data-column-name=\"Oraș\" mat-cell *matCellDef=\"let row\">\n                    {{row.billingAddress?.city}}\n                </td>\n            </ng-container>\n\n\n            <!-- Domain Column -->\n            <ng-container matColumnDef=\"domain\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> {{'PROVIDER.DOMAIN'|translate}} </th>\n                <td attr.data-column-name=\"{{'PROVIDER.DOMAIN'|translate}}\" mat-cell *matCellDef=\"let row\"> {{row.domain}} </td>\n            </ng-container>\n\n            <!--Status-->\n            <ng-container matColumnDef=\"activeStatus\" *ngIf=\"isApprovedStatus.includes('new')\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>Status Cont</th>\n                <td data-column-name=\"Status Cont\" mat-cell *matCellDef=\"let row\" [ngSwitch]=\"row.activeStatus\">\n                    <span *ngSwitchCase=\"true\">Confirmat</span>\n                    <span *ngSwitchCase=\"false\">Neconfirmat</span>\n                </td>\n            </ng-container>\n\n            <!--Status-->\n            <ng-container matColumnDef=\"approvedStatus\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Status Provider</th>\n                <td attr.data-column-name=\"{{'PROVIDER.STATUS'|translate}}\" mat-cell *matCellDef=\"let row\" [ngSwitch]=\"row.approvedStatus\">\n                    <span *ngSwitchCase=\"'new'\" class=\"custom-label label-draft\">Nou</span>\n                    <span *ngSwitchCase=\"'draft'\" class=\"custom-label label-pending\">Schita</span>\n                    <span *ngSwitchCase=\"'pending'\" class=\"custom-label label-pending\">In asteptare</span>\n                    <span *ngSwitchCase=\"'active'\" class=\"custom-label label-active\">Activ</span>\n                    <span *ngSwitchCase=\"'inactive'\" class=\"custom-label label-inactive\">Inactiv</span>\n                    <span *ngSwitchCase=\"'refused'\" class=\"custom-label label-refused\">Refuzat</span>\n                    <span *ngSwitchCase=\"'archived'\" class=\"custom-label label-archived\">Arhivat</span>\n                </td>\n            </ng-container>\n\n            <!-- Actions Column -->\n            <ng-container matColumnDef=\"actions\" *ngIf=\"!isApprovedStatus.includes('new')\">\n                <th mat-header-cell *matHeaderCellDef class=\"actions-class\"> {{'PROVIDER.ACTIONS'|translate}} </th>\n                <td mat-cell *matCellDef=\"let row; let i = index;\">\n                    <div class=\"d-flex actions-container flex-wrap\">\n\n                        <!--                TO DO - de vazut ce e cu statusul asta-->\n                                        <button class=\"btn-round btn-no-outline\"\n                                        matTooltip=\"Schimbă status\"\n                                        (click)=\"changeStatusModal(row.id, row.providerStatus)\"\n                                        id=\"changeProviderStatus_{{i}}\">\n                                            <i class=\"fas fa-toggle-on\"></i>\n                                        </button>\n\n\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Adauga resursa\"\n                                routerLink=\"../../resources/add\"\n                                id=\"addResourceForProvider{{i}}\"\n                        (click)=\"sendProviderData(row.id, row.companyName, row.cui)\">\n                            <i class=\"fas fa-folder-plus\"></i>\n                        </button>\n\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Adauga eveniment\"\n                                routerLink=\"../../events/add\"\n                                id=\"addEventForProvider{{i}}\"\n                                (click)=\"sendProviderData(row.id, row.companyName, row.cui)\">\n                            <i class=\"fas fa-calendar-plus\"></i>\n                        </button>\n\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Edit\"\n                                routerLink=\"../edit/{{row.id}}\"\n                                id=\"changeProviderStatus_{{i}}\">\n                            <i class=\"fas fa-pen\"></i>\n                        </button>\n\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Resurse\"\n                                [routerLink]=\"'../../resources/list'\"\n                                [queryParams]=\"{providerid: row.id}\">\n                            <i class=\"fas fa-folder\"></i>\n                        </button>\n\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Rapoarte Resurse\"\n                                [routerLink]=\"'../../reports/resources/' + row.id\">\n                            <i class=\"fas fa-chart-pie\"></i>\n                        </button>\n\n                        <!--                <button class=\"btn-round btn-no-outline\"-->\n                        <!--                        routerLink=\"../view/{{row.id}}\"-->\n                        <!--                        id=\"btn-open-modal-delete-event-{{i}}\">-->\n                        <!--                    <i class=\"fas fa-chevron-right\"></i>-->\n                        <!--                </button>-->\n\n                        <button class=\"btn-round btn-no-outline\"\n                                matTooltip=\"Arhivare\"\n                                id=\"btn-open-modal-archive-provider-{{i}}\"\n                                (click)=\"blockProvider(row.id)\"\n                        >\n                            <i class=\"fas fa-archive\"></i>\n                        </button>\n\n\n                    </div>\n                </td>\n            </ng-container>\n\n            <!-- Actions Column -->\n            <ng-container *ngIf=\"isApprovedStatus.includes('new')\" matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef class=\"actions-class\"> {{'PROVIDER.ACTIONS'|translate}} </th>\n                <td mat-cell *matCellDef=\"let row; let i = index;\">\n                    <div class=\"d-flex actions-container flex-wrap py-2\">\n                        <button class=\"btn-round btn-no-outline\"\n                                id=\"btn-edit-event-{{i}}\"\n                                (click)=\"providerRequest(row.id)\">\n\n                            <i class=\"fas fa-eye\"></i>\n                        </button>\n                    </div>\n                </td>\n            </ng-container>\n\n\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n            <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">{{'PROVIDER.NO_DATA'|translate}}</td>\n            </tr>\n        </table>\n\n        <!--Pagination-->\n        <mat-paginator [pageSizeOptions]=\"pageSizeArray\"\n                       [length]=\"totalElements\"\n                       [pageSize]=\"pageSize\"\n                       (page)=\"pageChanged($event)\">\n        </mat-paginator>\n    </div>\n\n\n</div>\n</div>\n";

/***/ }),

/***/ 93526:
/*!*********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/payment-request/payment-request.component.html?ngResource ***!
  \*********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n\n<div class=\"container-fluid\">\n    <div class=\"container modal-content\">\n      <!--Header-->\n      <div class=\"modal-header d-flex justify-content-between\">\n        <h4 class=\"modal-title\">{{\"PROVIDER.NEW-PAYMENT-REQUEST\" | translate}}</h4>\n        <i class=\"fas fa-times close\" (click)=\"closeModal()\"></i>\n      </div>\n      <!--Body-->\n      <div class=\"modal-body\">\n        <span class=\"modal-body-text\">Această acțiune este permanentă și complet irevocabilă.</span>\n      </div>\n  \n      <!--Info card blue-->\n      <div class=\"blue-card\">\n          <div class=\"modal-blue-container d-flex row\">\n              <div class=\"d-flex justify-content-between row\">\n                <h4 class=\"col-6 primary-color\">{{providerName}}</h4>\n                <h4 class=\"col-6 d-flex justify-content-end paragraph-color\">{{providerMoneyToRecive | number: '1.0-2'}} {{currency}}</h4>\n              </div>\n\n              <div class=\"d-flex justify-content-between row align-items-center\">\n                <div class=\"col-6 d-flex align-items-baseline\">\n                    <h6 class=\"primary-color\">IBAN:</h6>\n                    <p class=\"paragraph-color mb-0\">{{providerIBAN}}</p>\n                </div>\n                <div class=\"col-6 d-flex justify-content-end align-items-baseline\">\n                    <h6 class=\"primary-color\">{{\"PROVIDER.REQUEST-DATE\" | translate}}: </h6>\n                    <p class=\"paragraph-color mb-0\">{{ dateRequest | date:'dd MMM yyyy' }}</p>\n                </div>\n              </div>\n          </div>\n      </div>\n      <!--Footer-->\n      <div class=\"modal-footer\">\n        <div class=\"d-flex button-wrapper justify-content-between w-100\">\n            <button type=\"button\" class=\"btn-long btn-color-outline\"\n            (click)=\"closeModal()\">\n            <i class=\"fas fa-times\"></i>\n            {{ 'BTN.CANCEL' | translate}}\n              <!-- <ng-container *ngIf=\"isDeleteLoading === true\">\n                <span\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                ></span>\n              </ng-container>   -->\n            </button>\n  \n            <button type=\"button\" class=\"btn-long btn-color-fill\"  id=\"confirmPaymentRequest\"\n            (click)=\"confirmAction()\">\n            <i class=\"fas fa-check\"></i>\n            {{ 'BTN.CONFIRM' | translate}}\n              <!-- <ng-container *ngIf=\"isDeleteLoading === true\">\n                <span\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                ></span>\n              </ng-container>   -->\n            </button>\n        </div>\n      </div>\n    </div>\n    </div>\n  ";

/***/ }),

/***/ 80151:
/*!***********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/provider-request/provider-request.component.html?ngResource ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<!-- <div class=\"container-fluid\"> -->\n    <div class=\"container\">\n\n        <!--Header-->\n        <div class=\"m-header\">\n            <div class=\"row modal-title align-items-center\">\n                <h4 class=\"col-10\">{{'PROVIDER.PROVIDER_REQUEST' | translate}}</h4>\n             <i class=\"fas fa-times col-2\" (click)=\"closeModal()\"></i>\n            </div>\n            <div class=\"row\">\n                <p>{{'PROVIDER.MESSAGE.PROVIDER_REQUEST_WARNING' | translate}}</p>\n            </div>\n      </div>\n        <!--Body-->\n        <div class=\"modal-body blue-card mb-4\">\n          <div class=\"row\">\n            <h3>{{name}}</h3>\n            <h4>{{'PROVIDER.CUI' | translate}} {{cui}}</h4>\n          </div>\n\n          <div class=\"row d-flex flex-wrap \">\n            <h4 class=\"col-md-6\">{{'PROVIDER.REQUEST_DATE' | translate}}</h4>\n            <p class=\"col-md-6 d-flex justify-content-end\">{{ dateRequest | date:\"dd MMM YYYY\" }}</p>\n          </div>\n\n          <div class=\"row d-flex flex-wrap\">\n             <div class=\"col-md-6\">\n                <h4>{{'PROVIDER.EMAIL' | translate}}</h4>\n                <p>{{email}}</p>\n             </div>\n             <div class=\"col-md-6\">\n                <h4 class=\"d-flex justify-content-end\">{{'PROVIDER.TELEPHONE' | translate}}</h4>\n                <p class=\"d-flex justify-content-end\">{{telephone}}</p>\n             </div>\n          </div>\n\n        </div>\n\n        <!-- reason -->\n\n<!--        <div class=\"row py-4\">-->\n<!--        <form [formGroup]=\"formReason\">-->\n<!--        <mat-form-field class=\"example-full-width w-100\" appearance=\"outline\">-->\n<!--            <mat-label>{{'PROVIDER.REASON' | translate}}</mat-label>-->\n<!--            <textarea matInput placeholder=\"Motivati alegerea facuta.\" formControlName=\"reason\"></textarea>-->\n<!--            </mat-form-field>-->\n<!--        </form>-->\n<!--        </div>-->\n\n\n        <!--  Footer-->\n        <div class=\"footer\">\n            <div class=\"row gap-2 gap-xl-0\">\n                <div class=\"col-12 col-xl-6\">\n                    <button type=\"button\" class=\"btn-long btn-color-outline w-100\"\n                            (click)=\"declineRequest()\">\n                        <i class=\"fas fa-times\"></i>\n                        {{ 'PROVIDER.DECLINE' | translate}}\n                        <!-- <ng-container *ngIf=\"isStatusChangeLoading === true\">\n                            [disabled]=\"isStatusChangeLoading\"\n                            <span\n                            class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                            ></span>\n                        </ng-container> -->\n                    </button>\n                </div>\n\n\n                <div class=\"col-12 col-xl-6\">\n                    <button type=\"button\" class=\"btn-long btn-color-fill w-100\"\n                            (click)=\"approveRequest()\" >\n                        {{ 'BTN.CONFIRM' | translate}}\n                        <i class=\"fa fa-check\"></i>\n\n                        <!-- <ng-container *ngIf=\"isStatusChangeLoading === true\">\n                            [disabled]=\"isStatusChangeLoading\"\n                            <span\n                            class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                            ></span>\n                        </ng-container> -->\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n    <!-- </div> -->\n";

/***/ }),

/***/ 70505:
/*!*********************************************************************************************************!*\
  !*** ./src/app/features/providers-management/status-provider/status-provider.component.html?ngResource ***!
  \*********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n\n<div class=\"container-fluid\">\n    <div class=\"container modal-content\">\n      <!--Header-->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Schimbare status -\n            <span *ngIf=\"actionType === 'inactive'\">Inactiv</span>\n            <span *ngIf=\"actionType === 'archived'\">Arhivat</span>\n        </h4>\n      </div>\n      <!--Body-->\n      <div class=\"modal-body\">\n<!--        <span class=\"modal-body-text\">{{'PROVIDER.MESSAGE.BLOCK-PROVIDER-PARAGRAPH' | translate}}</span>-->\n      </div>\n\n      <!--Info card blue-->\n      <div class=\"blue-card\">\n          <div class=\"modal-blue-container d-flex\">\n              <div class=\"p-3\">\n                <img src=\"{{providerAvatar}}\">\n              </div>\n              <div>\n                <h4>{{providerName}}</h4>\n                <p>{{providerEmail}}</p>\n                <h5>\n                  <i class=\"fas fa-concierge-bell me-2\"></i>\n                  Provider\n                </h5>\n              </div>\n\n          </div>\n      </div>\n      <!--Footer-->\n      <div class=\"p-3\">\n        <div class=\"row gap-2 gap-xl-0\">\n            <div class=\"col-12 col-xl-6\">\n                <button type=\"button\" class=\"btn-long btn-color-outline w-100\"\n                        (click)=\"closeModal()\">\n                    <i class=\"fas fa-times\"></i>\n                    {{ 'BTN.CANCEL' | translate}}\n                    <!-- <ng-container *ngIf=\"isDeleteLoading === true\">\n                      <span\n                        class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                      ></span>\n                    </ng-container>   -->\n                </button>\n            </div>\n            <div class=\"col-12 col-xl-6\">\n                <button type=\"button\" class=\"btn-long btn-color-fill w-100\"  id=\"confirmDelete\"\n                        (click)=\"confirmAction()\">\n                    <i class=\"fas fa-check\"></i>\n                    {{ 'BTN.CONFIRM' | translate}}\n                    <!-- <ng-container *ngIf=\"isDeleteLoading === true\">\n                      <span\n                        class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                      ></span>\n                    </ng-container>   -->\n                </button>\n            </div>\n        </div>\n      </div>\n    </div>\n    </div>\n";

/***/ }),

/***/ 42830:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/features/providers-management/view-payment-request/view-payment-request.component.html?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n\n<div class=\"container-fluid\">\n    <div class=\"container modal-content\">\n      <!--Header-->\n      <div class=\"modal-header d-flex justify-content-between\">\n        <h4 class=\"modal-title\">{{\"PROVIDER.VIEW-PAYMENT-REQUEST\" | translate}}</h4>\n        <i class=\"fas fa-times\" (click)=\"closeModal()\"></i>\n      </div>\n      <!--Body-->\n      <div class=\"modal-body mb-3\">\n        <span class=\"modal-body-text\">Această acțiune este permanentă și complet irevocabilă.</span>\n      </div>\n  \n      <!--Info card blue-->\n      <div class=\"blue-card mb-4\">\n        <div class=\"modal-blue-container d-flex row\">\n              <div class=\"d-flex justify-content-between row\">\n                <h4 class=\"col-6 primary-color\">{{providerName}}</h4>\n                <h4 class=\"col-6 d-flex justify-content-end paragraph-color\">{{amount | number: '1.0-2'}} {{currency}}</h4>\n              </div>\n\n            <div class=\"d-flex justify-content-between row align-items-baseline\">\n                <div class=\"col-6 d-flex align-items-baseline\">\n                    \n                    <h6 class=\"primary-color\">IBAN:</h6>\n                    <p class=\"paragraph-color mb-0\">{{providerIBAN}}</p>\n                </div>\n                <div class=\"col-6 d-flex align-items-end flex-column\">\n                    <div class=\"d-flex align-items-baseline\">\n                        <h6 class=\"primary-color\">{{\"PROVIDER.REQUEST-DATE\" | translate}}: </h6>\n                        <p class=\"paragraph-color mb-0\">{{requestDate | date: 'd MMM y'}}</p>\n                        <!-- <p class=\"paragraph-color mb-0\">{{requestDate}}</p> -->\n\n                    </div>\n                    <div class=\"d-flex align-items-baseline\" *ngIf=\"paymentDate !== null\">\n                        <h6 class=\"primary-color\">{{\"PROVIDER.PAID-PAYMENT\" | translate}}: </h6>\n                        <p class=\"paragraph-color mb-0\">{{paymentDate | date: 'd MMM y'}}</p>\n                    </div>\n                    \n                </div>\n            </div>\n        \n\n              <!--File buttons----------------------------------------------->\n              <!--Invoice-->\n              <!-- <div class=\"invoice-report-container-class\">\n                <div class=\"d-flex justify-content-between align-items-baseline text\">\n                    <h6 class=\"primary-color\">\n                        <i class=\"fas fa-file\"></i>\n                        Invoice\n                    </h6>\n                    <p class=\"paragraph-color\">{{paymentBill?.fileName}}</p>\n                </div>\n                <div class=\"d-flex justify-content-center\">\n                    <button class=\"btn-long btn-color-fill w-100\" (click)=\"download(paymentBill.filePath,paymentBill.fileName)\">\n                            <i class=\"fas fa-download\"></i>\n                            {{\"PROVIDER.DOWNLOAD-BILL\" | translate}}\n                    </button>\n                </div>\n\n              </div> -->\n              <!--Report-->\n\n              <!-- <div class=\"invoice-report-container-class\">\n                <div class=\"d-flex justify-content-between align-items-baseline text\">\n                    <h6 class=\"primary-color\">\n                        <i class=\"fas fa-file\"></i>\n                        Report\n                    </h6>\n                    <p class=\"paragraph-color\">{{paymentReport?.fileName}}</p>\n                </div>\n                <div class=\"d-flex justify-content-center\">\n                    <button class=\"btn-long btn-color-fill w-100\" (click)=\"download(paymentReport.filePath,paymentReport.fileName)\">\n                            <i class=\"fas fa-download\"></i>\n                            {{\"PROVIDER.DOWNLOAD-REPORT\" | translate}}\n                    </button>\n                </div>\n\n              </div> -->\n\n          </div>\n      </div>\n      <!--Footer-->\n      <div *ngIf=\"(providerId && status==='new')\" class=\"d-flex flex-wrap\">\n          <div class=\"col-6 d-flex justify-content-center\">\n                <button type=\"button\" class=\"btn-long btn-color-outline\"\n            (click)=\"confirmAction('rejected')\">\n            <i class=\"fas fa-times\"></i>\n            {{\"PROVIDER.REJECT\" | translate}}\n            </button>\n            </div>\n            \n            <div class=\"col-6 d-flex justify-content-center\">\n                <button type=\"button\" class=\"btn-long btn-color-fill\"  id=\"confirmDelete\"\n            (click)=\"confirmAction('approved')\">\n            <i class=\"fas fa-check\"></i>\n            {{ 'BTN.CONFIRM' | translate}}\n            </button>\n            </div>\n        </div>\n\n        <div *ngIf=\"(providerId===undefined && status==='new')\" class=\"d-flex flex-wrap justify-content-end\">\n            <div class=\"d-flex justify-content-end\">\n                <button type=\"button\" class=\"btn-long btn-color-outline\"\n            (click)=\"confirmAction('cancelled')\">\n            <i class=\"fas fa-times\"></i>\n            {{\"PROVIDER.CANCEL-REQUEST\" | translate}}\n            </button>\n            </div>\n        </div>\n    </div>\n    </div>\n  ";

/***/ }),

/***/ 76750:
/*!*****************************************************************************************************!*\
  !*** ./src/app/features/providers-management/view-provider/view-provider.component.html?ngResource ***!
  \*****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<!--mobile title bar-->\n<!-- <div class=\"page-header mobile-header py-3 d-flex align-items-center\">\n\n    <div class=\"d-flex justify-content-center justify-content-lg-between align-items-center flex-wrap\">\n        <i class=\"fas fa-arrow-left d-flex px-3\"\n        routerLink=\"{{isProvider ? '/private/provider/dashboard':\n        isStaff  ? '../../../manage-providers/active' : '/'}}\"></i>\n    </div>\n    <h2 class=\"d-flex m-auto\">{{\"BTN.BACK\" | translate}}</h2>\n</div> -->\n\n<!--Title bar-->\n<div class=\"container-fluid client-general-box\"  *ngIf=\"allDomains\">\n    <div class=\"container py-4 px-0 web-header\">\n        <div class=\"page-header d-flex justify-content-end align-items-center flex-wrap\">\n            <div class=\"d-flex justify-content-center justify-content-lg-end align-items-center flex-wrap\">\n                <button id=\"btnBackHeaderViewProvider\" class=\"btn-long btn-color-outline mr-2\"\n                        routerLink=\"{{isProvider ? '/private/provider/dashboard':\n                        isStaff  ? '../../../manage-providers/active' : '/'}}\">\n                    <i class=\"fas fa-arrow-left\"></i>\n                    {{ 'BTN.BACK' | translate }}\n                </button>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"container provider-header-container px-0 mb-4\"  >\n        <!--header section-->\n        <div class=\"cover-provider\">\n            <img src=\"{{coverImagePath}}\">\n            <div class=\"title-toolbar px-4 py-4 w-100\">\n                <div class=\"d-flex align-text-bottom\">\n                    <h2>{{companyName}}</h2>\n                    <span class=\"provider-status-label\"\n                    [ngClass]=\"{\n                    'label-pending': status === 'pending',\n                    'label-active': status === 'active',\n                    'label-draft': status === 'draft',\n                    'label-new': status === 'new',\n                    'label-archived': status === 'archived',\n                    'label-refused': status === 'refused'}\">\n                    <!-- {{element.status}} -->\n                    {{status === 'pending' ? 'Pending' :\n                    status === 'active' ? 'Active' :\n                    status === 'draft' ? 'Draft' :\n                    status === 'new' ? 'New' :\n                    status === 'archived' ? 'Archived' :\n                    status === 'refused' ? 'Refused':\n                    'Unknown status'\n                 }}\n                    </span>\n                    <!-- <button class=\"btn-label active-label-button justify-content-start align-items-center\">\n                        <i class=\"fas fa-map-marker-alt\"></i>\n                        Active\n                    </button>\n\n                     <button class=\"btn-label inactive-label-button\">\n                        <i class=\"fas fa-exclamation\"></i>\n                        Inactive\n                    </button>\n\n                    <button class=\"btn-label disabled-label-button\">\n                        <i class=\"fas fa-times\"></i>\n                        Disabled\n                    </button> -->\n                </div>\n                <!--location-->\n                <p *ngIf=\"city || county\"><i class=\"fas fa-map-marker-alt\"></i> {{city}} {{county}}</p>\n                <!--Domains-->\n                <div *ngIf=\"userDomain !== undefined\" class=\"d-flex w-100\">\n                        <!-- <div *ngSwitchCase=\"'Travel & Entertainment'\" class=\"chips-label chips-primary-label\">\n                            <i class=\"fas fa-plan\"></i>  Travel & Entertainment\n                        <div *ngSwitchCase=\"'Education'\" class=\"chips-label chips-primary-label\">\n                            <i class=\"fas fa-suitcase\"></i> Education\n                        </div>\n                        <div *ngSwitchCase=\"'Healthcare'\" class=\"chips-label chips-primary-label\">\n                            <i class=\"fas fa-heart\"></i> Healthcare\n                        </div>\n                        <div *ngSwitchCase=\"'Culture & Arts'\" class=\"chips-label chips-primary-label\">\n                            <i class=\"fas fa-theater-masks\"></i> Culture & Arts\n                        </div>\n                        <div *ngSwitchCase=\"'Jobs Market'\" class=\"chips-label chips-primary-label\">\n                            <i class=\"fas fa-user-tie\"></i> Jobs Market\n                        </div> -->\n\n                    <div *ngIf=\"userDomain === 'Travel & Entertainment'\" class=\"chips-label chips-primary-label\">\n                        <i class='fas fa-plane'></i>\n                        Travel & Entertainment\n                    </div>\n                    <div *ngIf=\"userDomain === 'Education'\" class=\"chips-label chips-primary-label\"><i class=\"fas fa-suitcase\"></i> Education</div>\n                    <div *ngIf=\"userDomain === 'Healthcare'\" class=\"chips-label chips-primary-label\"><i class=\"fas fa-heart\"></i> Healthcare</div>\n                    <div *ngIf=\"userDomain === 'Culture & Arts'\" class=\"chips-label chips-primary-label\"><i class=\"fas fa-theater-masks\"></i> Culture&Arts</div>\n                    <div *ngIf=\"userDomain === 'Jobs Market'\" class=\"chips-label chips-primary-label\"><i class=\"fas fa-user-tie\"></i> JobsMarket</div>\n                </div>\n            </div>\n\n        </div>\n        <div class=\"menu-header-bar d-flex row justify-content-end\">\n            <div class=\"col-6 col-sm-3 col-md-3 col-lg-3 d-flex justify-content-center align-items-center py-3\"\n                 [routerLink]=\"providerId ? '../../edit/' + providerId : '../edit'\" role=\"button\">\n                 <i class=\"fas fa-pen\"></i>\n                <h4>{{\"GENERAL.EDIT\" | translate}}</h4>\n            </div>\n\n            <div class=\"col-6 col-sm-3 col-md-3 col-lg-3 d-flex justify-content-center align-items-center py-3\"\n                 [routerLink]=\"providerId ? '../../../resources/list' : '../../resources/my-list'\" [queryParams]=\"providerId ? {providerId: providerId}: ''\" role=\"button\">\n                <i class=\"fas fa-bars\"></i>\n                <h4>{{\"STAFF.RESOURCES\" | translate}}</h4>\n            </div>\n            <div class=\"col-6 col-sm-3 col-md-3 col-lg-3 d-flex justify-content-center align-items-center py-3\"\n                 [routerLink]=\"providerId ? '../../balance/' + providerId : '../balance'\" role=\"button\">\n                <i class=\"fas fa-credit-card\"></i>\n                <h4>{{\"PROVIDER.BALANCE\" | translate}}</h4>\n            </div>\n            <div *ngIf=\"providerId\" (click)=\"changeStatusModal(providerId)\" class=\"col-6 col-sm-3 col-md-3 col-lg-3 d-flex justify-content-center align-items-center py-3\">\n                <i class=\"fas fa-cog\"></i>\n                <h4>{{\"FIELD.STATUS\" | translate}}</h4>\n            </div>\n\n\n        </div>\n        <!--End header-->\n    </div>\n\n    <!--Content-->\n    <div class=\"container view-provider-container my-4 px-0 mb-4 w-100\">\n        <!-- balance and trades-->\n        <div class=\"balance-class row flex-wrap\">\n\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-3\">\n                 <!--available balance -->\n                 <app-available-balance-card [providerId]=\"providerId\" [currency]=\"currency\"></app-available-balance-card>\n                 <!--recent transactions-->\n                 <app-recently-reservation-card [recentTransactionList]=\"recentTransactionList\" [currency]=\"currency\"></app-recently-reservation-card>\n\n            </div>\n\n\n            <!--transaction history-->\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-9\">\n                <app-history-reservation-card [providerId]=\"providerId\" [currency]=\"currency\"></app-history-reservation-card>\n            </div>\n        </div>\n\n        <!--Resources container-->\n\n        <div class=\"resources-class\">\n            <div class=\"row flex-wrap d-flex my-4 \">\n                <h2 class=\"col-12 col-md-6\">{{\"PROVIDER.RESOURCES\" | translate}}</h2>\n                <div class=\"col-12 col-md-6 d-flex justify-content-start justify-content-md-end\">\n                    <button *ngIf=\"finalResourcesList.length!==0\" class=\"btn-long btn-color-fill\" [routerLink]=\"providerId ? '../../../resources/list' : '../../resources/my-list'\" [queryParams]=\"providerId ? {providerId: providerId}: ''\">\n                        {{\"PROVIDER.SEE-MORE\" | translate}} <i class=\"fas fa-arrow-right\"></i>\n                    </button>\n                </div>\n            </div>\n            <div *ngIf=\"finalResourcesList.length===0\">\n                <p>Momentan nu exista resurse.</p>\n            </div>\n\n            <owl-carousel-o [options]=\"customOptions\">\n                <ng-container *ngFor=\"let resource of finalResourcesList;\" >\n                    <!--start-card-->\n                    <ng-template carouselSlide>\n                        <div class=\"resource-card\">\n                    <!--Title and location-->\n                    <div class=\"title-n-location\">\n                        <h4 [routerLink]=\"isProvider ? '../../reservations/list' : isStaff ? '../../../reservations/list' : '/'\" [queryParams]=\"{resourceid: resource.resourceId}\" >{{resource?.title}}</h4>\n                        <p *ngIf=\"resource.address!== null\"><i class=\"fas fa-map-marker-alt\"></i> {{resource?.address}}</p>\n                    </div>\n                    <!--IMG-->\n                    <div class=\"resource-img d-flex align-items-center justify-content-center\">\n                        <!-- <i class=\"fas fa-utensils\"></i> -->\n                        <img src=\"{{resource?.icon?.filePath}}\" />\n                    </div>\n                    <!--Price, number of sales -->\n                    <div>\n                        <h4 class=\"price-resource-class text-right\">€ {{resource?.price | number: '1.0-2'}}</h4>\n                        <!-- <p class=\"pb-0 d-flex align-items-baseline\"><i class=\"far fa-user\"></i> 24 Vânzări astăzi</p> -->\n                    </div>\n                </div>\n                    </ng-template>\n\n                </ng-container>\n            </owl-carousel-o>\n\n        </div><!--resources-class-->\n\n\n    </div>\n</div>\n";

/***/ }),

/***/ 42404:
/*!***************************************************************************************************************!*\
  !*** ./src/app/standalone-components/available-balance-card/available-balance-card.component.html?ngResource ***!
  \***************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"inside_view_container mb-2 p-3\">\n    <div>\n        <h6>{{\"PROVIDER.AVAILABLE-BALANCE\" | translate}}</h6>\n    </div>\n    <div class=\"d-flex justify-content-center grey-rectangle\">\n        <h4>{{moneyToReceive | number: '1.0-2'}}</h4>\n\n        <p class=\"align-self-baseline big-currency-class\">€</p>\n    </div>\n    <div class=\"d-flex flex-wrap justify-content-between\">\n        <div class=\"col-6 col-sm-6 col-md-12 col-lg-12 col-xl-6\">\n\n            <div class=\"grey-rectangle\">\n                <p>{{\"PROVIDER.TOTAL-RECIEPT\" | translate}}</p>\n                <div class=\"d-flex\">\n                    <!-- <h6>{{allMoney}}</h6> -->\n                    <h6>{{receivedMoney | number: '1.0-2'}}</h6>\n                    <h6 class=\"align-self-baseline currency-class\">€</h6>\n                </div>\n\n            </div>\n        </div>\n        <div class=\"col-6 col-sm-6 col-md-12 col-lg-12 col-xl-6\">\n            <div class=\"grey-rectangle\">\n                <p>{{\"PROVIDER.COMMISSION\" | translate}}</p>\n                <div class=\"d-flex\">\n                <h6>{{commission | number: '1.0-2'}}</h6>\n                    <h6 class=\"align-self-baseline currency-class\">€</h6>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n";

/***/ }),

/***/ 59013:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/standalone-components/history-reservation-card/history-reservation-card.component.html?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"transaction-history-container inside_view_container  mb-2 p-3\">\n                    <!--Title-->\n                    <div class=\"d-flex row justify-between align-items-center flex-wrap \">\n                        <div class=\"col-12 col-sm-6 justify-content-sm-start\">\n                            <h6>{{\"PROVIDER.TOTAL-RESERVATION\" | translate}}</h6>\n                        </div>\n\n                        <!-- <div class=\"col-6 col-sm-6 d-flex justify-content-sm-start justify-content-xl-end\">\n                            <div class=\"date-rectangle d-flex align-items-center\">\n                                <p>1 Sep 2022 - 30 Sep 2022 <i class=\"far fa-calendar-alt\"></i></p>\n                            </div>\n                        </div> -->\n                    </div>\n                    <!--Amount-->\n                    <div class=\"d-flex flex-wrap\">\n                        <div class=\"d-flex\">\n                            <h4>{{allMoney | number: '1.0-2'}}</h4>\n                            <p class=\"align-self-baseline big-currency-class\">€</p>\n                        </div>\n                        <!-- <div class=\"d-flex blue-percent-rectangle align-self-center\">\n                            <p class=\"mb-0 px-2\"> <i class=\"fas fa-arrow-up\"></i>\n                                4.5%\n                            </p>\n                        </div> -->\n                    </div>\n                    <!--subtitle-->\n                    <!-- <div>\n                        <p>Tranzacții în Aprilie</p>\n                    </div> -->\n                    <!--Graphic-->\n                    <!-- <div style=\"text-align:center\">\n                        <apx-chart\n                        [series]=\"chartOptions.series\"\n                        [chart]=\"chartOptions.chart\"\n                        [xaxis]=\"chartOptions.xaxis\"\n                    ></apx-chart>\n                    </div> -->\n</div>\n";

/***/ }),

/***/ 85317:
/*!*********************************************************************************************************************!*\
  !*** ./src/app/standalone-components/recently-reservation-card/recently-reservation-card.component.html?ngResource ***!
  \*********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"inside_view_container recent-transaction-container mb-2 p-3\">\n    <div>\n        <h6 class=\"d-flex align-items-end\">{{\"PROVIDER.RECENTLY-RESERVATION\" | translate}}</h6>\n    </div>\n        <div *ngIf=\"recentTransactionList.length === 0\">\n            <p class=\"mb-0\">Nu exista rezervari recente.</p>\n        </div>\n\n        <div *ngFor=\"let transaction of recentTransactionList\" class=\"row justify-content-center align-items-center recent-transactions-label\">\n\n            <!--text-->\n            <div class=\"col-9\"  [routerLink]=\"isProvider ? '../../reservations/view/'+transaction.id : isStaff ? '../../../reservations/view/'+transaction.id : isAdmin ? '../../../reservations/view/'+transaction.id : '/'\">\n                <p class=\"mb-0\">{{transaction.resourceId}}</p>\n                <div class=\"d-flex justify-content-left\">\n                    <h5 class=\"amount mr-1\" [ngClass]=\"{'positive-amount': transaction?.totalPrice >= 0,\n                        'negative-amount' : transaction.totalPrice < 0}\">{{transaction?.totalPrice | number: '1.0-2'}}</h5>\n                    <p class=\"align-self-baseline\" [ngClass]=\"{'positive-amount': transaction?.totalPrice >= 0,\n                        'negative-amount' : transaction?.totalPrice < 0}\"> €</p>\n                </div>\n\n            </div>\n            <!--Button-->\n            <div class=\"col-3 d-flex justify-content-end px-0\">\n                <button class=\"btn-round btn-color-outline\" [routerLink]=\"isProvider ? '../../reservations/view/'+transaction.id : isStaff ? '../../../reservations/view/'+transaction.id : isAdmin ? '../../../reservations/view/'+transaction.id : '/'\" >\n                    <i class=\"fas fa-chevron-right\"></i>\n                </button>\n            </div>\n\n        </div>\n</div>\n";

/***/ }),

/***/ 93239:
/*!***************************************************************!*\
  !*** ./node_modules/ng-apexcharts/fesm2020/ng-apexcharts.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChartComponent": () => (/* binding */ ChartComponent),
/* harmony export */   "NgApexchartsModule": () => (/* binding */ NgApexchartsModule)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 22560);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 69672);
/* harmony import */ var apexcharts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! apexcharts */ 79604);




const _c0 = ["chart"];
class ChartComponent {
  constructor(ngZone) {
    this.ngZone = ngZone;
    this.autoUpdateSeries = true;
  }
  ngOnChanges(changes) {
    rxjs__WEBPACK_IMPORTED_MODULE_1__.asapScheduler.schedule(() => {
      if (this.autoUpdateSeries && Object.keys(changes).filter(c => c !== "series").length === 0) {
        this.updateSeries(this.series, true);
        return;
      }
      this.createElement();
    });
  }
  ngOnDestroy() {
    if (this.chartObj) {
      this.chartObj.destroy();
    }
  }
  createElement() {
    const options = {};
    if (this.annotations) {
      options.annotations = this.annotations;
    }
    if (this.chart) {
      options.chart = this.chart;
    }
    if (this.colors) {
      options.colors = this.colors;
    }
    if (this.dataLabels) {
      options.dataLabels = this.dataLabels;
    }
    if (this.series) {
      options.series = this.series;
    }
    if (this.stroke) {
      options.stroke = this.stroke;
    }
    if (this.labels) {
      options.labels = this.labels;
    }
    if (this.legend) {
      options.legend = this.legend;
    }
    if (this.fill) {
      options.fill = this.fill;
    }
    if (this.tooltip) {
      options.tooltip = this.tooltip;
    }
    if (this.plotOptions) {
      options.plotOptions = this.plotOptions;
    }
    if (this.responsive) {
      options.responsive = this.responsive;
    }
    if (this.markers) {
      options.markers = this.markers;
    }
    if (this.noData) {
      options.noData = this.noData;
    }
    if (this.xaxis) {
      options.xaxis = this.xaxis;
    }
    if (this.yaxis) {
      options.yaxis = this.yaxis;
    }
    if (this.forecastDataPoints) {
      options.forecastDataPoints = this.forecastDataPoints;
    }
    if (this.grid) {
      options.grid = this.grid;
    }
    if (this.states) {
      options.states = this.states;
    }
    if (this.title) {
      options.title = this.title;
    }
    if (this.subtitle) {
      options.subtitle = this.subtitle;
    }
    if (this.theme) {
      options.theme = this.theme;
    }
    if (this.chartObj) {
      this.chartObj.destroy();
    }
    this.ngZone.runOutsideAngular(() => {
      this.chartObj = new apexcharts__WEBPACK_IMPORTED_MODULE_0__(this.chartElement.nativeElement, options);
    });
    this.render();
  }
  render() {
    return this.ngZone.runOutsideAngular(() => this.chartObj.render());
  }
  updateOptions(options, redrawPaths, animate, updateSyncedCharts) {
    return this.ngZone.runOutsideAngular(() => this.chartObj.updateOptions(options, redrawPaths, animate, updateSyncedCharts));
  }
  updateSeries(newSeries, animate) {
    return this.ngZone.runOutsideAngular(() => this.chartObj.updateSeries(newSeries, animate));
  }
  appendSeries(newSeries, animate) {
    this.ngZone.runOutsideAngular(() => this.chartObj.appendSeries(newSeries, animate));
  }
  appendData(newData) {
    this.ngZone.runOutsideAngular(() => this.chartObj.appendData(newData));
  }
  toggleSeries(seriesName) {
    return this.ngZone.runOutsideAngular(() => this.chartObj.toggleSeries(seriesName));
  }
  showSeries(seriesName) {
    this.ngZone.runOutsideAngular(() => this.chartObj.showSeries(seriesName));
  }
  hideSeries(seriesName) {
    this.ngZone.runOutsideAngular(() => this.chartObj.hideSeries(seriesName));
  }
  resetSeries() {
    this.ngZone.runOutsideAngular(() => this.chartObj.resetSeries());
  }
  zoomX(min, max) {
    this.ngZone.runOutsideAngular(() => this.chartObj.zoomX(min, max));
  }
  toggleDataPointSelection(seriesIndex, dataPointIndex) {
    this.ngZone.runOutsideAngular(() => this.chartObj.toggleDataPointSelection(seriesIndex, dataPointIndex));
  }
  destroy() {
    this.chartObj.destroy();
  }
  setLocale(localeName) {
    this.ngZone.runOutsideAngular(() => this.chartObj.setLocale(localeName));
  }
  paper() {
    this.ngZone.runOutsideAngular(() => this.chartObj.paper());
  }
  addXaxisAnnotation(options, pushToMemory, context) {
    this.ngZone.runOutsideAngular(() => this.chartObj.addXaxisAnnotation(options, pushToMemory, context));
  }
  addYaxisAnnotation(options, pushToMemory, context) {
    this.ngZone.runOutsideAngular(() => this.chartObj.addYaxisAnnotation(options, pushToMemory, context));
  }
  addPointAnnotation(options, pushToMemory, context) {
    this.ngZone.runOutsideAngular(() => this.chartObj.addPointAnnotation(options, pushToMemory, context));
  }
  removeAnnotation(id, options) {
    this.ngZone.runOutsideAngular(() => this.chartObj.removeAnnotation(id, options));
  }
  clearAnnotations(options) {
    this.ngZone.runOutsideAngular(() => this.chartObj.clearAnnotations(options));
  }
  dataURI(options) {
    return this.chartObj.dataURI(options);
  }
}
/** @nocollapse */
ChartComponent.ɵfac = function ChartComponent_Factory(t) {
  return new (t || ChartComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone));
};
/** @nocollapse */
ChartComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({
  type: ChartComponent,
  selectors: [["apx-chart"]],
  viewQuery: function ChartComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵviewQuery"](_c0, 7);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.chartElement = _t.first);
    }
  },
  inputs: {
    chart: "chart",
    annotations: "annotations",
    colors: "colors",
    dataLabels: "dataLabels",
    series: "series",
    stroke: "stroke",
    labels: "labels",
    legend: "legend",
    markers: "markers",
    noData: "noData",
    fill: "fill",
    tooltip: "tooltip",
    plotOptions: "plotOptions",
    responsive: "responsive",
    xaxis: "xaxis",
    yaxis: "yaxis",
    forecastDataPoints: "forecastDataPoints",
    grid: "grid",
    states: "states",
    title: "title",
    subtitle: "subtitle",
    theme: "theme",
    autoUpdateSeries: "autoUpdateSeries"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 0,
  consts: [["chart", ""]],
  template: function ChartComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](0, "div", null, 0);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](ChartComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Component,
    args: [{
      selector: "apx-chart",
      template: `<div #chart></div>`,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ChangeDetectionStrategy.OnPush
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone
    }];
  }, {
    chart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    annotations: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    colors: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    dataLabels: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    series: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    stroke: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    labels: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    legend: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    markers: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    noData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    fill: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    tooltip: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    plotOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    responsive: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    xaxis: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    yaxis: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    forecastDataPoints: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    grid: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    states: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    subtitle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    theme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    autoUpdateSeries: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    chartElement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild,
      args: ["chart", {
        static: true
      }]
    }]
  });
})();
window.ApexCharts = apexcharts__WEBPACK_IMPORTED_MODULE_0__;
const declerations = [ChartComponent];
class NgApexchartsModule {}
/** @nocollapse */
NgApexchartsModule.ɵfac = function NgApexchartsModule_Factory(t) {
  return new (t || NgApexchartsModule)();
};
/** @nocollapse */
NgApexchartsModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: NgApexchartsModule,
  declarations: [ChartComponent],
  exports: [ChartComponent]
});
/** @nocollapse */
NgApexchartsModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](NgApexchartsModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule,
    args: [{
      declarations: [...declerations],
      imports: [],
      exports: [...declerations]
    }]
  }], null, null);
})();

/*
 * Public API Surface of ng-apexcharts
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ })

}]);
//# sourceMappingURL=default-src_app_features_providers-management_providers-management_module_ts.js.map